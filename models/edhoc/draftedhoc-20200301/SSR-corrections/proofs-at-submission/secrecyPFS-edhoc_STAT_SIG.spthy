maude tool: 'maude'
 checking version: 2.7.1. OK.
 checking installation: OK.
SAPIC tool: 'sapic'
Checking availablity ...>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0:  (∃ tid u v sk #i #j.   (K( sk ) @ #i) ∧ (CommitI( tid, u, v, sk ) @ #j)  ∧   (∀ #l. (LTKRev( u ) @ #l) ⇒ ¬(#l < #j)) ∧   (∀ #l. (LTKRev( v ) @ #l) ⇒ ¬(#l < #j)) ∧   (∀ #l. (SKRev( sk ) @ #l) ⇒ ⊥))  ∥ (∃ tid u v sk #i #j.   (K( sk ) @ #i) ∧ (CommitR( tid, u, v, sk ) @ #j)  ∧   (∀ #l. (LTKRev( u ) @ #l) ⇒ ¬(#l < #j)) ∧   (∀ #l. (LTKRev( v ) @ #l) ⇒ ¬(#l < #j)) ∧   (∀ #l. (SKRev( sk ) @ #l) ⇒ ⊥))

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 0 (directly): !LTK_PSK( t.1, t.2 ) ▶₀ #i
  solved goal nr. 0 (directly): !LTK_SIG( t.1, t.2 ) ▶₀ #i
  solved goal nr. 0 (directly): !LTK_STAT( t.1, t.2 ) ▶₀ #i
  solved goal nr. 0 (directly): !PK_SIG( t.1, t.2 ) ▶₀ #i
  solved goal nr. 0 (directly): !PK_STAT( t.1, t.2 ) ▶₀ #i
  solved goal nr. 0 (directly): CommitI( t.1, t.2, t.3, t.4 ) ▶₀ #i
  solved goal nr. 0 (directly): CommitR( t.1, t.2, t.3, t.4 ) ▶₀ #i
  solved goal nr. 0 (directly):
    StI1_STAT_SIG( t.1, t.2, t.3, t.4, t.5, t.6 ) ▶₀ #i
  solved goal nr. 0 (directly): !KU( ~t.1 ) @ #i
  solved goal nr. 0 (directly):
    StR2_STAT_SIG( t.1, t.2, t.3, t.4, t.5, t.6, t.7, t.8, t.9, t.10
    ) ▶₀ #i
  solved goal nr. 0 (directly):
    !KU( aeadDecrypt(t.1, t.2, t.3, t.4) ) @ #i
  solved goal nr. 0 (directly):
    !KU( aeadEncrypt(t.1, t.2, t.3, t.4) ) @ #i
  solved goal nr. 0 (directly): !KU( decrypt(t.1, t.2, t.3) ) @ #i
  solved goal nr. 0 (directly): !KU( t.1^t.2 ) @ #i
  solved goal nr. 0 (directly): !KU( fst(t.1) ) @ #i
  solved goal nr. 0 (directly): !KU( h(t.1) ) @ #i
  solved goal nr. 0 (directly): !KU( hkdfExpand(t.1, t.2) ) @ #i
  solved goal nr. 0 (directly): !KU( hkdfExtract(t.1, t.2) ) @ #i
  solved goal nr. 0 (directly): !KU( pk(t.1) ) @ #i
  solved goal nr. 0 (directly): !KU( sign(t.1, t.2) ) @ #i
  solved goal nr. 0 (directly): !KU( snd(t.1) ) @ #i
  solved goal nr. 0 (directly): !KU( verify(t.1, t.2, t.3) ) @ #i
  solved goal nr. 2 (directly): !LTK_STAT( $U.8, ~ltk.8 ) ▶₀ #vr.7
  solved goal nr. 2 (directly): !LTK_SIG( $V.12, ~ltk.12 ) ▶₀ #vr.11
  solved goal nr. 4 (directly): !LTK_STAT( $U.10, ~ltk.10 ) ▶₀ #vr.9
  solved goal nr. 3 (directly): !PK_SIG( $V.12, pkV.12 ) ▶₁ #vr.11
  solved goal nr. 4 (directly): !LTK_STAT( $U.10, ~ltk.10 ) ▶₀ #vr.9
  solved goal nr. 4 (directly): !LTK_SIG( $V.10, ~ltk.10 ) ▶₀ #vr.9
  solved goal nr. 5 (directly): !PK_SIG( $V.10, pkV.10 ) ▶₁ #vr.9
  solved goal nr. 4 (directly): !LTK_SIG( $V.10, ~ltk.10 ) ▶₀ #vr.9
  solved goal nr. 5 (directly): !PK_SIG( $V.10, pkV.10 ) ▶₁ #vr.9
  solved goal nr. 4 (directly): !LTK_SIG( $V.30, ~ltk.10 ) ▶₀ #vr.9
  solved goal nr. 5 (directly): !PK_SIG( $V.30, pkV.10 ) ▶₁ #vr.9
  solved goal nr. 4 (directly): !LTK_SIG( $V.30, ~ltk.34 ) ▶₀ #vr.9
  solved goal nr. 5 (directly): !PK_SIG( $V.30, pkV.37 ) ▶₁ #vr.9
  solved goal nr. 4 (directly): !LTK_SIG( $A.7, ~t.1 ) ▶₀ #vr.6
  solved goal nr. 4 (directly): !LTK_STAT( $A.7, ~t.1 ) ▶₀ #vr.6
  solved goal nr. 4 (directly):
    !LTK_PSK( <$A.7, $B.7>, ~t.1 ) ▶₀ #vr.6
  solved goal nr. 4 (directly):
    CommitI( tid.7, u.7, v.7, t.5 ) ▶₀ #vr.6
  solved goal nr. 4 (directly):
    CommitR( tid.7, u.7, v.7, t.5 ) ▶₀ #vr.6
  solved goal nr. 4 (directly): !LTK_SIG( $V.30, ~ltk.34 ) ▶₀ #vr.9
  solved goal nr. 5 (directly): !PK_SIG( $V.30, pkV.37 ) ▶₁ #vr.9
  solved goal nr. 4 (directly):
    CommitI( tid.13, u.13, v.13, t.11 ) ▶₀ #vr.12
  solved goal nr. 4 (directly):
    CommitI( tid.16, u.16, v.16, t.14 ) ▶₀ #vr.15
  solved goal nr. 4 (directly):
    CommitR( tid.16, u.16, v.16, t.14 ) ▶₀ #vr.15
  solved goal nr. 4 (directly):
    CommitR( tid.13, u.13, v.13, t.11 ) ▶₀ #vr.12
  solved goal nr. 4 (directly):
    StI1_STAT_SIG( $U.10, ~ltk.10, $V.10, ~xx.10, m1.10, ~tid.10
    ) ▶₀ #vr.9
  solved goal nr. 5 (directly): !PK_SIG( $V.10, pk(x.20) ) ▶₁ #vr.9
  solved goal nr. 6 (directly): !PK_STAT( $U.10, pkU.10 ) ▶₂ #vr.9
  solved goal nr. 26 (directly):
    !LTK_STAT( $U.10, ~ltk.10 ) ▶₀ #vr.98
  solved goal nr. 4 (directly):
    CommitI( tid.7, u.7, v.7, t.5 ) ▶₀ #vr.6
  solved goal nr. 4 (directly):
    CommitR( tid.7, u.7, v.7, t.5 ) ▶₀ #vr.6
  solved goal nr. 4 (directly):
    StI1_STAT_SIG( $U.10, ~ltk.10, $V.10, ~xx.10, m1.10, ~tid.10
    ) ▶₀ #vr.9
  solved goal nr. 5 (directly): !PK_SIG( $V.10, pk(x.20) ) ▶₁ #vr.9
  solved goal nr. 6 (directly): !PK_STAT( $U.10, pkU.10 ) ▶₂ #vr.9
  solved goal nr. 4 (directly):
    CommitI( tid.7, u.7, v.7, t.5 ) ▶₀ #vr.6
  solved goal nr. 4 (directly):
    CommitI( tid.10, u.10, v.10, t.8 ) ▶₀ #vr.9
  solved goal nr. 4 (directly):
    CommitR( tid.7, u.7, v.7, t.5 ) ▶₀ #vr.6
  solved goal nr. 23 (directly):
    !LTK_STAT( $U.10, ~ltk.10 ) ▶₀ #vr.97
  solved goal nr. 4 (directly):
    CommitR( tid.10, u.10, v.10, t.8 ) ▶₀ #vr.9
  solved goal nr. 4 (directly):
    CommitI( tid.13, u.13, v.13, t.11 ) ▶₀ #vr.12
  solved goal nr. 4 (directly):
    CommitR( tid.13, u.13, v.13, t.11 ) ▶₀ #vr.12
  solved goal nr. 4 (directly):
    CommitI( tid.10, u.10, v.10, t.8 ) ▶₀ #vr.9
  solved goal nr. 4 (directly):
    CommitR( tid.10, u.10, v.10, t.8 ) ▶₀ #vr.9
  solved goal nr. 4 (directly):
    CommitI( tid.7, u.7, v.7, t.5 ) ▶₀ #vr.6
  solved goal nr. 4 (directly):
    CommitR( tid.7, u.7, v.7, t.5 ) ▶₀ #vr.6
  solved goal nr. 4 (directly):
    StI1_STAT_SIG( $U.16, ~ltk.16, $V.16, ~xx.16, m1.16, ~tid.16
    ) ▶₀ #vr.15
  solved goal nr. 5 (directly): !PK_SIG( $V.16, pk(x.26) ) ▶₁ #vr.15
  solved goal nr. 4 (directly):
    CommitI( tid.10, u.10, v.10, t.8 ) ▶₀ #vr.9
  solved goal nr. 6 (directly): !PK_STAT( $U.16, pkU.16 ) ▶₂ #vr.15
  solved goal nr. 4 (directly):
    CommitR( tid.10, u.10, v.10, t.8 ) ▶₀ #vr.9
  solved goal nr. 16 (directly):
    !LTK_STAT( $U.16, ~ltk.16 ) ▶₀ #vr.97
  solved goal nr. 4 (directly):
    CommitI( tid.7, u.7, v.7, t.5 ) ▶₀ #vr.6
  solved goal nr. 4 (directly):
    CommitR( tid.7, u.7, v.7, t.5 ) ▶₀ #vr.6
  solved goal nr. 4 (directly):
    CommitI( tid.10, u.10, v.10, t.8 ) ▶₀ #vr.9
  solved goal nr. 4 (directly):
    CommitR( tid.10, u.10, v.10, t.8 ) ▶₀ #vr.9
  solved goal nr. 4 (directly):
    CommitI( tid.16, u.16, v.16, t.14 ) ▶₀ #vr.15
  solved goal nr. 4 (directly):
    CommitR( tid.16, u.16, v.16, t.14 ) ▶₀ #vr.15
  solved goal nr. 23 (precomputed):
    !KU( h(<$cHash0.10, 
            h(<$cHash0.10, <'STAT', 'SIG', $cSUITE0.99, 'g'^~xx.10>, gy.10>), 
            <
             ($V.10⊕
              hkdfExpand(<$cAEAD0.10, 
                          h(<$cHash0.10, <'STAT', 'SIG', $cSUITE0.99, 'g'^~xx.10>, gy.10>), 
                          'K_2e', '1'>,
                         hkdfExtract('emptyStr', z.11))
             ), 
             (
              hkdfExpand(<$cAEAD0.10, 
                          h(<$cHash0.10, <'STAT', 'SIG', $cSUITE0.99, 'g'^~xx.10>, gy.10>), 
                          'K_2e', '2'>,
                         hkdfExtract('emptyStr', z.11))⊕
              sign(<
                    <$V.10, 
                     h(<$cHash0.10, <'STAT', 'SIG', $cSUITE0.99, 'g'^~xx.10>, gy.10>), 
                     pk(~ltk.103)>, 
                    aeadEncrypt('emptyStr',
                                hkdfExpand(<$cAEAD0.10, 
                                            h(<$cHash0.10, 
                                               <'STAT', 'SIG', $cSUITE0.99, 'g'^~xx.10>, gy.10>), 
                                            'K_2m'>,
                                           hkdfExtract('emptyStr', z.11)),
                                <$V.10, 
                                 h(<$cHash0.10, <'STAT', 'SIG', $cSUITE0.99, 'g'^~xx.10>, gy.10>), 
                                 pk(~ltk.103)>,
                                $cAEAD0.10)
                   >,
                   ~ltk.103)
             )
            >, 
            'emptyStr'>)
    ) @ #vk.94
  solved goal nr. 34 (precomputed):
    !KU( h(<$cHash0.10, <'STAT', 'SIG', $cSUITE0.99, 'g'^~xx.10>, gy.10
           >)
    ) @ #vk.111
  solved goal nr. 0 (directly):
     (∃ tid u v sk #i #j.
       (K( sk ) @ #i) ∧ (CommitI( tid, u, v, sk ) @ #j)
      ∧
       (∀ #l. (LTKRev( u ) @ #l) ⇒ ¬(#l < #j)) ∧
       (∀ #l. (LTKRev( v ) @ #l) ⇒ ¬(#l < #j)) ∧
       (∀ #l. (SKRev( sk ) @ #l) ⇒ ⊥))  ∥
     (∃ tid u v sk #i #j.
       (K( sk ) @ #i) ∧ (CommitR( tid, u, v, sk ) @ #j)
      ∧
       (∀ #l. (LTKRev( u ) @ #l) ⇒ ¬(#l < #j)) ∧
       (∀ #l. (LTKRev( v ) @ #l) ⇒ ¬(#l < #j)) ∧
       (∀ #l. (SKRev( sk ) @ #l) ⇒ ⊥))
  solved goal nr. 1 (directly): K( sk.3 ) @ #i.4
  solved goal nr. 2 (directly): CommitI( tid, u.1, v.2, sk.3 ) @ #j.5
  solved goal nr. 1 (directly): K( sk.3 ) @ #i.4
  solved goal nr. 2 (directly): CommitR( tid, u.1, v.2, sk.3 ) @ #j.5
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0:  (last(#j))  ∥ (last(#i))  ∥ (∃ #l. (LTKRev( $U ) @ #l) ∧ (¬(last(#l))) ∧ (#l < #j))  ∥ (∃ #l. (LTKRev( $V ) @ #l) ∧ (¬(last(#l))) ∧ (#l < #j))  ∥ (∃ #l. (SKRev( <gxy, z> ) @ #l) ∧ ¬(last(#l)))
1: StR2_STAT_SIG( $V, ~ltk, ~yy, prk_3e2m, TH_2, CIPHERTEXT_2, gxy,               ~tid, m1, m2) ▶₀ #j
2: !PK_STAT( $U, pkU ) ▶₁ #j
3: !PK_SIG( $V, pkV ) ▶₂ #j
4: splitEqs(0)
5: !KU( aeadEncrypt(<$U,                   aeadEncrypt('emptyStr',                              hkdfExpand(<$cAEAD0, h(<$cHash0, TH_2, CIPHERTEXT_2, 'emptyStr'>),                                           'K_3m'>,                                         hkdfExtract(prk_3e2m, z)),                              <$U, h(<$cHash0, TH_2, CIPHERTEXT_2, 'emptyStr'>), pkU>, $cAEAD0)                 >,                 hkdfExpand(<$cAEAD0, h(<$cHash0, TH_2, CIPHERTEXT_2, 'emptyStr'>),                              'K_3ae'>,                            prk_3e2m),                 extAad3Outer, $cAEAD0)) @ #vk.3

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 14 (directly):
     (last(#j))  ∥ (last(#i))  ∥
     (∃ #l. (LTKRev( $U ) @ #l) ∧ (¬(last(#l))) ∧ (#l < #j))  ∥
     (∃ #l. (LTKRev( $V ) @ #l) ∧ (¬(last(#l))) ∧ (#l < #j))  ∥
     (∃ #l. (SKRev( <gxy, z> ) @ #l) ∧ ¬(last(#l)))
  simplified formula:
      "((#last.7 < #l.6) ∨ (#l.6 < #last.7))"
    to
      "#l.6 < #last.7"
  solved goal nr. 16 (simplified):
     (#last.7 < #l.6)  ∥ (#l.6 < #last.7)
  simplified formula:
      "((#l.6 = #j) ∨ (#j < #l.6))"
    to
      "⊥"
  solved goal nr. 17 (simplified): (#l.6 = #j)  ∥ (#j < #l.6)
  simplified formula:
      "((#last.7 < #l.6) ∨ (#l.6 < #last.7))"
    to
      "#l.6 < #last.7"
  solved goal nr. 16 (simplified):
     (#last.7 < #l.6)  ∥ (#l.6 < #last.7)
  simplified formula:
      "((#l.6 = #j) ∨ (#j < #l.6))"
    to
      "⊥"
  solved goal nr. 17 (simplified): (#l.6 = #j)  ∥ (#j < #l.6)
  simplified formula:
      "((#last.7 < #l.6) ∨ (#l.6 < #last.7))"
    to
      "#l.6 < #last.7"
  solved goal nr. 16 (simplified):
     (#last.7 < #l.6)  ∥ (#l.6 < #last.7)
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0:  (last(#j))  ∥ (last(#i))  ∥ (∃ #l. (LTKRev( $U ) @ #l) ∧ (¬(last(#l))) ∧ (#l < #j))  ∥ (∃ #l. (LTKRev( $V ) @ #l) ∧ (¬(last(#l))) ∧ (#l < #j))  ∥ (∃ #l. (SKRev( <z, z.1> ) @ #l) ∧ ¬(last(#l)))
1: StI1_STAT_SIG( $U, ~ltk, $V, ~xx, m1, ~tid ) ▶₀ #j
2: !PK_SIG( $V, pk(x) ) ▶₁ #j
3: !PK_STAT( $U, pkU ) ▶₂ #j
4: splitEqs(0)
5: !KU( ($V⊕      hkdfExpand(<$cAEAD0, h(<$cHash0, m1, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.4
6: !KU( (      hkdfExpand(<$cAEAD0, h(<$cHash0, m1, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', z))⊕      sign(<<$V, h(<$cHash0, m1, gy>), pk(x)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0, h(<$cHash0, m1, gy>), 'K_2m'>,                                   hkdfExtract('emptyStr', z)),                        <$V, h(<$cHash0, m1, gy>), pk(x)>, $cAEAD0)           >,           x)     )) @ #vk.5

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 17 (directly):
     (last(#j))  ∥ (last(#i))  ∥
     (∃ #l. (LTKRev( $U ) @ #l) ∧ (¬(last(#l))) ∧ (#l < #j))  ∥
     (∃ #l. (LTKRev( $V ) @ #l) ∧ (¬(last(#l))) ∧ (#l < #j))  ∥
     (∃ #l. (SKRev( <z, z.1> ) @ #l) ∧ ¬(last(#l)))
  simplified formula:
      "((#last.9 < #l.8) ∨ (#l.8 < #last.9))"
    to
      "#l.8 < #last.9"
  solved goal nr. 19 (simplified):
     (#last.9 < #l.8)  ∥ (#l.8 < #last.9)
  simplified formula:
      "((#l.8 = #j) ∨ (#j < #l.8))"
    to
      "⊥"
  solved goal nr. 20 (simplified): (#l.8 = #j)  ∥ (#j < #l.8)
  simplified formula:
      "((#last.9 < #l.8) ∨ (#l.8 < #last.9))"
    to
      "#l.8 < #last.9"
  solved goal nr. 19 (simplified):
     (#last.9 < #l.8)  ∥ (#l.8 < #last.9)
  simplified formula:
      "((#l.8 = #j) ∨ (#j < #l.8))"
    to
      "⊥"
  solved goal nr. 20 (simplified): (#l.8 = #j)  ∥ (#j < #l.8)
  simplified formula:
      "((#last.9 < #l.8) ∨ (#l.8 < #last.9))"
    to
      "#l.8 < #last.9"
  solved goal nr. 19 (simplified):
     (#last.9 < #l.8)  ∥ (#l.8 < #last.9)
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: StI1_STAT_SIG( $U, ~ltk, $V, ~xx, m1, ~tid ) ▶₀ #j
1: !PK_SIG( $V, pk(x) ) ▶₁ #j
2: !PK_STAT( $U, pkU ) ▶₂ #j
3: splitEqs(0)
4: !KU( ($V⊕      hkdfExpand(<$cAEAD0, h(<$cHash0, m1, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.4
5: !KU( (      hkdfExpand(<$cAEAD0, h(<$cHash0, m1, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', z))⊕      sign(<<$V, h(<$cHash0, m1, gy>), pk(x)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0, h(<$cHash0, m1, gy>), 'K_2m'>,                                   hkdfExtract('emptyStr', z)),                        <$V, h(<$cHash0, m1, gy>), pk(x)>, $cAEAD0)           >,           x)     )) @ #vk.5

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 5 (precomputed):
    StI1_STAT_SIG( $U, ~ltk, $V, ~xx, m1, ~tid ) ▶₀ #j
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: StI1_STAT_SIG( $U, ~ltk, $V, ~xx, m1, ~tid ) ▶₀ #j
1: !PK_SIG( $V, pk(x) ) ▶₁ #j
2: !PK_STAT( $U, pkU ) ▶₂ #j
3: splitEqs(0)
4: !KU( ($V⊕      hkdfExpand(<$cAEAD0, h(<$cHash0, m1, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.4
5: !KU( (      hkdfExpand(<$cAEAD0, h(<$cHash0, m1, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', z))⊕      sign(<<$V, h(<$cHash0, m1, gy>), pk(x)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0, h(<$cHash0, m1, gy>), 'K_2m'>,                                   hkdfExtract('emptyStr', z)),                        <$V, h(<$cHash0, m1, gy>), pk(x)>, $cAEAD0)           >,           x)     )) @ #vk.5

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 5 (precomputed):
    StI1_STAT_SIG( $U, ~ltk, $V, ~xx, m1, ~tid ) ▶₀ #j
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !PK_SIG( $V, pk(x) ) ▶₁ #j
1: !PK_STAT( $U, pkU ) ▶₂ #j
2: !KU( ($V⊕      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.4
3: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', z))⊕      sign(<            <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), pk(x)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                                   hkdfExtract('emptyStr', z)),                        <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), pk(x)>,                        $cAEAD0)           >,           x)     )) @ #vk.5
4: splitEqs(0)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 6 (precomputed): !PK_SIG( $V, pk(x) ) ▶₁ #j
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !PK_STAT( $U, pkU ) ▶₂ #j
1: !KU( ($V⊕      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.4
2: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', z))⊕      sign(<            <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                                   hkdfExtract('emptyStr', z)),                        <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)     )) @ #vk.5
3: splitEqs(0)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 7 (precomputed): !PK_STAT( $U, pkU ) ▶₂ #j
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ($V⊕      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.4
1: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', z))⊕      sign(<            <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                                   hkdfExtract('emptyStr', z)),                        <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)     )) @ #vk.5
2: splitEqs(0)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 11 (directly):
    !KU( ($V⊕
          hkdfExpand(<$cAEAD0, 
                      h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,
                     hkdfExtract('emptyStr', z))
         )
    ) @ #vk.4
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !PK_SIG( $V, pk(x) ) ▶₁ #j
1: !PK_STAT( $U, pkU ) ▶₂ #j
2: !KU( ($V⊕      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.4
3: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', z))⊕      sign(<            <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), pk(x)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                                   hkdfExtract('emptyStr', z)),                        <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), pk(x)>,                        $cAEAD0)           >,           x)     )) @ #vk.5
4: splitEqs(0)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 6 (precomputed): !PK_SIG( $V, pk(x) ) ▶₁ #j
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !PK_STAT( $U, pkU ) ▶₂ #j
1: !KU( ($V⊕      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.4
2: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', z))⊕      sign(<            <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                                   hkdfExtract('emptyStr', z)),                        <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)     )) @ #vk.5
3: splitEqs(0)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 7 (precomputed): !PK_STAT( $U, pkU ) ▶₂ #j
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ($V⊕      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.4
1: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', z))⊕      sign(<            <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                                   hkdfExtract('emptyStr', z)),                        <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)     )) @ #vk.5
2: splitEqs(0)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 11 (directly):
    !KU( ($V⊕
          hkdfExpand(<$cAEAD0, 
                      h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,
                     hkdfExtract('emptyStr', z))
         )
    ) @ #vk.4
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: StR2_STAT_SIG( $V, ~ltk, ~yy, prk_3e2m, TH_2, CIPHERTEXT_2, gxy,               ~tid, m1, m2) ▶₀ #j
1: !PK_STAT( $U, pkU ) ▶₁ #j
2: !PK_SIG( $V, pkV ) ▶₂ #j
3: splitEqs(0)
4: !KU( aeadEncrypt(<$U,                   aeadEncrypt('emptyStr',                              hkdfExpand(<$cAEAD0, h(<$cHash0, TH_2, CIPHERTEXT_2, 'emptyStr'>),                                           'K_3m'>,                                         hkdfExtract(prk_3e2m, z)),                              <$U, h(<$cHash0, TH_2, CIPHERTEXT_2, 'emptyStr'>), pkU>, $cAEAD0)                 >,                 hkdfExpand(<$cAEAD0, h(<$cHash0, TH_2, CIPHERTEXT_2, 'emptyStr'>),                              'K_3ae'>,                            prk_3e2m),                 extAad3Outer, $cAEAD0)) @ #vk.3

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: StR2_STAT_SIG( $V, ~ltk, ~yy, prk_3e2m, TH_2, CIPHERTEXT_2, gxy,               ~tid, m1, m2) ▶₀ #j
1: !PK_STAT( $U, pkU ) ▶₁ #j
2: !PK_SIG( $V, pkV ) ▶₂ #j
3: splitEqs(0)
4: !KU( aeadEncrypt(<$U,                   aeadEncrypt('emptyStr',                              hkdfExpand(<$cAEAD0, h(<$cHash0, TH_2, CIPHERTEXT_2, 'emptyStr'>),                                           'K_3m'>,                                         hkdfExtract(prk_3e2m, z)),                              <$U, h(<$cHash0, TH_2, CIPHERTEXT_2, 'emptyStr'>), pkU>, $cAEAD0)                 >,                 hkdfExpand(<$cAEAD0, h(<$cHash0, TH_2, CIPHERTEXT_2, 'emptyStr'>),                              'K_3ae'>,                            prk_3e2m),                 extAad3Outer, $cAEAD0)) @ #vk.3

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 5 (precomputed):
    StR2_STAT_SIG( $V, ~ltk, ~yy, prk_3e2m, TH_2, CIPHERTEXT_2, gxy,
                   ~tid, m1, m2
    ) ▶₀ #j
  solved goal nr. 5 (precomputed):
    StR2_STAT_SIG( $V, ~ltk, ~yy, prk_3e2m, TH_2, CIPHERTEXT_2, gxy,
                   ~tid, m1, m2
    ) ▶₀ #j
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !PK_STAT( $U, pkU ) ▶₁ #j
1: !PK_SIG( $V, pkV ) ▶₂ #j
2: !KU( aeadEncrypt(<$U,                   aeadEncrypt('emptyStr',                              hkdfExpand(<$cAEAD0.1,                                           h(<$cHash0.1,                                              h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                              <                                              ($V⊕                                               hkdfExpand(<$cAEAD0,                                                            h(<$cHash0,                                                               <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy                                                             >),                                                            'K_2e', '1'>,                                                          hkdfExtract('emptyStr', gxy))                                              ),                                               (                                               hkdfExpand(<$cAEAD0,                                                            h(<$cHash0,                                                               <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy                                                             >),                                                            'K_2e', '2'>,                                                          hkdfExtract('emptyStr', gxy))⊕                                               sign(<                                                     <$V,                                                       h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>,                                                          'g'^~yy>),                                                       pk(~ltk)>,                                                      aeadEncrypt('emptyStr',                                                                 hkdfExpand(<$cAEAD0,                                                                              h(<$cHash0,                                                                                 <'STAT', 'SIG',                                                                                  $cSUITE0, gx>,                                                                                 'g'^~yy>),                                                                              'K_2m'>,                                                                            hkdfExtract('emptyStr',                                                                                        gxy)),                                                                 <$V,                                                                   h(<$cHash0,                                                                      <'STAT', 'SIG', $cSUITE0, gx>,                                                                      'g'^~yy>),                                                                   pk(~ltk)>,                                                                 $cAEAD0)                                                    >,                                                    ~ltk)                                              )                                             >,                                              'emptyStr'>),                                           'K_3m'>,                                         hkdfExtract(hkdfExtract('emptyStr', gxy), z)),                              <$U,                                h(<$cHash0.1,                                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                   <                                   ($V⊕                                    hkdfExpand(<$cAEAD0,                                                 h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy                                                  >),                                                 'K_2e', '1'>,                                               hkdfExtract('emptyStr', gxy))                                   ),                                    (                                    hkdfExpand(<$cAEAD0,                                                 h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy                                                  >),                                                 'K_2e', '2'>,                                               hkdfExtract('emptyStr', gxy))⊕                                    sign(<                                          <$V,                                            h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                            pk(~ltk)>,                                           aeadEncrypt('emptyStr',                                                      hkdfExpand(<$cAEAD0,                                                                   h(<$cHash0,                                                                      <'STAT', 'SIG', $cSUITE0, gx>,                                                                      'g'^~yy>),                                                                   'K_2m'>,                                                                 hkdfExtract('emptyStr', gxy)),                                                      <$V,                                                        h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>,                                                           'g'^~yy>),                                                        pk(~ltk)>,                                                      $cAEAD0)                                         >,                                         ~ltk)                                   )                                  >,                                   'emptyStr'>),                                pkU>,                              $cAEAD0.1)                 >,                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1,                                 h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                 <                                 ($V⊕                                  hkdfExpand(<$cAEAD0,                                               h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                               'K_2e', '1'>,                                             hkdfExtract('emptyStr', gxy))                                 ),                                  (                                  hkdfExpand(<$cAEAD0,                                               h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                               'K_2e', '2'>,                                             hkdfExtract('emptyStr', gxy))⊕                                  sign(<                                        <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                          pk(~ltk)>,                                         aeadEncrypt('emptyStr',                                                    hkdfExpand(<$cAEAD0,                                                                 h(<$cHash0,                                                                    <'STAT', 'SIG', $cSUITE0, gx>,                                                                    'g'^~yy>),                                                                 'K_2m'>,                                                               hkdfExtract('emptyStr', gxy)),                                                    <$V,                                                      h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>,                                                         'g'^~yy>),                                                      pk(~ltk)>,                                                    $cAEAD0)                                       >,                                       ~ltk)                                 )                                >,                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract('emptyStr', gxy)),                 extAad3Outer, $cAEAD0.1)) @ #vk.3
3: splitEqs(0)
4: splitEqs(1)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 6 (precomputed): !PK_STAT( $U, pkU ) ▶₁ #j
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !PK_SIG( $V, pkV ) ▶₂ #j
1: !KU( 'g'^(~ltk*~yy) ) @ #vk.5
2: !KU( aeadEncrypt(<$U,                   aeadEncrypt('emptyStr',                              hkdfExpand(<$cAEAD0.1,                                           h(<$cHash0.1,                                              h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                              <                                              ($V⊕                                               hkdfExpand(<$cAEAD0,                                                            h(<$cHash0,                                                               <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy                                                             >),                                                            'K_2e', '1'>,                                                          hkdfExtract('emptyStr', gxy))                                              ),                                               (                                               hkdfExpand(<$cAEAD0,                                                            h(<$cHash0,                                                               <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy                                                             >),                                                            'K_2e', '2'>,                                                          hkdfExtract('emptyStr', gxy))⊕                                               sign(<                                                     <$V,                                                       h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>,                                                          'g'^~yy>),                                                       pk(~ltk.1)>,                                                      aeadEncrypt('emptyStr',                                                                 hkdfExpand(<$cAEAD0,                                                                              h(<$cHash0,                                                                                 <'STAT', 'SIG',                                                                                  $cSUITE0, gx>,                                                                                 'g'^~yy>),                                                                              'K_2m'>,                                                                            hkdfExtract('emptyStr',                                                                                        gxy)),                                                                 <$V,                                                                   h(<$cHash0,                                                                      <'STAT', 'SIG', $cSUITE0, gx>,                                                                      'g'^~yy>),                                                                   pk(~ltk.1)>,                                                                 $cAEAD0)                                                    >,                                                    ~ltk.1)                                              )                                             >,                                              'emptyStr'>),                                           'K_3m'>,                                         hkdfExtract(hkdfExtract('emptyStr', gxy), 'g'^(~ltk*~yy))),                              <$U,                                h(<$cHash0.1,                                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                   <                                   ($V⊕                                    hkdfExpand(<$cAEAD0,                                                 h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy                                                  >),                                                 'K_2e', '1'>,                                               hkdfExtract('emptyStr', gxy))                                   ),                                    (                                    hkdfExpand(<$cAEAD0,                                                 h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy                                                  >),                                                 'K_2e', '2'>,                                               hkdfExtract('emptyStr', gxy))⊕                                    sign(<                                          <$V,                                            h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                            pk(~ltk.1)>,                                           aeadEncrypt('emptyStr',                                                      hkdfExpand(<$cAEAD0,                                                                   h(<$cHash0,                                                                      <'STAT', 'SIG', $cSUITE0, gx>,                                                                      'g'^~yy>),                                                                   'K_2m'>,                                                                 hkdfExtract('emptyStr', gxy)),                                                      <$V,                                                        h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>,                                                           'g'^~yy>),                                                        pk(~ltk.1)>,                                                      $cAEAD0)                                         >,                                         ~ltk.1)                                   )                                  >,                                   'emptyStr'>),                                'g'^~ltk>,                              $cAEAD0.1)                 >,                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1,                                 h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                 <                                 ($V⊕                                  hkdfExpand(<$cAEAD0,                                               h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                               'K_2e', '1'>,                                             hkdfExtract('emptyStr', gxy))                                 ),                                  (                                  hkdfExpand(<$cAEAD0,                                               h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                               'K_2e', '2'>,                                             hkdfExtract('emptyStr', gxy))⊕                                  sign(<                                        <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                          pk(~ltk.1)>,                                         aeadEncrypt('emptyStr',                                                    hkdfExpand(<$cAEAD0,                                                                 h(<$cHash0,                                                                    <'STAT', 'SIG', $cSUITE0, gx>,                                                                    'g'^~yy>),                                                                 'K_2m'>,                                                               hkdfExtract('emptyStr', gxy)),                                                    <$V,                                                      h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>,                                                         'g'^~yy>),                                                      pk(~ltk.1)>,                                                    $cAEAD0)                                       >,                                       ~ltk.1)                                 )                                >,                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract('emptyStr', gxy)),                 extAad3Outer, $cAEAD0.1)) @ #vk.3
3: splitEqs(1)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 7 (precomputed): !PK_SIG( $V, pkV ) ▶₂ #j
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( 'g'^(~ltk*~yy) ) @ #vk.5
1: !KU( aeadEncrypt(<$U,                   aeadEncrypt('emptyStr',                              hkdfExpand(<$cAEAD0.1,                                           h(<$cHash0.1,                                              h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                              <                                              ($V⊕                                               hkdfExpand(<$cAEAD0,                                                            h(<$cHash0,                                                               <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy                                                             >),                                                            'K_2e', '1'>,                                                          hkdfExtract('emptyStr', gxy))                                              ),                                               (                                               hkdfExpand(<$cAEAD0,                                                            h(<$cHash0,                                                               <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy                                                             >),                                                            'K_2e', '2'>,                                                          hkdfExtract('emptyStr', gxy))⊕                                               sign(<                                                     <$V,                                                       h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>,                                                          'g'^~yy>),                                                       pk(~ltk.1)>,                                                      aeadEncrypt('emptyStr',                                                                 hkdfExpand(<$cAEAD0,                                                                              h(<$cHash0,                                                                                 <'STAT', 'SIG',                                                                                  $cSUITE0, gx>,                                                                                 'g'^~yy>),                                                                              'K_2m'>,                                                                            hkdfExtract('emptyStr',                                                                                        gxy)),                                                                 <$V,                                                                   h(<$cHash0,                                                                      <'STAT', 'SIG', $cSUITE0, gx>,                                                                      'g'^~yy>),                                                                   pk(~ltk.1)>,                                                                 $cAEAD0)                                                    >,                                                    ~ltk.1)                                              )                                             >,                                              'emptyStr'>),                                           'K_3m'>,                                         hkdfExtract(hkdfExtract('emptyStr', gxy), 'g'^(~ltk*~yy))),                              <$U,                                h(<$cHash0.1,                                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                   <                                   ($V⊕                                    hkdfExpand(<$cAEAD0,                                                 h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy                                                  >),                                                 'K_2e', '1'>,                                               hkdfExtract('emptyStr', gxy))                                   ),                                    (                                    hkdfExpand(<$cAEAD0,                                                 h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy                                                  >),                                                 'K_2e', '2'>,                                               hkdfExtract('emptyStr', gxy))⊕                                    sign(<                                          <$V,                                            h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                            pk(~ltk.1)>,                                           aeadEncrypt('emptyStr',                                                      hkdfExpand(<$cAEAD0,                                                                   h(<$cHash0,                                                                      <'STAT', 'SIG', $cSUITE0, gx>,                                                                      'g'^~yy>),                                                                   'K_2m'>,                                                                 hkdfExtract('emptyStr', gxy)),                                                      <$V,                                                        h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>,                                                           'g'^~yy>),                                                        pk(~ltk.1)>,                                                      $cAEAD0)                                         >,                                         ~ltk.1)                                   )                                  >,                                   'emptyStr'>),                                'g'^~ltk>,                              $cAEAD0.1)                 >,                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1,                                 h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                 <                                 ($V⊕                                  hkdfExpand(<$cAEAD0,                                               h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                               'K_2e', '1'>,                                             hkdfExtract('emptyStr', gxy))                                 ),                                  (                                  hkdfExpand(<$cAEAD0,                                               h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                               'K_2e', '2'>,                                             hkdfExtract('emptyStr', gxy))⊕                                  sign(<                                        <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                          pk(~ltk.1)>,                                         aeadEncrypt('emptyStr',                                                    hkdfExpand(<$cAEAD0,                                                                 h(<$cHash0,                                                                    <'STAT', 'SIG', $cSUITE0, gx>,                                                                    'g'^~yy>),                                                                 'K_2m'>,                                                               hkdfExtract('emptyStr', gxy)),                                                    <$V,                                                      h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>,                                                         'g'^~yy>),                                                      pk(~ltk.1)>,                                                    $cAEAD0)                                       >,                                       ~ltk.1)                                 )                                >,                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract('emptyStr', gxy)),                 extAad3Outer, $cAEAD0.1)) @ #vk.3
2: splitEqs(1)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 27 (precomputed): !KU( 'g'^(~ltk*~yy) ) @ #vk.5
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !PK_STAT( $U, pkU ) ▶₁ #j
1: !PK_SIG( $V, pkV ) ▶₂ #j
2: !KU( aeadEncrypt(<$U,                   aeadEncrypt('emptyStr',                              hkdfExpand(<$cAEAD0.1,                                           h(<$cHash0.1,                                              h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                              <                                              ($V⊕                                               hkdfExpand(<$cAEAD0,                                                            h(<$cHash0,                                                               <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy                                                             >),                                                            'K_2e', '1'>,                                                          hkdfExtract('emptyStr', gxy))                                              ),                                               (                                               hkdfExpand(<$cAEAD0,                                                            h(<$cHash0,                                                               <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy                                                             >),                                                            'K_2e', '2'>,                                                          hkdfExtract('emptyStr', gxy))⊕                                               sign(<                                                     <$V,                                                       h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>,                                                          'g'^~yy>),                                                       pk(~ltk)>,                                                      aeadEncrypt('emptyStr',                                                                 hkdfExpand(<$cAEAD0,                                                                              h(<$cHash0,                                                                                 <'STAT', 'SIG',                                                                                  $cSUITE0, gx>,                                                                                 'g'^~yy>),                                                                              'K_2m'>,                                                                            hkdfExtract('emptyStr',                                                                                        gxy)),                                                                 <$V,                                                                   h(<$cHash0,                                                                      <'STAT', 'SIG', $cSUITE0, gx>,                                                                      'g'^~yy>),                                                                   pk(~ltk)>,                                                                 $cAEAD0)                                                    >,                                                    ~ltk)                                              )                                             >,                                              'emptyStr'>),                                           'K_3m'>,                                         hkdfExtract(hkdfExtract('emptyStr', gxy), z)),                              <$U,                                h(<$cHash0.1,                                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                   <                                   ($V⊕                                    hkdfExpand(<$cAEAD0,                                                 h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy                                                  >),                                                 'K_2e', '1'>,                                               hkdfExtract('emptyStr', gxy))                                   ),                                    (                                    hkdfExpand(<$cAEAD0,                                                 h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy                                                  >),                                                 'K_2e', '2'>,                                               hkdfExtract('emptyStr', gxy))⊕                                    sign(<                                          <$V,                                            h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                            pk(~ltk)>,                                           aeadEncrypt('emptyStr',                                                      hkdfExpand(<$cAEAD0,                                                                   h(<$cHash0,                                                                      <'STAT', 'SIG', $cSUITE0, gx>,                                                                      'g'^~yy>),                                                                   'K_2m'>,                                                                 hkdfExtract('emptyStr', gxy)),                                                      <$V,                                                        h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>,                                                           'g'^~yy>),                                                        pk(~ltk)>,                                                      $cAEAD0)                                         >,                                         ~ltk)                                   )                                  >,                                   'emptyStr'>),                                pkU>,                              $cAEAD0.1)                 >,                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1,                                 h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                 <                                 ($V⊕                                  hkdfExpand(<$cAEAD0,                                               h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                               'K_2e', '1'>,                                             hkdfExtract('emptyStr', gxy))                                 ),                                  (                                  hkdfExpand(<$cAEAD0,                                               h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                               'K_2e', '2'>,                                             hkdfExtract('emptyStr', gxy))⊕                                  sign(<                                        <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                          pk(~ltk)>,                                         aeadEncrypt('emptyStr',                                                    hkdfExpand(<$cAEAD0,                                                                 h(<$cHash0,                                                                    <'STAT', 'SIG', $cSUITE0, gx>,                                                                    'g'^~yy>),                                                                 'K_2m'>,                                                               hkdfExtract('emptyStr', gxy)),                                                    <$V,                                                      h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>,                                                         'g'^~yy>),                                                      pk(~ltk)>,                                                    $cAEAD0)                                       >,                                       ~ltk)                                 )                                >,                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract('emptyStr', gxy)),                 extAad3Outer, $cAEAD0.1)) @ #vk.3
3: splitEqs(0)
4: splitEqs(1)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 6 (precomputed): !PK_STAT( $U, pkU ) ▶₁ #j
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !PK_SIG( $V, pkV ) ▶₂ #j
1: !KU( 'g'^(~ltk*~yy) ) @ #vk.5
2: !KU( aeadEncrypt(<$U,                   aeadEncrypt('emptyStr',                              hkdfExpand(<$cAEAD0.1,                                           h(<$cHash0.1,                                              h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                              <                                              ($V⊕                                               hkdfExpand(<$cAEAD0,                                                            h(<$cHash0,                                                               <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy                                                             >),                                                            'K_2e', '1'>,                                                          hkdfExtract('emptyStr', gxy))                                              ),                                               (                                               hkdfExpand(<$cAEAD0,                                                            h(<$cHash0,                                                               <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy                                                             >),                                                            'K_2e', '2'>,                                                          hkdfExtract('emptyStr', gxy))⊕                                               sign(<                                                     <$V,                                                       h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>,                                                          'g'^~yy>),                                                       pk(~ltk.1)>,                                                      aeadEncrypt('emptyStr',                                                                 hkdfExpand(<$cAEAD0,                                                                              h(<$cHash0,                                                                                 <'STAT', 'SIG',                                                                                  $cSUITE0, gx>,                                                                                 'g'^~yy>),                                                                              'K_2m'>,                                                                            hkdfExtract('emptyStr',                                                                                        gxy)),                                                                 <$V,                                                                   h(<$cHash0,                                                                      <'STAT', 'SIG', $cSUITE0, gx>,                                                                      'g'^~yy>),                                                                   pk(~ltk.1)>,                                                                 $cAEAD0)                                                    >,                                                    ~ltk.1)                                              )                                             >,                                              'emptyStr'>),                                           'K_3m'>,                                         hkdfExtract(hkdfExtract('emptyStr', gxy), 'g'^(~ltk*~yy))),                              <$U,                                h(<$cHash0.1,                                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                   <                                   ($V⊕                                    hkdfExpand(<$cAEAD0,                                                 h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy                                                  >),                                                 'K_2e', '1'>,                                               hkdfExtract('emptyStr', gxy))                                   ),                                    (                                    hkdfExpand(<$cAEAD0,                                                 h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy                                                  >),                                                 'K_2e', '2'>,                                               hkdfExtract('emptyStr', gxy))⊕                                    sign(<                                          <$V,                                            h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                            pk(~ltk.1)>,                                           aeadEncrypt('emptyStr',                                                      hkdfExpand(<$cAEAD0,                                                                   h(<$cHash0,                                                                      <'STAT', 'SIG', $cSUITE0, gx>,                                                                      'g'^~yy>),                                                                   'K_2m'>,                                                                 hkdfExtract('emptyStr', gxy)),                                                      <$V,                                                        h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>,                                                           'g'^~yy>),                                                        pk(~ltk.1)>,                                                      $cAEAD0)                                         >,                                         ~ltk.1)                                   )                                  >,                                   'emptyStr'>),                                'g'^~ltk>,                              $cAEAD0.1)                 >,                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1,                                 h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                 <                                 ($V⊕                                  hkdfExpand(<$cAEAD0,                                               h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                               'K_2e', '1'>,                                             hkdfExtract('emptyStr', gxy))                                 ),                                  (                                  hkdfExpand(<$cAEAD0,                                               h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                               'K_2e', '2'>,                                             hkdfExtract('emptyStr', gxy))⊕                                  sign(<                                        <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                          pk(~ltk.1)>,                                         aeadEncrypt('emptyStr',                                                    hkdfExpand(<$cAEAD0,                                                                 h(<$cHash0,                                                                    <'STAT', 'SIG', $cSUITE0, gx>,                                                                    'g'^~yy>),                                                                 'K_2m'>,                                                               hkdfExtract('emptyStr', gxy)),                                                    <$V,                                                      h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>,                                                         'g'^~yy>),                                                      pk(~ltk.1)>,                                                    $cAEAD0)                                       >,                                       ~ltk.1)                                 )                                >,                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract('emptyStr', gxy)),                 extAad3Outer, $cAEAD0.1)) @ #vk.3
3: splitEqs(1)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 7 (precomputed): !PK_SIG( $V, pkV ) ▶₂ #j
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( 'g'^(~ltk*~yy) ) @ #vk.5
1: !KU( aeadEncrypt(<$U,                   aeadEncrypt('emptyStr',                              hkdfExpand(<$cAEAD0.1,                                           h(<$cHash0.1,                                              h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                              <                                              ($V⊕                                               hkdfExpand(<$cAEAD0,                                                            h(<$cHash0,                                                               <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy                                                             >),                                                            'K_2e', '1'>,                                                          hkdfExtract('emptyStr', gxy))                                              ),                                               (                                               hkdfExpand(<$cAEAD0,                                                            h(<$cHash0,                                                               <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy                                                             >),                                                            'K_2e', '2'>,                                                          hkdfExtract('emptyStr', gxy))⊕                                               sign(<                                                     <$V,                                                       h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>,                                                          'g'^~yy>),                                                       pk(~ltk.1)>,                                                      aeadEncrypt('emptyStr',                                                                 hkdfExpand(<$cAEAD0,                                                                              h(<$cHash0,                                                                                 <'STAT', 'SIG',                                                                                  $cSUITE0, gx>,                                                                                 'g'^~yy>),                                                                              'K_2m'>,                                                                            hkdfExtract('emptyStr',                                                                                        gxy)),                                                                 <$V,                                                                   h(<$cHash0,                                                                      <'STAT', 'SIG', $cSUITE0, gx>,                                                                      'g'^~yy>),                                                                   pk(~ltk.1)>,                                                                 $cAEAD0)                                                    >,                                                    ~ltk.1)                                              )                                             >,                                              'emptyStr'>),                                           'K_3m'>,                                         hkdfExtract(hkdfExtract('emptyStr', gxy), 'g'^(~ltk*~yy))),                              <$U,                                h(<$cHash0.1,                                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                   <                                   ($V⊕                                    hkdfExpand(<$cAEAD0,                                                 h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy                                                  >),                                                 'K_2e', '1'>,                                               hkdfExtract('emptyStr', gxy))                                   ),                                    (                                    hkdfExpand(<$cAEAD0,                                                 h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy                                                  >),                                                 'K_2e', '2'>,                                               hkdfExtract('emptyStr', gxy))⊕                                    sign(<                                          <$V,                                            h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                            pk(~ltk.1)>,                                           aeadEncrypt('emptyStr',                                                      hkdfExpand(<$cAEAD0,                                                                   h(<$cHash0,                                                                      <'STAT', 'SIG', $cSUITE0, gx>,                                                                      'g'^~yy>),                                                                   'K_2m'>,                                                                 hkdfExtract('emptyStr', gxy)),                                                      <$V,                                                        h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>,                                                           'g'^~yy>),                                                        pk(~ltk.1)>,                                                      $cAEAD0)                                         >,                                         ~ltk.1)                                   )                                  >,                                   'emptyStr'>),                                'g'^~ltk>,                              $cAEAD0.1)                 >,                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1,                                 h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                 <                                 ($V⊕                                  hkdfExpand(<$cAEAD0,                                               h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                               'K_2e', '1'>,                                             hkdfExtract('emptyStr', gxy))                                 ),                                  (                                  hkdfExpand(<$cAEAD0,                                               h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                               'K_2e', '2'>,                                             hkdfExtract('emptyStr', gxy))⊕                                  sign(<                                        <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                          pk(~ltk.1)>,                                         aeadEncrypt('emptyStr',                                                    hkdfExpand(<$cAEAD0,                                                                 h(<$cHash0,                                                                    <'STAT', 'SIG', $cSUITE0, gx>,                                                                    'g'^~yy>),                                                                 'K_2m'>,                                                               hkdfExtract('emptyStr', gxy)),                                                    <$V,                                                      h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>,                                                         'g'^~yy>),                                                      pk(~ltk.1)>,                                                    $cAEAD0)                                       >,                                       ~ltk.1)                                 )                                >,                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract('emptyStr', gxy)),                 extAad3Outer, $cAEAD0.1)) @ #vk.3
2: splitEqs(1)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 27 (precomputed): !KU( 'g'^(~ltk*~yy) ) @ #vk.5
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', z))⊕      sign(<            <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                                   hkdfExtract('emptyStr', z)),                        <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)     )) @ #vk.5
1: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                hkdfExtract('emptyStr', z))) @ #vk.8
2: splitEqs(0)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KD( ($V⊕      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', z))     )) ▶₀ #vk
1: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', z))⊕      sign(<            <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                                   hkdfExtract('emptyStr', z)),                        <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)     )) @ #vk.5
2: splitEqs(0)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 16 (directly):
    !KU( (
          hkdfExpand(<$cAEAD0, 
                      h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,
                     hkdfExtract('emptyStr', z))⊕
          sign(<
                <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 
                 pk(~ltk.1)>, 
                aeadEncrypt('emptyStr',
                            hkdfExpand(<$cAEAD0, 
                                        h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'
                                       >,
                                       hkdfExtract('emptyStr', z)),
                            <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 
                             pk(~ltk.1)>,
                            $cAEAD0)
               >,
               ~ltk.1)
         )
    ) @ #vk.5
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( sign(<           <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>),             pk(~ltk.1)>,            aeadEncrypt('emptyStr',                       hkdfExpand(<$cAEAD0,                                    h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                                  hkdfExtract('emptyStr', z)),                       <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>),                         pk(~ltk.1)>,                       $cAEAD0)          >,          ~ltk.1)) @ #vk.10
1: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                hkdfExtract('emptyStr', z))) @ #vk.8
2: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                hkdfExtract('emptyStr', z))) @ #vk.11
3: splitEqs(0)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 24 (precomputed):
    !KU( sign(<
               <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 
                pk(~ltk.1)>, 
               aeadEncrypt('emptyStr',
                           hkdfExpand(<$cAEAD0, 
                                       h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'
                                      >,
                                      hkdfExtract('emptyStr', z)),
                           <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 
                            pk(~ltk.1)>,
                           $cAEAD0)
              >,
              ~ltk.1)
    ) @ #vk.10
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KD( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', z))⊕      sign(<            <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                                   hkdfExtract('emptyStr', z)),                        <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)     )) ▶₀ #vk.1
1: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                hkdfExtract('emptyStr', z))) @ #vk.8
2: splitEqs(0)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~ltk.1 ) @ #vk.14
1: !KU( h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>)) @ #vk.16
2: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                hkdfExtract('emptyStr', z))) @ #vk.9
3: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                hkdfExtract('emptyStr', z))) @ #vk.12
4: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0,                              h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                            hkdfExtract('emptyStr', z)),                 <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>),                   pk(~ltk.1)>,                 $cAEAD0)) @ #vk.18
5: splitEqs(0)
6: !KU( pk(~ltk.1) ) @ #vk.17

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 28 (precomputed): !KU( ~ltk.1 ) @ #vk.14
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( 'g'^(~xx*~yy) ) @ #vk.7
1: !KU( 'g'^(~ltk*~yy) ) @ #vk.8
2: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                  '1'>,                hkdfExtract('emptyStr', 'g'^(~xx*~yy)))) @ #vk.9
3: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                  '2'>,                hkdfExtract('emptyStr', 'g'^(~xx*~yy)))) @ #vk.11
4: !KU( 'g'^~xx ) @ #vk.18
5: !KU( 'g'^~yy ) @ #vk.6

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 38 (precomputed): !KU( 'g'^(~xx*~yy) ) @ #vk.7
  simplified formula:
      "((#vr.20 = #j) ∨ (#j < #vr.20))"
    to
      "⊥"
  solved goal nr. 37 (simplified): (#vr.20 = #j)  ∥ (#j < #vr.20)
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.21
1: !KU( ~yy ) @ #vk.22
2: !KU( 'g'^(~ltk*~yy) ) @ #vk.8
3: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                  '1'>,                hkdfExtract('emptyStr', 'g'^(~xx*~yy)))) @ #vk.9
4: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                  '2'>,                hkdfExtract('emptyStr', 'g'^(~xx*~yy)))) @ #vk.11
5: !KU( 'g'^~xx ) @ #vk.18
6: !KU( 'g'^~yy ) @ #vk.7

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 43 (precomputed): !KU( ~xx ) @ #vk.21
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~yy ) @ #vk.19
1: !KU( 'g'^(~ltk*~yy) ) @ #vk.8
2: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                  '1'>,                hkdfExtract('emptyStr', 'g'^(~xx*~yy)))) @ #vk.9
3: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                  '2'>,                hkdfExtract('emptyStr', 'g'^(~xx*~yy)))) @ #vk.11
4: !KU( 'g'^~xx ) @ #vk.18
5: !KU( 'g'^~yy ) @ #vk.7

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 41 (precomputed): !KU( ~yy ) @ #vk.19
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.19
1: !KU( 'g'^(~ltk*~yy) ) @ #vk.8
2: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                  '1'>,                hkdfExtract('emptyStr', 'g'^(~xx*~yy)))) @ #vk.9
3: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                  '2'>,                hkdfExtract('emptyStr', 'g'^(~xx*~yy)))) @ #vk.11
4: !KU( 'g'^~xx ) @ #vk.18
5: !KU( 'g'^~yy ) @ #vk.7

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 48 (precomputed): !KU( ~xx ) @ #vk.19
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vl, 0) ~~> (#vk.1, 0)
1: !LTK_SIG( $V.1, ~ltk.2 ) ▶₀ #vr.3
2: !PK_SIG( $V.1, pkV ) ▶₁ #vr.3
3: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                hkdfExtract('emptyStr', z))) @ #vk.8
4: splitEqs(0)
5: splitEqs(1)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: CommitI( tid.1, u, v, t ) ▶₀ #vr.3
1: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                hkdfExtract('emptyStr', z))) @ #vk.8
2: splitEqs(0)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vl, 0) ~~> (#vk.1, 0)
1: StI1_STAT_SIG( $U.1, ~ltk.2, $V.1, ~xx.1, m1, ~tid.1 ) ▶₀ #vr.3
2: !PK_SIG( $V.1, pk(x) ) ▶₁ #vr.3
3: !PK_STAT( $U.1, pkU ) ▶₂ #vr.3
4: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                hkdfExtract('emptyStr', z))) @ #vk.8
5: splitEqs(0)
6: splitEqs(1)
7: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', z.2))     )) @ #vk.13
8: !KU( (      hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', z.2))⊕      sign(<<$V.1, h(<$cHash0.1, m1, gy.1>), pk(x)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2m'>,                                   hkdfExtract('emptyStr', z.2)),                        <$V.1, h(<$cHash0.1, m1, gy.1>), pk(x)>, $cAEAD0.1)           >,           x)     )) @ #vk.14

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 27 (precomputed):
    CommitI( tid.1, u, v, t ) ▶₀ #vr.3
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: CommitR( tid.1, u, v, t ) ▶₀ #vr.3
1: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                hkdfExtract('emptyStr', z))) @ #vk.8
2: splitEqs(0)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 27 (precomputed):
    CommitR( tid.1, u, v, t ) ▶₀ #vr.3
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.4, 0) ~~> (#vk.1, 0)
1: StI1_STAT_SIG( $U.1, ~ltk.2, $V.1, ~xx.1, m1, ~tid.1 ) ▶₀ #vr.3
2: !PK_SIG( $V.1, pk(x) ) ▶₁ #vr.3
3: !PK_STAT( $U.1, pkU ) ▶₂ #vr.3
4: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                hkdfExtract('emptyStr', z))) @ #vk.8
5: splitEqs(0)
6: splitEqs(1)
7: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', z.2))     )) @ #vk.13
8: !KU( (      hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', z.2))⊕      sign(<<$V.1, h(<$cHash0.1, m1, gy.1>), pk(x)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2m'>,                                   hkdfExtract('emptyStr', z.2)),                        <$V.1, h(<$cHash0.1, m1, gy.1>), pk(x)>, $cAEAD0.1)           >,           x)     )) @ #vk.14

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.5, 0) ~~> (#vk.1, 0)
1: StI1_STAT_SIG( $U.1, ~ltk.2, $V.1, ~xx.1, m1, ~tid.1 ) ▶₀ #vr.3
2: !PK_SIG( $V.1, pk(x) ) ▶₁ #vr.3
3: !PK_STAT( $U.1, pkU ) ▶₂ #vr.3
4: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                hkdfExtract('emptyStr', z))) @ #vk.8
5: splitEqs(0)
6: splitEqs(1)
7: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', z.2))     )) @ #vk.13
8: !KU( (      hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', z.2))⊕      sign(<<$V.1, h(<$cHash0.1, m1, gy.1>), pk(x)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2m'>,                                   hkdfExtract('emptyStr', z.2)),                        <$V.1, h(<$cHash0.1, m1, gy.1>), pk(x)>, $cAEAD0.1)           >,           x)     )) @ #vk.14
9: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1, h(<$cHash0.1, m1, gy.1>),                                 <                                 ($V.1⊕                                  hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2e', '1'>,                                             hkdfExtract('emptyStr', z.2))                                 ),                                  (                                  hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2e', '2'>,                                             hkdfExtract('emptyStr', z.2))⊕                                  sign(<<$V.1, h(<$cHash0.1, m1, gy.1>), pk(x)>,                                         aeadEncrypt('emptyStr',                                                    hkdfExpand(<$cAEAD0.1,                                                                 h(<$cHash0.1, m1, gy.1>), 'K_2m'>,                                                               hkdfExtract('emptyStr', z.2)),                                                    <$V.1, h(<$cHash0.1, m1, gy.1>), pk(x)>,                                                    $cAEAD0.1)                                       >,                                       x)                                 )                                >,                                 'emptyStr'>),                              'K_3m'>,                            hkdfExtract(hkdfExtract('emptyStr', z.2), z.3)),                 <$U.1,                   h(<$cHash0.1, h(<$cHash0.1, m1, gy.1>),                      <                      ($V.1⊕                       hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2e', '1'>,                                  hkdfExtract('emptyStr', z.2))                      ),                       (                       hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2e', '2'>,                                  hkdfExtract('emptyStr', z.2))⊕                       sign(<<$V.1, h(<$cHash0.1, m1, gy.1>), pk(x)>,                              aeadEncrypt('emptyStr',                                         hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2m'>,                                                    hkdfExtract('emptyStr', z.2)),                                         <$V.1, h(<$cHash0.1, m1, gy.1>), pk(x)>, $cAEAD0.1)                            >,                            x)                      )                     >,                      'emptyStr'>),                   pkU>,                 $cAEAD0.1)) @ #vk.18

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.5, 0) ~~> (#vk.1, 0)
1: StI1_STAT_SIG( $U.1, ~ltk.2, $V.1, ~xx.1, m1, ~tid.1 ) ▶₀ #vr.3
2: !PK_SIG( $V.1, pk(x) ) ▶₁ #vr.3
3: !PK_STAT( $U.1, pkU ) ▶₂ #vr.3
4: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                hkdfExtract('emptyStr', z))) @ #vk.8
5: splitEqs(0)
6: splitEqs(1)
7: !KU( h(<$cHash0.1, h(<$cHash0.1, m1, gy.1>),         <         ($V.1⊕          hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2e', '1'>,                     hkdfExtract('emptyStr', z.2))         ),          (          hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2e', '2'>,                     hkdfExtract('emptyStr', z.2))⊕          sign(<<$V.1, h(<$cHash0.1, m1, gy.1>), pk(x)>,                 aeadEncrypt('emptyStr',                            hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2m'>,                                       hkdfExtract('emptyStr', z.2)),                            <$V.1, h(<$cHash0.1, m1, gy.1>), pk(x)>, $cAEAD0.1)               >,               x)         )        >,         'emptyStr'>)) @ #vk.16
8: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', z.2))     )) @ #vk.13
9: !KU( (      hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', z.2))⊕      sign(<<$V.1, h(<$cHash0.1, m1, gy.1>), pk(x)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2m'>,                                   hkdfExtract('emptyStr', z.2)),                        <$V.1, h(<$cHash0.1, m1, gy.1>), pk(x)>, $cAEAD0.1)           >,           x)     )) @ #vk.14
10: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1, h(<$cHash0.1, m1, gy.1>),                                 <                                 ($V.1⊕                                  hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2e', '1'>,                                             hkdfExtract('emptyStr', z.2))                                 ),                                  (                                  hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2e', '2'>,                                             hkdfExtract('emptyStr', z.2))⊕                                  sign(<<$V.1, h(<$cHash0.1, m1, gy.1>), pk(x)>,                                         aeadEncrypt('emptyStr',                                                    hkdfExpand(<$cAEAD0.1,                                                                 h(<$cHash0.1, m1, gy.1>), 'K_2m'>,                                                               hkdfExtract('emptyStr', z.2)),                                                    <$V.1, h(<$cHash0.1, m1, gy.1>), pk(x)>,                                                    $cAEAD0.1)                                       >,                                       x)                                 )                                >,                                 'emptyStr'>),                              'K_3m'>,                            hkdfExtract(hkdfExtract('emptyStr', z.2), z.3)),                 <$U.1,                   h(<$cHash0.1, h(<$cHash0.1, m1, gy.1>),                      <                      ($V.1⊕                       hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2e', '1'>,                                  hkdfExtract('emptyStr', z.2))                      ),                       (                       hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2e', '2'>,                                  hkdfExtract('emptyStr', z.2))⊕                       sign(<<$V.1, h(<$cHash0.1, m1, gy.1>), pk(x)>,                              aeadEncrypt('emptyStr',                                         hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2m'>,                                                    hkdfExtract('emptyStr', z.2)),                                         <$V.1, h(<$cHash0.1, m1, gy.1>), pk(x)>, $cAEAD0.1)                            >,                            x)                      )                     >,                      'emptyStr'>),                   pkU>,                 $cAEAD0.1)) @ #vk.19

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.4, 0) ~~> (#vk.1, 0)
1: !LTK_SIG( $V.1, ~ltk.2 ) ▶₀ #vr.3
2: !PK_SIG( $V.1, pkV ) ▶₁ #vr.3
3: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                hkdfExtract('emptyStr', z))) @ #vk.8
4: splitEqs(0)
5: splitEqs(1)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.5, 0) ~~> (#vk.1, 0)
1: !LTK_SIG( $V.1, ~ltk.2 ) ▶₀ #vr.3
2: !PK_SIG( $V.1, pkV ) ▶₁ #vr.3
3: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                hkdfExtract('emptyStr', z))) @ #vk.8
4: splitEqs(0)
5: splitEqs(1)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.5, 0) ~~> (#vk.1, 0)
1: !LTK_SIG( $V.1, ~ltk.2 ) ▶₀ #vr.3
2: !PK_SIG( $V.1, pkV ) ▶₁ #vr.3
3: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                hkdfExtract('emptyStr', z))) @ #vk.8
4: splitEqs(0)
5: splitEqs(1)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.6, 0) ~~> (#vk.1, 0)
1: !LTK_SIG( $V.1, ~ltk.2 ) ▶₀ #vr.3
2: !PK_SIG( $V.1, pkV ) ▶₁ #vr.3
3: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                hkdfExtract('emptyStr', z))) @ #vk.8
4: !KU( (z.3⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'STAT', 'SIG', $cSUITE0.1, gx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z.2))     )) @ #vk.17
5: splitEqs(0)
6: splitEqs(1)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.6, 0) ~~> (#vk.1, 0)
1: !LTK_SIG( $V.1, ~ltk.2 ) ▶₀ #vr.3
2: !PK_SIG( $V.1, pkV ) ▶₁ #vr.3
3: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                hkdfExtract('emptyStr', z))) @ #vk.8
4: splitEqs(0)
5: splitEqs(1)
6: !KU( ($V.1⊕z.3) ) @ #vk.17

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.6, 0) ~~> (#vk.1, 0)
1: !LTK_SIG( $V.1, ~ltk.2 ) ▶₀ #vr.3
2: !PK_SIG( $V.1, pkV ) ▶₁ #vr.3
3: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                hkdfExtract('emptyStr', z))) @ #vk.8
4: splitEqs(0)
5: splitEqs(1)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.6, 0) ~~> (#vk.1, 0)
1: !LTK_SIG( $V.1, ~ltk.2 ) ▶₀ #vr.3
2: !PK_SIG( $V.1, pkV ) ▶₁ #vr.3
3: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                hkdfExtract('emptyStr', z))) @ #vk.8
4: !KU( (z.3⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'STAT', 'SIG', $cSUITE0.1, gx>, 'g'^~yy>), 'K_2e',                   '2'>,                 hkdfExtract('emptyStr', z.2))     )) @ #vk.17
5: splitEqs(0)
6: splitEqs(1)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.6, 0) ~~> (#vk.1, 0)
1: !LTK_SIG( $V.1, ~ltk.2 ) ▶₀ #vr.3
2: !PK_SIG( $V.1, pkV ) ▶₁ #vr.3
3: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                hkdfExtract('emptyStr', z))) @ #vk.8
4: !KU( (z.3⊕      sign(<            <$V.1, h(<$cHash0.1, <'STAT', 'SIG', $cSUITE0.1, gx>, 'g'^~yy>),              pkV>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'STAT', 'SIG', $cSUITE0.1, gx>, 'g'^~yy>), 'K_2m'                                   >,                                   hkdfExtract('emptyStr', z.2)),                        <$V.1, h(<$cHash0.1, <'STAT', 'SIG', $cSUITE0.1, gx>, 'g'^~yy>),                          pkV>,                        $cAEAD0.1)           >,           ~ltk.2)     )) @ #vk.17
5: splitEqs(0)
6: splitEqs(1)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.6, 0) ~~> (#vk.1, 0)
1: !LTK_SIG( $V.1, ~ltk.2 ) ▶₀ #vr.3
2: !PK_SIG( $V.1, pkV ) ▶₁ #vr.3
3: !KU( sign(<           <$V.1, h(<$cHash0.1, <'STAT', 'SIG', $cSUITE0.1, gx>, 'g'^~yy>),             pkV>,            aeadEncrypt('emptyStr',                       hkdfExpand(<$cAEAD0.1,                                    h(<$cHash0.1, <'STAT', 'SIG', $cSUITE0.1, gx>, 'g'^~yy>), 'K_2m'                                  >,                                  hkdfExtract('emptyStr', z.2)),                       <$V.1, h(<$cHash0.1, <'STAT', 'SIG', $cSUITE0.1, gx>, 'g'^~yy>),                         pkV>,                       $cAEAD0.1)          >,          ~ltk.2)) @ #vk.17
4: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                hkdfExtract('emptyStr', z))) @ #vk.8
5: splitEqs(0)
6: splitEqs(1)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !LTK_SIG( $V, ~ltk.1 ) ▶₀ #vr.3
1: !PK_SIG( $V, pk(~ltk.1) ) ▶₁ #vr.3
2: !KU( 'g'^(~xx*~yy) ) @ #vk.6
3: !KU( 'g'^(~ltk*~yy) ) @ #vk.7
4: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                  '1'>,                hkdfExtract('emptyStr', 'g'^(~xx*~yy)))) @ #vk.8
5: !KU( 'g'^~yy ) @ #vk.5
6: !KU( 'g'^~xx ) @ #vk.16

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 27 (precomputed): !LTK_SIG( $V, ~ltk.1 ) ▶₀ #vr.3
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.6, 0) ~~> (#vk.1, 0)
1: !LTK_SIG( $V.1, ~ltk.2 ) ▶₀ #vr.3
2: !PK_SIG( $V.1, pkV ) ▶₁ #vr.3
3: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                hkdfExtract('emptyStr', z))) @ #vk.8
4: !KU( hkdfExpand(<$cAEAD0.1,                  h(<$cHash0.1, <'STAT', 'SIG', $cSUITE0.1, gx>, 'g'^~yy>), 'K_2e',                  '2'>,                hkdfExtract('emptyStr', z.2))) @ #vk.17
5: splitEqs(0)
6: splitEqs(1)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !PK_SIG( $V, pk(~ltk.1) ) ▶₁ #vr.3
1: !KU( 'g'^(~xx*~yy) ) @ #vk.6
2: !KU( 'g'^(~ltk*~yy) ) @ #vk.7
3: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                  '1'>,                hkdfExtract('emptyStr', 'g'^(~xx*~yy)))) @ #vk.8
4: !KU( 'g'^~yy ) @ #vk.5
5: !KU( 'g'^~xx ) @ #vk.16

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 28 (precomputed):
    !PK_SIG( $V, pk(~ltk.1) ) ▶₁ #vr.3
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( 'g'^(~xx*~yy) ) @ #vk.6
1: !KU( 'g'^(~ltk*~yy) ) @ #vk.7
2: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                  '1'>,                hkdfExtract('emptyStr', 'g'^(~xx*~yy)))) @ #vk.8
3: !KU( 'g'^~yy ) @ #vk.5
4: !KU( 'g'^~xx ) @ #vk.16

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 41 (precomputed): !KU( 'g'^(~xx*~yy) ) @ #vk.6
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !LTK_SIG( $V.1, ~ltk.2 ) ▶₀ #vr.3
1: !PK_SIG( $V.1, pkV ) ▶₁ #vr.3
2: !KU( 'g'^(~xx*~yy) ) @ #vk.6
3: !KU( 'g'^(~ltk*~yy) ) @ #vk.7
4: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                  '1'>,                hkdfExtract('emptyStr', 'g'^(~xx*~yy)))) @ #vk.8
5: !KU( (      sign(<            <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)⊕      sign(<            <$V.1, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pkV>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V.1, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pkV>,                        $cAEAD0)           >,           ~ltk.2)     )) @ #vk.17
6: !KU( 'g'^~yy ) @ #vk.5
7: !KU( 'g'^~xx ) @ #vk.16

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 27 (precomputed): !LTK_SIG( $V.1, ~ltk.2 ) ▶₀ #vr.3
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !PK_SIG( $V.1, pkV ) ▶₁ #vr.3
1: !KU( 'g'^(~xx*~yy) ) @ #vk.6
2: !KU( 'g'^(~ltk*~yy) ) @ #vk.7
3: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                  '1'>,                hkdfExtract('emptyStr', 'g'^(~xx*~yy)))) @ #vk.8
4: !KU( (      sign(<            <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)⊕      sign(<            <$V.1, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pkV>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V.1, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pkV>,                        $cAEAD0)           >,           ~ltk.2)     )) @ #vk.17
5: !KU( 'g'^~yy ) @ #vk.5
6: !KU( 'g'^~xx ) @ #vk.16

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 28 (precomputed): !PK_SIG( $V.1, pkV ) ▶₁ #vr.3
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vl, 0) ~~> (#vk, 0)
1: !LTK_SIG( $V.1, ~ltk.2 ) ▶₀ #vr.3
2: !PK_SIG( $V.1, pkV ) ▶₁ #vr.3
3: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', z))⊕      sign(<            <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                                   hkdfExtract('emptyStr', z)),                        <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)     )) @ #vk.5
4: splitEqs(0)
5: splitEqs(1)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: CommitR( tid.1, u, v, t ) ▶₀ #vr.3
1: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', z))⊕      sign(<            <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                                   hkdfExtract('emptyStr', z)),                        <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)     )) @ #vk.5
2: splitEqs(0)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 25 (precomputed):
    CommitR( tid.1, u, v, t ) ▶₀ #vr.3
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vl, 0) ~~> (#vk, 0)
1: StI1_STAT_SIG( $U.1, ~ltk.2, $V.1, ~xx.1, m1, ~tid.1 ) ▶₀ #vr.3
2: !PK_SIG( $V.1, pk(x) ) ▶₁ #vr.3
3: !PK_STAT( $U.1, pkU ) ▶₂ #vr.3
4: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', z))⊕      sign(<            <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                                   hkdfExtract('emptyStr', z)),                        <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)     )) @ #vk.5
5: splitEqs(0)
6: splitEqs(1)
7: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', z.2))     )) @ #vk.11
8: !KU( (      hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', z.2))⊕      sign(<<$V.1, h(<$cHash0.1, m1, gy.1>), pk(x)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2m'>,                                   hkdfExtract('emptyStr', z.2)),                        <$V.1, h(<$cHash0.1, m1, gy.1>), pk(x)>, $cAEAD0.1)           >,           x)     )) @ #vk.12

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: CommitI( tid.1, u, v, t ) ▶₀ #vr.3
1: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', z))⊕      sign(<            <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                                   hkdfExtract('emptyStr', z)),                        <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)     )) @ #vk.5
2: splitEqs(0)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 25 (precomputed):
    CommitI( tid.1, u, v, t ) ▶₀ #vr.3
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.4, 0) ~~> (#vk, 0)
1: StI1_STAT_SIG( $U.1, ~ltk.2, $V.1, ~xx.1, m1, ~tid.1 ) ▶₀ #vr.3
2: !PK_SIG( $V.1, pk(x) ) ▶₁ #vr.3
3: !PK_STAT( $U.1, pkU ) ▶₂ #vr.3
4: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', z))⊕      sign(<            <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                                   hkdfExtract('emptyStr', z)),                        <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)     )) @ #vk.5
5: splitEqs(0)
6: splitEqs(1)
7: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', z.2))     )) @ #vk.11
8: !KU( (      hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', z.2))⊕      sign(<<$V.1, h(<$cHash0.1, m1, gy.1>), pk(x)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2m'>,                                   hkdfExtract('emptyStr', z.2)),                        <$V.1, h(<$cHash0.1, m1, gy.1>), pk(x)>, $cAEAD0.1)           >,           x)     )) @ #vk.12

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.5, 0) ~~> (#vk, 0)
1: StI1_STAT_SIG( $U.1, ~ltk.2, $V.1, ~xx.1, m1, ~tid.1 ) ▶₀ #vr.3
2: !PK_SIG( $V.1, pk(x) ) ▶₁ #vr.3
3: !PK_STAT( $U.1, pkU ) ▶₂ #vr.3
4: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', z))⊕      sign(<            <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                                   hkdfExtract('emptyStr', z)),                        <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)     )) @ #vk.5
5: splitEqs(0)
6: splitEqs(1)
7: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', z.2))     )) @ #vk.11
8: !KU( (      hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', z.2))⊕      sign(<<$V.1, h(<$cHash0.1, m1, gy.1>), pk(x)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2m'>,                                   hkdfExtract('emptyStr', z.2)),                        <$V.1, h(<$cHash0.1, m1, gy.1>), pk(x)>, $cAEAD0.1)           >,           x)     )) @ #vk.12
9: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1, h(<$cHash0.1, m1, gy.1>),                                 <                                 ($V.1⊕                                  hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2e', '1'>,                                             hkdfExtract('emptyStr', z.2))                                 ),                                  (                                  hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2e', '2'>,                                             hkdfExtract('emptyStr', z.2))⊕                                  sign(<<$V.1, h(<$cHash0.1, m1, gy.1>), pk(x)>,                                         aeadEncrypt('emptyStr',                                                    hkdfExpand(<$cAEAD0.1,                                                                 h(<$cHash0.1, m1, gy.1>), 'K_2m'>,                                                               hkdfExtract('emptyStr', z.2)),                                                    <$V.1, h(<$cHash0.1, m1, gy.1>), pk(x)>,                                                    $cAEAD0.1)                                       >,                                       x)                                 )                                >,                                 'emptyStr'>),                              'K_3m'>,                            hkdfExtract(hkdfExtract('emptyStr', z.2), z.3)),                 <$U.1,                   h(<$cHash0.1, h(<$cHash0.1, m1, gy.1>),                      <                      ($V.1⊕                       hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2e', '1'>,                                  hkdfExtract('emptyStr', z.2))                      ),                       (                       hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2e', '2'>,                                  hkdfExtract('emptyStr', z.2))⊕                       sign(<<$V.1, h(<$cHash0.1, m1, gy.1>), pk(x)>,                              aeadEncrypt('emptyStr',                                         hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2m'>,                                                    hkdfExtract('emptyStr', z.2)),                                         <$V.1, h(<$cHash0.1, m1, gy.1>), pk(x)>, $cAEAD0.1)                            >,                            x)                      )                     >,                      'emptyStr'>),                   pkU>,                 $cAEAD0.1)) @ #vk.16

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.5, 0) ~~> (#vk, 0)
1: StI1_STAT_SIG( $U.1, ~ltk.2, $V.1, ~xx.1, m1, ~tid.1 ) ▶₀ #vr.3
2: !PK_SIG( $V.1, pk(x) ) ▶₁ #vr.3
3: !PK_STAT( $U.1, pkU ) ▶₂ #vr.3
4: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', z))⊕      sign(<            <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                                   hkdfExtract('emptyStr', z)),                        <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)     )) @ #vk.5
5: splitEqs(0)
6: splitEqs(1)
7: !KU( h(<$cHash0.1, h(<$cHash0.1, m1, gy.1>),         <         ($V.1⊕          hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2e', '1'>,                     hkdfExtract('emptyStr', z.2))         ),          (          hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2e', '2'>,                     hkdfExtract('emptyStr', z.2))⊕          sign(<<$V.1, h(<$cHash0.1, m1, gy.1>), pk(x)>,                 aeadEncrypt('emptyStr',                            hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2m'>,                                       hkdfExtract('emptyStr', z.2)),                            <$V.1, h(<$cHash0.1, m1, gy.1>), pk(x)>, $cAEAD0.1)               >,               x)         )        >,         'emptyStr'>)) @ #vk.14
8: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', z.2))     )) @ #vk.11
9: !KU( (      hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', z.2))⊕      sign(<<$V.1, h(<$cHash0.1, m1, gy.1>), pk(x)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2m'>,                                   hkdfExtract('emptyStr', z.2)),                        <$V.1, h(<$cHash0.1, m1, gy.1>), pk(x)>, $cAEAD0.1)           >,           x)     )) @ #vk.12
10: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1, h(<$cHash0.1, m1, gy.1>),                                 <                                 ($V.1⊕                                  hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2e', '1'>,                                             hkdfExtract('emptyStr', z.2))                                 ),                                  (                                  hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2e', '2'>,                                             hkdfExtract('emptyStr', z.2))⊕                                  sign(<<$V.1, h(<$cHash0.1, m1, gy.1>), pk(x)>,                                         aeadEncrypt('emptyStr',                                                    hkdfExpand(<$cAEAD0.1,                                                                 h(<$cHash0.1, m1, gy.1>), 'K_2m'>,                                                               hkdfExtract('emptyStr', z.2)),                                                    <$V.1, h(<$cHash0.1, m1, gy.1>), pk(x)>,                                                    $cAEAD0.1)                                       >,                                       x)                                 )                                >,                                 'emptyStr'>),                              'K_3m'>,                            hkdfExtract(hkdfExtract('emptyStr', z.2), z.3)),                 <$U.1,                   h(<$cHash0.1, h(<$cHash0.1, m1, gy.1>),                      <                      ($V.1⊕                       hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2e', '1'>,                                  hkdfExtract('emptyStr', z.2))                      ),                       (                       hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2e', '2'>,                                  hkdfExtract('emptyStr', z.2))⊕                       sign(<<$V.1, h(<$cHash0.1, m1, gy.1>), pk(x)>,                              aeadEncrypt('emptyStr',                                         hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2m'>,                                                    hkdfExtract('emptyStr', z.2)),                                         <$V.1, h(<$cHash0.1, m1, gy.1>), pk(x)>, $cAEAD0.1)                            >,                            x)                      )                     >,                      'emptyStr'>),                   pkU>,                 $cAEAD0.1)) @ #vk.17

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.4, 0) ~~> (#vk, 0)
1: !LTK_SIG( $V.1, ~ltk.2 ) ▶₀ #vr.3
2: !PK_SIG( $V.1, pkV ) ▶₁ #vr.3
3: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', z))⊕      sign(<            <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                                   hkdfExtract('emptyStr', z)),                        <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)     )) @ #vk.5
4: splitEqs(0)
5: splitEqs(1)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.5, 0) ~~> (#vk, 0)
1: !LTK_SIG( $V.1, ~ltk.2 ) ▶₀ #vr.3
2: !PK_SIG( $V.1, pkV ) ▶₁ #vr.3
3: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', z))⊕      sign(<            <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                                   hkdfExtract('emptyStr', z)),                        <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)     )) @ #vk.5
4: splitEqs(0)
5: splitEqs(1)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.5, 0) ~~> (#vk, 0)
1: !LTK_SIG( $V.1, ~ltk.2 ) ▶₀ #vr.3
2: !PK_SIG( $V.1, pkV ) ▶₁ #vr.3
3: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', z))⊕      sign(<            <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                                   hkdfExtract('emptyStr', z)),                        <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)     )) @ #vk.5
4: splitEqs(0)
5: splitEqs(1)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.6, 0) ~~> (#vk, 0)
1: !LTK_SIG( $V.1, ~ltk.2 ) ▶₀ #vr.3
2: !PK_SIG( $V.1, pkV ) ▶₁ #vr.3
3: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', z))⊕      sign(<            <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                                   hkdfExtract('emptyStr', z)),                        <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)     )) @ #vk.5
4: !KU( (z.3⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'STAT', 'SIG', $cSUITE0.1, gx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z.2))     )) @ #vk.15
5: splitEqs(0)
6: splitEqs(1)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.6, 0) ~~> (#vk, 0)
1: !LTK_SIG( $V.1, ~ltk.2 ) ▶₀ #vr.3
2: !PK_SIG( $V.1, pkV ) ▶₁ #vr.3
3: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', z))⊕      sign(<            <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                                   hkdfExtract('emptyStr', z)),                        <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)     )) @ #vk.5
4: splitEqs(0)
5: splitEqs(1)
6: !KU( ($V.1⊕z.3) ) @ #vk.15

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !LTK_SIG( $V, ~ltk.2 ) ▶₀ #vr.3
1: !PK_SIG( $V, pkV ) ▶₁ #vr.3
2: !KU( 'g'^(~xx*~yy) ) @ #vk.6
3: !KU( 'g'^(~ltk*~yy) ) @ #vk.7
4: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                   '2'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      sign(<            <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)     )) @ #vk.5
5: !KU( 'g'^~yy ) @ #vk.4
6: !KU( 'g'^~xx ) @ #vk.14

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 25 (precomputed): !LTK_SIG( $V, ~ltk.2 ) ▶₀ #vr.3
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.6, 0) ~~> (#vk, 0)
1: !LTK_SIG( $V.1, ~ltk.2 ) ▶₀ #vr.3
2: !PK_SIG( $V.1, pkV ) ▶₁ #vr.3
3: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', z))⊕      sign(<            <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                                   hkdfExtract('emptyStr', z)),                        <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)     )) @ #vk.5
4: splitEqs(0)
5: splitEqs(1)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !PK_SIG( $V, pkV ) ▶₁ #vr.3
1: !KU( 'g'^(~xx*~yy) ) @ #vk.6
2: !KU( 'g'^(~ltk*~yy) ) @ #vk.7
3: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                   '2'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      sign(<            <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)     )) @ #vk.5
4: !KU( 'g'^~yy ) @ #vk.4
5: !KU( 'g'^~xx ) @ #vk.14

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 26 (precomputed): !PK_SIG( $V, pkV ) ▶₁ #vr.3
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( 'g'^(~xx*~yy) ) @ #vk.6
1: !KU( 'g'^(~ltk*~yy) ) @ #vk.7
2: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                   '2'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      sign(<            <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)     )) @ #vk.5
3: !KU( 'g'^~yy ) @ #vk.4
4: !KU( 'g'^~xx ) @ #vk.14

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 39 (precomputed): !KU( 'g'^(~xx*~yy) ) @ #vk.6
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.17
1: !KU( ~yy ) @ #vk.18
2: !KU( 'g'^(~ltk*~yy) ) @ #vk.7
3: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                   '2'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      sign(<            <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)     )) @ #vk.6
4: !KU( 'g'^~yy ) @ #vk.5
5: !KU( 'g'^~xx ) @ #vk.14

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 47 (precomputed): !KU( ~xx ) @ #vk.17
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.15
1: !KU( 'g'^(~ltk*~yy) ) @ #vk.7
2: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                   '2'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      sign(<            <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)     )) @ #vk.6
3: !KU( 'g'^~yy ) @ #vk.5
4: !KU( 'g'^~xx ) @ #vk.14

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 52 (precomputed): !KU( ~xx ) @ #vk.15
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~yy ) @ #vk.15
1: !KU( 'g'^(~ltk*~yy) ) @ #vk.7
2: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                   '2'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      sign(<            <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)     )) @ #vk.6
3: !KU( 'g'^~yy ) @ #vk.5
4: !KU( 'g'^~xx ) @ #vk.14

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 45 (precomputed): !KU( ~yy ) @ #vk.15
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !LTK_SIG( $V, ~ltk.2 ) ▶₀ #vr.3
1: !PK_SIG( $V, pkV ) ▶₁ #vr.3
2: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', z))⊕      sign(<            <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                                   hkdfExtract('emptyStr', z)),                        <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)     )) @ #vk.5
3: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', z))⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'STAT', 'SIG', $cSUITE0.1, gx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z.2))     )) @ #vk.15
4: splitEqs(0)
5: splitEqs(1)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 25 (precomputed): !LTK_SIG( $V, ~ltk.2 ) ▶₀ #vr.3
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !PK_SIG( $V, pkV ) ▶₁ #vr.3
1: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', z))⊕      sign(<            <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                                   hkdfExtract('emptyStr', z)),                        <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)     )) @ #vk.5
2: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', z))⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'STAT', 'SIG', $cSUITE0.1, gx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z.2))     )) @ #vk.15
3: splitEqs(0)
4: splitEqs(1)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 26 (precomputed): !PK_SIG( $V, pkV ) ▶₁ #vr.3
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', z))⊕      sign(<            <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                                   hkdfExtract('emptyStr', z)),                        <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)     )) @ #vk.5
1: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', z))⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'STAT', 'SIG', $cSUITE0.1, gx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z.2))     )) @ #vk.15
2: splitEqs(0)
3: splitEqs(1)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 16 (directly):
    !KU( (
          hkdfExpand(<$cAEAD0, 
                      h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,
                     hkdfExtract('emptyStr', z))⊕
          sign(<
                <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 
                 pk(~ltk.1)>, 
                aeadEncrypt('emptyStr',
                            hkdfExpand(<$cAEAD0, 
                                        h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'
                                       >,
                                       hkdfExtract('emptyStr', z)),
                            <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 
                             pk(~ltk.1)>,
                            $cAEAD0)
               >,
               ~ltk.1)
         )
    ) @ #vk.5
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !LTK_SIG( $V.1, ~ltk.2 ) ▶₀ #vr.3
1: !PK_SIG( $V.1, pkV ) ▶₁ #vr.3
2: !KU( 'g'^(~xx*~yy) ) @ #vk.6
3: !KU( 'g'^(~ltk*~yy) ) @ #vk.7
4: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                   '2'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      sign(<            <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)     )) @ #vk.5
5: !KU( ($V⊕$V.1) ) @ #vk.15
6: !KU( 'g'^~yy ) @ #vk.4
7: !KU( 'g'^~xx ) @ #vk.14

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 25 (precomputed): !LTK_SIG( $V.1, ~ltk.2 ) ▶₀ #vr.3
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !PK_SIG( $V.1, pkV ) ▶₁ #vr.3
1: !KU( 'g'^(~xx*~yy) ) @ #vk.6
2: !KU( 'g'^(~ltk*~yy) ) @ #vk.7
3: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                   '2'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      sign(<            <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)     )) @ #vk.5
4: !KU( ($V⊕$V.1) ) @ #vk.15
5: !KU( 'g'^~yy ) @ #vk.4
6: !KU( 'g'^~xx ) @ #vk.14

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 26 (precomputed): !PK_SIG( $V.1, pkV ) ▶₁ #vr.3
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( 'g'^(~xx*~yy) ) @ #vk.6
1: !KU( 'g'^(~ltk*~yy) ) @ #vk.7
2: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                   '2'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      sign(<            <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)     )) @ #vk.5
3: !KU( ($V⊕$V.1) ) @ #vk.15
4: !KU( 'g'^~yy ) @ #vk.4
5: !KU( 'g'^~xx ) @ #vk.14

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 43 (precomputed): !KU( 'g'^(~xx*~yy) ) @ #vk.6
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.6, 0) ~~> (#vk, 0)
1: !LTK_SIG( $V.1, ~ltk.2 ) ▶₀ #vr.3
2: !PK_SIG( $V.1, pkV ) ▶₁ #vr.3
3: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', z))⊕      sign(<            <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                                   hkdfExtract('emptyStr', z)),                        <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)     )) @ #vk.5
4: !KU( (z.3⊕      sign(<            <$V.1, h(<$cHash0.1, <'STAT', 'SIG', $cSUITE0.1, gx>, 'g'^~yy>),              pkV>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'STAT', 'SIG', $cSUITE0.1, gx>, 'g'^~yy>), 'K_2m'                                   >,                                   hkdfExtract('emptyStr', z.2)),                        <$V.1, h(<$cHash0.1, <'STAT', 'SIG', $cSUITE0.1, gx>, 'g'^~yy>),                          pkV>,                        $cAEAD0.1)           >,           ~ltk.2)     )) @ #vk.15
5: splitEqs(0)
6: splitEqs(1)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.6, 0) ~~> (#vk, 0)
1: !LTK_SIG( $V.1, ~ltk.2 ) ▶₀ #vr.3
2: !PK_SIG( $V.1, pkV ) ▶₁ #vr.3
3: !KU( sign(<           <$V.1, h(<$cHash0.1, <'STAT', 'SIG', $cSUITE0.1, gx>, 'g'^~yy>),             pkV>,            aeadEncrypt('emptyStr',                       hkdfExpand(<$cAEAD0.1,                                    h(<$cHash0.1, <'STAT', 'SIG', $cSUITE0.1, gx>, 'g'^~yy>), 'K_2m'                                  >,                                  hkdfExtract('emptyStr', z.2)),                       <$V.1, h(<$cHash0.1, <'STAT', 'SIG', $cSUITE0.1, gx>, 'g'^~yy>),                         pkV>,                       $cAEAD0.1)          >,          ~ltk.2)) @ #vk.15
4: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', z))⊕      sign(<            <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                                   hkdfExtract('emptyStr', z)),                        <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)     )) @ #vk.5
5: splitEqs(0)
6: splitEqs(1)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.6, 0) ~~> (#vk, 0)
1: !LTK_SIG( $V.1, ~ltk.2 ) ▶₀ #vr.3
2: !PK_SIG( $V.1, pkV ) ▶₁ #vr.3
3: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', z))⊕      sign(<            <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                                   hkdfExtract('emptyStr', z)),                        <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)     )) @ #vk.5
4: !KU( (z.3⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'STAT', 'SIG', $cSUITE0.1, gx>, 'g'^~yy>), 'K_2e',                   '2'>,                 hkdfExtract('emptyStr', z.2))     )) @ #vk.15
5: splitEqs(0)
6: splitEqs(1)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.6, 0) ~~> (#vk, 0)
1: !LTK_SIG( $V.1, ~ltk.2 ) ▶₀ #vr.3
2: !PK_SIG( $V.1, pkV ) ▶₁ #vr.3
3: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', z))⊕      sign(<            <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                                   hkdfExtract('emptyStr', z)),                        <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)     )) @ #vk.5
4: !KU( hkdfExpand(<$cAEAD0.1,                  h(<$cHash0.1, <'STAT', 'SIG', $cSUITE0.1, gx>, 'g'^~yy>), 'K_2e',                  '2'>,                hkdfExtract('emptyStr', z.2))) @ #vk.15
5: splitEqs(0)
6: splitEqs(1)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', z))⊕      sign(<            <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                                   hkdfExtract('emptyStr', z)),                        <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)     )) @ #vk.5
1: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                hkdfExtract('emptyStr', z))) @ #vk.8
2: splitEqs(0)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 16 (directly):
    !KU( (
          hkdfExpand(<$cAEAD0, 
                      h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,
                     hkdfExtract('emptyStr', z))⊕
          sign(<
                <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 
                 pk(~ltk.1)>, 
                aeadEncrypt('emptyStr',
                            hkdfExpand(<$cAEAD0, 
                                        h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'
                                       >,
                                       hkdfExtract('emptyStr', z)),
                            <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 
                             pk(~ltk.1)>,
                            $cAEAD0)
               >,
               ~ltk.1)
         )
    ) @ #vk.5
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KD( ($V⊕      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', z))     )) ▶₀ #vk
1: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', z))⊕      sign(<            <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                                   hkdfExtract('emptyStr', z)),                        <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)     )) @ #vk.5
2: splitEqs(0)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( sign(<           <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>),             pk(~ltk.1)>,            aeadEncrypt('emptyStr',                       hkdfExpand(<$cAEAD0,                                    h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                                  hkdfExtract('emptyStr', z)),                       <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>),                         pk(~ltk.1)>,                       $cAEAD0)          >,          ~ltk.1)) @ #vk.10
1: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                hkdfExtract('emptyStr', z))) @ #vk.8
2: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                hkdfExtract('emptyStr', z))) @ #vk.11
3: splitEqs(0)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 24 (precomputed):
    !KU( sign(<
               <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 
                pk(~ltk.1)>, 
               aeadEncrypt('emptyStr',
                           hkdfExpand(<$cAEAD0, 
                                       h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'
                                      >,
                                      hkdfExtract('emptyStr', z)),
                           <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 
                            pk(~ltk.1)>,
                           $cAEAD0)
              >,
              ~ltk.1)
    ) @ #vk.10
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KD( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', z))⊕      sign(<            <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                                   hkdfExtract('emptyStr', z)),                        <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)     )) ▶₀ #vk.1
1: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                hkdfExtract('emptyStr', z))) @ #vk.8
2: splitEqs(0)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~ltk.1 ) @ #vk.14
1: !KU( h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>)) @ #vk.16
2: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                hkdfExtract('emptyStr', z))) @ #vk.9
3: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                hkdfExtract('emptyStr', z))) @ #vk.12
4: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0,                              h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                            hkdfExtract('emptyStr', z)),                 <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>),                   pk(~ltk.1)>,                 $cAEAD0)) @ #vk.18
5: splitEqs(0)
6: !KU( pk(~ltk.1) ) @ #vk.17

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 28 (precomputed): !KU( ~ltk.1 ) @ #vk.14
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( 'g'^(~xx*~yy) ) @ #vk.7
1: !KU( 'g'^(~ltk*~yy) ) @ #vk.8
2: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                  '1'>,                hkdfExtract('emptyStr', 'g'^(~xx*~yy)))) @ #vk.9
3: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                  '2'>,                hkdfExtract('emptyStr', 'g'^(~xx*~yy)))) @ #vk.11
4: !KU( 'g'^~xx ) @ #vk.18
5: !KU( 'g'^~yy ) @ #vk.6

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 38 (precomputed): !KU( 'g'^(~xx*~yy) ) @ #vk.7
  simplified formula:
      "((#vr.20 = #j) ∨ (#j < #vr.20))"
    to
      "⊥"
  solved goal nr. 37 (simplified): (#vr.20 = #j)  ∥ (#j < #vr.20)
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.21
1: !KU( ~yy ) @ #vk.22
2: !KU( 'g'^(~ltk*~yy) ) @ #vk.8
3: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                  '1'>,                hkdfExtract('emptyStr', 'g'^(~xx*~yy)))) @ #vk.9
4: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                  '2'>,                hkdfExtract('emptyStr', 'g'^(~xx*~yy)))) @ #vk.11
5: !KU( 'g'^~xx ) @ #vk.18
6: !KU( 'g'^~yy ) @ #vk.7

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.19
1: !KU( 'g'^(~ltk*~yy) ) @ #vk.8
2: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                  '1'>,                hkdfExtract('emptyStr', 'g'^(~xx*~yy)))) @ #vk.9
3: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                  '2'>,                hkdfExtract('emptyStr', 'g'^(~xx*~yy)))) @ #vk.11
4: !KU( 'g'^~xx ) @ #vk.18
5: !KU( 'g'^~yy ) @ #vk.7

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 43 (precomputed): !KU( ~xx ) @ #vk.21
  solved goal nr. 48 (precomputed): !KU( ~xx ) @ #vk.19
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~yy ) @ #vk.19
1: !KU( 'g'^(~ltk*~yy) ) @ #vk.8
2: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                  '1'>,                hkdfExtract('emptyStr', 'g'^(~xx*~yy)))) @ #vk.9
3: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                  '2'>,                hkdfExtract('emptyStr', 'g'^(~xx*~yy)))) @ #vk.11
4: !KU( 'g'^~xx ) @ #vk.18
5: !KU( 'g'^~yy ) @ #vk.7

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 41 (precomputed): !KU( ~yy ) @ #vk.19
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vl, 0) ~~> (#vk.1, 0)
1: !LTK_SIG( $V.1, ~ltk.2 ) ▶₀ #vr.3
2: !PK_SIG( $V.1, pkV ) ▶₁ #vr.3
3: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                hkdfExtract('emptyStr', z))) @ #vk.8
4: splitEqs(0)
5: splitEqs(1)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vl, 0) ~~> (#vk.1, 0)
1: StI1_STAT_SIG( $U.1, ~ltk.2, $V.1, ~xx.1, m1, ~tid.1 ) ▶₀ #vr.3
2: !PK_SIG( $V.1, pk(x) ) ▶₁ #vr.3
3: !PK_STAT( $U.1, pkU ) ▶₂ #vr.3
4: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                hkdfExtract('emptyStr', z))) @ #vk.8
5: splitEqs(0)
6: splitEqs(1)
7: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', z.2))     )) @ #vk.13
8: !KU( (      hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', z.2))⊕      sign(<<$V.1, h(<$cHash0.1, m1, gy.1>), pk(x)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2m'>,                                   hkdfExtract('emptyStr', z.2)),                        <$V.1, h(<$cHash0.1, m1, gy.1>), pk(x)>, $cAEAD0.1)           >,           x)     )) @ #vk.14

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: CommitI( tid.1, u, v, t ) ▶₀ #vr.3
1: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                hkdfExtract('emptyStr', z))) @ #vk.8
2: splitEqs(0)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 27 (precomputed):
    CommitI( tid.1, u, v, t ) ▶₀ #vr.3
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: CommitR( tid.1, u, v, t ) ▶₀ #vr.3
1: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                hkdfExtract('emptyStr', z))) @ #vk.8
2: splitEqs(0)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 27 (precomputed):
    CommitR( tid.1, u, v, t ) ▶₀ #vr.3
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.4, 0) ~~> (#vk.1, 0)
1: StI1_STAT_SIG( $U.1, ~ltk.2, $V.1, ~xx.1, m1, ~tid.1 ) ▶₀ #vr.3
2: !PK_SIG( $V.1, pk(x) ) ▶₁ #vr.3
3: !PK_STAT( $U.1, pkU ) ▶₂ #vr.3
4: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                hkdfExtract('emptyStr', z))) @ #vk.8
5: splitEqs(0)
6: splitEqs(1)
7: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', z.2))     )) @ #vk.13
8: !KU( (      hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', z.2))⊕      sign(<<$V.1, h(<$cHash0.1, m1, gy.1>), pk(x)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2m'>,                                   hkdfExtract('emptyStr', z.2)),                        <$V.1, h(<$cHash0.1, m1, gy.1>), pk(x)>, $cAEAD0.1)           >,           x)     )) @ #vk.14

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.5, 0) ~~> (#vk.1, 0)
1: StI1_STAT_SIG( $U.1, ~ltk.2, $V.1, ~xx.1, m1, ~tid.1 ) ▶₀ #vr.3
2: !PK_SIG( $V.1, pk(x) ) ▶₁ #vr.3
3: !PK_STAT( $U.1, pkU ) ▶₂ #vr.3
4: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                hkdfExtract('emptyStr', z))) @ #vk.8
5: splitEqs(0)
6: splitEqs(1)
7: !KU( h(<$cHash0.1, h(<$cHash0.1, m1, gy.1>),         <         ($V.1⊕          hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2e', '1'>,                     hkdfExtract('emptyStr', z.2))         ),          (          hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2e', '2'>,                     hkdfExtract('emptyStr', z.2))⊕          sign(<<$V.1, h(<$cHash0.1, m1, gy.1>), pk(x)>,                 aeadEncrypt('emptyStr',                            hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2m'>,                                       hkdfExtract('emptyStr', z.2)),                            <$V.1, h(<$cHash0.1, m1, gy.1>), pk(x)>, $cAEAD0.1)               >,               x)         )        >,         'emptyStr'>)) @ #vk.16
8: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', z.2))     )) @ #vk.13
9: !KU( (      hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', z.2))⊕      sign(<<$V.1, h(<$cHash0.1, m1, gy.1>), pk(x)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2m'>,                                   hkdfExtract('emptyStr', z.2)),                        <$V.1, h(<$cHash0.1, m1, gy.1>), pk(x)>, $cAEAD0.1)           >,           x)     )) @ #vk.14
10: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1, h(<$cHash0.1, m1, gy.1>),                                 <                                 ($V.1⊕                                  hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2e', '1'>,                                             hkdfExtract('emptyStr', z.2))                                 ),                                  (                                  hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2e', '2'>,                                             hkdfExtract('emptyStr', z.2))⊕                                  sign(<<$V.1, h(<$cHash0.1, m1, gy.1>), pk(x)>,                                         aeadEncrypt('emptyStr',                                                    hkdfExpand(<$cAEAD0.1,                                                                 h(<$cHash0.1, m1, gy.1>), 'K_2m'>,                                                               hkdfExtract('emptyStr', z.2)),                                                    <$V.1, h(<$cHash0.1, m1, gy.1>), pk(x)>,                                                    $cAEAD0.1)                                       >,                                       x)                                 )                                >,                                 'emptyStr'>),                              'K_3m'>,                            hkdfExtract(hkdfExtract('emptyStr', z.2), z.3)),                 <$U.1,                   h(<$cHash0.1, h(<$cHash0.1, m1, gy.1>),                      <                      ($V.1⊕                       hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2e', '1'>,                                  hkdfExtract('emptyStr', z.2))                      ),                       (                       hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2e', '2'>,                                  hkdfExtract('emptyStr', z.2))⊕                       sign(<<$V.1, h(<$cHash0.1, m1, gy.1>), pk(x)>,                              aeadEncrypt('emptyStr',                                         hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2m'>,                                                    hkdfExtract('emptyStr', z.2)),                                         <$V.1, h(<$cHash0.1, m1, gy.1>), pk(x)>, $cAEAD0.1)                            >,                            x)                      )                     >,                      'emptyStr'>),                   pkU>,                 $cAEAD0.1)) @ #vk.19

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.5, 0) ~~> (#vk.1, 0)
1: StI1_STAT_SIG( $U.1, ~ltk.2, $V.1, ~xx.1, m1, ~tid.1 ) ▶₀ #vr.3
2: !PK_SIG( $V.1, pk(x) ) ▶₁ #vr.3
3: !PK_STAT( $U.1, pkU ) ▶₂ #vr.3
4: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                hkdfExtract('emptyStr', z))) @ #vk.8
5: splitEqs(0)
6: splitEqs(1)
7: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', z.2))     )) @ #vk.13
8: !KU( (      hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', z.2))⊕      sign(<<$V.1, h(<$cHash0.1, m1, gy.1>), pk(x)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2m'>,                                   hkdfExtract('emptyStr', z.2)),                        <$V.1, h(<$cHash0.1, m1, gy.1>), pk(x)>, $cAEAD0.1)           >,           x)     )) @ #vk.14
9: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1, h(<$cHash0.1, m1, gy.1>),                                 <                                 ($V.1⊕                                  hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2e', '1'>,                                             hkdfExtract('emptyStr', z.2))                                 ),                                  (                                  hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2e', '2'>,                                             hkdfExtract('emptyStr', z.2))⊕                                  sign(<<$V.1, h(<$cHash0.1, m1, gy.1>), pk(x)>,                                         aeadEncrypt('emptyStr',                                                    hkdfExpand(<$cAEAD0.1,                                                                 h(<$cHash0.1, m1, gy.1>), 'K_2m'>,                                                               hkdfExtract('emptyStr', z.2)),                                                    <$V.1, h(<$cHash0.1, m1, gy.1>), pk(x)>,                                                    $cAEAD0.1)                                       >,                                       x)                                 )                                >,                                 'emptyStr'>),                              'K_3m'>,                            hkdfExtract(hkdfExtract('emptyStr', z.2), z.3)),                 <$U.1,                   h(<$cHash0.1, h(<$cHash0.1, m1, gy.1>),                      <                      ($V.1⊕                       hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2e', '1'>,                                  hkdfExtract('emptyStr', z.2))                      ),                       (                       hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2e', '2'>,                                  hkdfExtract('emptyStr', z.2))⊕                       sign(<<$V.1, h(<$cHash0.1, m1, gy.1>), pk(x)>,                              aeadEncrypt('emptyStr',                                         hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2m'>,                                                    hkdfExtract('emptyStr', z.2)),                                         <$V.1, h(<$cHash0.1, m1, gy.1>), pk(x)>, $cAEAD0.1)                            >,                            x)                      )                     >,                      'emptyStr'>),                   pkU>,                 $cAEAD0.1)) @ #vk.18

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.4, 0) ~~> (#vk.1, 0)
1: !LTK_SIG( $V.1, ~ltk.2 ) ▶₀ #vr.3
2: !PK_SIG( $V.1, pkV ) ▶₁ #vr.3
3: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                hkdfExtract('emptyStr', z))) @ #vk.8
4: splitEqs(0)
5: splitEqs(1)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.5, 0) ~~> (#vk.1, 0)
1: !LTK_SIG( $V.1, ~ltk.2 ) ▶₀ #vr.3
2: !PK_SIG( $V.1, pkV ) ▶₁ #vr.3
3: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                hkdfExtract('emptyStr', z))) @ #vk.8
4: splitEqs(0)
5: splitEqs(1)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.5, 0) ~~> (#vk.1, 0)
1: !LTK_SIG( $V.1, ~ltk.2 ) ▶₀ #vr.3
2: !PK_SIG( $V.1, pkV ) ▶₁ #vr.3
3: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                hkdfExtract('emptyStr', z))) @ #vk.8
4: splitEqs(0)
5: splitEqs(1)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.6, 0) ~~> (#vk.1, 0)
1: !LTK_SIG( $V.1, ~ltk.2 ) ▶₀ #vr.3
2: !PK_SIG( $V.1, pkV ) ▶₁ #vr.3
3: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                hkdfExtract('emptyStr', z))) @ #vk.8
4: !KU( (z.3⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'STAT', 'SIG', $cSUITE0.1, gx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z.2))     )) @ #vk.17
5: splitEqs(0)
6: splitEqs(1)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.6, 0) ~~> (#vk.1, 0)
1: !LTK_SIG( $V.1, ~ltk.2 ) ▶₀ #vr.3
2: !PK_SIG( $V.1, pkV ) ▶₁ #vr.3
3: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                hkdfExtract('emptyStr', z))) @ #vk.8
4: splitEqs(0)
5: splitEqs(1)
6: !KU( ($V.1⊕z.3) ) @ #vk.17

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.6, 0) ~~> (#vk.1, 0)
1: !LTK_SIG( $V.1, ~ltk.2 ) ▶₀ #vr.3
2: !PK_SIG( $V.1, pkV ) ▶₁ #vr.3
3: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                hkdfExtract('emptyStr', z))) @ #vk.8
4: splitEqs(0)
5: splitEqs(1)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.6, 0) ~~> (#vk.1, 0)
1: !LTK_SIG( $V.1, ~ltk.2 ) ▶₀ #vr.3
2: !PK_SIG( $V.1, pkV ) ▶₁ #vr.3
3: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                hkdfExtract('emptyStr', z))) @ #vk.8
4: !KU( (z.3⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'STAT', 'SIG', $cSUITE0.1, gx>, 'g'^~yy>), 'K_2e',                   '2'>,                 hkdfExtract('emptyStr', z.2))     )) @ #vk.17
5: splitEqs(0)
6: splitEqs(1)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.6, 0) ~~> (#vk.1, 0)
1: !LTK_SIG( $V.1, ~ltk.2 ) ▶₀ #vr.3
2: !PK_SIG( $V.1, pkV ) ▶₁ #vr.3
3: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                hkdfExtract('emptyStr', z))) @ #vk.8
4: !KU( (z.3⊕      sign(<            <$V.1, h(<$cHash0.1, <'STAT', 'SIG', $cSUITE0.1, gx>, 'g'^~yy>),              pkV>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'STAT', 'SIG', $cSUITE0.1, gx>, 'g'^~yy>), 'K_2m'                                   >,                                   hkdfExtract('emptyStr', z.2)),                        <$V.1, h(<$cHash0.1, <'STAT', 'SIG', $cSUITE0.1, gx>, 'g'^~yy>),                          pkV>,                        $cAEAD0.1)           >,           ~ltk.2)     )) @ #vk.17
5: splitEqs(0)
6: splitEqs(1)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.6, 0) ~~> (#vk.1, 0)
1: !LTK_SIG( $V.1, ~ltk.2 ) ▶₀ #vr.3
2: !PK_SIG( $V.1, pkV ) ▶₁ #vr.3
3: !KU( sign(<           <$V.1, h(<$cHash0.1, <'STAT', 'SIG', $cSUITE0.1, gx>, 'g'^~yy>),             pkV>,            aeadEncrypt('emptyStr',                       hkdfExpand(<$cAEAD0.1,                                    h(<$cHash0.1, <'STAT', 'SIG', $cSUITE0.1, gx>, 'g'^~yy>), 'K_2m'                                  >,                                  hkdfExtract('emptyStr', z.2)),                       <$V.1, h(<$cHash0.1, <'STAT', 'SIG', $cSUITE0.1, gx>, 'g'^~yy>),                         pkV>,                       $cAEAD0.1)          >,          ~ltk.2)) @ #vk.17
4: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                hkdfExtract('emptyStr', z))) @ #vk.8
5: splitEqs(0)
6: splitEqs(1)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !LTK_SIG( $V, ~ltk.1 ) ▶₀ #vr.3
1: !PK_SIG( $V, pk(~ltk.1) ) ▶₁ #vr.3
2: !KU( 'g'^(~xx*~yy) ) @ #vk.6
3: !KU( 'g'^(~ltk*~yy) ) @ #vk.7
4: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                  '1'>,                hkdfExtract('emptyStr', 'g'^(~xx*~yy)))) @ #vk.8
5: !KU( 'g'^~yy ) @ #vk.5
6: !KU( 'g'^~xx ) @ #vk.16

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 27 (precomputed): !LTK_SIG( $V, ~ltk.1 ) ▶₀ #vr.3
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.6, 0) ~~> (#vk.1, 0)
1: !LTK_SIG( $V.1, ~ltk.2 ) ▶₀ #vr.3
2: !PK_SIG( $V.1, pkV ) ▶₁ #vr.3
3: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                hkdfExtract('emptyStr', z))) @ #vk.8
4: !KU( hkdfExpand(<$cAEAD0.1,                  h(<$cHash0.1, <'STAT', 'SIG', $cSUITE0.1, gx>, 'g'^~yy>), 'K_2e',                  '2'>,                hkdfExtract('emptyStr', z.2))) @ #vk.17
5: splitEqs(0)
6: splitEqs(1)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !PK_SIG( $V, pk(~ltk.1) ) ▶₁ #vr.3
1: !KU( 'g'^(~xx*~yy) ) @ #vk.6
2: !KU( 'g'^(~ltk*~yy) ) @ #vk.7
3: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                  '1'>,                hkdfExtract('emptyStr', 'g'^(~xx*~yy)))) @ #vk.8
4: !KU( 'g'^~yy ) @ #vk.5
5: !KU( 'g'^~xx ) @ #vk.16

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 28 (precomputed):
    !PK_SIG( $V, pk(~ltk.1) ) ▶₁ #vr.3
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( 'g'^(~xx*~yy) ) @ #vk.6
1: !KU( 'g'^(~ltk*~yy) ) @ #vk.7
2: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                  '1'>,                hkdfExtract('emptyStr', 'g'^(~xx*~yy)))) @ #vk.8
3: !KU( 'g'^~yy ) @ #vk.5
4: !KU( 'g'^~xx ) @ #vk.16

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 41 (precomputed): !KU( 'g'^(~xx*~yy) ) @ #vk.6
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !LTK_SIG( $V.1, ~ltk.2 ) ▶₀ #vr.3
1: !PK_SIG( $V.1, pkV ) ▶₁ #vr.3
2: !KU( 'g'^(~xx*~yy) ) @ #vk.6
3: !KU( 'g'^(~ltk*~yy) ) @ #vk.7
4: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                  '1'>,                hkdfExtract('emptyStr', 'g'^(~xx*~yy)))) @ #vk.8
5: !KU( (      sign(<            <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)⊕      sign(<            <$V.1, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pkV>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V.1, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pkV>,                        $cAEAD0)           >,           ~ltk.2)     )) @ #vk.17
6: !KU( 'g'^~yy ) @ #vk.5
7: !KU( 'g'^~xx ) @ #vk.16

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 27 (precomputed): !LTK_SIG( $V.1, ~ltk.2 ) ▶₀ #vr.3
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !PK_SIG( $V.1, pkV ) ▶₁ #vr.3
1: !KU( 'g'^(~xx*~yy) ) @ #vk.6
2: !KU( 'g'^(~ltk*~yy) ) @ #vk.7
3: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                  '1'>,                hkdfExtract('emptyStr', 'g'^(~xx*~yy)))) @ #vk.8
4: !KU( (      sign(<            <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)⊕      sign(<            <$V.1, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pkV>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V.1, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pkV>,                        $cAEAD0)           >,           ~ltk.2)     )) @ #vk.17
5: !KU( 'g'^~yy ) @ #vk.5
6: !KU( 'g'^~xx ) @ #vk.16

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 28 (precomputed): !PK_SIG( $V.1, pkV ) ▶₁ #vr.3
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vl, 0) ~~> (#vk, 0)
1: !LTK_SIG( $V.1, ~ltk.2 ) ▶₀ #vr.3
2: !PK_SIG( $V.1, pkV ) ▶₁ #vr.3
3: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', z))⊕      sign(<            <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                                   hkdfExtract('emptyStr', z)),                        <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)     )) @ #vk.5
4: splitEqs(0)
5: splitEqs(1)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vl, 0) ~~> (#vk, 0)
1: StI1_STAT_SIG( $U.1, ~ltk.2, $V.1, ~xx.1, m1, ~tid.1 ) ▶₀ #vr.3
2: !PK_SIG( $V.1, pk(x) ) ▶₁ #vr.3
3: !PK_STAT( $U.1, pkU ) ▶₂ #vr.3
4: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', z))⊕      sign(<            <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                                   hkdfExtract('emptyStr', z)),                        <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)     )) @ #vk.5
5: splitEqs(0)
6: splitEqs(1)
7: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', z.2))     )) @ #vk.11
8: !KU( (      hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', z.2))⊕      sign(<<$V.1, h(<$cHash0.1, m1, gy.1>), pk(x)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2m'>,                                   hkdfExtract('emptyStr', z.2)),                        <$V.1, h(<$cHash0.1, m1, gy.1>), pk(x)>, $cAEAD0.1)           >,           x)     )) @ #vk.12

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: CommitI( tid.1, u, v, t ) ▶₀ #vr.3
1: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', z))⊕      sign(<            <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                                   hkdfExtract('emptyStr', z)),                        <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)     )) @ #vk.5
2: splitEqs(0)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 25 (precomputed):
    CommitI( tid.1, u, v, t ) ▶₀ #vr.3
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: CommitR( tid.1, u, v, t ) ▶₀ #vr.3
1: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', z))⊕      sign(<            <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                                   hkdfExtract('emptyStr', z)),                        <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)     )) @ #vk.5
2: splitEqs(0)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 25 (precomputed):
    CommitR( tid.1, u, v, t ) ▶₀ #vr.3
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.4, 0) ~~> (#vk, 0)
1: StI1_STAT_SIG( $U.1, ~ltk.2, $V.1, ~xx.1, m1, ~tid.1 ) ▶₀ #vr.3
2: !PK_SIG( $V.1, pk(x) ) ▶₁ #vr.3
3: !PK_STAT( $U.1, pkU ) ▶₂ #vr.3
4: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', z))⊕      sign(<            <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                                   hkdfExtract('emptyStr', z)),                        <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)     )) @ #vk.5
5: splitEqs(0)
6: splitEqs(1)
7: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', z.2))     )) @ #vk.11
8: !KU( (      hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', z.2))⊕      sign(<<$V.1, h(<$cHash0.1, m1, gy.1>), pk(x)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2m'>,                                   hkdfExtract('emptyStr', z.2)),                        <$V.1, h(<$cHash0.1, m1, gy.1>), pk(x)>, $cAEAD0.1)           >,           x)     )) @ #vk.12

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.5, 0) ~~> (#vk, 0)
1: StI1_STAT_SIG( $U.1, ~ltk.2, $V.1, ~xx.1, m1, ~tid.1 ) ▶₀ #vr.3
2: !PK_SIG( $V.1, pk(x) ) ▶₁ #vr.3
3: !PK_STAT( $U.1, pkU ) ▶₂ #vr.3
4: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', z))⊕      sign(<            <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                                   hkdfExtract('emptyStr', z)),                        <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)     )) @ #vk.5
5: splitEqs(0)
6: splitEqs(1)
7: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', z.2))     )) @ #vk.11
8: !KU( (      hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', z.2))⊕      sign(<<$V.1, h(<$cHash0.1, m1, gy.1>), pk(x)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2m'>,                                   hkdfExtract('emptyStr', z.2)),                        <$V.1, h(<$cHash0.1, m1, gy.1>), pk(x)>, $cAEAD0.1)           >,           x)     )) @ #vk.12
9: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1, h(<$cHash0.1, m1, gy.1>),                                 <                                 ($V.1⊕                                  hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2e', '1'>,                                             hkdfExtract('emptyStr', z.2))                                 ),                                  (                                  hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2e', '2'>,                                             hkdfExtract('emptyStr', z.2))⊕                                  sign(<<$V.1, h(<$cHash0.1, m1, gy.1>), pk(x)>,                                         aeadEncrypt('emptyStr',                                                    hkdfExpand(<$cAEAD0.1,                                                                 h(<$cHash0.1, m1, gy.1>), 'K_2m'>,                                                               hkdfExtract('emptyStr', z.2)),                                                    <$V.1, h(<$cHash0.1, m1, gy.1>), pk(x)>,                                                    $cAEAD0.1)                                       >,                                       x)                                 )                                >,                                 'emptyStr'>),                              'K_3m'>,                            hkdfExtract(hkdfExtract('emptyStr', z.2), z.3)),                 <$U.1,                   h(<$cHash0.1, h(<$cHash0.1, m1, gy.1>),                      <                      ($V.1⊕                       hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2e', '1'>,                                  hkdfExtract('emptyStr', z.2))                      ),                       (                       hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2e', '2'>,                                  hkdfExtract('emptyStr', z.2))⊕                       sign(<<$V.1, h(<$cHash0.1, m1, gy.1>), pk(x)>,                              aeadEncrypt('emptyStr',                                         hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2m'>,                                                    hkdfExtract('emptyStr', z.2)),                                         <$V.1, h(<$cHash0.1, m1, gy.1>), pk(x)>, $cAEAD0.1)                            >,                            x)                      )                     >,                      'emptyStr'>),                   pkU>,                 $cAEAD0.1)) @ #vk.16

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.5, 0) ~~> (#vk, 0)
1: StI1_STAT_SIG( $U.1, ~ltk.2, $V.1, ~xx.1, m1, ~tid.1 ) ▶₀ #vr.3
2: !PK_SIG( $V.1, pk(x) ) ▶₁ #vr.3
3: !PK_STAT( $U.1, pkU ) ▶₂ #vr.3
4: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', z))⊕      sign(<            <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                                   hkdfExtract('emptyStr', z)),                        <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)     )) @ #vk.5
5: splitEqs(0)
6: splitEqs(1)
7: !KU( h(<$cHash0.1, h(<$cHash0.1, m1, gy.1>),         <         ($V.1⊕          hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2e', '1'>,                     hkdfExtract('emptyStr', z.2))         ),          (          hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2e', '2'>,                     hkdfExtract('emptyStr', z.2))⊕          sign(<<$V.1, h(<$cHash0.1, m1, gy.1>), pk(x)>,                 aeadEncrypt('emptyStr',                            hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2m'>,                                       hkdfExtract('emptyStr', z.2)),                            <$V.1, h(<$cHash0.1, m1, gy.1>), pk(x)>, $cAEAD0.1)               >,               x)         )        >,         'emptyStr'>)) @ #vk.14
8: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', z.2))     )) @ #vk.11
9: !KU( (      hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', z.2))⊕      sign(<<$V.1, h(<$cHash0.1, m1, gy.1>), pk(x)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2m'>,                                   hkdfExtract('emptyStr', z.2)),                        <$V.1, h(<$cHash0.1, m1, gy.1>), pk(x)>, $cAEAD0.1)           >,           x)     )) @ #vk.12
10: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1, h(<$cHash0.1, m1, gy.1>),                                 <                                 ($V.1⊕                                  hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2e', '1'>,                                             hkdfExtract('emptyStr', z.2))                                 ),                                  (                                  hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2e', '2'>,                                             hkdfExtract('emptyStr', z.2))⊕                                  sign(<<$V.1, h(<$cHash0.1, m1, gy.1>), pk(x)>,                                         aeadEncrypt('emptyStr',                                                    hkdfExpand(<$cAEAD0.1,                                                                 h(<$cHash0.1, m1, gy.1>), 'K_2m'>,                                                               hkdfExtract('emptyStr', z.2)),                                                    <$V.1, h(<$cHash0.1, m1, gy.1>), pk(x)>,                                                    $cAEAD0.1)                                       >,                                       x)                                 )                                >,                                 'emptyStr'>),                              'K_3m'>,                            hkdfExtract(hkdfExtract('emptyStr', z.2), z.3)),                 <$U.1,                   h(<$cHash0.1, h(<$cHash0.1, m1, gy.1>),                      <                      ($V.1⊕                       hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2e', '1'>,                                  hkdfExtract('emptyStr', z.2))                      ),                       (                       hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2e', '2'>,                                  hkdfExtract('emptyStr', z.2))⊕                       sign(<<$V.1, h(<$cHash0.1, m1, gy.1>), pk(x)>,                              aeadEncrypt('emptyStr',                                         hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2m'>,                                                    hkdfExtract('emptyStr', z.2)),                                         <$V.1, h(<$cHash0.1, m1, gy.1>), pk(x)>, $cAEAD0.1)                            >,                            x)                      )                     >,                      'emptyStr'>),                   pkU>,                 $cAEAD0.1)) @ #vk.17

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.4, 0) ~~> (#vk, 0)
1: !LTK_SIG( $V.1, ~ltk.2 ) ▶₀ #vr.3
2: !PK_SIG( $V.1, pkV ) ▶₁ #vr.3
3: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', z))⊕      sign(<            <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                                   hkdfExtract('emptyStr', z)),                        <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)     )) @ #vk.5
4: splitEqs(0)
5: splitEqs(1)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.5, 0) ~~> (#vk, 0)
1: !LTK_SIG( $V.1, ~ltk.2 ) ▶₀ #vr.3
2: !PK_SIG( $V.1, pkV ) ▶₁ #vr.3
3: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', z))⊕      sign(<            <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                                   hkdfExtract('emptyStr', z)),                        <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)     )) @ #vk.5
4: splitEqs(0)
5: splitEqs(1)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.5, 0) ~~> (#vk, 0)
1: !LTK_SIG( $V.1, ~ltk.2 ) ▶₀ #vr.3
2: !PK_SIG( $V.1, pkV ) ▶₁ #vr.3
3: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', z))⊕      sign(<            <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                                   hkdfExtract('emptyStr', z)),                        <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)     )) @ #vk.5
4: splitEqs(0)
5: splitEqs(1)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.6, 0) ~~> (#vk, 0)
1: !LTK_SIG( $V.1, ~ltk.2 ) ▶₀ #vr.3
2: !PK_SIG( $V.1, pkV ) ▶₁ #vr.3
3: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', z))⊕      sign(<            <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                                   hkdfExtract('emptyStr', z)),                        <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)     )) @ #vk.5
4: !KU( (z.3⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'STAT', 'SIG', $cSUITE0.1, gx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z.2))     )) @ #vk.15
5: splitEqs(0)
6: splitEqs(1)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.6, 0) ~~> (#vk, 0)
1: !LTK_SIG( $V.1, ~ltk.2 ) ▶₀ #vr.3
2: !PK_SIG( $V.1, pkV ) ▶₁ #vr.3
3: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', z))⊕      sign(<            <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                                   hkdfExtract('emptyStr', z)),                        <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)     )) @ #vk.5
4: splitEqs(0)
5: splitEqs(1)
6: !KU( ($V.1⊕z.3) ) @ #vk.15

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !LTK_SIG( $V, ~ltk.2 ) ▶₀ #vr.3
1: !PK_SIG( $V, pkV ) ▶₁ #vr.3
2: !KU( 'g'^(~xx*~yy) ) @ #vk.6
3: !KU( 'g'^(~ltk*~yy) ) @ #vk.7
4: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                   '2'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      sign(<            <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)     )) @ #vk.5
5: !KU( 'g'^~yy ) @ #vk.4
6: !KU( 'g'^~xx ) @ #vk.14

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 25 (precomputed): !LTK_SIG( $V, ~ltk.2 ) ▶₀ #vr.3
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.6, 0) ~~> (#vk, 0)
1: !LTK_SIG( $V.1, ~ltk.2 ) ▶₀ #vr.3
2: !PK_SIG( $V.1, pkV ) ▶₁ #vr.3
3: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', z))⊕      sign(<            <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                                   hkdfExtract('emptyStr', z)),                        <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)     )) @ #vk.5
4: splitEqs(0)
5: splitEqs(1)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !PK_SIG( $V, pkV ) ▶₁ #vr.3
1: !KU( 'g'^(~xx*~yy) ) @ #vk.6
2: !KU( 'g'^(~ltk*~yy) ) @ #vk.7
3: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                   '2'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      sign(<            <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)     )) @ #vk.5
4: !KU( 'g'^~yy ) @ #vk.4
5: !KU( 'g'^~xx ) @ #vk.14

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 26 (precomputed): !PK_SIG( $V, pkV ) ▶₁ #vr.3
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( 'g'^(~xx*~yy) ) @ #vk.6
1: !KU( 'g'^(~ltk*~yy) ) @ #vk.7
2: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                   '2'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      sign(<            <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)     )) @ #vk.5
3: !KU( 'g'^~yy ) @ #vk.4
4: !KU( 'g'^~xx ) @ #vk.14

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 39 (precomputed): !KU( 'g'^(~xx*~yy) ) @ #vk.6
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.17
1: !KU( ~yy ) @ #vk.18
2: !KU( 'g'^(~ltk*~yy) ) @ #vk.7
3: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                   '2'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      sign(<            <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)     )) @ #vk.6
4: !KU( 'g'^~yy ) @ #vk.5
5: !KU( 'g'^~xx ) @ #vk.14

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 47 (precomputed): !KU( ~xx ) @ #vk.17
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.15
1: !KU( 'g'^(~ltk*~yy) ) @ #vk.7
2: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                   '2'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      sign(<            <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)     )) @ #vk.6
3: !KU( 'g'^~yy ) @ #vk.5
4: !KU( 'g'^~xx ) @ #vk.14

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~yy ) @ #vk.15
1: !KU( 'g'^(~ltk*~yy) ) @ #vk.7
2: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                   '2'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      sign(<            <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)     )) @ #vk.6
3: !KU( 'g'^~yy ) @ #vk.5
4: !KU( 'g'^~xx ) @ #vk.14

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 52 (precomputed): !KU( ~xx ) @ #vk.15
  solved goal nr. 45 (precomputed): !KU( ~yy ) @ #vk.15
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !LTK_SIG( $V, ~ltk.2 ) ▶₀ #vr.3
1: !PK_SIG( $V, pkV ) ▶₁ #vr.3
2: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', z))⊕      sign(<            <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                                   hkdfExtract('emptyStr', z)),                        <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)     )) @ #vk.5
3: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', z))⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'STAT', 'SIG', $cSUITE0.1, gx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z.2))     )) @ #vk.15
4: splitEqs(0)
5: splitEqs(1)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 25 (precomputed): !LTK_SIG( $V, ~ltk.2 ) ▶₀ #vr.3
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !PK_SIG( $V, pkV ) ▶₁ #vr.3
1: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', z))⊕      sign(<            <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                                   hkdfExtract('emptyStr', z)),                        <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)     )) @ #vk.5
2: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', z))⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'STAT', 'SIG', $cSUITE0.1, gx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z.2))     )) @ #vk.15
3: splitEqs(0)
4: splitEqs(1)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 26 (precomputed): !PK_SIG( $V, pkV ) ▶₁ #vr.3
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', z))⊕      sign(<            <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                                   hkdfExtract('emptyStr', z)),                        <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)     )) @ #vk.5
1: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', z))⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'STAT', 'SIG', $cSUITE0.1, gx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z.2))     )) @ #vk.15
2: splitEqs(0)
3: splitEqs(1)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 16 (directly):
    !KU( (
          hkdfExpand(<$cAEAD0, 
                      h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,
                     hkdfExtract('emptyStr', z))⊕
          sign(<
                <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 
                 pk(~ltk.1)>, 
                aeadEncrypt('emptyStr',
                            hkdfExpand(<$cAEAD0, 
                                        h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'
                                       >,
                                       hkdfExtract('emptyStr', z)),
                            <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 
                             pk(~ltk.1)>,
                            $cAEAD0)
               >,
               ~ltk.1)
         )
    ) @ #vk.5
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !LTK_SIG( $V.1, ~ltk.2 ) ▶₀ #vr.3
1: !PK_SIG( $V.1, pkV ) ▶₁ #vr.3
2: !KU( 'g'^(~xx*~yy) ) @ #vk.6
3: !KU( 'g'^(~ltk*~yy) ) @ #vk.7
4: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                   '2'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      sign(<            <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)     )) @ #vk.5
5: !KU( ($V⊕$V.1) ) @ #vk.15
6: !KU( 'g'^~yy ) @ #vk.4
7: !KU( 'g'^~xx ) @ #vk.14

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 25 (precomputed): !LTK_SIG( $V.1, ~ltk.2 ) ▶₀ #vr.3
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !PK_SIG( $V.1, pkV ) ▶₁ #vr.3
1: !KU( 'g'^(~xx*~yy) ) @ #vk.6
2: !KU( 'g'^(~ltk*~yy) ) @ #vk.7
3: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                   '2'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      sign(<            <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)     )) @ #vk.5
4: !KU( ($V⊕$V.1) ) @ #vk.15
5: !KU( 'g'^~yy ) @ #vk.4
6: !KU( 'g'^~xx ) @ #vk.14

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 26 (precomputed): !PK_SIG( $V.1, pkV ) ▶₁ #vr.3
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( 'g'^(~xx*~yy) ) @ #vk.6
1: !KU( 'g'^(~ltk*~yy) ) @ #vk.7
2: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                   '2'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      sign(<            <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)     )) @ #vk.5
3: !KU( ($V⊕$V.1) ) @ #vk.15
4: !KU( 'g'^~yy ) @ #vk.4
5: !KU( 'g'^~xx ) @ #vk.14

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 43 (precomputed): !KU( 'g'^(~xx*~yy) ) @ #vk.6
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.6, 0) ~~> (#vk, 0)
1: !LTK_SIG( $V.1, ~ltk.2 ) ▶₀ #vr.3
2: !PK_SIG( $V.1, pkV ) ▶₁ #vr.3
3: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', z))⊕      sign(<            <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                                   hkdfExtract('emptyStr', z)),                        <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)     )) @ #vk.5
4: !KU( (z.3⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'STAT', 'SIG', $cSUITE0.1, gx>, 'g'^~yy>), 'K_2e',                   '2'>,                 hkdfExtract('emptyStr', z.2))     )) @ #vk.15
5: splitEqs(0)
6: splitEqs(1)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.6, 0) ~~> (#vk, 0)
1: !LTK_SIG( $V.1, ~ltk.2 ) ▶₀ #vr.3
2: !PK_SIG( $V.1, pkV ) ▶₁ #vr.3
3: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', z))⊕      sign(<            <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                                   hkdfExtract('emptyStr', z)),                        <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)     )) @ #vk.5
4: !KU( (z.3⊕      sign(<            <$V.1, h(<$cHash0.1, <'STAT', 'SIG', $cSUITE0.1, gx>, 'g'^~yy>),              pkV>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'STAT', 'SIG', $cSUITE0.1, gx>, 'g'^~yy>), 'K_2m'                                   >,                                   hkdfExtract('emptyStr', z.2)),                        <$V.1, h(<$cHash0.1, <'STAT', 'SIG', $cSUITE0.1, gx>, 'g'^~yy>),                          pkV>,                        $cAEAD0.1)           >,           ~ltk.2)     )) @ #vk.15
5: splitEqs(0)
6: splitEqs(1)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.6, 0) ~~> (#vk, 0)
1: !LTK_SIG( $V.1, ~ltk.2 ) ▶₀ #vr.3
2: !PK_SIG( $V.1, pkV ) ▶₁ #vr.3
3: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', z))⊕      sign(<            <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                                   hkdfExtract('emptyStr', z)),                        <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)     )) @ #vk.5
4: !KU( hkdfExpand(<$cAEAD0.1,                  h(<$cHash0.1, <'STAT', 'SIG', $cSUITE0.1, gx>, 'g'^~yy>), 'K_2e',                  '2'>,                hkdfExtract('emptyStr', z.2))) @ #vk.15
5: splitEqs(0)
6: splitEqs(1)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.6, 0) ~~> (#vk, 0)
1: !LTK_SIG( $V.1, ~ltk.2 ) ▶₀ #vr.3
2: !PK_SIG( $V.1, pkV ) ▶₁ #vr.3
3: !KU( sign(<           <$V.1, h(<$cHash0.1, <'STAT', 'SIG', $cSUITE0.1, gx>, 'g'^~yy>),             pkV>,            aeadEncrypt('emptyStr',                       hkdfExpand(<$cAEAD0.1,                                    h(<$cHash0.1, <'STAT', 'SIG', $cSUITE0.1, gx>, 'g'^~yy>), 'K_2m'                                  >,                                  hkdfExtract('emptyStr', z.2)),                       <$V.1, h(<$cHash0.1, <'STAT', 'SIG', $cSUITE0.1, gx>, 'g'^~yy>),                         pkV>,                       $cAEAD0.1)          >,          ~ltk.2)) @ #vk.15
4: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', z))⊕      sign(<            <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                                   hkdfExtract('emptyStr', z)),                        <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)     )) @ #vk.5
5: splitEqs(0)
6: splitEqs(1)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~ltk ) @ #vk.15
1: !KU( ~yy ) @ #vk.16
2: !KU( aeadEncrypt(<$U,                   aeadEncrypt('emptyStr',                              hkdfExpand(<$cAEAD0.1,                                           h(<$cHash0.1,                                              h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                              <                                              ($V⊕                                               hkdfExpand(<$cAEAD0,                                                            h(<$cHash0,                                                               <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy                                                             >),                                                            'K_2e', '1'>,                                                          hkdfExtract('emptyStr', gxy))                                              ),                                               (                                               hkdfExpand(<$cAEAD0,                                                            h(<$cHash0,                                                               <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy                                                             >),                                                            'K_2e', '2'>,                                                          hkdfExtract('emptyStr', gxy))⊕                                               sign(<                                                     <$V,                                                       h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>,                                                          'g'^~yy>),                                                       pk(~ltk.1)>,                                                      aeadEncrypt('emptyStr',                                                                 hkdfExpand(<$cAEAD0,                                                                              h(<$cHash0,                                                                                 <'STAT', 'SIG',                                                                                  $cSUITE0, gx>,                                                                                 'g'^~yy>),                                                                              'K_2m'>,                                                                            hkdfExtract('emptyStr',                                                                                        gxy)),                                                                 <$V,                                                                   h(<$cHash0,                                                                      <'STAT', 'SIG', $cSUITE0, gx>,                                                                      'g'^~yy>),                                                                   pk(~ltk.1)>,                                                                 $cAEAD0)                                                    >,                                                    ~ltk.1)                                              )                                             >,                                              'emptyStr'>),                                           'K_3m'>,                                         hkdfExtract(hkdfExtract('emptyStr', gxy), 'g'^(~ltk*~yy))),                              <$U,                                h(<$cHash0.1,                                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                   <                                   ($V⊕                                    hkdfExpand(<$cAEAD0,                                                 h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy                                                  >),                                                 'K_2e', '1'>,                                               hkdfExtract('emptyStr', gxy))                                   ),                                    (                                    hkdfExpand(<$cAEAD0,                                                 h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy                                                  >),                                                 'K_2e', '2'>,                                               hkdfExtract('emptyStr', gxy))⊕                                    sign(<                                          <$V,                                            h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                            pk(~ltk.1)>,                                           aeadEncrypt('emptyStr',                                                      hkdfExpand(<$cAEAD0,                                                                   h(<$cHash0,                                                                      <'STAT', 'SIG', $cSUITE0, gx>,                                                                      'g'^~yy>),                                                                   'K_2m'>,                                                                 hkdfExtract('emptyStr', gxy)),                                                      <$V,                                                        h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>,                                                           'g'^~yy>),                                                        pk(~ltk.1)>,                                                      $cAEAD0)                                         >,                                         ~ltk.1)                                   )                                  >,                                   'emptyStr'>),                                'g'^~ltk>,                              $cAEAD0.1)                 >,                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1,                                 h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                 <                                 ($V⊕                                  hkdfExpand(<$cAEAD0,                                               h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                               'K_2e', '1'>,                                             hkdfExtract('emptyStr', gxy))                                 ),                                  (                                  hkdfExpand(<$cAEAD0,                                               h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                               'K_2e', '2'>,                                             hkdfExtract('emptyStr', gxy))⊕                                  sign(<                                        <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                          pk(~ltk.1)>,                                         aeadEncrypt('emptyStr',                                                    hkdfExpand(<$cAEAD0,                                                                 h(<$cHash0,                                                                    <'STAT', 'SIG', $cSUITE0, gx>,                                                                    'g'^~yy>),                                                                 'K_2m'>,                                                               hkdfExtract('emptyStr', gxy)),                                                    <$V,                                                      h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>,                                                         'g'^~yy>),                                                      pk(~ltk.1)>,                                                    $cAEAD0)                                       >,                                       ~ltk.1)                                 )                                >,                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract('emptyStr', gxy)),                 extAad3Outer, $cAEAD0.1)) @ #vk.4
3: splitEqs(1)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 32 (precomputed): !KU( ~ltk ) @ #vk.15
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~yy ) @ #vk.13
1: !KU( aeadEncrypt(<$U,                   aeadEncrypt('emptyStr',                              hkdfExpand(<$cAEAD0.1,                                           h(<$cHash0.1,                                              h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                              <                                              ($V⊕                                               hkdfExpand(<$cAEAD0,                                                            h(<$cHash0,                                                               <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy                                                             >),                                                            'K_2e', '1'>,                                                          hkdfExtract('emptyStr', gxy))                                              ),                                               (                                               hkdfExpand(<$cAEAD0,                                                            h(<$cHash0,                                                               <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy                                                             >),                                                            'K_2e', '2'>,                                                          hkdfExtract('emptyStr', gxy))⊕                                               sign(<                                                     <$V,                                                       h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>,                                                          'g'^~yy>),                                                       pk(~ltk.1)>,                                                      aeadEncrypt('emptyStr',                                                                 hkdfExpand(<$cAEAD0,                                                                              h(<$cHash0,                                                                                 <'STAT', 'SIG',                                                                                  $cSUITE0, gx>,                                                                                 'g'^~yy>),                                                                              'K_2m'>,                                                                            hkdfExtract('emptyStr',                                                                                        gxy)),                                                                 <$V,                                                                   h(<$cHash0,                                                                      <'STAT', 'SIG', $cSUITE0, gx>,                                                                      'g'^~yy>),                                                                   pk(~ltk.1)>,                                                                 $cAEAD0)                                                    >,                                                    ~ltk.1)                                              )                                             >,                                              'emptyStr'>),                                           'K_3m'>,                                         hkdfExtract(hkdfExtract('emptyStr', gxy), 'g'^(~ltk*~yy))),                              <$U,                                h(<$cHash0.1,                                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                   <                                   ($V⊕                                    hkdfExpand(<$cAEAD0,                                                 h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy                                                  >),                                                 'K_2e', '1'>,                                               hkdfExtract('emptyStr', gxy))                                   ),                                    (                                    hkdfExpand(<$cAEAD0,                                                 h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy                                                  >),                                                 'K_2e', '2'>,                                               hkdfExtract('emptyStr', gxy))⊕                                    sign(<                                          <$V,                                            h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                            pk(~ltk.1)>,                                           aeadEncrypt('emptyStr',                                                      hkdfExpand(<$cAEAD0,                                                                   h(<$cHash0,                                                                      <'STAT', 'SIG', $cSUITE0, gx>,                                                                      'g'^~yy>),                                                                   'K_2m'>,                                                                 hkdfExtract('emptyStr', gxy)),                                                      <$V,                                                        h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>,                                                           'g'^~yy>),                                                        pk(~ltk.1)>,                                                      $cAEAD0)                                         >,                                         ~ltk.1)                                   )                                  >,                                   'emptyStr'>),                                'g'^~ltk>,                              $cAEAD0.1)                 >,                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1,                                 h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                 <                                 ($V⊕                                  hkdfExpand(<$cAEAD0,                                               h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                               'K_2e', '1'>,                                             hkdfExtract('emptyStr', gxy))                                 ),                                  (                                  hkdfExpand(<$cAEAD0,                                               h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                               'K_2e', '2'>,                                             hkdfExtract('emptyStr', gxy))⊕                                  sign(<                                        <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                          pk(~ltk.1)>,                                         aeadEncrypt('emptyStr',                                                    hkdfExpand(<$cAEAD0,                                                                 h(<$cHash0,                                                                    <'STAT', 'SIG', $cSUITE0, gx>,                                                                    'g'^~yy>),                                                                 'K_2m'>,                                                               hkdfExtract('emptyStr', gxy)),                                                    <$V,                                                      h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>,                                                         'g'^~yy>),                                                      pk(~ltk.1)>,                                                    $cAEAD0)                                       >,                                       ~ltk.1)                                 )                                >,                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract('emptyStr', gxy)),                 extAad3Outer, $cAEAD0.1)) @ #vk.4
2: splitEqs(1)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 30 (precomputed): !KU( ~yy ) @ #vk.13
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~ltk ) @ #vk.13
1: !KU( aeadEncrypt(<$U,                   aeadEncrypt('emptyStr',                              hkdfExpand(<$cAEAD0.1,                                           h(<$cHash0.1,                                              h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                              <                                              ($V⊕                                               hkdfExpand(<$cAEAD0,                                                            h(<$cHash0,                                                               <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy                                                             >),                                                            'K_2e', '1'>,                                                          hkdfExtract('emptyStr', gxy))                                              ),                                               (                                               hkdfExpand(<$cAEAD0,                                                            h(<$cHash0,                                                               <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy                                                             >),                                                            'K_2e', '2'>,                                                          hkdfExtract('emptyStr', gxy))⊕                                               sign(<                                                     <$V,                                                       h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>,                                                          'g'^~yy>),                                                       pk(~ltk.1)>,                                                      aeadEncrypt('emptyStr',                                                                 hkdfExpand(<$cAEAD0,                                                                              h(<$cHash0,                                                                                 <'STAT', 'SIG',                                                                                  $cSUITE0, gx>,                                                                                 'g'^~yy>),                                                                              'K_2m'>,                                                                            hkdfExtract('emptyStr',                                                                                        gxy)),                                                                 <$V,                                                                   h(<$cHash0,                                                                      <'STAT', 'SIG', $cSUITE0, gx>,                                                                      'g'^~yy>),                                                                   pk(~ltk.1)>,                                                                 $cAEAD0)                                                    >,                                                    ~ltk.1)                                              )                                             >,                                              'emptyStr'>),                                           'K_3m'>,                                         hkdfExtract(hkdfExtract('emptyStr', gxy), 'g'^(~ltk*~yy))),                              <$U,                                h(<$cHash0.1,                                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                   <                                   ($V⊕                                    hkdfExpand(<$cAEAD0,                                                 h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy                                                  >),                                                 'K_2e', '1'>,                                               hkdfExtract('emptyStr', gxy))                                   ),                                    (                                    hkdfExpand(<$cAEAD0,                                                 h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy                                                  >),                                                 'K_2e', '2'>,                                               hkdfExtract('emptyStr', gxy))⊕                                    sign(<                                          <$V,                                            h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                            pk(~ltk.1)>,                                           aeadEncrypt('emptyStr',                                                      hkdfExpand(<$cAEAD0,                                                                   h(<$cHash0,                                                                      <'STAT', 'SIG', $cSUITE0, gx>,                                                                      'g'^~yy>),                                                                   'K_2m'>,                                                                 hkdfExtract('emptyStr', gxy)),                                                      <$V,                                                        h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>,                                                           'g'^~yy>),                                                        pk(~ltk.1)>,                                                      $cAEAD0)                                         >,                                         ~ltk.1)                                   )                                  >,                                   'emptyStr'>),                                'g'^~ltk>,                              $cAEAD0.1)                 >,                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1,                                 h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                 <                                 ($V⊕                                  hkdfExpand(<$cAEAD0,                                               h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                               'K_2e', '1'>,                                             hkdfExtract('emptyStr', gxy))                                 ),                                  (                                  hkdfExpand(<$cAEAD0,                                               h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                               'K_2e', '2'>,                                             hkdfExtract('emptyStr', gxy))⊕                                  sign(<                                        <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                          pk(~ltk.1)>,                                         aeadEncrypt('emptyStr',                                                    hkdfExpand(<$cAEAD0,                                                                 h(<$cHash0,                                                                    <'STAT', 'SIG', $cSUITE0, gx>,                                                                    'g'^~yy>),                                                                 'K_2m'>,                                                               hkdfExtract('emptyStr', gxy)),                                                    <$V,                                                      h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>,                                                         'g'^~yy>),                                                      pk(~ltk.1)>,                                                    $cAEAD0)                                       >,                                       ~ltk.1)                                 )                                >,                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract('emptyStr', gxy)),                 extAad3Outer, $cAEAD0.1)) @ #vk.4
2: splitEqs(1)
3: splitEqs(2)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 37 (precomputed): !KU( ~ltk ) @ #vk.13
  simplified formula:
      "((#vr.18 = #j) ∨ (#j < #vr.18))"
    to
      "⊥"
  solved goal nr. 36 (simplified): (#vr.18 = #j)  ∥ (#j < #vr.18)
  simplified formula:
      "((#vr.15 = #j) ∨ (#j < #vr.15))"
    to
      "⊥"
  solved goal nr. 45 (simplified): (#vr.15 = #j)  ∥ (#j < #vr.15)
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~yy ) @ #vk.13
1: !KU( aeadEncrypt(<$U,                   aeadEncrypt('emptyStr',                              hkdfExpand(<$cAEAD0.1,                                           h(<$cHash0.1,                                              h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                              <                                              ($V⊕                                               hkdfExpand(<$cAEAD0,                                                            h(<$cHash0,                                                               <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy                                                             >),                                                            'K_2e', '1'>,                                                          hkdfExtract('emptyStr', gxy))                                              ),                                               (                                               hkdfExpand(<$cAEAD0,                                                            h(<$cHash0,                                                               <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy                                                             >),                                                            'K_2e', '2'>,                                                          hkdfExtract('emptyStr', gxy))⊕                                               sign(<                                                     <$V,                                                       h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>,                                                          'g'^~yy>),                                                       pk(~ltk.1)>,                                                      aeadEncrypt('emptyStr',                                                                 hkdfExpand(<$cAEAD0,                                                                              h(<$cHash0,                                                                                 <'STAT', 'SIG',                                                                                  $cSUITE0, gx>,                                                                                 'g'^~yy>),                                                                              'K_2m'>,                                                                            hkdfExtract('emptyStr',                                                                                        gxy)),                                                                 <$V,                                                                   h(<$cHash0,                                                                      <'STAT', 'SIG', $cSUITE0, gx>,                                                                      'g'^~yy>),                                                                   pk(~ltk.1)>,                                                                 $cAEAD0)                                                    >,                                                    ~ltk.1)                                              )                                             >,                                              'emptyStr'>),                                           'K_3m'>,                                         hkdfExtract(hkdfExtract('emptyStr', gxy), 'g'^(~ltk*~yy))),                              <$U,                                h(<$cHash0.1,                                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                   <                                   ($V⊕                                    hkdfExpand(<$cAEAD0,                                                 h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy                                                  >),                                                 'K_2e', '1'>,                                               hkdfExtract('emptyStr', gxy))                                   ),                                    (                                    hkdfExpand(<$cAEAD0,                                                 h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy                                                  >),                                                 'K_2e', '2'>,                                               hkdfExtract('emptyStr', gxy))⊕                                    sign(<                                          <$V,                                            h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                            pk(~ltk.1)>,                                           aeadEncrypt('emptyStr',                                                      hkdfExpand(<$cAEAD0,                                                                   h(<$cHash0,                                                                      <'STAT', 'SIG', $cSUITE0, gx>,                                                                      'g'^~yy>),                                                                   'K_2m'>,                                                                 hkdfExtract('emptyStr', gxy)),                                                      <$V,                                                        h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>,                                                           'g'^~yy>),                                                        pk(~ltk.1)>,                                                      $cAEAD0)                                         >,                                         ~ltk.1)                                   )                                  >,                                   'emptyStr'>),                                'g'^~ltk>,                              $cAEAD0.1)                 >,                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1,                                 h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                 <                                 ($V⊕                                  hkdfExpand(<$cAEAD0,                                               h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                               'K_2e', '1'>,                                             hkdfExtract('emptyStr', gxy))                                 ),                                  (                                  hkdfExpand(<$cAEAD0,                                               h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                               'K_2e', '2'>,                                             hkdfExtract('emptyStr', gxy))⊕                                  sign(<                                        <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                          pk(~ltk.1)>,                                         aeadEncrypt('emptyStr',                                                    hkdfExpand(<$cAEAD0,                                                                 h(<$cHash0,                                                                    <'STAT', 'SIG', $cSUITE0, gx>,                                                                    'g'^~yy>),                                                                 'K_2m'>,                                                               hkdfExtract('emptyStr', gxy)),                                                    <$V,                                                      h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>,                                                         'g'^~yy>),                                                      pk(~ltk.1)>,                                                    $cAEAD0)                                       >,                                       ~ltk.1)                                 )                                >,                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract('emptyStr', gxy)),                 extAad3Outer, $cAEAD0.1)) @ #vk.4
2: splitEqs(1)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 30 (precomputed): !KU( ~yy ) @ #vk.13
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~ltk ) @ #vk.13
1: !KU( aeadEncrypt(<$U,                   aeadEncrypt('emptyStr',                              hkdfExpand(<$cAEAD0.1,                                           h(<$cHash0.1,                                              h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                              <                                              ($V⊕                                               hkdfExpand(<$cAEAD0,                                                            h(<$cHash0,                                                               <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy                                                             >),                                                            'K_2e', '1'>,                                                          hkdfExtract('emptyStr', gxy))                                              ),                                               (                                               hkdfExpand(<$cAEAD0,                                                            h(<$cHash0,                                                               <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy                                                             >),                                                            'K_2e', '2'>,                                                          hkdfExtract('emptyStr', gxy))⊕                                               sign(<                                                     <$V,                                                       h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>,                                                          'g'^~yy>),                                                       pk(~ltk.1)>,                                                      aeadEncrypt('emptyStr',                                                                 hkdfExpand(<$cAEAD0,                                                                              h(<$cHash0,                                                                                 <'STAT', 'SIG',                                                                                  $cSUITE0, gx>,                                                                                 'g'^~yy>),                                                                              'K_2m'>,                                                                            hkdfExtract('emptyStr',                                                                                        gxy)),                                                                 <$V,                                                                   h(<$cHash0,                                                                      <'STAT', 'SIG', $cSUITE0, gx>,                                                                      'g'^~yy>),                                                                   pk(~ltk.1)>,                                                                 $cAEAD0)                                                    >,                                                    ~ltk.1)                                              )                                             >,                                              'emptyStr'>),                                           'K_3m'>,                                         hkdfExtract(hkdfExtract('emptyStr', gxy), 'g'^(~ltk*~yy))),                              <$U,                                h(<$cHash0.1,                                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                   <                                   ($V⊕                                    hkdfExpand(<$cAEAD0,                                                 h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy                                                  >),                                                 'K_2e', '1'>,                                               hkdfExtract('emptyStr', gxy))                                   ),                                    (                                    hkdfExpand(<$cAEAD0,                                                 h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy                                                  >),                                                 'K_2e', '2'>,                                               hkdfExtract('emptyStr', gxy))⊕                                    sign(<                                          <$V,                                            h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                            pk(~ltk.1)>,                                           aeadEncrypt('emptyStr',                                                      hkdfExpand(<$cAEAD0,                                                                   h(<$cHash0,                                                                      <'STAT', 'SIG', $cSUITE0, gx>,                                                                      'g'^~yy>),                                                                   'K_2m'>,                                                                 hkdfExtract('emptyStr', gxy)),                                                      <$V,                                                        h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>,                                                           'g'^~yy>),                                                        pk(~ltk.1)>,                                                      $cAEAD0)                                         >,                                         ~ltk.1)                                   )                                  >,                                   'emptyStr'>),                                'g'^~ltk>,                              $cAEAD0.1)                 >,                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1,                                 h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                 <                                 ($V⊕                                  hkdfExpand(<$cAEAD0,                                               h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                               'K_2e', '1'>,                                             hkdfExtract('emptyStr', gxy))                                 ),                                  (                                  hkdfExpand(<$cAEAD0,                                               h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                               'K_2e', '2'>,                                             hkdfExtract('emptyStr', gxy))⊕                                  sign(<                                        <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                          pk(~ltk.1)>,                                         aeadEncrypt('emptyStr',                                                    hkdfExpand(<$cAEAD0,                                                                 h(<$cHash0,                                                                    <'STAT', 'SIG', $cSUITE0, gx>,                                                                    'g'^~yy>),                                                                 'K_2m'>,                                                               hkdfExtract('emptyStr', gxy)),                                                    <$V,                                                      h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>,                                                         'g'^~yy>),                                                      pk(~ltk.1)>,                                                    $cAEAD0)                                       >,                                       ~ltk.1)                                 )                                >,                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract('emptyStr', gxy)),                 extAad3Outer, $cAEAD0.1)) @ #vk.4
2: splitEqs(1)
3: splitEqs(2)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 37 (precomputed): !KU( ~ltk ) @ #vk.13
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~ltk ) @ #vk.15
1: !KU( ~yy ) @ #vk.16
2: !KU( aeadEncrypt(<$U,                   aeadEncrypt('emptyStr',                              hkdfExpand(<$cAEAD0.1,                                           h(<$cHash0.1,                                              h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                              <                                              ($V⊕                                               hkdfExpand(<$cAEAD0,                                                            h(<$cHash0,                                                               <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy                                                             >),                                                            'K_2e', '1'>,                                                          hkdfExtract('emptyStr', gxy))                                              ),                                               (                                               hkdfExpand(<$cAEAD0,                                                            h(<$cHash0,                                                               <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy                                                             >),                                                            'K_2e', '2'>,                                                          hkdfExtract('emptyStr', gxy))⊕                                               sign(<                                                     <$V,                                                       h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>,                                                          'g'^~yy>),                                                       pk(~ltk.1)>,                                                      aeadEncrypt('emptyStr',                                                                 hkdfExpand(<$cAEAD0,                                                                              h(<$cHash0,                                                                                 <'STAT', 'SIG',                                                                                  $cSUITE0, gx>,                                                                                 'g'^~yy>),                                                                              'K_2m'>,                                                                            hkdfExtract('emptyStr',                                                                                        gxy)),                                                                 <$V,                                                                   h(<$cHash0,                                                                      <'STAT', 'SIG', $cSUITE0, gx>,                                                                      'g'^~yy>),                                                                   pk(~ltk.1)>,                                                                 $cAEAD0)                                                    >,                                                    ~ltk.1)                                              )                                             >,                                              'emptyStr'>),                                           'K_3m'>,                                         hkdfExtract(hkdfExtract('emptyStr', gxy), 'g'^(~ltk*~yy))),                              <$U,                                h(<$cHash0.1,                                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                   <                                   ($V⊕                                    hkdfExpand(<$cAEAD0,                                                 h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy                                                  >),                                                 'K_2e', '1'>,                                               hkdfExtract('emptyStr', gxy))                                   ),                                    (                                    hkdfExpand(<$cAEAD0,                                                 h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy                                                  >),                                                 'K_2e', '2'>,                                               hkdfExtract('emptyStr', gxy))⊕                                    sign(<                                          <$V,                                            h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                            pk(~ltk.1)>,                                           aeadEncrypt('emptyStr',                                                      hkdfExpand(<$cAEAD0,                                                                   h(<$cHash0,                                                                      <'STAT', 'SIG', $cSUITE0, gx>,                                                                      'g'^~yy>),                                                                   'K_2m'>,                                                                 hkdfExtract('emptyStr', gxy)),                                                      <$V,                                                        h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>,                                                           'g'^~yy>),                                                        pk(~ltk.1)>,                                                      $cAEAD0)                                         >,                                         ~ltk.1)                                   )                                  >,                                   'emptyStr'>),                                'g'^~ltk>,                              $cAEAD0.1)                 >,                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1,                                 h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                 <                                 ($V⊕                                  hkdfExpand(<$cAEAD0,                                               h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                               'K_2e', '1'>,                                             hkdfExtract('emptyStr', gxy))                                 ),                                  (                                  hkdfExpand(<$cAEAD0,                                               h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                               'K_2e', '2'>,                                             hkdfExtract('emptyStr', gxy))⊕                                  sign(<                                        <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                          pk(~ltk.1)>,                                         aeadEncrypt('emptyStr',                                                    hkdfExpand(<$cAEAD0,                                                                 h(<$cHash0,                                                                    <'STAT', 'SIG', $cSUITE0, gx>,                                                                    'g'^~yy>),                                                                 'K_2m'>,                                                               hkdfExtract('emptyStr', gxy)),                                                    <$V,                                                      h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>,                                                         'g'^~yy>),                                                      pk(~ltk.1)>,                                                    $cAEAD0)                                       >,                                       ~ltk.1)                                 )                                >,                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract('emptyStr', gxy)),                 extAad3Outer, $cAEAD0.1)) @ #vk.4
3: splitEqs(1)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 32 (precomputed): !KU( ~ltk ) @ #vk.15
  simplified formula:
      "((#vr.18 = #j) ∨ (#j < #vr.18))"
    to
      "#j < #vr.18"
  solved goal nr. 36 (simplified): (#vr.18 = #j)  ∥ (#j < #vr.18)
  simplified formula:
      "((#vr.15 = #j) ∨ (#j < #vr.15))"
    to
      "#j < #vr.15"
  solved goal nr. 45 (simplified): (#vr.15 = #j)  ∥ (#j < #vr.15)
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( aeadEncrypt(<$U,                   aeadEncrypt('emptyStr',                              hkdfExpand(<$cAEAD0.1,                                           h(<$cHash0.1,                                              h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                              <                                              ($V⊕                                               hkdfExpand(<$cAEAD0,                                                            h(<$cHash0,                                                               <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy                                                             >),                                                            'K_2e', '1'>,                                                          hkdfExtract('emptyStr', gxy))                                              ),                                               (                                               hkdfExpand(<$cAEAD0,                                                            h(<$cHash0,                                                               <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy                                                             >),                                                            'K_2e', '2'>,                                                          hkdfExtract('emptyStr', gxy))⊕                                               sign(<                                                     <$V,                                                       h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>,                                                          'g'^~yy>),                                                       pk(~ltk.1)>,                                                      aeadEncrypt('emptyStr',                                                                 hkdfExpand(<$cAEAD0,                                                                              h(<$cHash0,                                                                                 <'STAT', 'SIG',                                                                                  $cSUITE0, gx>,                                                                                 'g'^~yy>),                                                                              'K_2m'>,                                                                            hkdfExtract('emptyStr',                                                                                        gxy)),                                                                 <$V,                                                                   h(<$cHash0,                                                                      <'STAT', 'SIG', $cSUITE0, gx>,                                                                      'g'^~yy>),                                                                   pk(~ltk.1)>,                                                                 $cAEAD0)                                                    >,                                                    ~ltk.1)                                              )                                             >,                                              'emptyStr'>),                                           'K_3m'>,                                         hkdfExtract(hkdfExtract('emptyStr', gxy), 'g'^(~ltk*~yy))),                              <$U,                                h(<$cHash0.1,                                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                   <                                   ($V⊕                                    hkdfExpand(<$cAEAD0,                                                 h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy                                                  >),                                                 'K_2e', '1'>,                                               hkdfExtract('emptyStr', gxy))                                   ),                                    (                                    hkdfExpand(<$cAEAD0,                                                 h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy                                                  >),                                                 'K_2e', '2'>,                                               hkdfExtract('emptyStr', gxy))⊕                                    sign(<                                          <$V,                                            h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                            pk(~ltk.1)>,                                           aeadEncrypt('emptyStr',                                                      hkdfExpand(<$cAEAD0,                                                                   h(<$cHash0,                                                                      <'STAT', 'SIG', $cSUITE0, gx>,                                                                      'g'^~yy>),                                                                   'K_2m'>,                                                                 hkdfExtract('emptyStr', gxy)),                                                      <$V,                                                        h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>,                                                           'g'^~yy>),                                                        pk(~ltk.1)>,                                                      $cAEAD0)                                         >,                                         ~ltk.1)                                   )                                  >,                                   'emptyStr'>),                                'g'^~ltk>,                              $cAEAD0.1)                 >,                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1,                                 h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                 <                                 ($V⊕                                  hkdfExpand(<$cAEAD0,                                               h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                               'K_2e', '1'>,                                             hkdfExtract('emptyStr', gxy))                                 ),                                  (                                  hkdfExpand(<$cAEAD0,                                               h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                               'K_2e', '2'>,                                             hkdfExtract('emptyStr', gxy))⊕                                  sign(<                                        <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                          pk(~ltk.1)>,                                         aeadEncrypt('emptyStr',                                                    hkdfExpand(<$cAEAD0,                                                                 h(<$cHash0,                                                                    <'STAT', 'SIG', $cSUITE0, gx>,                                                                    'g'^~yy>),                                                                 'K_2m'>,                                                               hkdfExtract('emptyStr', gxy)),                                                    <$V,                                                      h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>,                                                         'g'^~yy>),                                                      pk(~ltk.1)>,                                                    $cAEAD0)                                       >,                                       ~ltk.1)                                 )                                >,                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract('emptyStr', gxy)),                 extAad3Outer, $cAEAD0.1)) @ #vk.5
1: splitEqs(1)
2: splitEqs(2)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 10 (precomputed):
    !KU( aeadEncrypt(<$U, 
                      aeadEncrypt('emptyStr',
                                  hkdfExpand(<$cAEAD0.1, 
                                              h(<$cHash0.1, 
                                                 h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy
                                                   >), 
                                                 <
                                                  ($V⊕
                                                   hkdfExpand(<$cAEAD0, 
                                                               h(<$cHash0, 
                                                                  <'STAT', 'SIG', $cSUITE0, gx>, 
                                                                  'g'^~yy>), 
                                                               'K_2e', '1'>,
                                                              hkdfExtract('emptyStr', gxy))
                                                  ), 
                                                  (
                                                   hkdfExpand(<$cAEAD0, 
                                                               h(<$cHash0, 
                                                                  <'STAT', 'SIG', $cSUITE0, gx>, 
                                                                  'g'^~yy>), 
                                                               'K_2e', '2'>,
                                                              hkdfExtract('emptyStr', gxy))⊕
                                                   sign(<
                                                         <$V, 
                                                          h(<$cHash0, 
                                                             <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy
                                                            >), 
                                                          pk(~ltk.1)>, 
                                                         aeadEncrypt('emptyStr',
                                                                     hkdfExpand(<$cAEAD0, 
                                                                                 h(<$cHash0, 
                                                                                    <'STAT', 'SIG', 
                                                                                     $cSUITE0, gx>, 
                                                                                    'g'^~yy>), 
                                                                                 'K_2m'>,
                                                                                hkdfExtract('emptyStr',
                                                                                            gxy)),
                                                                     <$V, 
                                                                      h(<$cHash0, 
                                                                         <'STAT', 'SIG', $cSUITE0, 
                                                                          gx>, 
                                                                         'g'^~yy>), 
                                                                      pk(~ltk.1)>,
                                                                     $cAEAD0)
                                                        >,
                                                        ~ltk.1)
                                                  )
                                                 >, 
                                                 'emptyStr'>), 
                                              'K_3m'>,
                                             hkdfExtract(hkdfExtract('emptyStr', gxy),
                                                         'g'^(~ltk*~yy))),
                                  <$U, 
                                   h(<$cHash0.1, 
                                      h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 
                                      <
                                       ($V⊕
                                        hkdfExpand(<$cAEAD0, 
                                                    h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 
                                                       'g'^~yy>), 
                                                    'K_2e', '1'>,
                                                   hkdfExtract('emptyStr', gxy))
                                       ), 
                                       (
                                        hkdfExpand(<$cAEAD0, 
                                                    h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 
                                                       'g'^~yy>), 
                                                    'K_2e', '2'>,
                                                   hkdfExtract('emptyStr', gxy))⊕
                                        sign(<
                                              <$V, 
                                               h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy
                                                 >), 
                                               pk(~ltk.1)>, 
                                              aeadEncrypt('emptyStr',
                                                          hkdfExpand(<$cAEAD0, 
                                                                      h(<$cHash0, 
                                                                         <'STAT', 'SIG', $cSUITE0, 
                                                                          gx>, 
                                                                         'g'^~yy>), 
                                                                      'K_2m'>,
                                                                     hkdfExtract('emptyStr', gxy)),
                                                          <$V, 
                                                           h(<$cHash0, 
                                                              <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy
                                                             >), 
                                                           pk(~ltk.1)>,
                                                          $cAEAD0)
                                             >,
                                             ~ltk.1)
                                       )
                                      >, 
                                      'emptyStr'>), 
                                   'g'^~ltk>,
                                  $cAEAD0.1)
                     >,
                     hkdfExpand(<$cAEAD0.1, 
                                 h(<$cHash0.1, 
                                    h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 
                                    <
                                     ($V⊕
                                      hkdfExpand(<$cAEAD0, 
                                                  h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy
                                                    >), 
                                                  'K_2e', '1'>,
                                                 hkdfExtract('emptyStr', gxy))
                                     ), 
                                     (
                                      hkdfExpand(<$cAEAD0, 
                                                  h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy
                                                    >), 
                                                  'K_2e', '2'>,
                                                 hkdfExtract('emptyStr', gxy))⊕
                                      sign(<
                                            <$V, 
                                             h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 
                                             pk(~ltk.1)>, 
                                            aeadEncrypt('emptyStr',
                                                        hkdfExpand(<$cAEAD0, 
                                                                    h(<$cHash0, 
                                                                       <'STAT', 'SIG', $cSUITE0, gx
                                                                       >, 
                                                                       'g'^~yy>), 
                                                                    'K_2m'>,
                                                                   hkdfExtract('emptyStr', gxy)),
                                                        <$V, 
                                                         h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 
                                                            'g'^~yy>), 
                                                         pk(~ltk.1)>,
                                                        $cAEAD0)
                                           >,
                                           ~ltk.1)
                                     )
                                    >, 
                                    'emptyStr'>), 
                                 'K_3ae'>,
                                hkdfExtract('emptyStr', gxy)),
                     extAad3Outer, $cAEAD0.1)
    ) @ #vk.5
  simplified formula:
      "((last(#vr.20)) ∨
        (last(#i)) ∨
        (∃ #l. (LTKRev( $U ) @ #l) ∧ (¬(last(#l))) ∧ (#l < #vr.20)) ∨
        (∃ #l. (LTKRev( $V ) @ #l) ∧ (¬(last(#l))) ∧ (#l < #vr.20)) ∨
        (∃ #l.
          (SKRev( <'g'^(~yy*~xx.15), 'g'^(~ltk*~yy)> ) @ #l) ∧ ¬(last(#l))))"
    to
      "⊤"
  solved goal nr. 58 (simplified):
     (last(#vr.20))  ∥ (last(#i))  ∥
     (∃ #l. (LTKRev( $U ) @ #l) ∧ (¬(last(#l))) ∧ (#l < #vr.20))  ∥
     (∃ #l. (LTKRev( $V ) @ #l) ∧ (¬(last(#l))) ∧ (#l < #vr.20))  ∥
     (∃ #l.
       (SKRev( <'g'^(~yy*~xx.15), 'g'^(~ltk*~yy)> ) @ #l) ∧ ¬(last(#l)))
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( hkdfExpand(<$cAEAD0.1,                  h(<$cHash0.1,                     h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                     <                     ($V⊕                      hkdfExpand(<$cAEAD0,                                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 'K_2e', '1'                                 >,                                 hkdfExtract('emptyStr', gxy))                     ),                      (                      hkdfExpand(<$cAEAD0,                                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 'K_2e', '2'                                 >,                                 hkdfExtract('emptyStr', gxy))⊕                      sign(<                            <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                              pk(~ltk.1)>,                             aeadEncrypt('emptyStr',                                        hkdfExpand(<$cAEAD0,                                                     h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>,                                                        'g'^~yy>),                                                     'K_2m'>,                                                   hkdfExtract('emptyStr', gxy)),                                        <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                          pk(~ltk.1)>,                                        $cAEAD0)                           >,                           ~ltk.1)                     )                    >,                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract('emptyStr', gxy))) @ #vk.15
1: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1,                                 h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                 <                                 ($V⊕                                  hkdfExpand(<$cAEAD0,                                               h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                               'K_2e', '1'>,                                             hkdfExtract('emptyStr', gxy))                                 ),                                  (                                  hkdfExpand(<$cAEAD0,                                               h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                               'K_2e', '2'>,                                             hkdfExtract('emptyStr', gxy))⊕                                  sign(<                                        <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                          pk(~ltk.1)>,                                         aeadEncrypt('emptyStr',                                                    hkdfExpand(<$cAEAD0,                                                                 h(<$cHash0,                                                                    <'STAT', 'SIG', $cSUITE0, gx>,                                                                    'g'^~yy>),                                                                 'K_2m'>,                                                               hkdfExtract('emptyStr', gxy)),                                                    <$V,                                                      h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>,                                                         'g'^~yy>),                                                      pk(~ltk.1)>,                                                    $cAEAD0)                                       >,                                       ~ltk.1)                                 )                                >,                                 'emptyStr'>),                              'K_3m'>,                            hkdfExtract(hkdfExtract('emptyStr', gxy), 'g'^(~ltk*~yy))),                 <$U,                   h(<$cHash0.1,                      h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                      <                      ($V⊕                       hkdfExpand(<$cAEAD0,                                    h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 'K_2e', '1'                                  >,                                  hkdfExtract('emptyStr', gxy))                      ),                       (                       hkdfExpand(<$cAEAD0,                                    h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 'K_2e', '2'                                  >,                                  hkdfExtract('emptyStr', gxy))⊕                       sign(<                             <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                               pk(~ltk.1)>,                              aeadEncrypt('emptyStr',                                         hkdfExpand(<$cAEAD0,                                                      h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>,                                                         'g'^~yy>),                                                      'K_2m'>,                                                    hkdfExtract('emptyStr', gxy)),                                         <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                           pk(~ltk.1)>,                                         $cAEAD0)                            >,                            ~ltk.1)                      )                     >,                      'emptyStr'>),                   'g'^~ltk>,                 $cAEAD0.1)) @ #vk.19
2: splitEqs(1)
3: splitEqs(2)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 48 (precomputed):
    !KU( hkdfExpand(<$cAEAD0.1, 
                     h(<$cHash0.1, 
                        h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 
                        <
                         ($V⊕
                          hkdfExpand(<$cAEAD0, 
                                      h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 'K_2e', 
                                      '1'>,
                                     hkdfExtract('emptyStr', gxy))
                         ), 
                         (
                          hkdfExpand(<$cAEAD0, 
                                      h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 'K_2e', 
                                      '2'>,
                                     hkdfExtract('emptyStr', gxy))⊕
                          sign(<
                                <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 
                                 pk(~ltk.1)>, 
                                aeadEncrypt('emptyStr',
                                            hkdfExpand(<$cAEAD0, 
                                                        h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 
                                                           'g'^~yy>), 
                                                        'K_2m'>,
                                                       hkdfExtract('emptyStr', gxy)),
                                            <$V, 
                                             h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 
                                             pk(~ltk.1)>,
                                            $cAEAD0)
                               >,
                               ~ltk.1)
                         )
                        >, 
                        'emptyStr'>), 
                     'K_3ae'>,
                    hkdfExtract('emptyStr', gxy))
    ) @ #vk.15
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( 'g'^(~xx*~yy) ) @ #vk.8
1: !KU( 'g'^~yy ) @ #vk.6
2: !KU( ($V⊕      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))     )) @ #vk.17
3: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                   '2'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      sign(<            <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)     )) @ #vk.18
4: !KU( 'g'^~xx ) @ #vk.15

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 56 (precomputed): !KU( 'g'^(~xx*~yy) ) @ #vk.8
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~yy ) @ #vk.19
1: !KU( 'g'^~yy ) @ #vk.7
2: !KU( ($V⊕      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))     )) @ #vk.17
3: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                   '2'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      sign(<            <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)     )) @ #vk.18
4: !KU( 'g'^~xx ) @ #vk.15

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 60 (precomputed): !KU( ~yy ) @ #vk.19
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.21
1: !KU( ~yy ) @ #vk.22
2: !KU( 'g'^~yy ) @ #vk.7
3: !KU( ($V⊕      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))     )) @ #vk.17
4: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                   '2'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      sign(<            <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)     )) @ #vk.18
5: !KU( 'g'^~xx ) @ #vk.15

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 62 (precomputed): !KU( ~xx ) @ #vk.21
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.19
1: !KU( 'g'^~yy ) @ #vk.7
2: !KU( ($V⊕      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))     )) @ #vk.17
3: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                   '2'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      sign(<            <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)     )) @ #vk.18
4: !KU( 'g'^~xx ) @ #vk.15

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 67 (precomputed): !KU( ~xx ) @ #vk.19
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( h(<$cHash0.1,         h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>),         <         ($V⊕          hkdfExpand(<$cAEAD0,                       h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 'K_2e', '1'>,                     hkdfExtract('emptyStr', gxy))         ),          (          hkdfExpand(<$cAEAD0,                       h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 'K_2e', '2'>,                     hkdfExtract('emptyStr', gxy))⊕          sign(<                <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                  pk(~ltk.1)>,                 aeadEncrypt('emptyStr',                            hkdfExpand(<$cAEAD0,                                         h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 'K_2m'                                       >,                                       hkdfExtract('emptyStr', gxy)),                            <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                              pk(~ltk.1)>,                            $cAEAD0)               >,               ~ltk.1)         )        >,         'emptyStr'>)) @ #vk.23
1: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1,                                 h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                 <                                 ($V⊕                                  hkdfExpand(<$cAEAD0,                                               h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                               'K_2e', '1'>,                                             hkdfExtract('emptyStr', gxy))                                 ),                                  (                                  hkdfExpand(<$cAEAD0,                                               h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                               'K_2e', '2'>,                                             hkdfExtract('emptyStr', gxy))⊕                                  sign(<                                        <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                          pk(~ltk.1)>,                                         aeadEncrypt('emptyStr',                                                    hkdfExpand(<$cAEAD0,                                                                 h(<$cHash0,                                                                    <'STAT', 'SIG', $cSUITE0, gx>,                                                                    'g'^~yy>),                                                                 'K_2m'>,                                                               hkdfExtract('emptyStr', gxy)),                                                    <$V,                                                      h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>,                                                         'g'^~yy>),                                                      pk(~ltk.1)>,                                                    $cAEAD0)                                       >,                                       ~ltk.1)                                 )                                >,                                 'emptyStr'>),                              'K_3m'>,                            hkdfExtract(hkdfExtract('emptyStr', gxy), 'g'^(~ltk*~yy))),                 <$U,                   h(<$cHash0.1,                      h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                      <                      ($V⊕                       hkdfExpand(<$cAEAD0,                                    h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 'K_2e', '1'                                  >,                                  hkdfExtract('emptyStr', gxy))                      ),                       (                       hkdfExpand(<$cAEAD0,                                    h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 'K_2e', '2'                                  >,                                  hkdfExtract('emptyStr', gxy))⊕                       sign(<                             <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                               pk(~ltk.1)>,                              aeadEncrypt('emptyStr',                                         hkdfExpand(<$cAEAD0,                                                      h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>,                                                         'g'^~yy>),                                                      'K_2m'>,                                                    hkdfExtract('emptyStr', gxy)),                                         <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                           pk(~ltk.1)>,                                         $cAEAD0)                            >,                            ~ltk.1)                      )                     >,                      'emptyStr'>),                   'g'^~ltk>,                 $cAEAD0.1)) @ #vk.20
2: splitEqs(1)
3: splitEqs(2)
4: !KU( hkdfExtract('emptyStr', gxy) ) @ #vk.21

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 58 (precomputed):
    !KU( h(<$cHash0.1, 
            h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 
            <
             ($V⊕
              hkdfExpand(<$cAEAD0, 
                          h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 'K_2e', '1'>,
                         hkdfExtract('emptyStr', gxy))
             ), 
             (
              hkdfExpand(<$cAEAD0, 
                          h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 'K_2e', '2'>,
                         hkdfExtract('emptyStr', gxy))⊕
              sign(<
                    <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 
                     pk(~ltk.1)>, 
                    aeadEncrypt('emptyStr',
                                hkdfExpand(<$cAEAD0, 
                                            h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 
                                            'K_2m'>,
                                           hkdfExtract('emptyStr', gxy)),
                                <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 
                                 pk(~ltk.1)>,
                                $cAEAD0)
                   >,
                   ~ltk.1)
             )
            >, 
            'emptyStr'>)
    ) @ #vk.23
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( 'g'^(~xx*~yy) ) @ #vk.9
1: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0,                              h(<$cHash0,                                 h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                                 <                                 ($V⊕                                  hkdfExpand(<$cAEAD0,                                               h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>,                                                  'g'^~yy>),                                               'K_2e', '1'>,                                             hkdfExtract('emptyStr', 'g'^(~xx*~yy)))                                 ),                                  (                                  hkdfExpand(<$cAEAD0,                                               h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>,                                                  'g'^~yy>),                                               'K_2e', '2'>,                                             hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕                                  sign(<                                        <$V,                                          h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                                          pk(~ltk.1)>,                                         aeadEncrypt('emptyStr',                                                    hkdfExpand(<$cAEAD0,                                                                 h(<$cHash0,                                                                    <'STAT', 'SIG', $cSUITE0, 'g'^~xx                                                                   >,                                                                    'g'^~yy>),                                                                 'K_2m'>,                                                               hkdfExtract('emptyStr',                                                                           'g'^(~xx*~yy))),                                                    <$V,                                                      h(<$cHash0,                                                         <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy                                                       >),                                                      pk(~ltk.1)>,                                                    $cAEAD0)                                       >,                                       ~ltk.1)                                 )                                >,                                 'emptyStr'>),                              'K_3m'>,                            hkdfExtract(hkdfExtract('emptyStr', 'g'^(~xx*~yy)),                                        'g'^(~ltk*~yy))),                 <$U,                   h(<$cHash0,                      h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                      <                      ($V⊕                       hkdfExpand(<$cAEAD0,                                    h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                                    'K_2e', '1'>,                                  hkdfExtract('emptyStr', 'g'^(~xx*~yy)))                      ),                       (                       hkdfExpand(<$cAEAD0,                                    h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                                    'K_2e', '2'>,                                  hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕                       sign(<                             <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                               pk(~ltk.1)>,                              aeadEncrypt('emptyStr',                                         hkdfExpand(<$cAEAD0,                                                      h(<$cHash0,                                                         <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy                                                       >),                                                      'K_2m'>,                                                    hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                                         <$V,                                           h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy                                            >),                                           pk(~ltk.1)>,                                         $cAEAD0)                            >,                            ~ltk.1)                      )                     >,                      'emptyStr'>),                   'g'^~ltk>,                 $cAEAD0)) @ #vk.21
2: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0,                              h(<$cHash0,                                 h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                                 <                                 ($V⊕                                  hkdfExpand(<$cAEAD0,                                               h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>,                                                  'g'^~yy>),                                               'K_2e', '1'>,                                             hkdfExtract('emptyStr', 'g'^(~xx*~yy)))                                 ),                                  (                                  hkdfExpand(<$cAEAD0,                                               h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>,                                                  'g'^~yy>),                                               'K_2e', '2'>,                                             hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕                                  sign(<                                        <$V,                                          h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                                          pk(~ltk.1)>,                                         aeadEncrypt('emptyStr',                                                    hkdfExpand(<$cAEAD0,                                                                 h(<$cHash0,                                                                    <'STAT', 'SIG', $cSUITE0, 'g'^~xx                                                                   >,                                                                    'g'^~yy>),                                                                 'K_2m'>,                                                               hkdfExtract('emptyStr',                                                                           'g'^(~xx*~yy))),                                                    <$V,                                                      h(<$cHash0,                                                         <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy                                                       >),                                                      pk(~ltk.1)>,                                                    $cAEAD0)                                       >,                                       ~ltk.1)                                 )                                >,                                 'emptyStr'>),                              'K_3m'>,                            hkdfExtract(hkdfExtract('emptyStr', 'g'^(~xx*~yy)),                                        'g'^(~yy*~ltk.2))),                 <$U.1,                   h(<$cHash0,                      h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                      <                      ($V⊕                       hkdfExpand(<$cAEAD0,                                    h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                                    'K_2e', '1'>,                                  hkdfExtract('emptyStr', 'g'^(~xx*~yy)))                      ),                       (                       hkdfExpand(<$cAEAD0,                                    h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                                    'K_2e', '2'>,                                  hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕                       sign(<                             <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                               pk(~ltk.1)>,                              aeadEncrypt('emptyStr',                                         hkdfExpand(<$cAEAD0,                                                      h(<$cHash0,                                                         <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy                                                       >),                                                      'K_2m'>,                                                    hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                                         <$V,                                           h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy                                            >),                                           pk(~ltk.1)>,                                         $cAEAD0)                            >,                            ~ltk.1)                      )                     >,                      'emptyStr'>),                   'g'^~ltk.2>,                 $cAEAD0)) @ #vk.28
3: !KU( 'g'^~yy ) @ #vk.7
4: !KU( ($V⊕      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))     )) @ #vk.23
5: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                   '2'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      sign(<            <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)     )) @ #vk.24
6: !KU( 'g'^~xx ) @ #vk.16

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 67 (precomputed): !KU( 'g'^(~xx*~yy) ) @ #vk.9
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( 'g'^(~xx*~yy) ) @ #vk.12
1: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0,                              h(<$cHash0,                                 h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                                 <                                 ($V⊕                                  hkdfExpand(<$cAEAD0,                                               h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>,                                                  'g'^~yy>),                                               'K_2e', '1'>,                                             hkdfExtract('emptyStr', 'g'^(~xx*~yy)))                                 ),                                  (                                  hkdfExpand(<$cAEAD0,                                               h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>,                                                  'g'^~yy>),                                               'K_2e', '2'>,                                             hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕                                  sign(<                                        <$V,                                          h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                                          pk(~ltk.1)>,                                         aeadEncrypt('emptyStr',                                                    hkdfExpand(<$cAEAD0,                                                                 h(<$cHash0,                                                                    <'STAT', 'SIG', $cSUITE0, 'g'^~xx                                                                   >,                                                                    'g'^~yy>),                                                                 'K_2m'>,                                                               hkdfExtract('emptyStr',                                                                           'g'^(~xx*~yy))),                                                    <$V,                                                      h(<$cHash0,                                                         <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy                                                       >),                                                      pk(~ltk.1)>,                                                    $cAEAD0)                                       >,                                       ~ltk.1)                                 )                                >,                                 'emptyStr'>),                              'K_3m'>,                            hkdfExtract(hkdfExtract('emptyStr', 'g'^(~xx*~yy)),                                        'g'^(~ltk*~yy))),                 <$U,                   h(<$cHash0,                      h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                      <                      ($V⊕                       hkdfExpand(<$cAEAD0,                                    h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                                    'K_2e', '1'>,                                  hkdfExtract('emptyStr', 'g'^(~xx*~yy)))                      ),                       (                       hkdfExpand(<$cAEAD0,                                    h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                                    'K_2e', '2'>,                                  hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕                       sign(<                             <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                               pk(~ltk.1)>,                              aeadEncrypt('emptyStr',                                         hkdfExpand(<$cAEAD0,                                                      h(<$cHash0,                                                         <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy                                                       >),                                                      'K_2m'>,                                                    hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                                         <$V,                                           h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy                                            >),                                           pk(~ltk.1)>,                                         $cAEAD0)                            >,                            ~ltk.1)                      )                     >,                      'emptyStr'>),                   'g'^~ltk>,                 $cAEAD0)) @ #vk.25
2: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0,                              h(<$cHash0,                                 h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                                 <                                 ($V⊕                                  hkdfExpand(<$cAEAD0,                                               h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>,                                                  'g'^~yy>),                                               'K_2e', '1'>,                                             hkdfExtract('emptyStr', 'g'^(~xx*~yy)))                                 ),                                  (                                  hkdfExpand(<$cAEAD0,                                               h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>,                                                  'g'^~yy>),                                               'K_2e', '2'>,                                             hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕                                  sign(<                                        <$V,                                          h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                                          pk(~ltk.1)>,                                         aeadEncrypt('emptyStr',                                                    hkdfExpand(<$cAEAD0,                                                                 h(<$cHash0,                                                                    <'STAT', 'SIG', $cSUITE0, 'g'^~xx                                                                   >,                                                                    'g'^~yy>),                                                                 'K_2m'>,                                                               hkdfExtract('emptyStr',                                                                           'g'^(~xx*~yy))),                                                    <$V,                                                      h(<$cHash0,                                                         <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy                                                       >),                                                      pk(~ltk.1)>,                                                    $cAEAD0)                                       >,                                       ~ltk.1)                                 )                                >,                                 'emptyStr'>),                              'K_3m'>,                            hkdfExtract(hkdfExtract('emptyStr', 'g'^(~xx*~yy)),                                        'g'^(~yy*~ltk.2))),                 <$U.1,                   h(<$cHash0,                      h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                      <                      ($V⊕                       hkdfExpand(<$cAEAD0,                                    h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                                    'K_2e', '1'>,                                  hkdfExtract('emptyStr', 'g'^(~xx*~yy)))                      ),                       (                       hkdfExpand(<$cAEAD0,                                    h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                                    'K_2e', '2'>,                                  hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕                       sign(<                             <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                               pk(~ltk.1)>,                              aeadEncrypt('emptyStr',                                         hkdfExpand(<$cAEAD0,                                                      h(<$cHash0,                                                         <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy                                                       >),                                                      'K_2m'>,                                                    hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                                         <$V,                                           h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy                                            >),                                           pk(~ltk.1)>,                                         $cAEAD0)                            >,                            ~ltk.1)                      )                     >,                      'emptyStr'>),                   'g'^~ltk.2>,                 $cAEAD0)) @ #vk.33
3: !KU( 'g'^~yy ) @ #vk.9
4: !KU( ($V⊕      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))     )) @ #vk.29
5: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                   '2'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      sign(<            <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)     )) @ #vk.30
6: !KU( 'g'^~xx ) @ #vk.20

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 83 (precomputed): !KU( 'g'^(~xx*~yy) ) @ #vk.12
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.38
1: !KU( ~yy ) @ #vk.39
2: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0,                              h(<$cHash0,                                 h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                                 <                                 ($V⊕                                  hkdfExpand(<$cAEAD0,                                               h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>,                                                  'g'^~yy>),                                               'K_2e', '1'>,                                             hkdfExtract('emptyStr', 'g'^(~xx*~yy)))                                 ),                                  (                                  hkdfExpand(<$cAEAD0,                                               h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>,                                                  'g'^~yy>),                                               'K_2e', '2'>,                                             hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕                                  sign(<                                        <$V,                                          h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                                          pk(~ltk.1)>,                                         aeadEncrypt('emptyStr',                                                    hkdfExpand(<$cAEAD0,                                                                 h(<$cHash0,                                                                    <'STAT', 'SIG', $cSUITE0, 'g'^~xx                                                                   >,                                                                    'g'^~yy>),                                                                 'K_2m'>,                                                               hkdfExtract('emptyStr',                                                                           'g'^(~xx*~yy))),                                                    <$V,                                                      h(<$cHash0,                                                         <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy                                                       >),                                                      pk(~ltk.1)>,                                                    $cAEAD0)                                       >,                                       ~ltk.1)                                 )                                >,                                 'emptyStr'>),                              'K_3m'>,                            hkdfExtract(hkdfExtract('emptyStr', 'g'^(~xx*~yy)),                                        'g'^(~ltk*~yy))),                 <$U,                   h(<$cHash0,                      h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                      <                      ($V⊕                       hkdfExpand(<$cAEAD0,                                    h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                                    'K_2e', '1'>,                                  hkdfExtract('emptyStr', 'g'^(~xx*~yy)))                      ),                       (                       hkdfExpand(<$cAEAD0,                                    h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                                    'K_2e', '2'>,                                  hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕                       sign(<                             <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                               pk(~ltk.1)>,                              aeadEncrypt('emptyStr',                                         hkdfExpand(<$cAEAD0,                                                      h(<$cHash0,                                                         <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy                                                       >),                                                      'K_2m'>,                                                    hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                                         <$V,                                           h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy                                            >),                                           pk(~ltk.1)>,                                         $cAEAD0)                            >,                            ~ltk.1)                      )                     >,                      'emptyStr'>),                   'g'^~ltk>,                 $cAEAD0)) @ #vk.27
3: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0,                              h(<$cHash0,                                 h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                                 <                                 ($V⊕                                  hkdfExpand(<$cAEAD0,                                               h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>,                                                  'g'^~yy>),                                               'K_2e', '1'>,                                             hkdfExtract('emptyStr', 'g'^(~xx*~yy)))                                 ),                                  (                                  hkdfExpand(<$cAEAD0,                                               h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>,                                                  'g'^~yy>),                                               'K_2e', '2'>,                                             hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕                                  sign(<                                        <$V,                                          h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                                          pk(~ltk.1)>,                                         aeadEncrypt('emptyStr',                                                    hkdfExpand(<$cAEAD0,                                                                 h(<$cHash0,                                                                    <'STAT', 'SIG', $cSUITE0, 'g'^~xx                                                                   >,                                                                    'g'^~yy>),                                                                 'K_2m'>,                                                               hkdfExtract('emptyStr',                                                                           'g'^(~xx*~yy))),                                                    <$V,                                                      h(<$cHash0,                                                         <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy                                                       >),                                                      pk(~ltk.1)>,                                                    $cAEAD0)                                       >,                                       ~ltk.1)                                 )                                >,                                 'emptyStr'>),                              'K_3m'>,                            hkdfExtract(hkdfExtract('emptyStr', 'g'^(~xx*~yy)),                                        'g'^(~yy*~ltk.2))),                 <$U.1,                   h(<$cHash0,                      h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                      <                      ($V⊕                       hkdfExpand(<$cAEAD0,                                    h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                                    'K_2e', '1'>,                                  hkdfExtract('emptyStr', 'g'^(~xx*~yy)))                      ),                       (                       hkdfExpand(<$cAEAD0,                                    h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                                    'K_2e', '2'>,                                  hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕                       sign(<                             <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                               pk(~ltk.1)>,                              aeadEncrypt('emptyStr',                                         hkdfExpand(<$cAEAD0,                                                      h(<$cHash0,                                                         <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy                                                       >),                                                      'K_2m'>,                                                    hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                                         <$V,                                           h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy                                            >),                                           pk(~ltk.1)>,                                         $cAEAD0)                            >,                            ~ltk.1)                      )                     >,                      'emptyStr'>),                   'g'^~ltk.2>,                 $cAEAD0)) @ #vk.34
4: !KU( 'g'^~yy ) @ #vk.10
5: !KU( ($V⊕      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))     )) @ #vk.30
6: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                   '2'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      sign(<            <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)     )) @ #vk.31
7: !KU( 'g'^~xx ) @ #vk.22

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 88 (precomputed): !KU( ~xx ) @ #vk.38
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.36
1: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0,                              h(<$cHash0,                                 h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                                 <                                 ($V⊕                                  hkdfExpand(<$cAEAD0,                                               h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>,                                                  'g'^~yy>),                                               'K_2e', '1'>,                                             hkdfExtract('emptyStr', 'g'^(~xx*~yy)))                                 ),                                  (                                  hkdfExpand(<$cAEAD0,                                               h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>,                                                  'g'^~yy>),                                               'K_2e', '2'>,                                             hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕                                  sign(<                                        <$V,                                          h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                                          pk(~ltk.1)>,                                         aeadEncrypt('emptyStr',                                                    hkdfExpand(<$cAEAD0,                                                                 h(<$cHash0,                                                                    <'STAT', 'SIG', $cSUITE0, 'g'^~xx                                                                   >,                                                                    'g'^~yy>),                                                                 'K_2m'>,                                                               hkdfExtract('emptyStr',                                                                           'g'^(~xx*~yy))),                                                    <$V,                                                      h(<$cHash0,                                                         <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy                                                       >),                                                      pk(~ltk.1)>,                                                    $cAEAD0)                                       >,                                       ~ltk.1)                                 )                                >,                                 'emptyStr'>),                              'K_3m'>,                            hkdfExtract(hkdfExtract('emptyStr', 'g'^(~xx*~yy)),                                        'g'^(~ltk*~yy))),                 <$U,                   h(<$cHash0,                      h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                      <                      ($V⊕                       hkdfExpand(<$cAEAD0,                                    h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                                    'K_2e', '1'>,                                  hkdfExtract('emptyStr', 'g'^(~xx*~yy)))                      ),                       (                       hkdfExpand(<$cAEAD0,                                    h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                                    'K_2e', '2'>,                                  hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕                       sign(<                             <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                               pk(~ltk.1)>,                              aeadEncrypt('emptyStr',                                         hkdfExpand(<$cAEAD0,                                                      h(<$cHash0,                                                         <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy                                                       >),                                                      'K_2m'>,                                                    hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                                         <$V,                                           h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy                                            >),                                           pk(~ltk.1)>,                                         $cAEAD0)                            >,                            ~ltk.1)                      )                     >,                      'emptyStr'>),                   'g'^~ltk>,                 $cAEAD0)) @ #vk.27
2: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0,                              h(<$cHash0,                                 h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                                 <                                 ($V⊕                                  hkdfExpand(<$cAEAD0,                                               h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>,                                                  'g'^~yy>),                                               'K_2e', '1'>,                                             hkdfExtract('emptyStr', 'g'^(~xx*~yy)))                                 ),                                  (                                  hkdfExpand(<$cAEAD0,                                               h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>,                                                  'g'^~yy>),                                               'K_2e', '2'>,                                             hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕                                  sign(<                                        <$V,                                          h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                                          pk(~ltk.1)>,                                         aeadEncrypt('emptyStr',                                                    hkdfExpand(<$cAEAD0,                                                                 h(<$cHash0,                                                                    <'STAT', 'SIG', $cSUITE0, 'g'^~xx                                                                   >,                                                                    'g'^~yy>),                                                                 'K_2m'>,                                                               hkdfExtract('emptyStr',                                                                           'g'^(~xx*~yy))),                                                    <$V,                                                      h(<$cHash0,                                                         <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy                                                       >),                                                      pk(~ltk.1)>,                                                    $cAEAD0)                                       >,                                       ~ltk.1)                                 )                                >,                                 'emptyStr'>),                              'K_3m'>,                            hkdfExtract(hkdfExtract('emptyStr', 'g'^(~xx*~yy)),                                        'g'^(~yy*~ltk.2))),                 <$U.1,                   h(<$cHash0,                      h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                      <                      ($V⊕                       hkdfExpand(<$cAEAD0,                                    h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                                    'K_2e', '1'>,                                  hkdfExtract('emptyStr', 'g'^(~xx*~yy)))                      ),                       (                       hkdfExpand(<$cAEAD0,                                    h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                                    'K_2e', '2'>,                                  hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕                       sign(<                             <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                               pk(~ltk.1)>,                              aeadEncrypt('emptyStr',                                         hkdfExpand(<$cAEAD0,                                                      h(<$cHash0,                                                         <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy                                                       >),                                                      'K_2m'>,                                                    hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                                         <$V,                                           h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy                                            >),                                           pk(~ltk.1)>,                                         $cAEAD0)                            >,                            ~ltk.1)                      )                     >,                      'emptyStr'>),                   'g'^~ltk.2>,                 $cAEAD0)) @ #vk.34
3: !KU( 'g'^~yy ) @ #vk.10
4: !KU( ($V⊕      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))     )) @ #vk.30
5: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                   '2'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      sign(<            <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)     )) @ #vk.31
6: !KU( 'g'^~xx ) @ #vk.22

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~yy ) @ #vk.36
1: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0,                              h(<$cHash0,                                 h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                                 <                                 ($V⊕                                  hkdfExpand(<$cAEAD0,                                               h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>,                                                  'g'^~yy>),                                               'K_2e', '1'>,                                             hkdfExtract('emptyStr', 'g'^(~xx*~yy)))                                 ),                                  (                                  hkdfExpand(<$cAEAD0,                                               h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>,                                                  'g'^~yy>),                                               'K_2e', '2'>,                                             hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕                                  sign(<                                        <$V,                                          h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                                          pk(~ltk.1)>,                                         aeadEncrypt('emptyStr',                                                    hkdfExpand(<$cAEAD0,                                                                 h(<$cHash0,                                                                    <'STAT', 'SIG', $cSUITE0, 'g'^~xx                                                                   >,                                                                    'g'^~yy>),                                                                 'K_2m'>,                                                               hkdfExtract('emptyStr',                                                                           'g'^(~xx*~yy))),                                                    <$V,                                                      h(<$cHash0,                                                         <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy                                                       >),                                                      pk(~ltk.1)>,                                                    $cAEAD0)                                       >,                                       ~ltk.1)                                 )                                >,                                 'emptyStr'>),                              'K_3m'>,                            hkdfExtract(hkdfExtract('emptyStr', 'g'^(~xx*~yy)),                                        'g'^(~ltk*~yy))),                 <$U,                   h(<$cHash0,                      h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                      <                      ($V⊕                       hkdfExpand(<$cAEAD0,                                    h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                                    'K_2e', '1'>,                                  hkdfExtract('emptyStr', 'g'^(~xx*~yy)))                      ),                       (                       hkdfExpand(<$cAEAD0,                                    h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                                    'K_2e', '2'>,                                  hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕                       sign(<                             <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                               pk(~ltk.1)>,                              aeadEncrypt('emptyStr',                                         hkdfExpand(<$cAEAD0,                                                      h(<$cHash0,                                                         <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy                                                       >),                                                      'K_2m'>,                                                    hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                                         <$V,                                           h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy                                            >),                                           pk(~ltk.1)>,                                         $cAEAD0)                            >,                            ~ltk.1)                      )                     >,                      'emptyStr'>),                   'g'^~ltk>,                 $cAEAD0)) @ #vk.27
2: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0,                              h(<$cHash0,                                 h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                                 <                                 ($V⊕                                  hkdfExpand(<$cAEAD0,                                               h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>,                                                  'g'^~yy>),                                               'K_2e', '1'>,                                             hkdfExtract('emptyStr', 'g'^(~xx*~yy)))                                 ),                                  (                                  hkdfExpand(<$cAEAD0,                                               h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>,                                                  'g'^~yy>),                                               'K_2e', '2'>,                                             hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕                                  sign(<                                        <$V,                                          h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                                          pk(~ltk.1)>,                                         aeadEncrypt('emptyStr',                                                    hkdfExpand(<$cAEAD0,                                                                 h(<$cHash0,                                                                    <'STAT', 'SIG', $cSUITE0, 'g'^~xx                                                                   >,                                                                    'g'^~yy>),                                                                 'K_2m'>,                                                               hkdfExtract('emptyStr',                                                                           'g'^(~xx*~yy))),                                                    <$V,                                                      h(<$cHash0,                                                         <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy                                                       >),                                                      pk(~ltk.1)>,                                                    $cAEAD0)                                       >,                                       ~ltk.1)                                 )                                >,                                 'emptyStr'>),                              'K_3m'>,                            hkdfExtract(hkdfExtract('emptyStr', 'g'^(~xx*~yy)),                                        'g'^(~yy*~ltk.2))),                 <$U.1,                   h(<$cHash0,                      h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                      <                      ($V⊕                       hkdfExpand(<$cAEAD0,                                    h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                                    'K_2e', '1'>,                                  hkdfExtract('emptyStr', 'g'^(~xx*~yy)))                      ),                       (                       hkdfExpand(<$cAEAD0,                                    h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                                    'K_2e', '2'>,                                  hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕                       sign(<                             <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                               pk(~ltk.1)>,                              aeadEncrypt('emptyStr',                                         hkdfExpand(<$cAEAD0,                                                      h(<$cHash0,                                                         <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy                                                       >),                                                      'K_2m'>,                                                    hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                                         <$V,                                           h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy                                            >),                                           pk(~ltk.1)>,                                         $cAEAD0)                            >,                            ~ltk.1)                      )                     >,                      'emptyStr'>),                   'g'^~ltk.2>,                 $cAEAD0)) @ #vk.34
3: !KU( 'g'^~yy ) @ #vk.10
4: !KU( ($V⊕      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))     )) @ #vk.30
5: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                   '2'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      sign(<            <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)     )) @ #vk.31
6: !KU( 'g'^~xx ) @ #vk.22

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 86 (precomputed): !KU( ~yy ) @ #vk.36
  solved goal nr. 93 (precomputed): !KU( ~xx ) @ #vk.36
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.31
1: !KU( ~yy ) @ #vk.32
2: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0,                              h(<$cHash0,                                 h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                                 <                                 ($V⊕                                  hkdfExpand(<$cAEAD0,                                               h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>,                                                  'g'^~yy>),                                               'K_2e', '1'>,                                             hkdfExtract('emptyStr', 'g'^(~xx*~yy)))                                 ),                                  (                                  hkdfExpand(<$cAEAD0,                                               h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>,                                                  'g'^~yy>),                                               'K_2e', '2'>,                                             hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕                                  sign(<                                        <$V,                                          h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                                          pk(~ltk.1)>,                                         aeadEncrypt('emptyStr',                                                    hkdfExpand(<$cAEAD0,                                                                 h(<$cHash0,                                                                    <'STAT', 'SIG', $cSUITE0, 'g'^~xx                                                                   >,                                                                    'g'^~yy>),                                                                 'K_2m'>,                                                               hkdfExtract('emptyStr',                                                                           'g'^(~xx*~yy))),                                                    <$V,                                                      h(<$cHash0,                                                         <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy                                                       >),                                                      pk(~ltk.1)>,                                                    $cAEAD0)                                       >,                                       ~ltk.1)                                 )                                >,                                 'emptyStr'>),                              'K_3m'>,                            hkdfExtract(hkdfExtract('emptyStr', 'g'^(~xx*~yy)),                                        'g'^(~ltk*~yy))),                 <$U,                   h(<$cHash0,                      h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                      <                      ($V⊕                       hkdfExpand(<$cAEAD0,                                    h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                                    'K_2e', '1'>,                                  hkdfExtract('emptyStr', 'g'^(~xx*~yy)))                      ),                       (                       hkdfExpand(<$cAEAD0,                                    h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                                    'K_2e', '2'>,                                  hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕                       sign(<                             <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                               pk(~ltk.1)>,                              aeadEncrypt('emptyStr',                                         hkdfExpand(<$cAEAD0,                                                      h(<$cHash0,                                                         <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy                                                       >),                                                      'K_2m'>,                                                    hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                                         <$V,                                           h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy                                            >),                                           pk(~ltk.1)>,                                         $cAEAD0)                            >,                            ~ltk.1)                      )                     >,                      'emptyStr'>),                   'g'^~ltk>,                 $cAEAD0)) @ #vk.21
3: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0,                              h(<$cHash0,                                 h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                                 <                                 ($V⊕                                  hkdfExpand(<$cAEAD0,                                               h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>,                                                  'g'^~yy>),                                               'K_2e', '1'>,                                             hkdfExtract('emptyStr', 'g'^(~xx*~yy)))                                 ),                                  (                                  hkdfExpand(<$cAEAD0,                                               h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>,                                                  'g'^~yy>),                                               'K_2e', '2'>,                                             hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕                                  sign(<                                        <$V,                                          h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                                          pk(~ltk.1)>,                                         aeadEncrypt('emptyStr',                                                    hkdfExpand(<$cAEAD0,                                                                 h(<$cHash0,                                                                    <'STAT', 'SIG', $cSUITE0, 'g'^~xx                                                                   >,                                                                    'g'^~yy>),                                                                 'K_2m'>,                                                               hkdfExtract('emptyStr',                                                                           'g'^(~xx*~yy))),                                                    <$V,                                                      h(<$cHash0,                                                         <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy                                                       >),                                                      pk(~ltk.1)>,                                                    $cAEAD0)                                       >,                                       ~ltk.1)                                 )                                >,                                 'emptyStr'>),                              'K_3m'>,                            hkdfExtract(hkdfExtract('emptyStr', 'g'^(~xx*~yy)),                                        'g'^(~yy*~ltk.2))),                 <$U.1,                   h(<$cHash0,                      h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                      <                      ($V⊕                       hkdfExpand(<$cAEAD0,                                    h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                                    'K_2e', '1'>,                                  hkdfExtract('emptyStr', 'g'^(~xx*~yy)))                      ),                       (                       hkdfExpand(<$cAEAD0,                                    h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                                    'K_2e', '2'>,                                  hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕                       sign(<                             <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                               pk(~ltk.1)>,                              aeadEncrypt('emptyStr',                                         hkdfExpand(<$cAEAD0,                                                      h(<$cHash0,                                                         <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy                                                       >),                                                      'K_2m'>,                                                    hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                                         <$V,                                           h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy                                            >),                                           pk(~ltk.1)>,                                         $cAEAD0)                            >,                            ~ltk.1)                      )                     >,                      'emptyStr'>),                   'g'^~ltk.2>,                 $cAEAD0)) @ #vk.28
4: !KU( 'g'^~yy ) @ #vk.8
5: !KU( ($V⊕      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))     )) @ #vk.23
6: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                   '2'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      sign(<            <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)     )) @ #vk.24
7: !KU( 'g'^~xx ) @ #vk.16

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 72 (precomputed): !KU( ~xx ) @ #vk.31
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~yy ) @ #vk.29
1: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0,                              h(<$cHash0,                                 h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                                 <                                 ($V⊕                                  hkdfExpand(<$cAEAD0,                                               h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>,                                                  'g'^~yy>),                                               'K_2e', '1'>,                                             hkdfExtract('emptyStr', 'g'^(~xx*~yy)))                                 ),                                  (                                  hkdfExpand(<$cAEAD0,                                               h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>,                                                  'g'^~yy>),                                               'K_2e', '2'>,                                             hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕                                  sign(<                                        <$V,                                          h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                                          pk(~ltk.1)>,                                         aeadEncrypt('emptyStr',                                                    hkdfExpand(<$cAEAD0,                                                                 h(<$cHash0,                                                                    <'STAT', 'SIG', $cSUITE0, 'g'^~xx                                                                   >,                                                                    'g'^~yy>),                                                                 'K_2m'>,                                                               hkdfExtract('emptyStr',                                                                           'g'^(~xx*~yy))),                                                    <$V,                                                      h(<$cHash0,                                                         <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy                                                       >),                                                      pk(~ltk.1)>,                                                    $cAEAD0)                                       >,                                       ~ltk.1)                                 )                                >,                                 'emptyStr'>),                              'K_3m'>,                            hkdfExtract(hkdfExtract('emptyStr', 'g'^(~xx*~yy)),                                        'g'^(~ltk*~yy))),                 <$U,                   h(<$cHash0,                      h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                      <                      ($V⊕                       hkdfExpand(<$cAEAD0,                                    h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                                    'K_2e', '1'>,                                  hkdfExtract('emptyStr', 'g'^(~xx*~yy)))                      ),                       (                       hkdfExpand(<$cAEAD0,                                    h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                                    'K_2e', '2'>,                                  hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕                       sign(<                             <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                               pk(~ltk.1)>,                              aeadEncrypt('emptyStr',                                         hkdfExpand(<$cAEAD0,                                                      h(<$cHash0,                                                         <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy                                                       >),                                                      'K_2m'>,                                                    hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                                         <$V,                                           h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy                                            >),                                           pk(~ltk.1)>,                                         $cAEAD0)                            >,                            ~ltk.1)                      )                     >,                      'emptyStr'>),                   'g'^~ltk>,                 $cAEAD0)) @ #vk.21
2: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0,                              h(<$cHash0,                                 h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                                 <                                 ($V⊕                                  hkdfExpand(<$cAEAD0,                                               h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>,                                                  'g'^~yy>),                                               'K_2e', '1'>,                                             hkdfExtract('emptyStr', 'g'^(~xx*~yy)))                                 ),                                  (                                  hkdfExpand(<$cAEAD0,                                               h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>,                                                  'g'^~yy>),                                               'K_2e', '2'>,                                             hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕                                  sign(<                                        <$V,                                          h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                                          pk(~ltk.1)>,                                         aeadEncrypt('emptyStr',                                                    hkdfExpand(<$cAEAD0,                                                                 h(<$cHash0,                                                                    <'STAT', 'SIG', $cSUITE0, 'g'^~xx                                                                   >,                                                                    'g'^~yy>),                                                                 'K_2m'>,                                                               hkdfExtract('emptyStr',                                                                           'g'^(~xx*~yy))),                                                    <$V,                                                      h(<$cHash0,                                                         <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy                                                       >),                                                      pk(~ltk.1)>,                                                    $cAEAD0)                                       >,                                       ~ltk.1)                                 )                                >,                                 'emptyStr'>),                              'K_3m'>,                            hkdfExtract(hkdfExtract('emptyStr', 'g'^(~xx*~yy)),                                        'g'^(~yy*~ltk.2))),                 <$U.1,                   h(<$cHash0,                      h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                      <                      ($V⊕                       hkdfExpand(<$cAEAD0,                                    h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                                    'K_2e', '1'>,                                  hkdfExtract('emptyStr', 'g'^(~xx*~yy)))                      ),                       (                       hkdfExpand(<$cAEAD0,                                    h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                                    'K_2e', '2'>,                                  hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕                       sign(<                             <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                               pk(~ltk.1)>,                              aeadEncrypt('emptyStr',                                         hkdfExpand(<$cAEAD0,                                                      h(<$cHash0,                                                         <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy                                                       >),                                                      'K_2m'>,                                                    hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                                         <$V,                                           h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy                                            >),                                           pk(~ltk.1)>,                                         $cAEAD0)                            >,                            ~ltk.1)                      )                     >,                      'emptyStr'>),                   'g'^~ltk.2>,                 $cAEAD0)) @ #vk.28
3: !KU( 'g'^~yy ) @ #vk.8
4: !KU( ($V⊕      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))     )) @ #vk.23
5: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                   '2'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      sign(<            <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)     )) @ #vk.24
6: !KU( 'g'^~xx ) @ #vk.16

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 70 (precomputed): !KU( ~yy ) @ #vk.29
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.29
1: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0,                              h(<$cHash0,                                 h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                                 <                                 ($V⊕                                  hkdfExpand(<$cAEAD0,                                               h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>,                                                  'g'^~yy>),                                               'K_2e', '1'>,                                             hkdfExtract('emptyStr', 'g'^(~xx*~yy)))                                 ),                                  (                                  hkdfExpand(<$cAEAD0,                                               h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>,                                                  'g'^~yy>),                                               'K_2e', '2'>,                                             hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕                                  sign(<                                        <$V,                                          h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                                          pk(~ltk.1)>,                                         aeadEncrypt('emptyStr',                                                    hkdfExpand(<$cAEAD0,                                                                 h(<$cHash0,                                                                    <'STAT', 'SIG', $cSUITE0, 'g'^~xx                                                                   >,                                                                    'g'^~yy>),                                                                 'K_2m'>,                                                               hkdfExtract('emptyStr',                                                                           'g'^(~xx*~yy))),                                                    <$V,                                                      h(<$cHash0,                                                         <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy                                                       >),                                                      pk(~ltk.1)>,                                                    $cAEAD0)                                       >,                                       ~ltk.1)                                 )                                >,                                 'emptyStr'>),                              'K_3m'>,                            hkdfExtract(hkdfExtract('emptyStr', 'g'^(~xx*~yy)),                                        'g'^(~ltk*~yy))),                 <$U,                   h(<$cHash0,                      h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                      <                      ($V⊕                       hkdfExpand(<$cAEAD0,                                    h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                                    'K_2e', '1'>,                                  hkdfExtract('emptyStr', 'g'^(~xx*~yy)))                      ),                       (                       hkdfExpand(<$cAEAD0,                                    h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                                    'K_2e', '2'>,                                  hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕                       sign(<                             <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                               pk(~ltk.1)>,                              aeadEncrypt('emptyStr',                                         hkdfExpand(<$cAEAD0,                                                      h(<$cHash0,                                                         <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy                                                       >),                                                      'K_2m'>,                                                    hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                                         <$V,                                           h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy                                            >),                                           pk(~ltk.1)>,                                         $cAEAD0)                            >,                            ~ltk.1)                      )                     >,                      'emptyStr'>),                   'g'^~ltk>,                 $cAEAD0)) @ #vk.21
2: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0,                              h(<$cHash0,                                 h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                                 <                                 ($V⊕                                  hkdfExpand(<$cAEAD0,                                               h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>,                                                  'g'^~yy>),                                               'K_2e', '1'>,                                             hkdfExtract('emptyStr', 'g'^(~xx*~yy)))                                 ),                                  (                                  hkdfExpand(<$cAEAD0,                                               h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>,                                                  'g'^~yy>),                                               'K_2e', '2'>,                                             hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕                                  sign(<                                        <$V,                                          h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                                          pk(~ltk.1)>,                                         aeadEncrypt('emptyStr',                                                    hkdfExpand(<$cAEAD0,                                                                 h(<$cHash0,                                                                    <'STAT', 'SIG', $cSUITE0, 'g'^~xx                                                                   >,                                                                    'g'^~yy>),                                                                 'K_2m'>,                                                               hkdfExtract('emptyStr',                                                                           'g'^(~xx*~yy))),                                                    <$V,                                                      h(<$cHash0,                                                         <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy                                                       >),                                                      pk(~ltk.1)>,                                                    $cAEAD0)                                       >,                                       ~ltk.1)                                 )                                >,                                 'emptyStr'>),                              'K_3m'>,                            hkdfExtract(hkdfExtract('emptyStr', 'g'^(~xx*~yy)),                                        'g'^(~yy*~ltk.2))),                 <$U.1,                   h(<$cHash0,                      h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                      <                      ($V⊕                       hkdfExpand(<$cAEAD0,                                    h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                                    'K_2e', '1'>,                                  hkdfExtract('emptyStr', 'g'^(~xx*~yy)))                      ),                       (                       hkdfExpand(<$cAEAD0,                                    h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                                    'K_2e', '2'>,                                  hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕                       sign(<                             <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                               pk(~ltk.1)>,                              aeadEncrypt('emptyStr',                                         hkdfExpand(<$cAEAD0,                                                      h(<$cHash0,                                                         <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy                                                       >),                                                      'K_2m'>,                                                    hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                                         <$V,                                           h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy                                            >),                                           pk(~ltk.1)>,                                         $cAEAD0)                            >,                            ~ltk.1)                      )                     >,                      'emptyStr'>),                   'g'^~ltk.2>,                 $cAEAD0)) @ #vk.28
3: !KU( 'g'^~yy ) @ #vk.8
4: !KU( ($V⊕      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))     )) @ #vk.23
5: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                   '2'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      sign(<            <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)     )) @ #vk.24
6: !KU( 'g'^~xx ) @ #vk.16

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 77 (precomputed): !KU( ~xx ) @ #vk.29
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>)) @ #vk.29
1: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1,                                 h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                 <                                 ($V⊕                                  hkdfExpand(<$cAEAD0,                                               h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                               'K_2e', '1'>,                                             hkdfExtract('emptyStr', gxy))                                 ),                                  (                                  hkdfExpand(<$cAEAD0,                                               h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                               'K_2e', '2'>,                                             hkdfExtract('emptyStr', gxy))⊕                                  sign(<                                        <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                          pk(~ltk.1)>,                                         aeadEncrypt('emptyStr',                                                    hkdfExpand(<$cAEAD0,                                                                 h(<$cHash0,                                                                    <'STAT', 'SIG', $cSUITE0, gx>,                                                                    'g'^~yy>),                                                                 'K_2m'>,                                                               hkdfExtract('emptyStr', gxy)),                                                    <$V,                                                      h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>,                                                         'g'^~yy>),                                                      pk(~ltk.1)>,                                                    $cAEAD0)                                       >,                                       ~ltk.1)                                 )                                >,                                 'emptyStr'>),                              'K_3m'>,                            hkdfExtract(hkdfExtract('emptyStr', gxy), 'g'^(~ltk*~yy))),                 <$U,                   h(<$cHash0.1,                      h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                      <                      ($V⊕                       hkdfExpand(<$cAEAD0,                                    h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 'K_2e', '1'                                  >,                                  hkdfExtract('emptyStr', gxy))                      ),                       (                       hkdfExpand(<$cAEAD0,                                    h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 'K_2e', '2'                                  >,                                  hkdfExtract('emptyStr', gxy))⊕                       sign(<                             <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                               pk(~ltk.1)>,                              aeadEncrypt('emptyStr',                                         hkdfExpand(<$cAEAD0,                                                      h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>,                                                         'g'^~yy>),                                                      'K_2m'>,                                                    hkdfExtract('emptyStr', gxy)),                                         <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                           pk(~ltk.1)>,                                         $cAEAD0)                            >,                            ~ltk.1)                      )                     >,                      'emptyStr'>),                   'g'^~ltk>,                 $cAEAD0.1)) @ #vk.22
2: splitEqs(1)
3: splitEqs(2)
4: !KU( hkdfExtract('emptyStr', gxy) ) @ #vk.23
5: !KU( ($V⊕      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', gxy))     )) @ #vk.31
6: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', gxy))⊕      sign(<            <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 'K_2m'>,                                   hkdfExtract('emptyStr', gxy)),                        <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)     )) @ #vk.32

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 64 (precomputed):
    !KU( h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>)
    ) @ #vk.29
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1,                                 h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                 <                                 ($V⊕                                  hkdfExpand(<$cAEAD0,                                               h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                               'K_2e', '1'>,                                             hkdfExtract('emptyStr', gxy))                                 ),                                  (                                  hkdfExpand(<$cAEAD0,                                               h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                               'K_2e', '2'>,                                             hkdfExtract('emptyStr', gxy))⊕                                  sign(<                                        <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                          pk(~ltk.1)>,                                         aeadEncrypt('emptyStr',                                                    hkdfExpand(<$cAEAD0,                                                                 h(<$cHash0,                                                                    <'STAT', 'SIG', $cSUITE0, gx>,                                                                    'g'^~yy>),                                                                 'K_2m'>,                                                               hkdfExtract('emptyStr', gxy)),                                                    <$V,                                                      h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>,                                                         'g'^~yy>),                                                      pk(~ltk.1)>,                                                    $cAEAD0)                                       >,                                       ~ltk.1)                                 )                                >,                                 'emptyStr'>),                              'K_3m'>,                            hkdfExtract(hkdfExtract('emptyStr', gxy), 'g'^(~ltk*~yy))),                 <$U,                   h(<$cHash0.1,                      h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                      <                      ($V⊕                       hkdfExpand(<$cAEAD0,                                    h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 'K_2e', '1'                                  >,                                  hkdfExtract('emptyStr', gxy))                      ),                       (                       hkdfExpand(<$cAEAD0,                                    h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 'K_2e', '2'                                  >,                                  hkdfExtract('emptyStr', gxy))⊕                       sign(<                             <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                               pk(~ltk.1)>,                              aeadEncrypt('emptyStr',                                         hkdfExpand(<$cAEAD0,                                                      h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>,                                                         'g'^~yy>),                                                      'K_2m'>,                                                    hkdfExtract('emptyStr', gxy)),                                         <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                           pk(~ltk.1)>,                                         $cAEAD0)                            >,                            ~ltk.1)                      )                     >,                      'emptyStr'>),                   'g'^~ltk>,                 $cAEAD0.1)) @ #vk.27
1: splitEqs(1)
2: splitEqs(2)
3: !KU( hkdfExtract('emptyStr', gxy) ) @ #vk.28
4: !KU( ($V⊕      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', gxy))     )) @ #vk.33
5: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', gxy))⊕      sign(<            <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 'K_2m'>,                                   hkdfExtract('emptyStr', gxy)),                        <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)     )) @ #vk.34
6: !KU( 'g'^~yy ) @ #vk.8

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 52 (precomputed):
    !KU( aeadEncrypt('emptyStr',
                     hkdfExpand(<$cAEAD0.1, 
                                 h(<$cHash0.1, 
                                    h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 
                                    <
                                     ($V⊕
                                      hkdfExpand(<$cAEAD0, 
                                                  h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy
                                                    >), 
                                                  'K_2e', '1'>,
                                                 hkdfExtract('emptyStr', gxy))
                                     ), 
                                     (
                                      hkdfExpand(<$cAEAD0, 
                                                  h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy
                                                    >), 
                                                  'K_2e', '2'>,
                                                 hkdfExtract('emptyStr', gxy))⊕
                                      sign(<
                                            <$V, 
                                             h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 
                                             pk(~ltk.1)>, 
                                            aeadEncrypt('emptyStr',
                                                        hkdfExpand(<$cAEAD0, 
                                                                    h(<$cHash0, 
                                                                       <'STAT', 'SIG', $cSUITE0, gx
                                                                       >, 
                                                                       'g'^~yy>), 
                                                                    'K_2m'>,
                                                                   hkdfExtract('emptyStr', gxy)),
                                                        <$V, 
                                                         h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 
                                                            'g'^~yy>), 
                                                         pk(~ltk.1)>,
                                                        $cAEAD0)
                                           >,
                                           ~ltk.1)
                                     )
                                    >, 
                                    'emptyStr'>), 
                                 'K_3m'>,
                                hkdfExtract(hkdfExtract('emptyStr', gxy), 'g'^(~ltk*~yy))),
                     <$U, 
                      h(<$cHash0.1, 
                         h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 
                         <
                          ($V⊕
                           hkdfExpand(<$cAEAD0, 
                                       h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 
                                       'K_2e', '1'>,
                                      hkdfExtract('emptyStr', gxy))
                          ), 
                          (
                           hkdfExpand(<$cAEAD0, 
                                       h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 
                                       'K_2e', '2'>,
                                      hkdfExtract('emptyStr', gxy))⊕
                           sign(<
                                 <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 
                                  pk(~ltk.1)>, 
                                 aeadEncrypt('emptyStr',
                                             hkdfExpand(<$cAEAD0, 
                                                         h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 
                                                            'g'^~yy>), 
                                                         'K_2m'>,
                                                        hkdfExtract('emptyStr', gxy)),
                                             <$V, 
                                              h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 
                                              pk(~ltk.1)>,
                                             $cAEAD0)
                                >,
                                ~ltk.1)
                          )
                         >, 
                         'emptyStr'>), 
                      'g'^~ltk>,
                     $cAEAD0.1)
    ) @ #vk.27
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( hkdfExpand(<$cAEAD0.1,                  h(<$cHash0.1,                     h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                     <                     ($V⊕                      hkdfExpand(<$cAEAD0,                                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 'K_2e', '1'                                 >,                                 hkdfExtract('emptyStr', gxy))                     ),                      (                      hkdfExpand(<$cAEAD0,                                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 'K_2e', '2'                                 >,                                 hkdfExtract('emptyStr', gxy))⊕                      sign(<                            <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                              pk(~ltk.1)>,                             aeadEncrypt('emptyStr',                                        hkdfExpand(<$cAEAD0,                                                     h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>,                                                        'g'^~yy>),                                                     'K_2m'>,                                                   hkdfExtract('emptyStr', gxy)),                                        <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                          pk(~ltk.1)>,                                        $cAEAD0)                           >,                           ~ltk.1)                     )                    >,                     'emptyStr'>),                  'K_3m'>,                hkdfExtract(hkdfExtract('emptyStr', gxy), 'g'^(~ltk*~yy)))) @ #vk.39
1: splitEqs(1)
2: splitEqs(2)
3: !KU( hkdfExtract('emptyStr', gxy) ) @ #vk.32
4: !KU( ($V⊕      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', gxy))     )) @ #vk.36
5: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', gxy))⊕      sign(<            <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 'K_2m'>,                                   hkdfExtract('emptyStr', gxy)),                        <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)     )) @ #vk.37
6: !KU( 'g'^~yy ) @ #vk.9
7: !KU( 'g'^~ltk ) @ #vk.40

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 84 (precomputed):
    !KU( hkdfExpand(<$cAEAD0.1, 
                     h(<$cHash0.1, 
                        h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 
                        <
                         ($V⊕
                          hkdfExpand(<$cAEAD0, 
                                      h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 'K_2e', 
                                      '1'>,
                                     hkdfExtract('emptyStr', gxy))
                         ), 
                         (
                          hkdfExpand(<$cAEAD0, 
                                      h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 'K_2e', 
                                      '2'>,
                                     hkdfExtract('emptyStr', gxy))⊕
                          sign(<
                                <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 
                                 pk(~ltk.1)>, 
                                aeadEncrypt('emptyStr',
                                            hkdfExpand(<$cAEAD0, 
                                                        h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 
                                                           'g'^~yy>), 
                                                        'K_2m'>,
                                                       hkdfExtract('emptyStr', gxy)),
                                            <$V, 
                                             h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 
                                             pk(~ltk.1)>,
                                            $cAEAD0)
                               >,
                               ~ltk.1)
                         )
                        >, 
                        'emptyStr'>), 
                     'K_3m'>,
                    hkdfExtract(hkdfExtract('emptyStr', gxy), 'g'^(~ltk*~yy)))
    ) @ #vk.39
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( hkdfExtract(hkdfExtract('emptyStr', gxy), 'g'^(~ltk*~yy))) @ #vk.43
1: splitEqs(1)
2: splitEqs(2)
3: !KU( hkdfExtract('emptyStr', gxy) ) @ #vk.35
4: !KU( ($V⊕      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', gxy))     )) @ #vk.39
5: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', gxy))⊕      sign(<            <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 'K_2m'>,                                   hkdfExtract('emptyStr', gxy)),                        <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)     )) @ #vk.40
6: !KU( 'g'^~yy ) @ #vk.10
7: !KU( 'g'^~ltk ) @ #vk.42

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 93 (precomputed):
    !KU( hkdfExtract(hkdfExtract('emptyStr', gxy), 'g'^(~ltk*~yy))
    ) @ #vk.43
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~yy ) @ #vk.16
1: !KU( aeadEncrypt(<$U,                   aeadEncrypt('emptyStr',                              hkdfExpand(<$cAEAD0.1,                                           h(<$cHash0.1,                                              h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                              <                                              ($V⊕                                               hkdfExpand(<$cAEAD0,                                                            h(<$cHash0,                                                               <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy                                                             >),                                                            'K_2e', '1'>,                                                          hkdfExtract('emptyStr', gxy))                                              ),                                               (                                               hkdfExpand(<$cAEAD0,                                                            h(<$cHash0,                                                               <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy                                                             >),                                                            'K_2e', '2'>,                                                          hkdfExtract('emptyStr', gxy))⊕                                               sign(<                                                     <$V,                                                       h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>,                                                          'g'^~yy>),                                                       pk(~ltk.1)>,                                                      aeadEncrypt('emptyStr',                                                                 hkdfExpand(<$cAEAD0,                                                                              h(<$cHash0,                                                                                 <'STAT', 'SIG',                                                                                  $cSUITE0, gx>,                                                                                 'g'^~yy>),                                                                              'K_2m'>,                                                                            hkdfExtract('emptyStr',                                                                                        gxy)),                                                                 <$V,                                                                   h(<$cHash0,                                                                      <'STAT', 'SIG', $cSUITE0, gx>,                                                                      'g'^~yy>),                                                                   pk(~ltk.1)>,                                                                 $cAEAD0)                                                    >,                                                    ~ltk.1)                                              )                                             >,                                              'emptyStr'>),                                           'K_3m'>,                                         hkdfExtract(hkdfExtract('emptyStr', gxy), 'g'^(~ltk*~yy))),                              <$U,                                h(<$cHash0.1,                                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                   <                                   ($V⊕                                    hkdfExpand(<$cAEAD0,                                                 h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy                                                  >),                                                 'K_2e', '1'>,                                               hkdfExtract('emptyStr', gxy))                                   ),                                    (                                    hkdfExpand(<$cAEAD0,                                                 h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy                                                  >),                                                 'K_2e', '2'>,                                               hkdfExtract('emptyStr', gxy))⊕                                    sign(<                                          <$V,                                            h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                            pk(~ltk.1)>,                                           aeadEncrypt('emptyStr',                                                      hkdfExpand(<$cAEAD0,                                                                   h(<$cHash0,                                                                      <'STAT', 'SIG', $cSUITE0, gx>,                                                                      'g'^~yy>),                                                                   'K_2m'>,                                                                 hkdfExtract('emptyStr', gxy)),                                                      <$V,                                                        h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>,                                                           'g'^~yy>),                                                        pk(~ltk.1)>,                                                      $cAEAD0)                                         >,                                         ~ltk.1)                                   )                                  >,                                   'emptyStr'>),                                'g'^~ltk>,                              $cAEAD0.1)                 >,                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1,                                 h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                 <                                 ($V⊕                                  hkdfExpand(<$cAEAD0,                                               h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                               'K_2e', '1'>,                                             hkdfExtract('emptyStr', gxy))                                 ),                                  (                                  hkdfExpand(<$cAEAD0,                                               h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                               'K_2e', '2'>,                                             hkdfExtract('emptyStr', gxy))⊕                                  sign(<                                        <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                          pk(~ltk.1)>,                                         aeadEncrypt('emptyStr',                                                    hkdfExpand(<$cAEAD0,                                                                 h(<$cHash0,                                                                    <'STAT', 'SIG', $cSUITE0, gx>,                                                                    'g'^~yy>),                                                                 'K_2m'>,                                                               hkdfExtract('emptyStr', gxy)),                                                    <$V,                                                      h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>,                                                         'g'^~yy>),                                                      pk(~ltk.1)>,                                                    $cAEAD0)                                       >,                                       ~ltk.1)                                 )                                >,                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract('emptyStr', gxy)),                 extAad3Outer, $cAEAD0.1)) @ #vk.5
2: splitEqs(1)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 33 (precomputed): !KU( ~yy ) @ #vk.16
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.19
1: !KU( ~yy ) @ #vk.20
2: !KU( 'g'^(~ltk*~yy) ) @ #vk.7
3: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                  '1'>,                hkdfExtract('emptyStr', 'g'^(~xx*~yy)))) @ #vk.8
4: !KU( 'g'^~yy ) @ #vk.6
5: !KU( 'g'^~xx ) @ #vk.16

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 49 (precomputed): !KU( ~xx ) @ #vk.19
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~yy ) @ #vk.17
1: !KU( 'g'^(~ltk*~yy) ) @ #vk.7
2: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                  '1'>,                hkdfExtract('emptyStr', 'g'^(~xx*~yy)))) @ #vk.8
3: !KU( 'g'^~yy ) @ #vk.6
4: !KU( 'g'^~xx ) @ #vk.16

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.17
1: !KU( 'g'^(~ltk*~yy) ) @ #vk.7
2: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                  '1'>,                hkdfExtract('emptyStr', 'g'^(~xx*~yy)))) @ #vk.8
3: !KU( 'g'^~yy ) @ #vk.6
4: !KU( 'g'^~xx ) @ #vk.16

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 47 (precomputed): !KU( ~yy ) @ #vk.17
  solved goal nr. 54 (precomputed): !KU( ~xx ) @ #vk.17
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( 'g'^(~xx*~yy) ) @ #vk.6
1: !KU( 'g'^(~ltk*~yy) ) @ #vk.7
2: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                  '1'>,                hkdfExtract('emptyStr', 'g'^(~xx*~yy)))) @ #vk.8
3: !KU( (      sign(<            <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)⊕      sign(<            <$V.1, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.2)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V.1, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.2)>,                        $cAEAD0)           >,           ~ltk.2)     )) @ #vk.17
4: !KU( 'g'^~yy ) @ #vk.5
5: !KU( 'g'^~xx ) @ #vk.16

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 45 (precomputed): !KU( 'g'^(~xx*~yy) ) @ #vk.6
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.18
1: !KU( 'g'^(~ltk*~yy) ) @ #vk.7
2: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                  '1'>,                hkdfExtract('emptyStr', 'g'^(~xx*~yy)))) @ #vk.8
3: !KU( (      sign(<            <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)⊕      sign(<            <$V.1, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.2)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V.1, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.2)>,                        $cAEAD0)           >,           ~ltk.2)     )) @ #vk.17
4: !KU( 'g'^~yy ) @ #vk.6
5: !KU( 'g'^~xx ) @ #vk.16

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 58 (precomputed): !KU( ~xx ) @ #vk.18
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.20
1: !KU( ~yy ) @ #vk.21
2: !KU( 'g'^(~ltk*~yy) ) @ #vk.7
3: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                  '1'>,                hkdfExtract('emptyStr', 'g'^(~xx*~yy)))) @ #vk.8
4: !KU( (      sign(<            <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)⊕      sign(<            <$V.1, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.2)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V.1, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.2)>,                        $cAEAD0)           >,           ~ltk.2)     )) @ #vk.17
5: !KU( 'g'^~yy ) @ #vk.6
6: !KU( 'g'^~xx ) @ #vk.16

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 53 (precomputed): !KU( ~xx ) @ #vk.20
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~yy ) @ #vk.18
1: !KU( 'g'^(~ltk*~yy) ) @ #vk.7
2: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                  '1'>,                hkdfExtract('emptyStr', 'g'^(~xx*~yy)))) @ #vk.8
3: !KU( (      sign(<            <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)⊕      sign(<            <$V.1, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.2)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V.1, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.2)>,                        $cAEAD0)           >,           ~ltk.2)     )) @ #vk.17
4: !KU( 'g'^~yy ) @ #vk.6
5: !KU( 'g'^~xx ) @ #vk.16

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 51 (precomputed): !KU( ~yy ) @ #vk.18
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KD( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', z))⊕      sign(<            <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                                   hkdfExtract('emptyStr', z)),                        <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)     )) ▶₀ #vk.1
1: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', z))⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'STAT', 'SIG', $cSUITE0.1, gx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z.2))     )) @ #vk.15
2: splitEqs(0)
3: splitEqs(1)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( sign(<           <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>),             pk(~ltk.1)>,            aeadEncrypt('emptyStr',                       hkdfExpand(<$cAEAD0,                                    h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                                  hkdfExtract('emptyStr', z)),                       <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>),                         pk(~ltk.1)>,                       $cAEAD0)          >,          ~ltk.1)) @ #vk.16
1: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', z))⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'STAT', 'SIG', $cSUITE0.1, gx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z.2))     )) @ #vk.15
2: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                hkdfExtract('emptyStr', z))) @ #vk.17
3: splitEqs(0)
4: splitEqs(1)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 46 (precomputed):
    !KU( sign(<
               <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 
                pk(~ltk.1)>, 
               aeadEncrypt('emptyStr',
                           hkdfExpand(<$cAEAD0, 
                                       h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'
                                      >,
                                      hkdfExtract('emptyStr', z)),
                           <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 
                            pk(~ltk.1)>,
                           $cAEAD0)
              >,
              ~ltk.1)
    ) @ #vk.16
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~ltk.1 ) @ #vk.19
1: !KU( h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>)) @ #vk.23
2: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', z))⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'STAT', 'SIG', $cSUITE0.1, gx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z.2))     )) @ #vk.16
3: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                hkdfExtract('emptyStr', z))) @ #vk.17
4: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0,                              h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                            hkdfExtract('emptyStr', z)),                 <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>),                   pk(~ltk.1)>,                 $cAEAD0)) @ #vk.25
5: splitEqs(0)
6: splitEqs(1)
7: !KU( pk(~ltk.1) ) @ #vk.24

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 50 (precomputed): !KU( ~ltk.1 ) @ #vk.19
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( 'g'^(~xx*~yy) ) @ #vk.7
1: !KU( 'g'^(~ltk*~yy) ) @ #vk.8
2: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'STAT', 'SIG', $cSUITE0.1, gx>, 'g'^~yy.1>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.18
3: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                  '2'>,                hkdfExtract('emptyStr', 'g'^(~xx*~yy)))) @ #vk.19
4: splitEqs(1)
5: !KU( 'g'^~xx ) @ #vk.22
6: !KU( 'g'^~yy ) @ #vk.6

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 60 (precomputed): !KU( 'g'^(~xx*~yy) ) @ #vk.7
  simplified formula:
      "((#vr.27 = #j) ∨ (#j < #vr.27))"
    to
      "⊥"
  solved goal nr. 59 (simplified): (#vr.27 = #j)  ∥ (#j < #vr.27)
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.25
1: !KU( ~yy ) @ #vk.26
2: !KU( 'g'^(~ltk*~yy) ) @ #vk.8
3: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'STAT', 'SIG', $cSUITE0.1, gx>, 'g'^~yy.1>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.18
4: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                  '2'>,                hkdfExtract('emptyStr', 'g'^(~xx*~yy)))) @ #vk.19
5: splitEqs(1)
6: !KU( 'g'^~xx ) @ #vk.22
7: !KU( 'g'^~yy ) @ #vk.7

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 65 (precomputed): !KU( ~xx ) @ #vk.25
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.23
1: !KU( 'g'^(~ltk*~yy) ) @ #vk.8
2: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'STAT', 'SIG', $cSUITE0.1, gx>, 'g'^~yy.1>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.18
3: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                  '2'>,                hkdfExtract('emptyStr', 'g'^(~xx*~yy)))) @ #vk.19
4: splitEqs(1)
5: !KU( 'g'^~xx ) @ #vk.22
6: !KU( 'g'^~yy ) @ #vk.7

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~yy ) @ #vk.23
1: !KU( 'g'^(~ltk*~yy) ) @ #vk.8
2: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'STAT', 'SIG', $cSUITE0.1, gx>, 'g'^~yy.1>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.18
3: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                  '2'>,                hkdfExtract('emptyStr', 'g'^(~xx*~yy)))) @ #vk.19
4: splitEqs(1)
5: !KU( 'g'^~xx ) @ #vk.22
6: !KU( 'g'^~yy ) @ #vk.7

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 70 (precomputed): !KU( ~xx ) @ #vk.23
  solved goal nr. 63 (precomputed): !KU( ~yy ) @ #vk.23
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vl.1, 0) ~~> (#vk.1, 0)
1: !LTK_SIG( $V.1, ~ltk.2 ) ▶₀ #vr.7
2: !PK_SIG( $V.1, pkV ) ▶₁ #vr.7
3: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', z))⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'STAT', 'SIG', $cSUITE0.1, gx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z.2))     )) @ #vk.17
4: splitEqs(0)
5: splitEqs(1)
6: splitEqs(6)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vl.1, 0) ~~> (#vk.1, 0)
1: StI1_STAT_SIG( $U.1, ~ltk.2, $V.1, ~xx.1, m1, ~tid.2 ) ▶₀ #vr.7
2: !PK_SIG( $V.1, pk(x) ) ▶₁ #vr.7
3: !PK_STAT( $U.1, pkU ) ▶₂ #vr.7
4: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', z))⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'STAT', 'SIG', $cSUITE0.1, gx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z.2))     )) @ #vk.15
5: splitEqs(0)
6: splitEqs(1)
7: splitEqs(6)
8: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.1>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', z.3))     )) @ #vk.19
9: !KU( (      hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.1>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', z.3))⊕      sign(<<$V.1, h(<$cHash0.2, m1, gy.1>), pk(x)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.1>), 'K_2m'>,                                   hkdfExtract('emptyStr', z.3)),                        <$V.1, h(<$cHash0.2, m1, gy.1>), pk(x)>, $cAEAD0.2)           >,           x)     )) @ #vk.20

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: CommitI( tid.2, u, v, t ) ▶₀ #vr.7
1: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', z))⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'STAT', 'SIG', $cSUITE0.1, gx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z.2))     )) @ #vk.15
2: splitEqs(0)
3: splitEqs(1)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 49 (precomputed):
    CommitI( tid.2, u, v, t ) ▶₀ #vr.7
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: CommitR( tid.2, u, v, t ) ▶₀ #vr.7
1: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', z))⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'STAT', 'SIG', $cSUITE0.1, gx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z.2))     )) @ #vk.15
2: splitEqs(0)
3: splitEqs(1)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 49 (precomputed):
    CommitR( tid.2, u, v, t ) ▶₀ #vr.7
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.8, 0) ~~> (#vk.1, 0)
1: StI1_STAT_SIG( $U.1, ~ltk.2, $V.1, ~xx.1, m1, ~tid.2 ) ▶₀ #vr.7
2: !PK_SIG( $V.1, pk(x) ) ▶₁ #vr.7
3: !PK_STAT( $U.1, pkU ) ▶₂ #vr.7
4: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', z))⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'STAT', 'SIG', $cSUITE0.1, gx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z.2))     )) @ #vk.15
5: splitEqs(0)
6: splitEqs(1)
7: splitEqs(6)
8: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.1>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', z.3))     )) @ #vk.19
9: !KU( (      hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.1>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', z.3))⊕      sign(<<$V.1, h(<$cHash0.2, m1, gy.1>), pk(x)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.1>), 'K_2m'>,                                   hkdfExtract('emptyStr', z.3)),                        <$V.1, h(<$cHash0.2, m1, gy.1>), pk(x)>, $cAEAD0.2)           >,           x)     )) @ #vk.20

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.9, 0) ~~> (#vk.1, 0)
1: StI1_STAT_SIG( $U.1, ~ltk.2, $V.1, ~xx.1, m1, ~tid.2 ) ▶₀ #vr.7
2: !PK_SIG( $V.1, pk(x) ) ▶₁ #vr.7
3: !PK_STAT( $U.1, pkU ) ▶₂ #vr.7
4: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', z))⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'STAT', 'SIG', $cSUITE0.1, gx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z.2))     )) @ #vk.15
5: splitEqs(0)
6: splitEqs(1)
7: splitEqs(6)
8: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.1>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', z.3))     )) @ #vk.19
9: !KU( (      hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.1>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', z.3))⊕      sign(<<$V.1, h(<$cHash0.2, m1, gy.1>), pk(x)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.1>), 'K_2m'>,                                   hkdfExtract('emptyStr', z.3)),                        <$V.1, h(<$cHash0.2, m1, gy.1>), pk(x)>, $cAEAD0.2)           >,           x)     )) @ #vk.20
10: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.2,                              h(<$cHash0.2, h(<$cHash0.2, m1, gy.1>),                                 <                                 ($V.1⊕                                  hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.1>), 'K_2e', '1'>,                                             hkdfExtract('emptyStr', z.3))                                 ),                                  (                                  hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.1>), 'K_2e', '2'>,                                             hkdfExtract('emptyStr', z.3))⊕                                  sign(<<$V.1, h(<$cHash0.2, m1, gy.1>), pk(x)>,                                         aeadEncrypt('emptyStr',                                                    hkdfExpand(<$cAEAD0.2,                                                                 h(<$cHash0.2, m1, gy.1>), 'K_2m'>,                                                               hkdfExtract('emptyStr', z.3)),                                                    <$V.1, h(<$cHash0.2, m1, gy.1>), pk(x)>,                                                    $cAEAD0.2)                                       >,                                       x)                                 )                                >,                                 'emptyStr'>),                              'K_3m'>,                            hkdfExtract(hkdfExtract('emptyStr', z.3), z.4)),                 <$U.1,                   h(<$cHash0.2, h(<$cHash0.2, m1, gy.1>),                      <                      ($V.1⊕                       hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.1>), 'K_2e', '1'>,                                  hkdfExtract('emptyStr', z.3))                      ),                       (                       hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.1>), 'K_2e', '2'>,                                  hkdfExtract('emptyStr', z.3))⊕                       sign(<<$V.1, h(<$cHash0.2, m1, gy.1>), pk(x)>,                              aeadEncrypt('emptyStr',                                         hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.1>), 'K_2m'>,                                                    hkdfExtract('emptyStr', z.3)),                                         <$V.1, h(<$cHash0.2, m1, gy.1>), pk(x)>, $cAEAD0.2)                            >,                            x)                      )                     >,                      'emptyStr'>),                   pkU>,                 $cAEAD0.2)) @ #vk.24

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.9, 0) ~~> (#vk.1, 0)
1: StI1_STAT_SIG( $U.1, ~ltk.2, $V.1, ~xx.1, m1, ~tid.2 ) ▶₀ #vr.7
2: !PK_SIG( $V.1, pk(x) ) ▶₁ #vr.7
3: !PK_STAT( $U.1, pkU ) ▶₂ #vr.7
4: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', z))⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'STAT', 'SIG', $cSUITE0.1, gx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z.2))     )) @ #vk.15
5: splitEqs(0)
6: splitEqs(1)
7: splitEqs(6)
8: !KU( h(<$cHash0.2, h(<$cHash0.2, m1, gy.1>),         <         ($V.1⊕          hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.1>), 'K_2e', '1'>,                     hkdfExtract('emptyStr', z.3))         ),          (          hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.1>), 'K_2e', '2'>,                     hkdfExtract('emptyStr', z.3))⊕          sign(<<$V.1, h(<$cHash0.2, m1, gy.1>), pk(x)>,                 aeadEncrypt('emptyStr',                            hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.1>), 'K_2m'>,                                       hkdfExtract('emptyStr', z.3)),                            <$V.1, h(<$cHash0.2, m1, gy.1>), pk(x)>, $cAEAD0.2)               >,               x)         )        >,         'emptyStr'>)) @ #vk.22
9: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.1>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', z.3))     )) @ #vk.19
10: !KU( (      hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.1>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', z.3))⊕      sign(<<$V.1, h(<$cHash0.2, m1, gy.1>), pk(x)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.1>), 'K_2m'>,                                   hkdfExtract('emptyStr', z.3)),                        <$V.1, h(<$cHash0.2, m1, gy.1>), pk(x)>, $cAEAD0.2)           >,           x)     )) @ #vk.20
11: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.2,                              h(<$cHash0.2, h(<$cHash0.2, m1, gy.1>),                                 <                                 ($V.1⊕                                  hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.1>), 'K_2e', '1'>,                                             hkdfExtract('emptyStr', z.3))                                 ),                                  (                                  hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.1>), 'K_2e', '2'>,                                             hkdfExtract('emptyStr', z.3))⊕                                  sign(<<$V.1, h(<$cHash0.2, m1, gy.1>), pk(x)>,                                         aeadEncrypt('emptyStr',                                                    hkdfExpand(<$cAEAD0.2,                                                                 h(<$cHash0.2, m1, gy.1>), 'K_2m'>,                                                               hkdfExtract('emptyStr', z.3)),                                                    <$V.1, h(<$cHash0.2, m1, gy.1>), pk(x)>,                                                    $cAEAD0.2)                                       >,                                       x)                                 )                                >,                                 'emptyStr'>),                              'K_3m'>,                            hkdfExtract(hkdfExtract('emptyStr', z.3), z.4)),                 <$U.1,                   h(<$cHash0.2, h(<$cHash0.2, m1, gy.1>),                      <                      ($V.1⊕                       hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.1>), 'K_2e', '1'>,                                  hkdfExtract('emptyStr', z.3))                      ),                       (                       hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.1>), 'K_2e', '2'>,                                  hkdfExtract('emptyStr', z.3))⊕                       sign(<<$V.1, h(<$cHash0.2, m1, gy.1>), pk(x)>,                              aeadEncrypt('emptyStr',                                         hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.1>), 'K_2m'>,                                                    hkdfExtract('emptyStr', z.3)),                                         <$V.1, h(<$cHash0.2, m1, gy.1>), pk(x)>, $cAEAD0.2)                            >,                            x)                      )                     >,                      'emptyStr'>),                   pkU>,                 $cAEAD0.2)) @ #vk.25

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.8, 0) ~~> (#vk.1, 0)
1: !LTK_SIG( $V.1, ~ltk.2 ) ▶₀ #vr.7
2: !PK_SIG( $V.1, pkV ) ▶₁ #vr.7
3: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', z))⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'STAT', 'SIG', $cSUITE0.1, gx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z.2))     )) @ #vk.17
4: splitEqs(0)
5: splitEqs(1)
6: splitEqs(6)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.9, 0) ~~> (#vk.1, 0)
1: !LTK_SIG( $V.1, ~ltk.2 ) ▶₀ #vr.7
2: !PK_SIG( $V.1, pkV ) ▶₁ #vr.7
3: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', z))⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'STAT', 'SIG', $cSUITE0.1, gx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z.2))     )) @ #vk.17
4: splitEqs(0)
5: splitEqs(1)
6: splitEqs(6)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.9, 0) ~~> (#vk.1, 0)
1: !LTK_SIG( $V.1, ~ltk.2 ) ▶₀ #vr.7
2: !PK_SIG( $V.1, pkV ) ▶₁ #vr.7
3: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', z))⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'STAT', 'SIG', $cSUITE0.1, gx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z.2))     )) @ #vk.17
4: splitEqs(0)
5: splitEqs(1)
6: splitEqs(6)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.10, 0) ~~> (#vk.1, 0)
1: !LTK_SIG( $V.1, ~ltk.2 ) ▶₀ #vr.7
2: !PK_SIG( $V.1, pkV ) ▶₁ #vr.7
3: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', z))⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'STAT', 'SIG', $cSUITE0.1, gx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z.2))     )) @ #vk.17
4: splitEqs(0)
5: splitEqs(1)
6: splitEqs(6)
7: !KU( ($V.1⊕z.4) ) @ #vk.21

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.10, 0) ~~> (#vk.1, 0)
1: !LTK_SIG( $V.1, ~ltk.2 ) ▶₀ #vr.7
2: !PK_SIG( $V.1, pkV ) ▶₁ #vr.7
3: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', z))⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'STAT', 'SIG', $cSUITE0.1, gx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z.2))     )) @ #vk.17
4: !KU( (z.4⊕      hkdfExpand(<$cAEAD0.2,                   h(<$cHash0.2, <'STAT', 'SIG', $cSUITE0.2, gx.1>, 'g'^~yy.1>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', z.3))     )) @ #vk.21
5: splitEqs(0)
6: splitEqs(1)
7: splitEqs(6)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.10, 0) ~~> (#vk.1, 0)
1: !LTK_SIG( $V.1, ~ltk.2 ) ▶₀ #vr.7
2: !PK_SIG( $V.1, pkV ) ▶₁ #vr.7
3: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', z))⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'STAT', 'SIG', $cSUITE0.1, gx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z.2))     )) @ #vk.17
4: splitEqs(0)
5: splitEqs(1)
6: splitEqs(6)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.10, 0) ~~> (#vk.1, 0)
1: !LTK_SIG( $V.1, ~ltk.2 ) ▶₀ #vr.7
2: !PK_SIG( $V.1, pkV ) ▶₁ #vr.7
3: !KU( sign(<           <$V.1,             h(<$cHash0.2, <'STAT', 'SIG', $cSUITE0.2, gx.1>, 'g'^~yy.1>), pkV           >,            aeadEncrypt('emptyStr',                       hkdfExpand(<$cAEAD0.2,                                    h(<$cHash0.2, <'STAT', 'SIG', $cSUITE0.2, gx.1>, 'g'^~yy.1>),                                    'K_2m'>,                                  hkdfExtract('emptyStr', z.3)),                       <$V.1,                         h(<$cHash0.2, <'STAT', 'SIG', $cSUITE0.2, gx.1>, 'g'^~yy.1>), pkV>,                       $cAEAD0.2)          >,          ~ltk.2)) @ #vk.21
4: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', z))⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'STAT', 'SIG', $cSUITE0.1, gx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z.2))     )) @ #vk.17
5: splitEqs(0)
6: splitEqs(1)
7: splitEqs(6)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.10, 0) ~~> (#vk.1, 0)
1: !LTK_SIG( $V.1, ~ltk.2 ) ▶₀ #vr.7
2: !PK_SIG( $V.1, pkV ) ▶₁ #vr.7
3: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', z))⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'STAT', 'SIG', $cSUITE0.1, gx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z.2))     )) @ #vk.17
4: !KU( (z.4⊕      sign(<            <$V.1,              h(<$cHash0.2, <'STAT', 'SIG', $cSUITE0.2, gx.1>, 'g'^~yy.1>), pkV            >,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.2,                                     h(<$cHash0.2, <'STAT', 'SIG', $cSUITE0.2, gx.1>, 'g'^~yy.1>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', z.3)),                        <$V.1,                          h(<$cHash0.2, <'STAT', 'SIG', $cSUITE0.2, gx.1>, 'g'^~yy.1>), pkV>,                        $cAEAD0.2)           >,           ~ltk.2)     )) @ #vk.21
5: splitEqs(0)
6: splitEqs(1)
7: splitEqs(6)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.10, 0) ~~> (#vk.1, 0)
1: !LTK_SIG( $V.1, ~ltk.2 ) ▶₀ #vr.7
2: !PK_SIG( $V.1, pkV ) ▶₁ #vr.7
3: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', z))⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'STAT', 'SIG', $cSUITE0.1, gx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z.2))     )) @ #vk.17
4: !KU( (z.4⊕      hkdfExpand(<$cAEAD0.2,                   h(<$cHash0.2, <'STAT', 'SIG', $cSUITE0.2, gx.1>, 'g'^~yy.1>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', z.3))     )) @ #vk.21
5: splitEqs(0)
6: splitEqs(1)
7: splitEqs(6)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !LTK_SIG( $V, ~ltk.1 ) ▶₀ #vr.7
1: !PK_SIG( $V, pk(~ltk.1) ) ▶₁ #vr.7
2: !KU( 'g'^(~xx*~yy) ) @ #vk.6
3: !KU( 'g'^(~ltk*~yy) ) @ #vk.7
4: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'STAT', 'SIG', $cSUITE0.1, gx>, 'g'^~yy.1>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.17
5: splitEqs(1)
6: !KU( 'g'^~yy ) @ #vk.5
7: !KU( 'g'^~xx ) @ #vk.20

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 49 (precomputed): !LTK_SIG( $V, ~ltk.1 ) ▶₀ #vr.7
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.10, 0) ~~> (#vk.1, 0)
1: !LTK_SIG( $V.1, ~ltk.2 ) ▶₀ #vr.7
2: !PK_SIG( $V.1, pkV ) ▶₁ #vr.7
3: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', z))⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'STAT', 'SIG', $cSUITE0.1, gx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z.2))     )) @ #vk.17
4: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2, <'STAT', 'SIG', $cSUITE0.2, gx.1>, 'g'^~yy.1>),                  'K_2e', '2'>,                hkdfExtract('emptyStr', z.3))) @ #vk.21
5: splitEqs(0)
6: splitEqs(1)
7: splitEqs(6)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !PK_SIG( $V, pk(~ltk.1) ) ▶₁ #vr.7
1: !KU( 'g'^(~xx*~yy) ) @ #vk.6
2: !KU( 'g'^(~ltk*~yy) ) @ #vk.7
3: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'STAT', 'SIG', $cSUITE0.1, gx>, 'g'^~yy.1>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.17
4: splitEqs(1)
5: !KU( 'g'^~yy ) @ #vk.5
6: !KU( 'g'^~xx ) @ #vk.20

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 50 (precomputed):
    !PK_SIG( $V, pk(~ltk.1) ) ▶₁ #vr.7
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( 'g'^(~xx*~yy) ) @ #vk.6
1: !KU( 'g'^(~ltk*~yy) ) @ #vk.7
2: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'STAT', 'SIG', $cSUITE0.1, gx>, 'g'^~yy.1>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.17
3: splitEqs(1)
4: !KU( 'g'^~yy ) @ #vk.5
5: !KU( 'g'^~xx ) @ #vk.20

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 63 (precomputed): !KU( 'g'^(~xx*~yy) ) @ #vk.6
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~yy ) @ #vk.21
1: !KU( 'g'^(~ltk*~yy) ) @ #vk.7
2: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'STAT', 'SIG', $cSUITE0.1, gx>, 'g'^~yy.1>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.17
3: splitEqs(1)
4: !KU( 'g'^~yy ) @ #vk.6
5: !KU( 'g'^~xx ) @ #vk.20

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 69 (precomputed): !KU( ~yy ) @ #vk.21
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.21
1: !KU( 'g'^(~ltk*~yy) ) @ #vk.7
2: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'STAT', 'SIG', $cSUITE0.1, gx>, 'g'^~yy.1>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.17
3: splitEqs(1)
4: !KU( 'g'^~yy ) @ #vk.6
5: !KU( 'g'^~xx ) @ #vk.20

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 76 (precomputed): !KU( ~xx ) @ #vk.21
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.23
1: !KU( ~yy ) @ #vk.24
2: !KU( 'g'^(~ltk*~yy) ) @ #vk.7
3: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'STAT', 'SIG', $cSUITE0.1, gx>, 'g'^~yy.1>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.17
4: splitEqs(1)
5: !KU( 'g'^~yy ) @ #vk.6
6: !KU( 'g'^~xx ) @ #vk.20

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 71 (precomputed): !KU( ~xx ) @ #vk.23
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !LTK_SIG( $V.1, ~ltk.2 ) ▶₀ #vr.7
1: !PK_SIG( $V.1, pkV ) ▶₁ #vr.7
2: !KU( 'g'^(~xx*~yy) ) @ #vk.6
3: !KU( 'g'^(~ltk*~yy) ) @ #vk.7
4: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'STAT', 'SIG', $cSUITE0.1, gx>, 'g'^~yy.1>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.17
5: !KU( (      sign(<            <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)⊕      sign(<            <$V.1, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pkV>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V.1, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pkV>,                        $cAEAD0)           >,           ~ltk.2)     )) @ #vk.21
6: splitEqs(1)
7: !KU( 'g'^~yy ) @ #vk.5
8: !KU( 'g'^~xx ) @ #vk.20

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 49 (precomputed): !LTK_SIG( $V.1, ~ltk.2 ) ▶₀ #vr.7
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !PK_SIG( $V.1, pkV ) ▶₁ #vr.7
1: !KU( 'g'^(~xx*~yy) ) @ #vk.6
2: !KU( 'g'^(~ltk*~yy) ) @ #vk.7
3: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'STAT', 'SIG', $cSUITE0.1, gx>, 'g'^~yy.1>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.17
4: !KU( (      sign(<            <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)⊕      sign(<            <$V.1, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pkV>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V.1, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pkV>,                        $cAEAD0)           >,           ~ltk.2)     )) @ #vk.21
5: splitEqs(1)
6: !KU( 'g'^~yy ) @ #vk.5
7: !KU( 'g'^~xx ) @ #vk.20

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 50 (precomputed): !PK_SIG( $V.1, pkV ) ▶₁ #vr.7
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( 'g'^(~xx*~yy) ) @ #vk.6
1: !KU( 'g'^(~ltk*~yy) ) @ #vk.7
2: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'STAT', 'SIG', $cSUITE0.1, gx>, 'g'^~yy.1>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.17
3: !KU( (      sign(<            <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)⊕      sign(<            <$V.1, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.2)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V.1, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.2)>,                        $cAEAD0)           >,           ~ltk.2)     )) @ #vk.21
4: splitEqs(1)
5: !KU( 'g'^~yy ) @ #vk.5
6: !KU( 'g'^~xx ) @ #vk.20

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 67 (precomputed): !KU( 'g'^(~xx*~yy) ) @ #vk.6
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.24
1: !KU( ~yy ) @ #vk.25
2: !KU( 'g'^(~ltk*~yy) ) @ #vk.7
3: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'STAT', 'SIG', $cSUITE0.1, gx>, 'g'^~yy.1>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.17
4: !KU( (      sign(<            <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)⊕      sign(<            <$V.1, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.2)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V.1, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.2)>,                        $cAEAD0)           >,           ~ltk.2)     )) @ #vk.21
5: splitEqs(1)
6: !KU( 'g'^~yy ) @ #vk.6
7: !KU( 'g'^~xx ) @ #vk.20

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 75 (precomputed): !KU( ~xx ) @ #vk.24
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~yy ) @ #vk.22
1: !KU( 'g'^(~ltk*~yy) ) @ #vk.7
2: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'STAT', 'SIG', $cSUITE0.1, gx>, 'g'^~yy.1>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.17
3: !KU( (      sign(<            <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)⊕      sign(<            <$V.1, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.2)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V.1, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.2)>,                        $cAEAD0)           >,           ~ltk.2)     )) @ #vk.21
4: splitEqs(1)
5: !KU( 'g'^~yy ) @ #vk.6
6: !KU( 'g'^~xx ) @ #vk.20

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 73 (precomputed): !KU( ~yy ) @ #vk.22
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.22
1: !KU( 'g'^(~ltk*~yy) ) @ #vk.7
2: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'STAT', 'SIG', $cSUITE0.1, gx>, 'g'^~yy.1>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.17
3: !KU( (      sign(<            <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)⊕      sign(<            <$V.1, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.2)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V.1, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.2)>,                        $cAEAD0)           >,           ~ltk.2)     )) @ #vk.21
4: splitEqs(1)
5: !KU( 'g'^~yy ) @ #vk.6
6: !KU( 'g'^~xx ) @ #vk.20

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 80 (precomputed): !KU( ~xx ) @ #vk.22
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.16
1: !KU( 'g'^(~ltk*~yy) ) @ #vk.7
2: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                   '2'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      sign(<            <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)     )) @ #vk.6
3: !KU( ($V⊕$V.1) ) @ #vk.15
4: !KU( 'g'^~yy ) @ #vk.5
5: !KU( 'g'^~xx ) @ #vk.14

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 56 (precomputed): !KU( ~xx ) @ #vk.16
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~yy ) @ #vk.16
1: !KU( 'g'^(~ltk*~yy) ) @ #vk.7
2: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                   '2'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      sign(<            <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)     )) @ #vk.6
3: !KU( ($V⊕$V.1) ) @ #vk.15
4: !KU( 'g'^~yy ) @ #vk.5
5: !KU( 'g'^~xx ) @ #vk.14

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 49 (precomputed): !KU( ~yy ) @ #vk.16
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.18
1: !KU( ~yy ) @ #vk.19
2: !KU( 'g'^(~ltk*~yy) ) @ #vk.7
3: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                   '2'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      sign(<            <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)     )) @ #vk.6
4: !KU( ($V⊕$V.1) ) @ #vk.15
5: !KU( 'g'^~yy ) @ #vk.5
6: !KU( 'g'^~xx ) @ #vk.14

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 51 (precomputed): !KU( ~xx ) @ #vk.18
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~yy ) @ #vk.17
1: !KU( 'g'^(~ltk*~yy) ) @ #vk.7
2: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                  '1'>,                hkdfExtract('emptyStr', 'g'^(~xx*~yy)))) @ #vk.8
3: !KU( 'g'^~yy ) @ #vk.6
4: !KU( 'g'^~xx ) @ #vk.16

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.19
1: !KU( ~yy ) @ #vk.20
2: !KU( 'g'^(~ltk*~yy) ) @ #vk.7
3: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                  '1'>,                hkdfExtract('emptyStr', 'g'^(~xx*~yy)))) @ #vk.8
4: !KU( 'g'^~yy ) @ #vk.6
5: !KU( 'g'^~xx ) @ #vk.16

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 47 (precomputed): !KU( ~yy ) @ #vk.17
  solved goal nr. 49 (precomputed): !KU( ~xx ) @ #vk.19
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.17
1: !KU( 'g'^(~ltk*~yy) ) @ #vk.7
2: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                  '1'>,                hkdfExtract('emptyStr', 'g'^(~xx*~yy)))) @ #vk.8
3: !KU( 'g'^~yy ) @ #vk.6
4: !KU( 'g'^~xx ) @ #vk.16

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 54 (precomputed): !KU( ~xx ) @ #vk.17
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( 'g'^(~xx*~yy) ) @ #vk.6
1: !KU( 'g'^(~ltk*~yy) ) @ #vk.7
2: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                  '1'>,                hkdfExtract('emptyStr', 'g'^(~xx*~yy)))) @ #vk.8
3: !KU( (      sign(<            <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)⊕      sign(<            <$V.1, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.2)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V.1, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.2)>,                        $cAEAD0)           >,           ~ltk.2)     )) @ #vk.17
4: !KU( 'g'^~yy ) @ #vk.5
5: !KU( 'g'^~xx ) @ #vk.16

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 45 (precomputed): !KU( 'g'^(~xx*~yy) ) @ #vk.6
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.20
1: !KU( ~yy ) @ #vk.21
2: !KU( 'g'^(~ltk*~yy) ) @ #vk.7
3: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                  '1'>,                hkdfExtract('emptyStr', 'g'^(~xx*~yy)))) @ #vk.8
4: !KU( (      sign(<            <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)⊕      sign(<            <$V.1, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.2)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V.1, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.2)>,                        $cAEAD0)           >,           ~ltk.2)     )) @ #vk.17
5: !KU( 'g'^~yy ) @ #vk.6
6: !KU( 'g'^~xx ) @ #vk.16

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 53 (precomputed): !KU( ~xx ) @ #vk.20
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.18
1: !KU( 'g'^(~ltk*~yy) ) @ #vk.7
2: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                  '1'>,                hkdfExtract('emptyStr', 'g'^(~xx*~yy)))) @ #vk.8
3: !KU( (      sign(<            <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)⊕      sign(<            <$V.1, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.2)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V.1, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.2)>,                        $cAEAD0)           >,           ~ltk.2)     )) @ #vk.17
4: !KU( 'g'^~yy ) @ #vk.6
5: !KU( 'g'^~xx ) @ #vk.16

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 58 (precomputed): !KU( ~xx ) @ #vk.18
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~yy ) @ #vk.18
1: !KU( 'g'^(~ltk*~yy) ) @ #vk.7
2: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                  '1'>,                hkdfExtract('emptyStr', 'g'^(~xx*~yy)))) @ #vk.8
3: !KU( (      sign(<            <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)⊕      sign(<            <$V.1, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.2)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V.1, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.2)>,                        $cAEAD0)           >,           ~ltk.2)     )) @ #vk.17
4: !KU( 'g'^~yy ) @ #vk.6
5: !KU( 'g'^~xx ) @ #vk.16

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 51 (precomputed): !KU( ~yy ) @ #vk.18
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( sign(<           <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>),             pk(~ltk.1)>,            aeadEncrypt('emptyStr',                       hkdfExpand(<$cAEAD0,                                    h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                                  hkdfExtract('emptyStr', z)),                       <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>),                         pk(~ltk.1)>,                       $cAEAD0)          >,          ~ltk.1)) @ #vk.16
1: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', z))⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'STAT', 'SIG', $cSUITE0.1, gx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z.2))     )) @ #vk.15
2: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                hkdfExtract('emptyStr', z))) @ #vk.17
3: splitEqs(0)
4: splitEqs(1)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KD( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', z))⊕      sign(<            <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                                   hkdfExtract('emptyStr', z)),                        <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)     )) ▶₀ #vk.1
1: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', z))⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'STAT', 'SIG', $cSUITE0.1, gx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z.2))     )) @ #vk.15
2: splitEqs(0)
3: splitEqs(1)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 46 (precomputed):
    !KU( sign(<
               <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 
                pk(~ltk.1)>, 
               aeadEncrypt('emptyStr',
                           hkdfExpand(<$cAEAD0, 
                                       h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'
                                      >,
                                      hkdfExtract('emptyStr', z)),
                           <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 
                            pk(~ltk.1)>,
                           $cAEAD0)
              >,
              ~ltk.1)
    ) @ #vk.16
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~ltk.1 ) @ #vk.19
1: !KU( h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>)) @ #vk.23
2: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', z))⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'STAT', 'SIG', $cSUITE0.1, gx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z.2))     )) @ #vk.16
3: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                hkdfExtract('emptyStr', z))) @ #vk.17
4: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0,                              h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                            hkdfExtract('emptyStr', z)),                 <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>),                   pk(~ltk.1)>,                 $cAEAD0)) @ #vk.25
5: splitEqs(0)
6: splitEqs(1)
7: !KU( pk(~ltk.1) ) @ #vk.24

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 50 (precomputed): !KU( ~ltk.1 ) @ #vk.19
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( 'g'^(~xx*~yy) ) @ #vk.7
1: !KU( 'g'^(~ltk*~yy) ) @ #vk.8
2: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'STAT', 'SIG', $cSUITE0.1, gx>, 'g'^~yy.1>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.18
3: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                  '2'>,                hkdfExtract('emptyStr', 'g'^(~xx*~yy)))) @ #vk.19
4: splitEqs(1)
5: !KU( 'g'^~xx ) @ #vk.22
6: !KU( 'g'^~yy ) @ #vk.6

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 60 (precomputed): !KU( 'g'^(~xx*~yy) ) @ #vk.7
  simplified formula:
      "((#vr.27 = #j) ∨ (#j < #vr.27))"
    to
      "⊥"
  solved goal nr. 59 (simplified): (#vr.27 = #j)  ∥ (#j < #vr.27)
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~yy ) @ #vk.23
1: !KU( 'g'^(~ltk*~yy) ) @ #vk.8
2: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'STAT', 'SIG', $cSUITE0.1, gx>, 'g'^~yy.1>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.18
3: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                  '2'>,                hkdfExtract('emptyStr', 'g'^(~xx*~yy)))) @ #vk.19
4: splitEqs(1)
5: !KU( 'g'^~xx ) @ #vk.22
6: !KU( 'g'^~yy ) @ #vk.7

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.23
1: !KU( 'g'^(~ltk*~yy) ) @ #vk.8
2: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'STAT', 'SIG', $cSUITE0.1, gx>, 'g'^~yy.1>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.18
3: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                  '2'>,                hkdfExtract('emptyStr', 'g'^(~xx*~yy)))) @ #vk.19
4: splitEqs(1)
5: !KU( 'g'^~xx ) @ #vk.22
6: !KU( 'g'^~yy ) @ #vk.7

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 63 (precomputed): !KU( ~yy ) @ #vk.23
  solved goal nr. 70 (precomputed): !KU( ~xx ) @ #vk.23
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.25
1: !KU( ~yy ) @ #vk.26
2: !KU( 'g'^(~ltk*~yy) ) @ #vk.8
3: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'STAT', 'SIG', $cSUITE0.1, gx>, 'g'^~yy.1>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.18
4: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                  '2'>,                hkdfExtract('emptyStr', 'g'^(~xx*~yy)))) @ #vk.19
5: splitEqs(1)
6: !KU( 'g'^~xx ) @ #vk.22
7: !KU( 'g'^~yy ) @ #vk.7

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 65 (precomputed): !KU( ~xx ) @ #vk.25
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vl.1, 0) ~~> (#vk.1, 0)
1: !LTK_SIG( $V.1, ~ltk.2 ) ▶₀ #vr.7
2: !PK_SIG( $V.1, pkV ) ▶₁ #vr.7
3: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', z))⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'STAT', 'SIG', $cSUITE0.1, gx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z.2))     )) @ #vk.17
4: splitEqs(0)
5: splitEqs(1)
6: splitEqs(6)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vl.1, 0) ~~> (#vk.1, 0)
1: StI1_STAT_SIG( $U.1, ~ltk.2, $V.1, ~xx.1, m1, ~tid.2 ) ▶₀ #vr.7
2: !PK_SIG( $V.1, pk(x) ) ▶₁ #vr.7
3: !PK_STAT( $U.1, pkU ) ▶₂ #vr.7
4: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', z))⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'STAT', 'SIG', $cSUITE0.1, gx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z.2))     )) @ #vk.15
5: splitEqs(0)
6: splitEqs(1)
7: splitEqs(6)
8: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.1>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', z.3))     )) @ #vk.19
9: !KU( (      hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.1>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', z.3))⊕      sign(<<$V.1, h(<$cHash0.2, m1, gy.1>), pk(x)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.1>), 'K_2m'>,                                   hkdfExtract('emptyStr', z.3)),                        <$V.1, h(<$cHash0.2, m1, gy.1>), pk(x)>, $cAEAD0.2)           >,           x)     )) @ #vk.20

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: CommitI( tid.2, u, v, t ) ▶₀ #vr.7
1: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', z))⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'STAT', 'SIG', $cSUITE0.1, gx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z.2))     )) @ #vk.15
2: splitEqs(0)
3: splitEqs(1)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 49 (precomputed):
    CommitI( tid.2, u, v, t ) ▶₀ #vr.7
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: CommitR( tid.2, u, v, t ) ▶₀ #vr.7
1: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', z))⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'STAT', 'SIG', $cSUITE0.1, gx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z.2))     )) @ #vk.15
2: splitEqs(0)
3: splitEqs(1)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 49 (precomputed):
    CommitR( tid.2, u, v, t ) ▶₀ #vr.7
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.8, 0) ~~> (#vk.1, 0)
1: StI1_STAT_SIG( $U.1, ~ltk.2, $V.1, ~xx.1, m1, ~tid.2 ) ▶₀ #vr.7
2: !PK_SIG( $V.1, pk(x) ) ▶₁ #vr.7
3: !PK_STAT( $U.1, pkU ) ▶₂ #vr.7
4: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', z))⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'STAT', 'SIG', $cSUITE0.1, gx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z.2))     )) @ #vk.15
5: splitEqs(0)
6: splitEqs(1)
7: splitEqs(6)
8: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.1>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', z.3))     )) @ #vk.19
9: !KU( (      hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.1>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', z.3))⊕      sign(<<$V.1, h(<$cHash0.2, m1, gy.1>), pk(x)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.1>), 'K_2m'>,                                   hkdfExtract('emptyStr', z.3)),                        <$V.1, h(<$cHash0.2, m1, gy.1>), pk(x)>, $cAEAD0.2)           >,           x)     )) @ #vk.20

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.9, 0) ~~> (#vk.1, 0)
1: StI1_STAT_SIG( $U.1, ~ltk.2, $V.1, ~xx.1, m1, ~tid.2 ) ▶₀ #vr.7
2: !PK_SIG( $V.1, pk(x) ) ▶₁ #vr.7
3: !PK_STAT( $U.1, pkU ) ▶₂ #vr.7
4: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', z))⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'STAT', 'SIG', $cSUITE0.1, gx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z.2))     )) @ #vk.15
5: splitEqs(0)
6: splitEqs(1)
7: splitEqs(6)
8: !KU( h(<$cHash0.2, h(<$cHash0.2, m1, gy.1>),         <         ($V.1⊕          hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.1>), 'K_2e', '1'>,                     hkdfExtract('emptyStr', z.3))         ),          (          hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.1>), 'K_2e', '2'>,                     hkdfExtract('emptyStr', z.3))⊕          sign(<<$V.1, h(<$cHash0.2, m1, gy.1>), pk(x)>,                 aeadEncrypt('emptyStr',                            hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.1>), 'K_2m'>,                                       hkdfExtract('emptyStr', z.3)),                            <$V.1, h(<$cHash0.2, m1, gy.1>), pk(x)>, $cAEAD0.2)               >,               x)         )        >,         'emptyStr'>)) @ #vk.22
9: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.1>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', z.3))     )) @ #vk.19
10: !KU( (      hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.1>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', z.3))⊕      sign(<<$V.1, h(<$cHash0.2, m1, gy.1>), pk(x)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.1>), 'K_2m'>,                                   hkdfExtract('emptyStr', z.3)),                        <$V.1, h(<$cHash0.2, m1, gy.1>), pk(x)>, $cAEAD0.2)           >,           x)     )) @ #vk.20
11: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.2,                              h(<$cHash0.2, h(<$cHash0.2, m1, gy.1>),                                 <                                 ($V.1⊕                                  hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.1>), 'K_2e', '1'>,                                             hkdfExtract('emptyStr', z.3))                                 ),                                  (                                  hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.1>), 'K_2e', '2'>,                                             hkdfExtract('emptyStr', z.3))⊕                                  sign(<<$V.1, h(<$cHash0.2, m1, gy.1>), pk(x)>,                                         aeadEncrypt('emptyStr',                                                    hkdfExpand(<$cAEAD0.2,                                                                 h(<$cHash0.2, m1, gy.1>), 'K_2m'>,                                                               hkdfExtract('emptyStr', z.3)),                                                    <$V.1, h(<$cHash0.2, m1, gy.1>), pk(x)>,                                                    $cAEAD0.2)                                       >,                                       x)                                 )                                >,                                 'emptyStr'>),                              'K_3m'>,                            hkdfExtract(hkdfExtract('emptyStr', z.3), z.4)),                 <$U.1,                   h(<$cHash0.2, h(<$cHash0.2, m1, gy.1>),                      <                      ($V.1⊕                       hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.1>), 'K_2e', '1'>,                                  hkdfExtract('emptyStr', z.3))                      ),                       (                       hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.1>), 'K_2e', '2'>,                                  hkdfExtract('emptyStr', z.3))⊕                       sign(<<$V.1, h(<$cHash0.2, m1, gy.1>), pk(x)>,                              aeadEncrypt('emptyStr',                                         hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.1>), 'K_2m'>,                                                    hkdfExtract('emptyStr', z.3)),                                         <$V.1, h(<$cHash0.2, m1, gy.1>), pk(x)>, $cAEAD0.2)                            >,                            x)                      )                     >,                      'emptyStr'>),                   pkU>,                 $cAEAD0.2)) @ #vk.25

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.9, 0) ~~> (#vk.1, 0)
1: StI1_STAT_SIG( $U.1, ~ltk.2, $V.1, ~xx.1, m1, ~tid.2 ) ▶₀ #vr.7
2: !PK_SIG( $V.1, pk(x) ) ▶₁ #vr.7
3: !PK_STAT( $U.1, pkU ) ▶₂ #vr.7
4: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', z))⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'STAT', 'SIG', $cSUITE0.1, gx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z.2))     )) @ #vk.15
5: splitEqs(0)
6: splitEqs(1)
7: splitEqs(6)
8: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.1>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', z.3))     )) @ #vk.19
9: !KU( (      hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.1>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', z.3))⊕      sign(<<$V.1, h(<$cHash0.2, m1, gy.1>), pk(x)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.1>), 'K_2m'>,                                   hkdfExtract('emptyStr', z.3)),                        <$V.1, h(<$cHash0.2, m1, gy.1>), pk(x)>, $cAEAD0.2)           >,           x)     )) @ #vk.20
10: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.2,                              h(<$cHash0.2, h(<$cHash0.2, m1, gy.1>),                                 <                                 ($V.1⊕                                  hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.1>), 'K_2e', '1'>,                                             hkdfExtract('emptyStr', z.3))                                 ),                                  (                                  hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.1>), 'K_2e', '2'>,                                             hkdfExtract('emptyStr', z.3))⊕                                  sign(<<$V.1, h(<$cHash0.2, m1, gy.1>), pk(x)>,                                         aeadEncrypt('emptyStr',                                                    hkdfExpand(<$cAEAD0.2,                                                                 h(<$cHash0.2, m1, gy.1>), 'K_2m'>,                                                               hkdfExtract('emptyStr', z.3)),                                                    <$V.1, h(<$cHash0.2, m1, gy.1>), pk(x)>,                                                    $cAEAD0.2)                                       >,                                       x)                                 )                                >,                                 'emptyStr'>),                              'K_3m'>,                            hkdfExtract(hkdfExtract('emptyStr', z.3), z.4)),                 <$U.1,                   h(<$cHash0.2, h(<$cHash0.2, m1, gy.1>),                      <                      ($V.1⊕                       hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.1>), 'K_2e', '1'>,                                  hkdfExtract('emptyStr', z.3))                      ),                       (                       hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.1>), 'K_2e', '2'>,                                  hkdfExtract('emptyStr', z.3))⊕                       sign(<<$V.1, h(<$cHash0.2, m1, gy.1>), pk(x)>,                              aeadEncrypt('emptyStr',                                         hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.1>), 'K_2m'>,                                                    hkdfExtract('emptyStr', z.3)),                                         <$V.1, h(<$cHash0.2, m1, gy.1>), pk(x)>, $cAEAD0.2)                            >,                            x)                      )                     >,                      'emptyStr'>),                   pkU>,                 $cAEAD0.2)) @ #vk.24

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.8, 0) ~~> (#vk.1, 0)
1: !LTK_SIG( $V.1, ~ltk.2 ) ▶₀ #vr.7
2: !PK_SIG( $V.1, pkV ) ▶₁ #vr.7
3: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', z))⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'STAT', 'SIG', $cSUITE0.1, gx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z.2))     )) @ #vk.17
4: splitEqs(0)
5: splitEqs(1)
6: splitEqs(6)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.9, 0) ~~> (#vk.1, 0)
1: !LTK_SIG( $V.1, ~ltk.2 ) ▶₀ #vr.7
2: !PK_SIG( $V.1, pkV ) ▶₁ #vr.7
3: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', z))⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'STAT', 'SIG', $cSUITE0.1, gx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z.2))     )) @ #vk.17
4: splitEqs(0)
5: splitEqs(1)
6: splitEqs(6)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.9, 0) ~~> (#vk.1, 0)
1: !LTK_SIG( $V.1, ~ltk.2 ) ▶₀ #vr.7
2: !PK_SIG( $V.1, pkV ) ▶₁ #vr.7
3: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', z))⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'STAT', 'SIG', $cSUITE0.1, gx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z.2))     )) @ #vk.17
4: splitEqs(0)
5: splitEqs(1)
6: splitEqs(6)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.10, 0) ~~> (#vk.1, 0)
1: !LTK_SIG( $V.1, ~ltk.2 ) ▶₀ #vr.7
2: !PK_SIG( $V.1, pkV ) ▶₁ #vr.7
3: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', z))⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'STAT', 'SIG', $cSUITE0.1, gx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z.2))     )) @ #vk.17
4: !KU( (z.4⊕      hkdfExpand(<$cAEAD0.2,                   h(<$cHash0.2, <'STAT', 'SIG', $cSUITE0.2, gx.1>, 'g'^~yy.1>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', z.3))     )) @ #vk.21
5: splitEqs(0)
6: splitEqs(1)
7: splitEqs(6)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.10, 0) ~~> (#vk.1, 0)
1: !LTK_SIG( $V.1, ~ltk.2 ) ▶₀ #vr.7
2: !PK_SIG( $V.1, pkV ) ▶₁ #vr.7
3: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', z))⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'STAT', 'SIG', $cSUITE0.1, gx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z.2))     )) @ #vk.17
4: splitEqs(0)
5: splitEqs(1)
6: splitEqs(6)
7: !KU( ($V.1⊕z.4) ) @ #vk.21

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.10, 0) ~~> (#vk.1, 0)
1: !LTK_SIG( $V.1, ~ltk.2 ) ▶₀ #vr.7
2: !PK_SIG( $V.1, pkV ) ▶₁ #vr.7
3: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', z))⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'STAT', 'SIG', $cSUITE0.1, gx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z.2))     )) @ #vk.17
4: splitEqs(0)
5: splitEqs(1)
6: splitEqs(6)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.10, 0) ~~> (#vk.1, 0)
1: !LTK_SIG( $V.1, ~ltk.2 ) ▶₀ #vr.7
2: !PK_SIG( $V.1, pkV ) ▶₁ #vr.7
3: !KU( sign(<           <$V.1,             h(<$cHash0.2, <'STAT', 'SIG', $cSUITE0.2, gx.1>, 'g'^~yy.1>), pkV           >,            aeadEncrypt('emptyStr',                       hkdfExpand(<$cAEAD0.2,                                    h(<$cHash0.2, <'STAT', 'SIG', $cSUITE0.2, gx.1>, 'g'^~yy.1>),                                    'K_2m'>,                                  hkdfExtract('emptyStr', z.3)),                       <$V.1,                         h(<$cHash0.2, <'STAT', 'SIG', $cSUITE0.2, gx.1>, 'g'^~yy.1>), pkV>,                       $cAEAD0.2)          >,          ~ltk.2)) @ #vk.21
4: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', z))⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'STAT', 'SIG', $cSUITE0.1, gx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z.2))     )) @ #vk.17
5: splitEqs(0)
6: splitEqs(1)
7: splitEqs(6)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.10, 0) ~~> (#vk.1, 0)
1: !LTK_SIG( $V.1, ~ltk.2 ) ▶₀ #vr.7
2: !PK_SIG( $V.1, pkV ) ▶₁ #vr.7
3: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', z))⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'STAT', 'SIG', $cSUITE0.1, gx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z.2))     )) @ #vk.17
4: !KU( (z.4⊕      hkdfExpand(<$cAEAD0.2,                   h(<$cHash0.2, <'STAT', 'SIG', $cSUITE0.2, gx.1>, 'g'^~yy.1>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', z.3))     )) @ #vk.21
5: splitEqs(0)
6: splitEqs(1)
7: splitEqs(6)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.10, 0) ~~> (#vk.1, 0)
1: !LTK_SIG( $V.1, ~ltk.2 ) ▶₀ #vr.7
2: !PK_SIG( $V.1, pkV ) ▶₁ #vr.7
3: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', z))⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'STAT', 'SIG', $cSUITE0.1, gx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z.2))     )) @ #vk.17
4: !KU( (z.4⊕      sign(<            <$V.1,              h(<$cHash0.2, <'STAT', 'SIG', $cSUITE0.2, gx.1>, 'g'^~yy.1>), pkV            >,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.2,                                     h(<$cHash0.2, <'STAT', 'SIG', $cSUITE0.2, gx.1>, 'g'^~yy.1>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', z.3)),                        <$V.1,                          h(<$cHash0.2, <'STAT', 'SIG', $cSUITE0.2, gx.1>, 'g'^~yy.1>), pkV>,                        $cAEAD0.2)           >,           ~ltk.2)     )) @ #vk.21
5: splitEqs(0)
6: splitEqs(1)
7: splitEqs(6)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !LTK_SIG( $V, ~ltk.1 ) ▶₀ #vr.7
1: !PK_SIG( $V, pk(~ltk.1) ) ▶₁ #vr.7
2: !KU( 'g'^(~xx*~yy) ) @ #vk.6
3: !KU( 'g'^(~ltk*~yy) ) @ #vk.7
4: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'STAT', 'SIG', $cSUITE0.1, gx>, 'g'^~yy.1>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.17
5: splitEqs(1)
6: !KU( 'g'^~yy ) @ #vk.5
7: !KU( 'g'^~xx ) @ #vk.20

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 49 (precomputed): !LTK_SIG( $V, ~ltk.1 ) ▶₀ #vr.7
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.10, 0) ~~> (#vk.1, 0)
1: !LTK_SIG( $V.1, ~ltk.2 ) ▶₀ #vr.7
2: !PK_SIG( $V.1, pkV ) ▶₁ #vr.7
3: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', z))⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'STAT', 'SIG', $cSUITE0.1, gx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z.2))     )) @ #vk.17
4: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2, <'STAT', 'SIG', $cSUITE0.2, gx.1>, 'g'^~yy.1>),                  'K_2e', '2'>,                hkdfExtract('emptyStr', z.3))) @ #vk.21
5: splitEqs(0)
6: splitEqs(1)
7: splitEqs(6)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !PK_SIG( $V, pk(~ltk.1) ) ▶₁ #vr.7
1: !KU( 'g'^(~xx*~yy) ) @ #vk.6
2: !KU( 'g'^(~ltk*~yy) ) @ #vk.7
3: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'STAT', 'SIG', $cSUITE0.1, gx>, 'g'^~yy.1>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.17
4: splitEqs(1)
5: !KU( 'g'^~yy ) @ #vk.5
6: !KU( 'g'^~xx ) @ #vk.20

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 50 (precomputed):
    !PK_SIG( $V, pk(~ltk.1) ) ▶₁ #vr.7
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( 'g'^(~xx*~yy) ) @ #vk.6
1: !KU( 'g'^(~ltk*~yy) ) @ #vk.7
2: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'STAT', 'SIG', $cSUITE0.1, gx>, 'g'^~yy.1>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.17
3: splitEqs(1)
4: !KU( 'g'^~yy ) @ #vk.5
5: !KU( 'g'^~xx ) @ #vk.20

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 63 (precomputed): !KU( 'g'^(~xx*~yy) ) @ #vk.6
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.23
1: !KU( ~yy ) @ #vk.24
2: !KU( 'g'^(~ltk*~yy) ) @ #vk.7
3: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'STAT', 'SIG', $cSUITE0.1, gx>, 'g'^~yy.1>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.17
4: splitEqs(1)
5: !KU( 'g'^~yy ) @ #vk.6
6: !KU( 'g'^~xx ) @ #vk.20

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 71 (precomputed): !KU( ~xx ) @ #vk.23
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.21
1: !KU( 'g'^(~ltk*~yy) ) @ #vk.7
2: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'STAT', 'SIG', $cSUITE0.1, gx>, 'g'^~yy.1>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.17
3: splitEqs(1)
4: !KU( 'g'^~yy ) @ #vk.6
5: !KU( 'g'^~xx ) @ #vk.20

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~yy ) @ #vk.21
1: !KU( 'g'^(~ltk*~yy) ) @ #vk.7
2: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'STAT', 'SIG', $cSUITE0.1, gx>, 'g'^~yy.1>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.17
3: splitEqs(1)
4: !KU( 'g'^~yy ) @ #vk.6
5: !KU( 'g'^~xx ) @ #vk.20

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 69 (precomputed): !KU( ~yy ) @ #vk.21
  solved goal nr. 76 (precomputed): !KU( ~xx ) @ #vk.21
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !LTK_SIG( $V.1, ~ltk.2 ) ▶₀ #vr.7
1: !PK_SIG( $V.1, pkV ) ▶₁ #vr.7
2: !KU( 'g'^(~xx*~yy) ) @ #vk.6
3: !KU( 'g'^(~ltk*~yy) ) @ #vk.7
4: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'STAT', 'SIG', $cSUITE0.1, gx>, 'g'^~yy.1>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.17
5: !KU( (      sign(<            <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)⊕      sign(<            <$V.1, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pkV>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V.1, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pkV>,                        $cAEAD0)           >,           ~ltk.2)     )) @ #vk.21
6: splitEqs(1)
7: !KU( 'g'^~yy ) @ #vk.5
8: !KU( 'g'^~xx ) @ #vk.20

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 49 (precomputed): !LTK_SIG( $V.1, ~ltk.2 ) ▶₀ #vr.7
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !PK_SIG( $V.1, pkV ) ▶₁ #vr.7
1: !KU( 'g'^(~xx*~yy) ) @ #vk.6
2: !KU( 'g'^(~ltk*~yy) ) @ #vk.7
3: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'STAT', 'SIG', $cSUITE0.1, gx>, 'g'^~yy.1>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.17
4: !KU( (      sign(<            <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)⊕      sign(<            <$V.1, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pkV>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V.1, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pkV>,                        $cAEAD0)           >,           ~ltk.2)     )) @ #vk.21
5: splitEqs(1)
6: !KU( 'g'^~yy ) @ #vk.5
7: !KU( 'g'^~xx ) @ #vk.20

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 50 (precomputed): !PK_SIG( $V.1, pkV ) ▶₁ #vr.7
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( 'g'^(~xx*~yy) ) @ #vk.6
1: !KU( 'g'^(~ltk*~yy) ) @ #vk.7
2: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'STAT', 'SIG', $cSUITE0.1, gx>, 'g'^~yy.1>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.17
3: !KU( (      sign(<            <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)⊕      sign(<            <$V.1, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.2)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V.1, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.2)>,                        $cAEAD0)           >,           ~ltk.2)     )) @ #vk.21
4: splitEqs(1)
5: !KU( 'g'^~yy ) @ #vk.5
6: !KU( 'g'^~xx ) @ #vk.20

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 67 (precomputed): !KU( 'g'^(~xx*~yy) ) @ #vk.6
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.24
1: !KU( ~yy ) @ #vk.25
2: !KU( 'g'^(~ltk*~yy) ) @ #vk.7
3: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'STAT', 'SIG', $cSUITE0.1, gx>, 'g'^~yy.1>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.17
4: !KU( (      sign(<            <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)⊕      sign(<            <$V.1, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.2)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V.1, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.2)>,                        $cAEAD0)           >,           ~ltk.2)     )) @ #vk.21
5: splitEqs(1)
6: !KU( 'g'^~yy ) @ #vk.6
7: !KU( 'g'^~xx ) @ #vk.20

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 75 (precomputed): !KU( ~xx ) @ #vk.24
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~yy ) @ #vk.22
1: !KU( 'g'^(~ltk*~yy) ) @ #vk.7
2: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'STAT', 'SIG', $cSUITE0.1, gx>, 'g'^~yy.1>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.17
3: !KU( (      sign(<            <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)⊕      sign(<            <$V.1, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.2)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V.1, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.2)>,                        $cAEAD0)           >,           ~ltk.2)     )) @ #vk.21
4: splitEqs(1)
5: !KU( 'g'^~yy ) @ #vk.6
6: !KU( 'g'^~xx ) @ #vk.20

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.22
1: !KU( 'g'^(~ltk*~yy) ) @ #vk.7
2: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'STAT', 'SIG', $cSUITE0.1, gx>, 'g'^~yy.1>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.17
3: !KU( (      sign(<            <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)⊕      sign(<            <$V.1, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.2)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V.1, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.2)>,                        $cAEAD0)           >,           ~ltk.2)     )) @ #vk.21
4: splitEqs(1)
5: !KU( 'g'^~yy ) @ #vk.6
6: !KU( 'g'^~xx ) @ #vk.20

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 80 (precomputed): !KU( ~xx ) @ #vk.22
  solved goal nr. 73 (precomputed): !KU( ~yy ) @ #vk.22
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.16
1: !KU( 'g'^(~ltk*~yy) ) @ #vk.7
2: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                   '2'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      sign(<            <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)     )) @ #vk.6
3: !KU( ($V⊕$V.1) ) @ #vk.15
4: !KU( 'g'^~yy ) @ #vk.5
5: !KU( 'g'^~xx ) @ #vk.14

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 56 (precomputed): !KU( ~xx ) @ #vk.16
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.18
1: !KU( ~yy ) @ #vk.19
2: !KU( 'g'^(~ltk*~yy) ) @ #vk.7
3: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                   '2'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      sign(<            <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)     )) @ #vk.6
4: !KU( ($V⊕$V.1) ) @ #vk.15
5: !KU( 'g'^~yy ) @ #vk.5
6: !KU( 'g'^~xx ) @ #vk.14

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 51 (precomputed): !KU( ~xx ) @ #vk.18
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~yy ) @ #vk.16
1: !KU( 'g'^(~ltk*~yy) ) @ #vk.7
2: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                   '2'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      sign(<            <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)     )) @ #vk.6
3: !KU( ($V⊕$V.1) ) @ #vk.15
4: !KU( 'g'^~yy ) @ #vk.5
5: !KU( 'g'^~xx ) @ #vk.14

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 49 (precomputed): !KU( ~yy ) @ #vk.16
 OK.

theory edhoc_STAT_SIG_ACTIVE begin

// Function signature and definition of the equational theory E

builtins: diffie-hellman, xor
functions: aeadDecrypt/4, aeadEncrypt/4, decrypt/3, fst/1, h/1,
           hkdfExpand/2, hkdfExtract/2, pair/2, pk/1, sign/2, snd/1, true/0,
           verify/3
equations:
    aeadDecrypt(key, aeadEncrypt(key, pt, aad, algoId), aad, algoId) = pt,
    decrypt(key, aeadEncrypt(key, pt, aad, algoID), algoId) = pt,
    fst(<x.1, x.2>) = x.1,
    snd(<x.1, x.2>) = x.2,
    verify(sign(x.1, x.2), x.1, pk(x.2)) = true



restriction Eq:
  "∀ x y #i. (Eq( x, y ) @ #i) ⇒ (x = y)"
  // safety formula

rule (modulo E) I1_STAT_SIG:
   [ !LTK_STAT( $U, ~ltk ), Fr( ~xx ), Fr( ~tid ) ]
  --[ I1( ~tid, $U, $V, <'STAT', 'SIG', $cSUITE0, 'g'^~xx> ) ]->
   [
   StI1_STAT_SIG( $U, ~ltk, $V, ~xx, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>,
                  ~tid
   ),
   Out( <'STAT', 'SIG', $cSUITE0, 'g'^~xx> )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) R2_STAT_SIG:
   [
   !LTK_SIG( $V, ~ltk ), !PK_SIG( $V, pkV ),
   In( <'STAT', 'SIG', $cSUITE0, gx> ), Fr( ~yy ), Fr( ~tid )
   ]
  --[
  ExpRunningR( ~tid, $V, gx^~yy ),
  R2( ~tid, $V, <'STAT', 'SIG', $cSUITE0, gx>,
      <'g'^~yy, 
       ($V⊕
        hkdfExpand(<$cAEAD0, 
                    h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 'K_2e', '1'>,
                   hkdfExtract('emptyStr', gx^~yy))
       ), 
       (
        hkdfExpand(<$cAEAD0, 
                    h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 'K_2e', '2'>,
                   hkdfExtract('emptyStr', gx^~yy))⊕
        sign(<<$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>), pkV>, 
              aeadEncrypt('emptyStr',
                          hkdfExpand(<$cAEAD0, 
                                      h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 'K_2m'>,
                                     hkdfExtract('emptyStr', gx^~yy)),
                          <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>), pkV>, $cAEAD0)
             >,
             ~ltk)
       )
      >
  )
  ]->
   [
   StR2_STAT_SIG( $V, ~ltk, ~yy, hkdfExtract('emptyStr', gx^~yy),
                  h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>),
                  <
                   ($V⊕
                    hkdfExpand(<$cAEAD0, 
                                h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 'K_2e', '1'>,
                               hkdfExtract('emptyStr', gx^~yy))
                   ), 
                   (
                    hkdfExpand(<$cAEAD0, 
                                h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 'K_2e', '2'>,
                               hkdfExtract('emptyStr', gx^~yy))⊕
                    sign(<<$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>), pkV>, 
                          aeadEncrypt('emptyStr',
                                      hkdfExpand(<$cAEAD0, 
                                                  h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 'K_2m'
                                                 >,
                                                 hkdfExtract('emptyStr', gx^~yy)),
                                      <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>), pkV>,
                                      $cAEAD0)
                         >,
                         ~ltk)
                   )
                  >,
                  gx^~yy, ~tid, <'STAT', 'SIG', $cSUITE0, gx>,
                  <'g'^~yy, 
                   ($V⊕
                    hkdfExpand(<$cAEAD0, 
                                h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 'K_2e', '1'>,
                               hkdfExtract('emptyStr', gx^~yy))
                   ), 
                   (
                    hkdfExpand(<$cAEAD0, 
                                h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 'K_2e', '2'>,
                               hkdfExtract('emptyStr', gx^~yy))⊕
                    sign(<<$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>), pkV>, 
                          aeadEncrypt('emptyStr',
                                      hkdfExpand(<$cAEAD0, 
                                                  h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 'K_2m'
                                                 >,
                                                 hkdfExtract('emptyStr', gx^~yy)),
                                      <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>), pkV>,
                                      $cAEAD0)
                         >,
                         ~ltk)
                   )
                  >
   ),
   Out( <'g'^~yy, 
         ($V⊕
          hkdfExpand(<$cAEAD0, 
                      h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 'K_2e', '1'>,
                     hkdfExtract('emptyStr', gx^~yy))
         ), 
         (
          hkdfExpand(<$cAEAD0, 
                      h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 'K_2e', '2'>,
                     hkdfExtract('emptyStr', gx^~yy))⊕
          sign(<<$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>), pkV>, 
                aeadEncrypt('emptyStr',
                            hkdfExpand(<$cAEAD0, 
                                        h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 'K_2m'>,
                                       hkdfExtract('emptyStr', gx^~yy)),
                            <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>), pkV>, $cAEAD0)
               >,
               ~ltk)
         )
        >
   )
   ]

  /*
  rule (modulo AC) R2_STAT_SIG:
     [
     !LTK_SIG( $V, ~ltk ), !PK_SIG( $V, pkV ),
     In( <'STAT', 'SIG', $cSUITE0, gx> ), Fr( ~yy ), Fr( ~tid )
     ]
    --[
    ExpRunningR( ~tid, $V, z ),
    R2( ~tid, $V, <'STAT', 'SIG', $cSUITE0, gx>,
        <'g'^~yy, 
         ($V⊕
          hkdfExpand(<$cAEAD0, 
                      h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 'K_2e', '1'>,
                     hkdfExtract('emptyStr', z))
         ), 
         (
          hkdfExpand(<$cAEAD0, 
                      h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 'K_2e', '2'>,
                     hkdfExtract('emptyStr', z))⊕
          sign(<<$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>), pkV>, 
                aeadEncrypt('emptyStr',
                            hkdfExpand(<$cAEAD0, 
                                        h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 'K_2m'>,
                                       hkdfExtract('emptyStr', z)),
                            <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>), pkV>, $cAEAD0)
               >,
               ~ltk)
         )
        >
    )
    ]->
     [
     StR2_STAT_SIG( $V, ~ltk, ~yy, hkdfExtract('emptyStr', z),
                    h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>),
                    <
                     ($V⊕
                      hkdfExpand(<$cAEAD0, 
                                  h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 'K_2e', '1'>,
                                 hkdfExtract('emptyStr', z))
                     ), 
                     (
                      hkdfExpand(<$cAEAD0, 
                                  h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 'K_2e', '2'>,
                                 hkdfExtract('emptyStr', z))⊕
                      sign(<<$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>), pkV>, 
                            aeadEncrypt('emptyStr',
                                        hkdfExpand(<$cAEAD0, 
                                                    h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 
                                                    'K_2m'>,
                                                   hkdfExtract('emptyStr', z)),
                                        <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>), pkV>,
                                        $cAEAD0)
                           >,
                           ~ltk)
                     )
                    >,
                    z, ~tid, <'STAT', 'SIG', $cSUITE0, gx>,
                    <'g'^~yy, 
                     ($V⊕
                      hkdfExpand(<$cAEAD0, 
                                  h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 'K_2e', '1'>,
                                 hkdfExtract('emptyStr', z))
                     ), 
                     (
                      hkdfExpand(<$cAEAD0, 
                                  h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 'K_2e', '2'>,
                                 hkdfExtract('emptyStr', z))⊕
                      sign(<<$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>), pkV>, 
                            aeadEncrypt('emptyStr',
                                        hkdfExpand(<$cAEAD0, 
                                                    h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 
                                                    'K_2m'>,
                                                   hkdfExtract('emptyStr', z)),
                                        <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>), pkV>,
                                        $cAEAD0)
                           >,
                           ~ltk)
                     )
                    >
     ),
     Out( <'g'^~yy, 
           ($V⊕
            hkdfExpand(<$cAEAD0, 
                        h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 'K_2e', '1'>,
                       hkdfExtract('emptyStr', z))
           ), 
           (
            hkdfExpand(<$cAEAD0, 
                        h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 'K_2e', '2'>,
                       hkdfExtract('emptyStr', z))⊕
            sign(<<$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>), pkV>, 
                  aeadEncrypt('emptyStr',
                              hkdfExpand(<$cAEAD0, 
                                          h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 'K_2m'>,
                                         hkdfExtract('emptyStr', z)),
                              <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>), pkV>, $cAEAD0)
                 >,
                 ~ltk)
           )
          >
     )
     ]
    variants (modulo AC)
    1. ~yy   = ~yy.123
       gx    = gx.124
       z     = gx.124^~yy.123
    
    2. ~yy   = ~yy.128
       gx    = z.134^inv(~yy.128)
       z     = z.134
    
    3. ~yy   = ~yy.7696
       gx    = x.15383^x.15384
       z     = x.15383^(~yy.7696*x.15384)
    
    4. ~yy   = ~yy.7697
       gx    = x.15385^inv((~yy.7697*x.15386))
       z     = x.15385^inv(x.15386)
    
    5. ~yy   = ~yy.7697
       gx    = x.15385^(x.15386*inv(~yy.7697))
       z     = x.15385^x.15386
    
    6. ~yy   = ~yy.7698
       gx    = x.15386^(x.15387*inv((~yy.7698*x.15388)))
       z     = x.15386^(x.15387*inv(x.15388))
  */

rule (modulo E) I3_STAT_SIG:
   [
   StI1_STAT_SIG( $U, ~ltk, $V, ~xx, m1, ~tid ), !PK_SIG( $V, pkV ),
   !PK_STAT( $U, pkU ),
   In( <gy, 
        ($V⊕
         hkdfExpand(<$cAEAD0, h(<$cHash0, m1, gy>), 'K_2e', '1'>,
                    hkdfExtract('emptyStr', gy^~xx))
        ), 
        (authR⊕
         hkdfExpand(<$cAEAD0, h(<$cHash0, m1, gy>), 'K_2e', '2'>,
                    hkdfExtract('emptyStr', gy^~xx))
        )
       >
   )
   ]
  --[
  ExpCommitI( ~tid, $U, $V, gy^~xx ),
  CommitI( ~tid, $U, $V, <gy^~xx, gy^~ltk> ),
  ExpRunningI( ~tid, $U, $V, gy^~xx ),
  RunningI( ~tid, $U, $V, <gy^~xx, gy^~ltk> ),
  I3( ~tid, $U, $V, m1,
      <gy, 
       ($V⊕
        hkdfExpand(<$cAEAD0, h(<$cHash0, m1, gy>), 'K_2e', '1'>,
                   hkdfExtract('emptyStr', gy^~xx))
       ), 
       (authR⊕
        hkdfExpand(<$cAEAD0, h(<$cHash0, m1, gy>), 'K_2e', '2'>,
                   hkdfExtract('emptyStr', gy^~xx))
       )
      >,
      <'emptyStr', 
       aeadEncrypt(<$U, 
                    aeadEncrypt('emptyStr',
                                hkdfExpand(<$cAEAD0, 
                                            h(<$cHash0, h(<$cHash0, m1, gy>), 
                                               <
                                                ($V⊕
                                                 hkdfExpand(<$cAEAD0, h(<$cHash0, m1, gy>), 'K_2e', '1'>,
                                                            hkdfExtract('emptyStr', gy^~xx))
                                                ), 
                                                (authR⊕
                                                 hkdfExpand(<$cAEAD0, h(<$cHash0, m1, gy>), 'K_2e', '2'>,
                                                            hkdfExtract('emptyStr', gy^~xx))
                                                )
                                               >, 
                                               'emptyStr'>), 
                                            'K_3m'>,
                                           hkdfExtract(hkdfExtract('emptyStr', gy^~xx), gy^~ltk)),
                                <$U, 
                                 h(<$cHash0, h(<$cHash0, m1, gy>), 
                                    <
                                     ($V⊕
                                      hkdfExpand(<$cAEAD0, h(<$cHash0, m1, gy>), 'K_2e', '1'>,
                                                 hkdfExtract('emptyStr', gy^~xx))
                                     ), 
                                     (authR⊕
                                      hkdfExpand(<$cAEAD0, h(<$cHash0, m1, gy>), 'K_2e', '2'>,
                                                 hkdfExtract('emptyStr', gy^~xx))
                                     )
                                    >, 
                                    'emptyStr'>), 
                                 pkU>,
                                $cAEAD0)
                   >,
                   hkdfExpand(<$cAEAD0, 
                               h(<$cHash0, h(<$cHash0, m1, gy>), 
                                  <
                                   ($V⊕
                                    hkdfExpand(<$cAEAD0, h(<$cHash0, m1, gy>), 'K_2e', '1'>,
                                               hkdfExtract('emptyStr', gy^~xx))
                                   ), 
                                   (authR⊕
                                    hkdfExpand(<$cAEAD0, h(<$cHash0, m1, gy>), 'K_2e', '2'>,
                                               hkdfExtract('emptyStr', gy^~xx))
                                   )
                                  >, 
                                  'emptyStr'>), 
                               'K_3ae'>,
                              hkdfExtract('emptyStr', gy^~xx)),
                   h(<$cHash0, h(<$cHash0, m1, gy>), 
                      <
                       ($V⊕
                        hkdfExpand(<$cAEAD0, h(<$cHash0, m1, gy>), 'K_2e', '1'>,
                                   hkdfExtract('emptyStr', gy^~xx))
                       ), 
                       (authR⊕
                        hkdfExpand(<$cAEAD0, h(<$cHash0, m1, gy>), 'K_2e', '2'>,
                                   hkdfExtract('emptyStr', gy^~xx))
                       )
                      >, 
                      'emptyStr'>),
                   $cAEAD0)
      >
  ),
  Eq( verify(authR,
             <<$V, h(<$cHash0, m1, gy>), pkV>, 
              aeadEncrypt('emptyStr',
                          hkdfExpand(<$cAEAD0, h(<$cHash0, m1, gy>), 'K_2m'>,
                                     hkdfExtract('emptyStr', gy^~xx)),
                          <$V, h(<$cHash0, m1, gy>), pkV>, $cAEAD0)
             >,
             pkV),
      true
  )
  ]->
   [
   Out( <'emptyStr', 
         aeadEncrypt(<$U, 
                      aeadEncrypt('emptyStr',
                                  hkdfExpand(<$cAEAD0, 
                                              h(<$cHash0, h(<$cHash0, m1, gy>), 
                                                 <
                                                  ($V⊕
                                                   hkdfExpand(<$cAEAD0, h(<$cHash0, m1, gy>), 'K_2e', '1'>,
                                                              hkdfExtract('emptyStr', gy^~xx))
                                                  ), 
                                                  (authR⊕
                                                   hkdfExpand(<$cAEAD0, h(<$cHash0, m1, gy>), 'K_2e', '2'>,
                                                              hkdfExtract('emptyStr', gy^~xx))
                                                  )
                                                 >, 
                                                 'emptyStr'>), 
                                              'K_3m'>,
                                             hkdfExtract(hkdfExtract('emptyStr', gy^~xx), gy^~ltk)),
                                  <$U, 
                                   h(<$cHash0, h(<$cHash0, m1, gy>), 
                                      <
                                       ($V⊕
                                        hkdfExpand(<$cAEAD0, h(<$cHash0, m1, gy>), 'K_2e', '1'>,
                                                   hkdfExtract('emptyStr', gy^~xx))
                                       ), 
                                       (authR⊕
                                        hkdfExpand(<$cAEAD0, h(<$cHash0, m1, gy>), 'K_2e', '2'>,
                                                   hkdfExtract('emptyStr', gy^~xx))
                                       )
                                      >, 
                                      'emptyStr'>), 
                                   pkU>,
                                  $cAEAD0)
                     >,
                     hkdfExpand(<$cAEAD0, 
                                 h(<$cHash0, h(<$cHash0, m1, gy>), 
                                    <
                                     ($V⊕
                                      hkdfExpand(<$cAEAD0, h(<$cHash0, m1, gy>), 'K_2e', '1'>,
                                                 hkdfExtract('emptyStr', gy^~xx))
                                     ), 
                                     (authR⊕
                                      hkdfExpand(<$cAEAD0, h(<$cHash0, m1, gy>), 'K_2e', '2'>,
                                                 hkdfExtract('emptyStr', gy^~xx))
                                     )
                                    >, 
                                    'emptyStr'>), 
                                 'K_3ae'>,
                                hkdfExtract('emptyStr', gy^~xx)),
                     h(<$cHash0, h(<$cHash0, m1, gy>), 
                        <
                         ($V⊕
                          hkdfExpand(<$cAEAD0, h(<$cHash0, m1, gy>), 'K_2e', '1'>,
                                     hkdfExtract('emptyStr', gy^~xx))
                         ), 
                         (authR⊕
                          hkdfExpand(<$cAEAD0, h(<$cHash0, m1, gy>), 'K_2e', '2'>,
                                     hkdfExtract('emptyStr', gy^~xx))
                         )
                        >, 
                        'emptyStr'>),
                     $cAEAD0)
        >
   )
   ]

  /*
  rule (modulo AC) I3_STAT_SIG:
     [
     StI1_STAT_SIG( $U, ~ltk, $V, ~xx, m1, ~tid ), !PK_SIG( $V, pkV ),
     !PK_STAT( $U, pkU ),
     In( <gy, 
          ($V⊕
           hkdfExpand(<$cAEAD0, h(<$cHash0, m1, gy>), 'K_2e', '1'>,
                      hkdfExtract('emptyStr', z.1))
          ), 
          z>
     )
     ]
    --[
    ExpCommitI( ~tid, $U, $V, z.1 ), CommitI( ~tid, $U, $V, <z.1, z.2> ),
    ExpRunningI( ~tid, $U, $V, z.1 ), RunningI( ~tid, $U, $V, <z.1, z.2> ),
    I3( ~tid, $U, $V, m1,
        <gy, 
         ($V⊕
          hkdfExpand(<$cAEAD0, h(<$cHash0, m1, gy>), 'K_2e', '1'>,
                     hkdfExtract('emptyStr', z.1))
         ), 
         z>,
        <'emptyStr', 
         aeadEncrypt(<$U, 
                      aeadEncrypt('emptyStr',
                                  hkdfExpand(<$cAEAD0, 
                                              h(<$cHash0, h(<$cHash0, m1, gy>), 
                                                 <
                                                  ($V⊕
                                                   hkdfExpand(<$cAEAD0, h(<$cHash0, m1, gy>), 'K_2e', '1'>,
                                                              hkdfExtract('emptyStr', z.1))
                                                  ), 
                                                  z>, 
                                                 'emptyStr'>), 
                                              'K_3m'>,
                                             hkdfExtract(hkdfExtract('emptyStr', z.1), z.2)),
                                  <$U, 
                                   h(<$cHash0, h(<$cHash0, m1, gy>), 
                                      <
                                       ($V⊕
                                        hkdfExpand(<$cAEAD0, h(<$cHash0, m1, gy>), 'K_2e', '1'>,
                                                   hkdfExtract('emptyStr', z.1))
                                       ), 
                                       z>, 
                                      'emptyStr'>), 
                                   pkU>,
                                  $cAEAD0)
                     >,
                     hkdfExpand(<$cAEAD0, 
                                 h(<$cHash0, h(<$cHash0, m1, gy>), 
                                    <
                                     ($V⊕
                                      hkdfExpand(<$cAEAD0, h(<$cHash0, m1, gy>), 'K_2e', '1'>,
                                                 hkdfExtract('emptyStr', z.1))
                                     ), 
                                     z>, 
                                    'emptyStr'>), 
                                 'K_3ae'>,
                                hkdfExtract('emptyStr', z.1)),
                     h(<$cHash0, h(<$cHash0, m1, gy>), 
                        <
                         ($V⊕
                          hkdfExpand(<$cAEAD0, h(<$cHash0, m1, gy>), 'K_2e', '1'>,
                                     hkdfExtract('emptyStr', z.1))
                         ), 
                         z>, 
                        'emptyStr'>),
                     $cAEAD0)
        >
    ),
    Eq( z.3, true )
    ]->
     [
     Out( <'emptyStr', 
           aeadEncrypt(<$U, 
                        aeadEncrypt('emptyStr',
                                    hkdfExpand(<$cAEAD0, 
                                                h(<$cHash0, h(<$cHash0, m1, gy>), 
                                                   <
                                                    ($V⊕
                                                     hkdfExpand(<$cAEAD0, h(<$cHash0, m1, gy>), 'K_2e', '1'>,
                                                                hkdfExtract('emptyStr', z.1))
                                                    ), 
                                                    z>, 
                                                   'emptyStr'>), 
                                                'K_3m'>,
                                               hkdfExtract(hkdfExtract('emptyStr', z.1), z.2)),
                                    <$U, 
                                     h(<$cHash0, h(<$cHash0, m1, gy>), 
                                        <
                                         ($V⊕
                                          hkdfExpand(<$cAEAD0, h(<$cHash0, m1, gy>), 'K_2e', '1'>,
                                                     hkdfExtract('emptyStr', z.1))
                                         ), 
                                         z>, 
                                        'emptyStr'>), 
                                     pkU>,
                                    $cAEAD0)
                       >,
                       hkdfExpand(<$cAEAD0, 
                                   h(<$cHash0, h(<$cHash0, m1, gy>), 
                                      <
                                       ($V⊕
                                        hkdfExpand(<$cAEAD0, h(<$cHash0, m1, gy>), 'K_2e', '1'>,
                                                   hkdfExtract('emptyStr', z.1))
                                       ), 
                                       z>, 
                                      'emptyStr'>), 
                                   'K_3ae'>,
                                  hkdfExtract('emptyStr', z.1)),
                       h(<$cHash0, h(<$cHash0, m1, gy>), 
                          <
                           ($V⊕
                            hkdfExpand(<$cAEAD0, h(<$cHash0, m1, gy>), 'K_2e', '1'>,
                                       hkdfExtract('emptyStr', z.1))
                           ), 
                           z>, 
                          'emptyStr'>),
                       $cAEAD0)
          >
     )
     ]
    variants (modulo AC)
     1. $V    = $V.51
        $cAEAD0
              = $cAEAD0.52
        $cHash0
              = $cHash0.53
        ~ltk  = ~ltk.54
        ~xx   = ~xx.56
        gy    = gy.58
        m1    = m1.59
        pkV   = pkV.61
        z     = hkdfExpand(<$cAEAD0.52, h(<$cHash0.53, m1.59, gy.58>), 'K_2e', 
                            '2'>,
                           hkdfExtract('emptyStr', gy.58^~xx.56))
        z.1   = gy.58^~xx.56
        z.2   = gy.58^~ltk.54
        z.3   = verify(zero,
                       <<$V.51, h(<$cHash0.53, m1.59, gy.58>), pkV.61>, 
                        aeadEncrypt('emptyStr',
                                    hkdfExpand(<$cAEAD0.52, h(<$cHash0.53, m1.59, gy.58>), 'K_2m'>,
                                               hkdfExtract('emptyStr', gy.58^~xx.56)),
                                    <$V.51, h(<$cHash0.53, m1.59, gy.58>), pkV.61>, $cAEAD0.52)
                       >,
                       pkV.61)
    
     2. $V    = $V.51
        $cAEAD0
              = $cAEAD0.52
        $cHash0
              = $cHash0.53
        ~ltk  = ~ltk.54
        ~xx   = ~xx.56
        gy    = gy.58
        m1    = m1.59
        pkV   = pkV.61
        z     = zero
        z.1   = gy.58^~xx.56
        z.2   = gy.58^~ltk.54
        z.3   = verify(hkdfExpand(<$cAEAD0.52, h(<$cHash0.53, m1.59, gy.58>), 
                                   'K_2e', '2'>,
                                  hkdfExtract('emptyStr', gy.58^~xx.56)),
                       <<$V.51, h(<$cHash0.53, m1.59, gy.58>), pkV.61>, 
                        aeadEncrypt('emptyStr',
                                    hkdfExpand(<$cAEAD0.52, h(<$cHash0.53, m1.59, gy.58>), 'K_2m'>,
                                               hkdfExtract('emptyStr', gy.58^~xx.56)),
                                    <$V.51, h(<$cHash0.53, m1.59, gy.58>), pkV.61>, $cAEAD0.52)
                       >,
                       pkV.61)
    
     3. $V    = $V.53
        $cAEAD0
              = $cAEAD0.54
        $cHash0
              = $cHash0.55
        ~ltk  = ~ltk.56
        ~xx   = ~xx.58
        gy    = gy.60
        m1    = m1.61
        pkV   = pkV.63
        z     = z.65
        z.1   = gy.60^~xx.58
        z.2   = gy.60^~ltk.56
        z.3   = verify((z.65⊕
                        hkdfExpand(<$cAEAD0.54, h(<$cHash0.55, m1.61, gy.60>), 'K_2e', '2'>,
                                   hkdfExtract('emptyStr', gy.60^~xx.58))
                       ),
                       <<$V.53, h(<$cHash0.55, m1.61, gy.60>), pkV.63>, 
                        aeadEncrypt('emptyStr',
                                    hkdfExpand(<$cAEAD0.54, h(<$cHash0.55, m1.61, gy.60>), 'K_2m'>,
                                               hkdfExtract('emptyStr', gy.60^~xx.58)),
                                    <$V.53, h(<$cHash0.55, m1.61, gy.60>), pkV.63>, $cAEAD0.54)
                       >,
                       pkV.63)
    
     4. $V    = $V.56
        $cAEAD0
              = $cAEAD0.57
        $cHash0
              = $cHash0.58
        ~ltk  = ~ltk.59
        ~xx   = ~ltk.59
        gy    = z.71^inv(~ltk.59)
        m1    = m1.64
        pkV   = pkV.66
        z     = z.68
        z.1   = z.71
        z.2   = z.71
        z.3   = verify((z.68⊕
                        hkdfExpand(<$cAEAD0.57, h(<$cHash0.58, m1.64, z.71^inv(~ltk.59)>), 
                                    'K_2e', '2'>,
                                   hkdfExtract('emptyStr', z.71))
                       ),
                       <<$V.56, h(<$cHash0.58, m1.64, z.71^inv(~ltk.59)>), pkV.66>, 
                        aeadEncrypt('emptyStr',
                                    hkdfExpand(<$cAEAD0.57, h(<$cHash0.58, m1.64, z.71^inv(~ltk.59)>), 'K_2m'
                                               >,
                                               hkdfExtract('emptyStr', z.71)),
                                    <$V.56, h(<$cHash0.58, m1.64, z.71^inv(~ltk.59)>), pkV.66>, $cAEAD0.57)
                       >,
                       pkV.66)
    
     5. $V    = $V.56
        $cAEAD0
              = $cAEAD0.57
        $cHash0
              = $cHash0.58
        ~ltk  = ~ltk.59
        ~xx   = ~ltk.59
        gy    = z.71^inv(~ltk.59)
        m1    = m1.64
        pkV   = pkV.66
        z     = hkdfExpand(<$cAEAD0.57, 
                            h(<$cHash0.58, m1.64, z.71^inv(~ltk.59)>), 'K_2e', '2'>,
                           hkdfExtract('emptyStr', z.71))
        z.1   = z.71
        z.2   = z.71
        z.3   = verify(zero,
                       <<$V.56, h(<$cHash0.58, m1.64, z.71^inv(~ltk.59)>), pkV.66>, 
                        aeadEncrypt('emptyStr',
                                    hkdfExpand(<$cAEAD0.57, h(<$cHash0.58, m1.64, z.71^inv(~ltk.59)>), 'K_2m'
                                               >,
                                               hkdfExtract('emptyStr', z.71)),
                                    <$V.56, h(<$cHash0.58, m1.64, z.71^inv(~ltk.59)>), pkV.66>, $cAEAD0.57)
                       >,
                       pkV.66)
    
     6. $V    = $V.56
        $cAEAD0
              = $cAEAD0.57
        $cHash0
              = $cHash0.58
        ~ltk  = ~ltk.59
        ~xx   = ~ltk.59
        gy    = z.71^inv(~ltk.59)
        m1    = m1.64
        pkV   = pkV.66
        z     = zero
        z.1   = z.71
        z.2   = z.71
        z.3   = verify(hkdfExpand(<$cAEAD0.57, 
                                   h(<$cHash0.58, m1.64, z.71^inv(~ltk.59)>), 'K_2e', '2'>,
                                  hkdfExtract('emptyStr', z.71)),
                       <<$V.56, h(<$cHash0.58, m1.64, z.71^inv(~ltk.59)>), pkV.66>, 
                        aeadEncrypt('emptyStr',
                                    hkdfExpand(<$cAEAD0.57, h(<$cHash0.58, m1.64, z.71^inv(~ltk.59)>), 'K_2m'
                                               >,
                                               hkdfExtract('emptyStr', z.71)),
                                    <$V.56, h(<$cHash0.58, m1.64, z.71^inv(~ltk.59)>), pkV.66>, $cAEAD0.57)
                       >,
                       pkV.66)
    
     7. $V    = $V.56
        $cAEAD0
              = $cAEAD0.57
        $cHash0
              = $cHash0.58
        ~ltk  = ~ltk.59
        ~xx   = ~xx.61
        gy    = z.71^inv(~xx.61)
        m1    = m1.64
        pkV   = pkV.66
        z     = z.68
        z.1   = z.71
        z.2   = z.71^(~ltk.59*inv(~xx.61))
        z.3   = verify((z.68⊕
                        hkdfExpand(<$cAEAD0.57, h(<$cHash0.58, m1.64, z.71^inv(~xx.61)>), 
                                    'K_2e', '2'>,
                                   hkdfExtract('emptyStr', z.71))
                       ),
                       <<$V.56, h(<$cHash0.58, m1.64, z.71^inv(~xx.61)>), pkV.66>, 
                        aeadEncrypt('emptyStr',
                                    hkdfExpand(<$cAEAD0.57, h(<$cHash0.58, m1.64, z.71^inv(~xx.61)>), 'K_2m'
                                               >,
                                               hkdfExtract('emptyStr', z.71)),
                                    <$V.56, h(<$cHash0.58, m1.64, z.71^inv(~xx.61)>), pkV.66>, $cAEAD0.57)
                       >,
                       pkV.66)
    
     8. $V    = $V.56
        $cAEAD0
              = $cAEAD0.57
        $cHash0
              = $cHash0.58
        ~ltk  = ~ltk.59
        ~xx   = ~xx.61
        gy    = z.71^inv(~xx.61)
        m1    = m1.64
        pkV   = pkV.66
        z     = hkdfExpand(<$cAEAD0.57, 
                            h(<$cHash0.58, m1.64, z.71^inv(~xx.61)>), 'K_2e', '2'>,
                           hkdfExtract('emptyStr', z.71))
        z.1   = z.71
        z.2   = z.71^(~ltk.59*inv(~xx.61))
        z.3   = verify(zero,
                       <<$V.56, h(<$cHash0.58, m1.64, z.71^inv(~xx.61)>), pkV.66>, 
                        aeadEncrypt('emptyStr',
                                    hkdfExpand(<$cAEAD0.57, h(<$cHash0.58, m1.64, z.71^inv(~xx.61)>), 'K_2m'
                                               >,
                                               hkdfExtract('emptyStr', z.71)),
                                    <$V.56, h(<$cHash0.58, m1.64, z.71^inv(~xx.61)>), pkV.66>, $cAEAD0.57)
                       >,
                       pkV.66)
    
     9. $V    = $V.56
        $cAEAD0
              = $cAEAD0.57
        $cHash0
              = $cHash0.58
        ~ltk  = ~ltk.59
        ~xx   = ~xx.61
        gy    = z.71^inv(~xx.61)
        m1    = m1.64
        pkV   = pkV.66
        z     = zero
        z.1   = z.71
        z.2   = z.71^(~ltk.59*inv(~xx.61))
        z.3   = verify(hkdfExpand(<$cAEAD0.57, 
                                   h(<$cHash0.58, m1.64, z.71^inv(~xx.61)>), 'K_2e', '2'>,
                                  hkdfExtract('emptyStr', z.71)),
                       <<$V.56, h(<$cHash0.58, m1.64, z.71^inv(~xx.61)>), pkV.66>, 
                        aeadEncrypt('emptyStr',
                                    hkdfExpand(<$cAEAD0.57, h(<$cHash0.58, m1.64, z.71^inv(~xx.61)>), 'K_2m'
                                               >,
                                               hkdfExtract('emptyStr', z.71)),
                                    <$V.56, h(<$cHash0.58, m1.64, z.71^inv(~xx.61)>), pkV.66>, $cAEAD0.57)
                       >,
                       pkV.66)
    
    10. $V    = $V.57
        $cAEAD0
              = $cAEAD0.58
        $cHash0
              = $cHash0.59
        ~ltk  = ~ltk.60
        ~xx   = ~xx.62
        gy    = z.73^inv(~ltk.60)
        m1    = m1.65
        pkV   = pkV.67
        z     = z.69
        z.1   = z.73^(~xx.62*inv(~ltk.60))
        z.2   = z.73
        z.3   = verify((z.69⊕
                        hkdfExpand(<$cAEAD0.58, h(<$cHash0.59, m1.65, z.73^inv(~ltk.60)>), 
                                    'K_2e', '2'>,
                                   hkdfExtract('emptyStr', z.73^(~xx.62*inv(~ltk.60))))
                       ),
                       <<$V.57, h(<$cHash0.59, m1.65, z.73^inv(~ltk.60)>), pkV.67>, 
                        aeadEncrypt('emptyStr',
                                    hkdfExpand(<$cAEAD0.58, h(<$cHash0.59, m1.65, z.73^inv(~ltk.60)>), 'K_2m'
                                               >,
                                               hkdfExtract('emptyStr', z.73^(~xx.62*inv(~ltk.60)))),
                                    <$V.57, h(<$cHash0.59, m1.65, z.73^inv(~ltk.60)>), pkV.67>, $cAEAD0.58)
                       >,
                       pkV.67)
    
    11. $V    = $V.57
        $cAEAD0
              = $cAEAD0.58
        $cHash0
              = $cHash0.59
        ~ltk  = ~ltk.60
        ~xx   = ~xx.62
        gy    = z.73^inv(~ltk.60)
        m1    = m1.65
        pkV   = pkV.67
        z     = hkdfExpand(<$cAEAD0.58, 
                            h(<$cHash0.59, m1.65, z.73^inv(~ltk.60)>), 'K_2e', '2'>,
                           hkdfExtract('emptyStr', z.73^(~xx.62*inv(~ltk.60))))
        z.1   = z.73^(~xx.62*inv(~ltk.60))
        z.2   = z.73
        z.3   = verify(zero,
                       <<$V.57, h(<$cHash0.59, m1.65, z.73^inv(~ltk.60)>), pkV.67>, 
                        aeadEncrypt('emptyStr',
                                    hkdfExpand(<$cAEAD0.58, h(<$cHash0.59, m1.65, z.73^inv(~ltk.60)>), 'K_2m'
                                               >,
                                               hkdfExtract('emptyStr', z.73^(~xx.62*inv(~ltk.60)))),
                                    <$V.57, h(<$cHash0.59, m1.65, z.73^inv(~ltk.60)>), pkV.67>, $cAEAD0.58)
                       >,
                       pkV.67)
    
    12. $V    = $V.57
        $cAEAD0
              = $cAEAD0.58
        $cHash0
              = $cHash0.59
        ~ltk  = ~ltk.60
        ~xx   = ~xx.62
        gy    = z.73^inv(~ltk.60)
        m1    = m1.65
        pkV   = pkV.67
        z     = zero
        z.1   = z.73^(~xx.62*inv(~ltk.60))
        z.2   = z.73
        z.3   = verify(hkdfExpand(<$cAEAD0.58, 
                                   h(<$cHash0.59, m1.65, z.73^inv(~ltk.60)>), 'K_2e', '2'>,
                                  hkdfExtract('emptyStr', z.73^(~xx.62*inv(~ltk.60)))),
                       <<$V.57, h(<$cHash0.59, m1.65, z.73^inv(~ltk.60)>), pkV.67>, 
                        aeadEncrypt('emptyStr',
                                    hkdfExpand(<$cAEAD0.58, h(<$cHash0.59, m1.65, z.73^inv(~ltk.60)>), 'K_2m'
                                               >,
                                               hkdfExtract('emptyStr', z.73^(~xx.62*inv(~ltk.60)))),
                                    <$V.57, h(<$cHash0.59, m1.65, z.73^inv(~ltk.60)>), pkV.67>, $cAEAD0.58)
                       >,
                       pkV.67)
    
    13. $V    = $V.723
        $cAEAD0
              = $cAEAD0.724
        $cHash0
              = $cHash0.725
        ~ltk  = ~ltk.726
        ~xx   = ~xx.728
        gy    = gy.730
        m1    = m1.731
        pkV   = pkV.733
        z     = (authR.1443⊕
                 hkdfExpand(<$cAEAD0.724, h(<$cHash0.725, m1.731, gy.730>), 'K_2e', '2'>,
                            hkdfExtract('emptyStr', gy.730^~xx.728))
                )
        z.1   = gy.730^~xx.728
        z.2   = gy.730^~ltk.726
        z.3   = verify(authR.1443,
                       <<$V.723, h(<$cHash0.725, m1.731, gy.730>), pkV.733>, 
                        aeadEncrypt('emptyStr',
                                    hkdfExpand(<$cAEAD0.724, h(<$cHash0.725, m1.731, gy.730>), 'K_2m'>,
                                               hkdfExtract('emptyStr', gy.730^~xx.728)),
                                    <$V.723, h(<$cHash0.725, m1.731, gy.730>), pkV.733>, $cAEAD0.724)
                       >,
                       pkV.733)
    
    14. $V    = $V.724
        $cAEAD0
              = $cAEAD0.725
        $cHash0
              = $cHash0.726
        ~ltk  = ~ltk.727
        ~xx   = ~xx.729
        gy    = x.1444^x.1445
        m1    = m1.732
        pkV   = pkV.734
        z     = hkdfExpand(<$cAEAD0.725, 
                            h(<$cHash0.726, m1.732, x.1444^x.1445>), 'K_2e', '2'>,
                           hkdfExtract('emptyStr', x.1444^(~xx.729*x.1445)))
        z.1   = x.1444^(~xx.729*x.1445)
        z.2   = x.1444^(~ltk.727*x.1445)
        z.3   = verify(zero,
                       <<$V.724, h(<$cHash0.726, m1.732, x.1444^x.1445>), pkV.734>, 
                        aeadEncrypt('emptyStr',
                                    hkdfExpand(<$cAEAD0.725, h(<$cHash0.726, m1.732, x.1444^x.1445>), 'K_2m'
                                               >,
                                               hkdfExtract('emptyStr', x.1444^(~xx.729*x.1445))),
                                    <$V.724, h(<$cHash0.726, m1.732, x.1444^x.1445>), pkV.734>, $cAEAD0.725)
                       >,
                       pkV.734)
    
    15. $V    = $V.725
        $cAEAD0
              = $cAEAD0.726
        $cHash0
              = $cHash0.727
        ~ltk  = ~ltk.728
        ~xx   = ~xx.730
        gy    = x.1445^x.1446
        m1    = m1.733
        pkV   = pkV.735
        z     = (authR.1447⊕
                 hkdfExpand(<$cAEAD0.726, h(<$cHash0.727, m1.733, x.1445^x.1446>), 
                             'K_2e', '2'>,
                            hkdfExtract('emptyStr', x.1445^(~xx.730*x.1446)))
                )
        z.1   = x.1445^(~xx.730*x.1446)
        z.2   = x.1445^(~ltk.728*x.1446)
        z.3   = verify(authR.1447,
                       <<$V.725, h(<$cHash0.727, m1.733, x.1445^x.1446>), pkV.735>, 
                        aeadEncrypt('emptyStr',
                                    hkdfExpand(<$cAEAD0.726, h(<$cHash0.727, m1.733, x.1445^x.1446>), 'K_2m'
                                               >,
                                               hkdfExtract('emptyStr', x.1445^(~xx.730*x.1446))),
                                    <$V.725, h(<$cHash0.727, m1.733, x.1445^x.1446>), pkV.735>, $cAEAD0.726)
                       >,
                       pkV.735)
    
    16. $V    = $V.725
        $cAEAD0
              = $cAEAD0.726
        $cHash0
              = $cHash0.727
        ~ltk  = ~ltk.728
        ~xx   = ~xx.730
        gy    = x.1446^inv((~xx.730*x.1447))
        m1    = m1.733
        pkV   = pkV.735
        z     = hkdfExpand(<$cAEAD0.726, 
                            h(<$cHash0.727, m1.733, x.1446^inv((~xx.730*x.1447))>), 'K_2e', '2'>,
                           hkdfExtract('emptyStr', x.1446^inv(x.1447)))
        z.1   = x.1446^inv(x.1447)
        z.2   = x.1446^(~ltk.728*inv((~xx.730*x.1447)))
        z.3   = verify(zero,
                       <
                        <$V.725, h(<$cHash0.727, m1.733, x.1446^inv((~xx.730*x.1447))>), pkV.735
                        >, 
                        aeadEncrypt('emptyStr',
                                    hkdfExpand(<$cAEAD0.726, 
                                                h(<$cHash0.727, m1.733, x.1446^inv((~xx.730*x.1447))>), 'K_2m'
                                               >,
                                               hkdfExtract('emptyStr', x.1446^inv(x.1447))),
                                    <$V.725, h(<$cHash0.727, m1.733, x.1446^inv((~xx.730*x.1447))>), pkV.735
                                    >,
                                    $cAEAD0.726)
                       >,
                       pkV.735)
    
    17. $V    = $V.725
        $cAEAD0
              = $cAEAD0.726
        $cHash0
              = $cHash0.727
        ~ltk  = ~ltk.728
        ~xx   = ~xx.730
        gy    = x.1446^(x.1447*inv(~xx.730))
        m1    = m1.733
        pkV   = pkV.735
        z     = hkdfExpand(<$cAEAD0.726, 
                            h(<$cHash0.727, m1.733, x.1446^(x.1447*inv(~xx.730))>), 'K_2e', '2'>,
                           hkdfExtract('emptyStr', x.1446^x.1447))
        z.1   = x.1446^x.1447
        z.2   = x.1446^(~ltk.728*x.1447*inv(~xx.730))
        z.3   = verify(zero,
                       <
                        <$V.725, h(<$cHash0.727, m1.733, x.1446^(x.1447*inv(~xx.730))>), pkV.735
                        >, 
                        aeadEncrypt('emptyStr',
                                    hkdfExpand(<$cAEAD0.726, 
                                                h(<$cHash0.727, m1.733, x.1446^(x.1447*inv(~xx.730))>), 'K_2m'
                                               >,
                                               hkdfExtract('emptyStr', x.1446^x.1447)),
                                    <$V.725, h(<$cHash0.727, m1.733, x.1446^(x.1447*inv(~xx.730))>), pkV.735
                                    >,
                                    $cAEAD0.726)
                       >,
                       pkV.735)
    
    18. $V    = $V.726
        $cAEAD0
              = $cAEAD0.727
        $cHash0
              = $cHash0.728
        ~ltk  = ~ltk.729
        ~xx   = ~ltk.729
        gy    = x.1448^inv((~ltk.729*x.1449))
        m1    = m1.734
        pkV   = pkV.736
        z     = hkdfExpand(<$cAEAD0.727, 
                            h(<$cHash0.728, m1.734, x.1448^inv((~ltk.729*x.1449))>), 'K_2e', '2'>,
                           hkdfExtract('emptyStr', x.1448^inv(x.1449)))
        z.1   = x.1448^inv(x.1449)
        z.2   = x.1448^inv(x.1449)
        z.3   = verify(zero,
                       <
                        <$V.726, h(<$cHash0.728, m1.734, x.1448^inv((~ltk.729*x.1449))>), pkV.736
                        >, 
                        aeadEncrypt('emptyStr',
                                    hkdfExpand(<$cAEAD0.727, 
                                                h(<$cHash0.728, m1.734, x.1448^inv((~ltk.729*x.1449))>), 
                                                'K_2m'>,
                                               hkdfExtract('emptyStr', x.1448^inv(x.1449))),
                                    <$V.726, h(<$cHash0.728, m1.734, x.1448^inv((~ltk.729*x.1449))>), pkV.736
                                    >,
                                    $cAEAD0.727)
                       >,
                       pkV.736)
    
    19. $V    = $V.726
        $cAEAD0
              = $cAEAD0.727
        $cHash0
              = $cHash0.728
        ~ltk  = ~ltk.729
        ~xx   = ~ltk.729
        gy    = x.1448^(x.1449*inv(~ltk.729))
        m1    = m1.734
        pkV   = pkV.736
        z     = hkdfExpand(<$cAEAD0.727, 
                            h(<$cHash0.728, m1.734, x.1448^(x.1449*inv(~ltk.729))>), 'K_2e', '2'>,
                           hkdfExtract('emptyStr', x.1448^x.1449))
        z.1   = x.1448^x.1449
        z.2   = x.1448^x.1449
        z.3   = verify(zero,
                       <
                        <$V.726, h(<$cHash0.728, m1.734, x.1448^(x.1449*inv(~ltk.729))>), pkV.736
                        >, 
                        aeadEncrypt('emptyStr',
                                    hkdfExpand(<$cAEAD0.727, 
                                                h(<$cHash0.728, m1.734, x.1448^(x.1449*inv(~ltk.729))>), 
                                                'K_2m'>,
                                               hkdfExtract('emptyStr', x.1448^x.1449)),
                                    <$V.726, h(<$cHash0.728, m1.734, x.1448^(x.1449*inv(~ltk.729))>), pkV.736
                                    >,
                                    $cAEAD0.727)
                       >,
                       pkV.736)
    
    20. $V    = $V.726
        $cAEAD0
              = $cAEAD0.727
        $cHash0
              = $cHash0.728
        ~ltk  = ~ltk.729
        ~xx   = ~xx.731
        gy    = z.741^inv(~xx.731)
        m1    = m1.734
        pkV   = pkV.736
        z     = (authR.1449⊕
                 hkdfExpand(<$cAEAD0.727, h(<$cHash0.728, m1.734, z.741^inv(~xx.731)>), 
                             'K_2e', '2'>,
                            hkdfExtract('emptyStr', z.741))
                )
        z.1   = z.741
        z.2   = z.741^(~ltk.729*inv(~xx.731))
        z.3   = verify(authR.1449,
                       <<$V.726, h(<$cHash0.728, m1.734, z.741^inv(~xx.731)>), pkV.736>, 
                        aeadEncrypt('emptyStr',
                                    hkdfExpand(<$cAEAD0.727, h(<$cHash0.728, m1.734, z.741^inv(~xx.731)>), 
                                                'K_2m'>,
                                               hkdfExtract('emptyStr', z.741)),
                                    <$V.726, h(<$cHash0.728, m1.734, z.741^inv(~xx.731)>), pkV.736>,
                                    $cAEAD0.727)
                       >,
                       pkV.736)
    
    21. $V    = $V.726
        $cAEAD0
              = $cAEAD0.727
        $cHash0
              = $cHash0.728
        ~ltk  = ~ltk.729
        ~xx   = ~xx.731
        gy    = x.1447^(x.1448*inv((~xx.731*x.1449)))
        m1    = m1.734
        pkV   = pkV.736
        z     = hkdfExpand(<$cAEAD0.727, 
                            h(<$cHash0.728, m1.734, x.1447^(x.1448*inv((~xx.731*x.1449)))>), 'K_2e', 
                            '2'>,
                           hkdfExtract('emptyStr', x.1447^(x.1448*inv(x.1449))))
        z.1   = x.1447^(x.1448*inv(x.1449))
        z.2   = x.1447^(~ltk.729*x.1448*inv((~xx.731*x.1449)))
        z.3   = verify(zero,
                       <
                        <$V.726, 
                         h(<$cHash0.728, m1.734, x.1447^(x.1448*inv((~xx.731*x.1449)))>), pkV.736
                        >, 
                        aeadEncrypt('emptyStr',
                                    hkdfExpand(<$cAEAD0.727, 
                                                h(<$cHash0.728, m1.734, x.1447^(x.1448*inv((~xx.731*x.1449)))
                                                  >), 
                                                'K_2m'>,
                                               hkdfExtract('emptyStr', x.1447^(x.1448*inv(x.1449)))),
                                    <$V.726, 
                                     h(<$cHash0.728, m1.734, x.1447^(x.1448*inv((~xx.731*x.1449)))>), pkV.736
                                    >,
                                    $cAEAD0.727)
                       >,
                       pkV.736)
    
    22. $V    = $V.726
        $cAEAD0
              = $cAEAD0.727
        $cHash0
              = $cHash0.728
        ~ltk  = ~ltk.729
        ~xx   = ~xx.731
        gy    = x.1449^inv((~ltk.729*~xx.731))
        m1    = m1.734
        pkV   = pkV.736
        z     = hkdfExpand(<$cAEAD0.727, 
                            h(<$cHash0.728, m1.734, x.1449^inv((~ltk.729*~xx.731))>), 'K_2e', '2'>,
                           hkdfExtract('emptyStr', x.1449^inv(~ltk.729)))
        z.1   = x.1449^inv(~ltk.729)
        z.2   = x.1449^inv(~xx.731)
        z.3   = verify(zero,
                       <
                        <$V.726, h(<$cHash0.728, m1.734, x.1449^inv((~ltk.729*~xx.731))>), 
                         pkV.736>, 
                        aeadEncrypt('emptyStr',
                                    hkdfExpand(<$cAEAD0.727, 
                                                h(<$cHash0.728, m1.734, x.1449^inv((~ltk.729*~xx.731))>), 
                                                'K_2m'>,
                                               hkdfExtract('emptyStr', x.1449^inv(~ltk.729))),
                                    <$V.726, h(<$cHash0.728, m1.734, x.1449^inv((~ltk.729*~xx.731))>), 
                                     pkV.736>,
                                    $cAEAD0.727)
                       >,
                       pkV.736)
    
    23. $V    = $V.727
        $cAEAD0
              = $cAEAD0.728
        $cHash0
              = $cHash0.729
        ~ltk  = ~ltk.730
        ~xx   = ~ltk.730
        gy    = z.742^inv(~ltk.730)
        m1    = m1.735
        pkV   = pkV.737
        z     = (authR.1451⊕
                 hkdfExpand(<$cAEAD0.728, h(<$cHash0.729, m1.735, z.742^inv(~ltk.730)>), 
                             'K_2e', '2'>,
                            hkdfExtract('emptyStr', z.742))
                )
        z.1   = z.742
        z.2   = z.742
        z.3   = verify(authR.1451,
                       <<$V.727, h(<$cHash0.729, m1.735, z.742^inv(~ltk.730)>), pkV.737>, 
                        aeadEncrypt('emptyStr',
                                    hkdfExpand(<$cAEAD0.728, h(<$cHash0.729, m1.735, z.742^inv(~ltk.730)>), 
                                                'K_2m'>,
                                               hkdfExtract('emptyStr', z.742)),
                                    <$V.727, h(<$cHash0.729, m1.735, z.742^inv(~ltk.730)>), pkV.737>,
                                    $cAEAD0.728)
                       >,
                       pkV.737)
    
    24. $V    = $V.727
        $cAEAD0
              = $cAEAD0.728
        $cHash0
              = $cHash0.729
        ~ltk  = ~ltk.730
        ~xx   = ~ltk.730
        gy    = x.1449^(x.1450*inv((~ltk.730*x.1451)))
        m1    = m1.735
        pkV   = pkV.737
        z     = hkdfExpand(<$cAEAD0.728, 
                            h(<$cHash0.729, m1.735, x.1449^(x.1450*inv((~ltk.730*x.1451)))>), 
                            'K_2e', '2'>,
                           hkdfExtract('emptyStr', x.1449^(x.1450*inv(x.1451))))
        z.1   = x.1449^(x.1450*inv(x.1451))
        z.2   = x.1449^(x.1450*inv(x.1451))
        z.3   = verify(zero,
                       <
                        <$V.727, 
                         h(<$cHash0.729, m1.735, x.1449^(x.1450*inv((~ltk.730*x.1451)))>), pkV.737
                        >, 
                        aeadEncrypt('emptyStr',
                                    hkdfExpand(<$cAEAD0.728, 
                                                h(<$cHash0.729, m1.735, x.1449^(x.1450*inv((~ltk.730*x.1451)))
                                                  >), 
                                                'K_2m'>,
                                               hkdfExtract('emptyStr', x.1449^(x.1450*inv(x.1451)))),
                                    <$V.727, 
                                     h(<$cHash0.729, m1.735, x.1449^(x.1450*inv((~ltk.730*x.1451)))>), pkV.737
                                    >,
                                    $cAEAD0.728)
                       >,
                       pkV.737)
    
    25. $V    = $V.727
        $cAEAD0
              = $cAEAD0.728
        $cHash0
              = $cHash0.729
        ~ltk  = ~ltk.730
        ~xx   = ~xx.732
        gy    = x.1449^inv((~xx.732*x.1450))
        m1    = m1.735
        pkV   = pkV.737
        z     = (authR.1451⊕
                 hkdfExpand(<$cAEAD0.728, 
                             h(<$cHash0.729, m1.735, x.1449^inv((~xx.732*x.1450))>), 'K_2e', '2'>,
                            hkdfExtract('emptyStr', x.1449^inv(x.1450)))
                )
        z.1   = x.1449^inv(x.1450)
        z.2   = x.1449^(~ltk.730*inv((~xx.732*x.1450)))
        z.3   = verify(authR.1451,
                       <
                        <$V.727, h(<$cHash0.729, m1.735, x.1449^inv((~xx.732*x.1450))>), pkV.737
                        >, 
                        aeadEncrypt('emptyStr',
                                    hkdfExpand(<$cAEAD0.728, 
                                                h(<$cHash0.729, m1.735, x.1449^inv((~xx.732*x.1450))>), 'K_2m'
                                               >,
                                               hkdfExtract('emptyStr', x.1449^inv(x.1450))),
                                    <$V.727, h(<$cHash0.729, m1.735, x.1449^inv((~xx.732*x.1450))>), pkV.737
                                    >,
                                    $cAEAD0.728)
                       >,
                       pkV.737)
    
    26. $V    = $V.727
        $cAEAD0
              = $cAEAD0.728
        $cHash0
              = $cHash0.729
        ~ltk  = ~ltk.730
        ~xx   = ~xx.732
        gy    = x.1449^(x.1450*inv(~xx.732))
        m1    = m1.735
        pkV   = pkV.737
        z     = (authR.1451⊕
                 hkdfExpand(<$cAEAD0.728, 
                             h(<$cHash0.729, m1.735, x.1449^(x.1450*inv(~xx.732))>), 'K_2e', '2'>,
                            hkdfExtract('emptyStr', x.1449^x.1450))
                )
        z.1   = x.1449^x.1450
        z.2   = x.1449^(~ltk.730*x.1450*inv(~xx.732))
        z.3   = verify(authR.1451,
                       <
                        <$V.727, h(<$cHash0.729, m1.735, x.1449^(x.1450*inv(~xx.732))>), pkV.737
                        >, 
                        aeadEncrypt('emptyStr',
                                    hkdfExpand(<$cAEAD0.728, 
                                                h(<$cHash0.729, m1.735, x.1449^(x.1450*inv(~xx.732))>), 'K_2m'
                                               >,
                                               hkdfExtract('emptyStr', x.1449^x.1450)),
                                    <$V.727, h(<$cHash0.729, m1.735, x.1449^(x.1450*inv(~xx.732))>), pkV.737
                                    >,
                                    $cAEAD0.728)
                       >,
                       pkV.737)
    
    27. $V    = $V.727
        $cAEAD0
              = $cAEAD0.728
        $cHash0
              = $cHash0.729
        ~ltk  = ~ltk.730
        ~xx   = ~xx.732
        gy    = x.1450^inv((~ltk.730*~xx.732*x.1451))
        m1    = m1.735
        pkV   = pkV.737
        z     = hkdfExpand(<$cAEAD0.728, 
                            h(<$cHash0.729, m1.735, x.1450^inv((~ltk.730*~xx.732*x.1451))>), 'K_2e', 
                            '2'>,
                           hkdfExtract('emptyStr', x.1450^inv((~ltk.730*x.1451))))
        z.1   = x.1450^inv((~ltk.730*x.1451))
        z.2   = x.1450^inv((~xx.732*x.1451))
        z.3   = verify(zero,
                       <
                        <$V.727, 
                         h(<$cHash0.729, m1.735, x.1450^inv((~ltk.730*~xx.732*x.1451))>), pkV.737
                        >, 
                        aeadEncrypt('emptyStr',
                                    hkdfExpand(<$cAEAD0.728, 
                                                h(<$cHash0.729, m1.735, x.1450^inv((~ltk.730*~xx.732*x.1451))
                                                  >), 
                                                'K_2m'>,
                                               hkdfExtract('emptyStr', x.1450^inv((~ltk.730*x.1451)))),
                                    <$V.727, 
                                     h(<$cHash0.729, m1.735, x.1450^inv((~ltk.730*~xx.732*x.1451))>), pkV.737
                                    >,
                                    $cAEAD0.728)
                       >,
                       pkV.737)
    
    28. $V    = $V.727
        $cAEAD0
              = $cAEAD0.728
        $cHash0
              = $cHash0.729
        ~ltk  = ~ltk.730
        ~xx   = ~xx.732
        gy    = x.1450^inv((~ltk.730*x.1451))
        m1    = m1.735
        pkV   = pkV.737
        z     = hkdfExpand(<$cAEAD0.728, 
                            h(<$cHash0.729, m1.735, x.1450^inv((~ltk.730*x.1451))>), 'K_2e', '2'>,
                           hkdfExtract('emptyStr', x.1450^(~xx.732*inv((~ltk.730*x.1451)))))
        z.1   = x.1450^(~xx.732*inv((~ltk.730*x.1451)))
        z.2   = x.1450^inv(x.1451)
        z.3   = verify(zero,
                       <
                        <$V.727, h(<$cHash0.729, m1.735, x.1450^inv((~ltk.730*x.1451))>), pkV.737
                        >, 
                        aeadEncrypt('emptyStr',
                                    hkdfExpand(<$cAEAD0.728, 
                                                h(<$cHash0.729, m1.735, x.1450^inv((~ltk.730*x.1451))>), 
                                                'K_2m'>,
                                               hkdfExtract('emptyStr',
                                                           x.1450^(~xx.732*inv((~ltk.730*x.1451))))),
                                    <$V.727, h(<$cHash0.729, m1.735, x.1450^inv((~ltk.730*x.1451))>), pkV.737
                                    >,
                                    $cAEAD0.728)
                       >,
                       pkV.737)
    
    29. $V    = $V.727
        $cAEAD0
              = $cAEAD0.728
        $cHash0
              = $cHash0.729
        ~ltk  = ~ltk.730
        ~xx   = ~xx.732
        gy    = x.1450^(x.1451*inv(~ltk.730))
        m1    = m1.735
        pkV   = pkV.737
        z     = hkdfExpand(<$cAEAD0.728, 
                            h(<$cHash0.729, m1.735, x.1450^(x.1451*inv(~ltk.730))>), 'K_2e', '2'>,
                           hkdfExtract('emptyStr', x.1450^(~xx.732*x.1451*inv(~ltk.730))))
        z.1   = x.1450^(~xx.732*x.1451*inv(~ltk.730))
        z.2   = x.1450^x.1451
        z.3   = verify(zero,
                       <
                        <$V.727, h(<$cHash0.729, m1.735, x.1450^(x.1451*inv(~ltk.730))>), pkV.737
                        >, 
                        aeadEncrypt('emptyStr',
                                    hkdfExpand(<$cAEAD0.728, 
                                                h(<$cHash0.729, m1.735, x.1450^(x.1451*inv(~ltk.730))>), 
                                                'K_2m'>,
                                               hkdfExtract('emptyStr',
                                                           x.1450^(~xx.732*x.1451*inv(~ltk.730)))),
                                    <$V.727, h(<$cHash0.729, m1.735, x.1450^(x.1451*inv(~ltk.730))>), pkV.737
                                    >,
                                    $cAEAD0.728)
                       >,
                       pkV.737)
    
    30. $V    = $V.727
        $cAEAD0
              = $cAEAD0.728
        $cHash0
              = $cHash0.729
        ~ltk  = ~ltk.730
        ~xx   = ~xx.732
        gy    = x.1450^(x.1451*inv((~ltk.730*~xx.732)))
        m1    = m1.735
        pkV   = pkV.737
        z     = hkdfExpand(<$cAEAD0.728, 
                            h(<$cHash0.729, m1.735, x.1450^(x.1451*inv((~ltk.730*~xx.732)))>), 
                            'K_2e', '2'>,
                           hkdfExtract('emptyStr', x.1450^(x.1451*inv(~ltk.730))))
        z.1   = x.1450^(x.1451*inv(~ltk.730))
        z.2   = x.1450^(x.1451*inv(~xx.732))
        z.3   = verify(zero,
                       <
                        <$V.727, 
                         h(<$cHash0.729, m1.735, x.1450^(x.1451*inv((~ltk.730*~xx.732)))>), 
                         pkV.737>, 
                        aeadEncrypt('emptyStr',
                                    hkdfExpand(<$cAEAD0.728, 
                                                h(<$cHash0.729, m1.735, 
                                                   x.1450^(x.1451*inv((~ltk.730*~xx.732)))>), 
                                                'K_2m'>,
                                               hkdfExtract('emptyStr', x.1450^(x.1451*inv(~ltk.730)))),
                                    <$V.727, 
                                     h(<$cHash0.729, m1.735, x.1450^(x.1451*inv((~ltk.730*~xx.732)))>), 
                                     pkV.737>,
                                    $cAEAD0.728)
                       >,
                       pkV.737)
    
    31. $V    = $V.728
        $cAEAD0
              = $cAEAD0.729
        $cHash0
              = $cHash0.730
        ~ltk  = ~ltk.731
        ~xx   = ~ltk.731
        gy    = x.1451^inv((~ltk.731*x.1452))
        m1    = m1.736
        pkV   = pkV.738
        z     = (authR.1453⊕
                 hkdfExpand(<$cAEAD0.729, 
                             h(<$cHash0.730, m1.736, x.1451^inv((~ltk.731*x.1452))>), 'K_2e', '2'>,
                            hkdfExtract('emptyStr', x.1451^inv(x.1452)))
                )
        z.1   = x.1451^inv(x.1452)
        z.2   = x.1451^inv(x.1452)
        z.3   = verify(authR.1453,
                       <
                        <$V.728, h(<$cHash0.730, m1.736, x.1451^inv((~ltk.731*x.1452))>), pkV.738
                        >, 
                        aeadEncrypt('emptyStr',
                                    hkdfExpand(<$cAEAD0.729, 
                                                h(<$cHash0.730, m1.736, x.1451^inv((~ltk.731*x.1452))>), 
                                                'K_2m'>,
                                               hkdfExtract('emptyStr', x.1451^inv(x.1452))),
                                    <$V.728, h(<$cHash0.730, m1.736, x.1451^inv((~ltk.731*x.1452))>), pkV.738
                                    >,
                                    $cAEAD0.729)
                       >,
                       pkV.738)
    
    32. $V    = $V.728
        $cAEAD0
              = $cAEAD0.729
        $cHash0
              = $cHash0.730
        ~ltk  = ~ltk.731
        ~xx   = ~ltk.731
        gy    = x.1451^(x.1452*inv(~ltk.731))
        m1    = m1.736
        pkV   = pkV.738
        z     = (authR.1453⊕
                 hkdfExpand(<$cAEAD0.729, 
                             h(<$cHash0.730, m1.736, x.1451^(x.1452*inv(~ltk.731))>), 'K_2e', '2'>,
                            hkdfExtract('emptyStr', x.1451^x.1452))
                )
        z.1   = x.1451^x.1452
        z.2   = x.1451^x.1452
        z.3   = verify(authR.1453,
                       <
                        <$V.728, h(<$cHash0.730, m1.736, x.1451^(x.1452*inv(~ltk.731))>), pkV.738
                        >, 
                        aeadEncrypt('emptyStr',
                                    hkdfExpand(<$cAEAD0.729, 
                                                h(<$cHash0.730, m1.736, x.1451^(x.1452*inv(~ltk.731))>), 
                                                'K_2m'>,
                                               hkdfExtract('emptyStr', x.1451^x.1452)),
                                    <$V.728, h(<$cHash0.730, m1.736, x.1451^(x.1452*inv(~ltk.731))>), pkV.738
                                    >,
                                    $cAEAD0.729)
                       >,
                       pkV.738)
    
    33. $V    = $V.728
        $cAEAD0
              = $cAEAD0.729
        $cHash0
              = $cHash0.730
        ~ltk  = ~ltk.731
        ~xx   = ~xx.733
        gy    = z.744^inv(~ltk.731)
        m1    = m1.736
        pkV   = pkV.738
        z     = (authR.1453⊕
                 hkdfExpand(<$cAEAD0.729, h(<$cHash0.730, m1.736, z.744^inv(~ltk.731)>), 
                             'K_2e', '2'>,
                            hkdfExtract('emptyStr', z.744^(~xx.733*inv(~ltk.731))))
                )
        z.1   = z.744^(~xx.733*inv(~ltk.731))
        z.2   = z.744
        z.3   = verify(authR.1453,
                       <<$V.728, h(<$cHash0.730, m1.736, z.744^inv(~ltk.731)>), pkV.738>, 
                        aeadEncrypt('emptyStr',
                                    hkdfExpand(<$cAEAD0.729, h(<$cHash0.730, m1.736, z.744^inv(~ltk.731)>), 
                                                'K_2m'>,
                                               hkdfExtract('emptyStr', z.744^(~xx.733*inv(~ltk.731)))),
                                    <$V.728, h(<$cHash0.730, m1.736, z.744^inv(~ltk.731)>), pkV.738>,
                                    $cAEAD0.729)
                       >,
                       pkV.738)
    
    34. $V    = $V.728
        $cAEAD0
              = $cAEAD0.729
        $cHash0
              = $cHash0.730
        ~ltk  = ~ltk.731
        ~xx   = ~xx.733
        gy    = x.1450^(x.1451*inv((~xx.733*x.1452)))
        m1    = m1.736
        pkV   = pkV.738
        z     = (authR.1453⊕
                 hkdfExpand(<$cAEAD0.729, 
                             h(<$cHash0.730, m1.736, x.1450^(x.1451*inv((~xx.733*x.1452)))>), 'K_2e', 
                             '2'>,
                            hkdfExtract('emptyStr', x.1450^(x.1451*inv(x.1452))))
                )
        z.1   = x.1450^(x.1451*inv(x.1452))
        z.2   = x.1450^(~ltk.731*x.1451*inv((~xx.733*x.1452)))
        z.3   = verify(authR.1453,
                       <
                        <$V.728, 
                         h(<$cHash0.730, m1.736, x.1450^(x.1451*inv((~xx.733*x.1452)))>), pkV.738
                        >, 
                        aeadEncrypt('emptyStr',
                                    hkdfExpand(<$cAEAD0.729, 
                                                h(<$cHash0.730, m1.736, x.1450^(x.1451*inv((~xx.733*x.1452)))
                                                  >), 
                                                'K_2m'>,
                                               hkdfExtract('emptyStr', x.1450^(x.1451*inv(x.1452)))),
                                    <$V.728, 
                                     h(<$cHash0.730, m1.736, x.1450^(x.1451*inv((~xx.733*x.1452)))>), pkV.738
                                    >,
                                    $cAEAD0.729)
                       >,
                       pkV.738)
    
    35. $V    = $V.728
        $cAEAD0
              = $cAEAD0.729
        $cHash0
              = $cHash0.730
        ~ltk  = ~ltk.731
        ~xx   = ~xx.733
        gy    = x.1451^(x.1452*inv((~ltk.731*~xx.733*x.1453)))
        m1    = m1.736
        pkV   = pkV.738
        z     = hkdfExpand(<$cAEAD0.729, 
                            h(<$cHash0.730, m1.736, x.1451^(x.1452*inv((~ltk.731*~xx.733*x.1453)))
                              >), 
                            'K_2e', '2'>,
                           hkdfExtract('emptyStr', x.1451^(x.1452*inv((~ltk.731*x.1453)))))
        z.1   = x.1451^(x.1452*inv((~ltk.731*x.1453)))
        z.2   = x.1451^(x.1452*inv((~xx.733*x.1453)))
        z.3   = verify(zero,
                       <
                        <$V.728, 
                         h(<$cHash0.730, m1.736, x.1451^(x.1452*inv((~ltk.731*~xx.733*x.1453)))
                           >), 
                         pkV.738>, 
                        aeadEncrypt('emptyStr',
                                    hkdfExpand(<$cAEAD0.729, 
                                                h(<$cHash0.730, m1.736, 
                                                   x.1451^(x.1452*inv((~ltk.731*~xx.733*x.1453)))>), 
                                                'K_2m'>,
                                               hkdfExtract('emptyStr',
                                                           x.1451^(x.1452*inv((~ltk.731*x.1453))))),
                                    <$V.728, 
                                     h(<$cHash0.730, m1.736, x.1451^(x.1452*inv((~ltk.731*~xx.733*x.1453)))
                                       >), 
                                     pkV.738>,
                                    $cAEAD0.729)
                       >,
                       pkV.738)
    
    36. $V    = $V.728
        $cAEAD0
              = $cAEAD0.729
        $cHash0
              = $cHash0.730
        ~ltk  = ~ltk.731
        ~xx   = ~xx.733
        gy    = x.1451^(x.1452*inv((~ltk.731*x.1453)))
        m1    = m1.736
        pkV   = pkV.738
        z     = hkdfExpand(<$cAEAD0.729, 
                            h(<$cHash0.730, m1.736, x.1451^(x.1452*inv((~ltk.731*x.1453)))>), 
                            'K_2e', '2'>,
                           hkdfExtract('emptyStr', x.1451^(~xx.733*x.1452*inv((~ltk.731*x.1453)))))
        z.1   = x.1451^(~xx.733*x.1452*inv((~ltk.731*x.1453)))
        z.2   = x.1451^(x.1452*inv(x.1453))
        z.3   = verify(zero,
                       <
                        <$V.728, 
                         h(<$cHash0.730, m1.736, x.1451^(x.1452*inv((~ltk.731*x.1453)))>), pkV.738
                        >, 
                        aeadEncrypt('emptyStr',
                                    hkdfExpand(<$cAEAD0.729, 
                                                h(<$cHash0.730, m1.736, x.1451^(x.1452*inv((~ltk.731*x.1453)))
                                                  >), 
                                                'K_2m'>,
                                               hkdfExtract('emptyStr',
                                                           x.1451^(~xx.733*x.1452*inv((~ltk.731*x.1453))))),
                                    <$V.728, 
                                     h(<$cHash0.730, m1.736, x.1451^(x.1452*inv((~ltk.731*x.1453)))>), pkV.738
                                    >,
                                    $cAEAD0.729)
                       >,
                       pkV.738)
    
    37. $V    = $V.728
        $cAEAD0
              = $cAEAD0.729
        $cHash0
              = $cHash0.730
        ~ltk  = ~ltk.731
        ~xx   = ~xx.733
        gy    = x.1452^inv((~ltk.731*~xx.733))
        m1    = m1.736
        pkV   = pkV.738
        z     = (authR.1453⊕
                 hkdfExpand(<$cAEAD0.729, 
                             h(<$cHash0.730, m1.736, x.1452^inv((~ltk.731*~xx.733))>), 'K_2e', '2'>,
                            hkdfExtract('emptyStr', x.1452^inv(~ltk.731)))
                )
        z.1   = x.1452^inv(~ltk.731)
        z.2   = x.1452^inv(~xx.733)
        z.3   = verify(authR.1453,
                       <
                        <$V.728, h(<$cHash0.730, m1.736, x.1452^inv((~ltk.731*~xx.733))>), 
                         pkV.738>, 
                        aeadEncrypt('emptyStr',
                                    hkdfExpand(<$cAEAD0.729, 
                                                h(<$cHash0.730, m1.736, x.1452^inv((~ltk.731*~xx.733))>), 
                                                'K_2m'>,
                                               hkdfExtract('emptyStr', x.1452^inv(~ltk.731))),
                                    <$V.728, h(<$cHash0.730, m1.736, x.1452^inv((~ltk.731*~xx.733))>), 
                                     pkV.738>,
                                    $cAEAD0.729)
                       >,
                       pkV.738)
    
    38. $V    = $V.729
        $cAEAD0
              = $cAEAD0.730
        $cHash0
              = $cHash0.731
        ~ltk  = ~ltk.732
        ~xx   = ~ltk.732
        gy    = x.1452^(x.1453*inv((~ltk.732*x.1454)))
        m1    = m1.737
        pkV   = pkV.739
        z     = (authR.1455⊕
                 hkdfExpand(<$cAEAD0.730, 
                             h(<$cHash0.731, m1.737, x.1452^(x.1453*inv((~ltk.732*x.1454)))>), 
                             'K_2e', '2'>,
                            hkdfExtract('emptyStr', x.1452^(x.1453*inv(x.1454))))
                )
        z.1   = x.1452^(x.1453*inv(x.1454))
        z.2   = x.1452^(x.1453*inv(x.1454))
        z.3   = verify(authR.1455,
                       <
                        <$V.729, 
                         h(<$cHash0.731, m1.737, x.1452^(x.1453*inv((~ltk.732*x.1454)))>), pkV.739
                        >, 
                        aeadEncrypt('emptyStr',
                                    hkdfExpand(<$cAEAD0.730, 
                                                h(<$cHash0.731, m1.737, x.1452^(x.1453*inv((~ltk.732*x.1454)))
                                                  >), 
                                                'K_2m'>,
                                               hkdfExtract('emptyStr', x.1452^(x.1453*inv(x.1454)))),
                                    <$V.729, 
                                     h(<$cHash0.731, m1.737, x.1452^(x.1453*inv((~ltk.732*x.1454)))>), pkV.739
                                    >,
                                    $cAEAD0.730)
                       >,
                       pkV.739)
    
    39. $V    = $V.729
        $cAEAD0
              = $cAEAD0.730
        $cHash0
              = $cHash0.731
        ~ltk  = ~ltk.732
        ~xx   = ~ltk.732
        gy    = x.1454^inv((~ltk.732*x.1455))
        m1    = m1.737
        pkV   = pkV.739
        z     = zero
        z.1   = x.1454^inv(x.1455)
        z.2   = x.1454^inv(x.1455)
        z.3   = verify(hkdfExpand(<$cAEAD0.730, 
                                   h(<$cHash0.731, m1.737, x.1454^inv((~ltk.732*x.1455))>), 'K_2e', '2'>,
                                  hkdfExtract('emptyStr', x.1454^inv(x.1455))),
                       <
                        <$V.729, h(<$cHash0.731, m1.737, x.1454^inv((~ltk.732*x.1455))>), pkV.739
                        >, 
                        aeadEncrypt('emptyStr',
                                    hkdfExpand(<$cAEAD0.730, 
                                                h(<$cHash0.731, m1.737, x.1454^inv((~ltk.732*x.1455))>), 
                                                'K_2m'>,
                                               hkdfExtract('emptyStr', x.1454^inv(x.1455))),
                                    <$V.729, h(<$cHash0.731, m1.737, x.1454^inv((~ltk.732*x.1455))>), pkV.739
                                    >,
                                    $cAEAD0.730)
                       >,
                       pkV.739)
    
    40. $V    = $V.729
        $cAEAD0
              = $cAEAD0.730
        $cHash0
              = $cHash0.731
        ~ltk  = ~ltk.732
        ~xx   = ~ltk.732
        gy    = x.1454^(x.1455*inv(~ltk.732))
        m1    = m1.737
        pkV   = pkV.739
        z     = zero
        z.1   = x.1454^x.1455
        z.2   = x.1454^x.1455
        z.3   = verify(hkdfExpand(<$cAEAD0.730, 
                                   h(<$cHash0.731, m1.737, x.1454^(x.1455*inv(~ltk.732))>), 'K_2e', '2'>,
                                  hkdfExtract('emptyStr', x.1454^x.1455)),
                       <
                        <$V.729, h(<$cHash0.731, m1.737, x.1454^(x.1455*inv(~ltk.732))>), pkV.739
                        >, 
                        aeadEncrypt('emptyStr',
                                    hkdfExpand(<$cAEAD0.730, 
                                                h(<$cHash0.731, m1.737, x.1454^(x.1455*inv(~ltk.732))>), 
                                                'K_2m'>,
                                               hkdfExtract('emptyStr', x.1454^x.1455)),
                                    <$V.729, h(<$cHash0.731, m1.737, x.1454^(x.1455*inv(~ltk.732))>), pkV.739
                                    >,
                                    $cAEAD0.730)
                       >,
                       pkV.739)
    
    41. $V    = $V.729
        $cAEAD0
              = $cAEAD0.730
        $cHash0
              = $cHash0.731
        ~ltk  = ~ltk.732
        ~xx   = ~xx.734
        gy    = x.1453^inv((~ltk.732*~xx.734*x.1454))
        m1    = m1.737
        pkV   = pkV.739
        z     = (authR.1455⊕
                 hkdfExpand(<$cAEAD0.730, 
                             h(<$cHash0.731, m1.737, x.1453^inv((~ltk.732*~xx.734*x.1454))>), 'K_2e', 
                             '2'>,
                            hkdfExtract('emptyStr', x.1453^inv((~ltk.732*x.1454))))
                )
        z.1   = x.1453^inv((~ltk.732*x.1454))
        z.2   = x.1453^inv((~xx.734*x.1454))
        z.3   = verify(authR.1455,
                       <
                        <$V.729, 
                         h(<$cHash0.731, m1.737, x.1453^inv((~ltk.732*~xx.734*x.1454))>), pkV.739
                        >, 
                        aeadEncrypt('emptyStr',
                                    hkdfExpand(<$cAEAD0.730, 
                                                h(<$cHash0.731, m1.737, x.1453^inv((~ltk.732*~xx.734*x.1454))
                                                  >), 
                                                'K_2m'>,
                                               hkdfExtract('emptyStr', x.1453^inv((~ltk.732*x.1454)))),
                                    <$V.729, 
                                     h(<$cHash0.731, m1.737, x.1453^inv((~ltk.732*~xx.734*x.1454))>), pkV.739
                                    >,
                                    $cAEAD0.730)
                       >,
                       pkV.739)
    
    42. $V    = $V.729
        $cAEAD0
              = $cAEAD0.730
        $cHash0
              = $cHash0.731
        ~ltk  = ~ltk.732
        ~xx   = ~xx.734
        gy    = x.1453^inv((~ltk.732*x.1454))
        m1    = m1.737
        pkV   = pkV.739
        z     = (authR.1455⊕
                 hkdfExpand(<$cAEAD0.730, 
                             h(<$cHash0.731, m1.737, x.1453^inv((~ltk.732*x.1454))>), 'K_2e', '2'>,
                            hkdfExtract('emptyStr', x.1453^(~xx.734*inv((~ltk.732*x.1454)))))
                )
        z.1   = x.1453^(~xx.734*inv((~ltk.732*x.1454)))
        z.2   = x.1453^inv(x.1454)
        z.3   = verify(authR.1455,
                       <
                        <$V.729, h(<$cHash0.731, m1.737, x.1453^inv((~ltk.732*x.1454))>), pkV.739
                        >, 
                        aeadEncrypt('emptyStr',
                                    hkdfExpand(<$cAEAD0.730, 
                                                h(<$cHash0.731, m1.737, x.1453^inv((~ltk.732*x.1454))>), 
                                                'K_2m'>,
                                               hkdfExtract('emptyStr',
                                                           x.1453^(~xx.734*inv((~ltk.732*x.1454))))),
                                    <$V.729, h(<$cHash0.731, m1.737, x.1453^inv((~ltk.732*x.1454))>), pkV.739
                                    >,
                                    $cAEAD0.730)
                       >,
                       pkV.739)
    
    43. $V    = $V.729
        $cAEAD0
              = $cAEAD0.730
        $cHash0
              = $cHash0.731
        ~ltk  = ~ltk.732
        ~xx   = ~xx.734
        gy    = x.1453^(x.1454*inv(~ltk.732))
        m1    = m1.737
        pkV   = pkV.739
        z     = (authR.1455⊕
                 hkdfExpand(<$cAEAD0.730, 
                             h(<$cHash0.731, m1.737, x.1453^(x.1454*inv(~ltk.732))>), 'K_2e', '2'>,
                            hkdfExtract('emptyStr', x.1453^(~xx.734*x.1454*inv(~ltk.732))))
                )
        z.1   = x.1453^(~xx.734*x.1454*inv(~ltk.732))
        z.2   = x.1453^x.1454
        z.3   = verify(authR.1455,
                       <
                        <$V.729, h(<$cHash0.731, m1.737, x.1453^(x.1454*inv(~ltk.732))>), pkV.739
                        >, 
                        aeadEncrypt('emptyStr',
                                    hkdfExpand(<$cAEAD0.730, 
                                                h(<$cHash0.731, m1.737, x.1453^(x.1454*inv(~ltk.732))>), 
                                                'K_2m'>,
                                               hkdfExtract('emptyStr',
                                                           x.1453^(~xx.734*x.1454*inv(~ltk.732)))),
                                    <$V.729, h(<$cHash0.731, m1.737, x.1453^(x.1454*inv(~ltk.732))>), pkV.739
                                    >,
                                    $cAEAD0.730)
                       >,
                       pkV.739)
    
    44. $V    = $V.729
        $cAEAD0
              = $cAEAD0.730
        $cHash0
              = $cHash0.731
        ~ltk  = ~ltk.732
        ~xx   = ~xx.734
        gy    = x.1453^(x.1454*inv((~ltk.732*~xx.734)))
        m1    = m1.737
        pkV   = pkV.739
        z     = (authR.1455⊕
                 hkdfExpand(<$cAEAD0.730, 
                             h(<$cHash0.731, m1.737, x.1453^(x.1454*inv((~ltk.732*~xx.734)))>), 
                             'K_2e', '2'>,
                            hkdfExtract('emptyStr', x.1453^(x.1454*inv(~ltk.732))))
                )
        z.1   = x.1453^(x.1454*inv(~ltk.732))
        z.2   = x.1453^(x.1454*inv(~xx.734))
        z.3   = verify(authR.1455,
                       <
                        <$V.729, 
                         h(<$cHash0.731, m1.737, x.1453^(x.1454*inv((~ltk.732*~xx.734)))>), 
                         pkV.739>, 
                        aeadEncrypt('emptyStr',
                                    hkdfExpand(<$cAEAD0.730, 
                                                h(<$cHash0.731, m1.737, 
                                                   x.1453^(x.1454*inv((~ltk.732*~xx.734)))>), 
                                                'K_2m'>,
                                               hkdfExtract('emptyStr', x.1453^(x.1454*inv(~ltk.732)))),
                                    <$V.729, 
                                     h(<$cHash0.731, m1.737, x.1453^(x.1454*inv((~ltk.732*~xx.734)))>), 
                                     pkV.739>,
                                    $cAEAD0.730)
                       >,
                       pkV.739)
    
    45. $V    = $V.729
        $cAEAD0
              = $cAEAD0.730
        $cHash0
              = $cHash0.731
        ~ltk  = ~ltk.732
        ~xx   = ~xx.734
        gy    = x.1455^inv((~ltk.732*~xx.734))
        m1    = m1.737
        pkV   = pkV.739
        z     = zero
        z.1   = x.1455^inv(~ltk.732)
        z.2   = x.1455^inv(~xx.734)
        z.3   = verify(hkdfExpand(<$cAEAD0.730, 
                                   h(<$cHash0.731, m1.737, x.1455^inv((~ltk.732*~xx.734))>), 'K_2e', '2'>,
                                  hkdfExtract('emptyStr', x.1455^inv(~ltk.732))),
                       <
                        <$V.729, h(<$cHash0.731, m1.737, x.1455^inv((~ltk.732*~xx.734))>), 
                         pkV.739>, 
                        aeadEncrypt('emptyStr',
                                    hkdfExpand(<$cAEAD0.730, 
                                                h(<$cHash0.731, m1.737, x.1455^inv((~ltk.732*~xx.734))>), 
                                                'K_2m'>,
                                               hkdfExtract('emptyStr', x.1455^inv(~ltk.732))),
                                    <$V.729, h(<$cHash0.731, m1.737, x.1455^inv((~ltk.732*~xx.734))>), 
                                     pkV.739>,
                                    $cAEAD0.730)
                       >,
                       pkV.739)
    
    46. $V    = $V.730
        $cAEAD0
              = $cAEAD0.731
        $cHash0
              = $cHash0.732
        ~ltk  = ~ltk.733
        ~xx   = ~ltk.733
        gy    = z.745^inv(~ltk.733)
        m1    = m1.738
        pkV   = pk(x.1457)
        z     = (
                 hkdfExpand(<$cAEAD0.731, h(<$cHash0.732, m1.738, z.745^inv(~ltk.733)>), 
                             'K_2e', '2'>,
                            hkdfExtract('emptyStr', z.745))⊕
                 sign(<
                       <$V.730, h(<$cHash0.732, m1.738, z.745^inv(~ltk.733)>), pk(x.1457)>, 
                       aeadEncrypt('emptyStr',
                                   hkdfExpand(<$cAEAD0.731, h(<$cHash0.732, m1.738, z.745^inv(~ltk.733)>), 
                                               'K_2m'>,
                                              hkdfExtract('emptyStr', z.745)),
                                   <$V.730, h(<$cHash0.732, m1.738, z.745^inv(~ltk.733)>), pk(x.1457)>,
                                   $cAEAD0.731)
                      >,
                      x.1457)
                )
        z.1   = z.745
        z.2   = z.745
        z.3   = true
    
    47. $V    = $V.730
        $cAEAD0
              = $cAEAD0.731
        $cHash0
              = $cHash0.732
        ~ltk  = ~ltk.733
        ~xx   = ~ltk.733
        gy    = x.1455^(x.1456*inv((~ltk.733*x.1457)))
        m1    = m1.738
        pkV   = pkV.740
        z     = zero
        z.1   = x.1455^(x.1456*inv(x.1457))
        z.2   = x.1455^(x.1456*inv(x.1457))
        z.3   = verify(hkdfExpand(<$cAEAD0.731, 
                                   h(<$cHash0.732, m1.738, x.1455^(x.1456*inv((~ltk.733*x.1457)))>), 
                                   'K_2e', '2'>,
                                  hkdfExtract('emptyStr', x.1455^(x.1456*inv(x.1457)))),
                       <
                        <$V.730, 
                         h(<$cHash0.732, m1.738, x.1455^(x.1456*inv((~ltk.733*x.1457)))>), pkV.740
                        >, 
                        aeadEncrypt('emptyStr',
                                    hkdfExpand(<$cAEAD0.731, 
                                                h(<$cHash0.732, m1.738, x.1455^(x.1456*inv((~ltk.733*x.1457)))
                                                  >), 
                                                'K_2m'>,
                                               hkdfExtract('emptyStr', x.1455^(x.1456*inv(x.1457)))),
                                    <$V.730, 
                                     h(<$cHash0.732, m1.738, x.1455^(x.1456*inv((~ltk.733*x.1457)))>), pkV.740
                                    >,
                                    $cAEAD0.731)
                       >,
                       pkV.740)
    
    48. $V    = $V.730
        $cAEAD0
              = $cAEAD0.731
        $cHash0
              = $cHash0.732
        ~ltk  = ~ltk.733
        ~xx   = ~ltk.733
        gy    = x.1456^inv((~ltk.733*x.1457))
        m1    = m1.738
        pkV   = pkV.740
        z     = z.742
        z.1   = x.1456^inv(x.1457)
        z.2   = x.1456^inv(x.1457)
        z.3   = verify((z.742⊕
                        hkdfExpand(<$cAEAD0.731, 
                                    h(<$cHash0.732, m1.738, x.1456^inv((~ltk.733*x.1457))>), 'K_2e', '2'>,
                                   hkdfExtract('emptyStr', x.1456^inv(x.1457)))
                       ),
                       <
                        <$V.730, h(<$cHash0.732, m1.738, x.1456^inv((~ltk.733*x.1457))>), pkV.740
                        >, 
                        aeadEncrypt('emptyStr',
                                    hkdfExpand(<$cAEAD0.731, 
                                                h(<$cHash0.732, m1.738, x.1456^inv((~ltk.733*x.1457))>), 
                                                'K_2m'>,
                                               hkdfExtract('emptyStr', x.1456^inv(x.1457))),
                                    <$V.730, h(<$cHash0.732, m1.738, x.1456^inv((~ltk.733*x.1457))>), pkV.740
                                    >,
                                    $cAEAD0.731)
                       >,
                       pkV.740)
    
    49. $V    = $V.730
        $cAEAD0
              = $cAEAD0.731
        $cHash0
              = $cHash0.732
        ~ltk  = ~ltk.733
        ~xx   = ~ltk.733
        gy    = x.1456^(x.1457*inv(~ltk.733))
        m1    = m1.738
        pkV   = pkV.740
        z     = z.742
        z.1   = x.1456^x.1457
        z.2   = x.1456^x.1457
        z.3   = verify((z.742⊕
                        hkdfExpand(<$cAEAD0.731, 
                                    h(<$cHash0.732, m1.738, x.1456^(x.1457*inv(~ltk.733))>), 'K_2e', '2'>,
                                   hkdfExtract('emptyStr', x.1456^x.1457))
                       ),
                       <
                        <$V.730, h(<$cHash0.732, m1.738, x.1456^(x.1457*inv(~ltk.733))>), pkV.740
                        >, 
                        aeadEncrypt('emptyStr',
                                    hkdfExpand(<$cAEAD0.731, 
                                                h(<$cHash0.732, m1.738, x.1456^(x.1457*inv(~ltk.733))>), 
                                                'K_2m'>,
                                               hkdfExtract('emptyStr', x.1456^x.1457)),
                                    <$V.730, h(<$cHash0.732, m1.738, x.1456^(x.1457*inv(~ltk.733))>), pkV.740
                                    >,
                                    $cAEAD0.731)
                       >,
                       pkV.740)
    
    50. $V    = $V.730
        $cAEAD0
              = $cAEAD0.731
        $cHash0
              = $cHash0.732
        ~ltk  = ~ltk.733
        ~xx   = ~xx.735
        gy    = x.1454^(x.1455*inv((~ltk.733*~xx.735*x.1456)))
        m1    = m1.738
        pkV   = pkV.740
        z     = (authR.1457⊕
                 hkdfExpand(<$cAEAD0.731, 
                             h(<$cHash0.732, m1.738, x.1454^(x.1455*inv((~ltk.733*~xx.735*x.1456)))
                               >), 
                             'K_2e', '2'>,
                            hkdfExtract('emptyStr', x.1454^(x.1455*inv((~ltk.733*x.1456)))))
                )
        z.1   = x.1454^(x.1455*inv((~ltk.733*x.1456)))
        z.2   = x.1454^(x.1455*inv((~xx.735*x.1456)))
        z.3   = verify(authR.1457,
                       <
                        <$V.730, 
                         h(<$cHash0.732, m1.738, x.1454^(x.1455*inv((~ltk.733*~xx.735*x.1456)))
                           >), 
                         pkV.740>, 
                        aeadEncrypt('emptyStr',
                                    hkdfExpand(<$cAEAD0.731, 
                                                h(<$cHash0.732, m1.738, 
                                                   x.1454^(x.1455*inv((~ltk.733*~xx.735*x.1456)))>), 
                                                'K_2m'>,
                                               hkdfExtract('emptyStr',
                                                           x.1454^(x.1455*inv((~ltk.733*x.1456))))),
                                    <$V.730, 
                                     h(<$cHash0.732, m1.738, x.1454^(x.1455*inv((~ltk.733*~xx.735*x.1456)))
                                       >), 
                                     pkV.740>,
                                    $cAEAD0.731)
                       >,
                       pkV.740)
    
    51. $V    = $V.730
        $cAEAD0
              = $cAEAD0.731
        $cHash0
              = $cHash0.732
        ~ltk  = ~ltk.733
        ~xx   = ~xx.735
        gy    = x.1454^(x.1455*inv((~ltk.733*x.1456)))
        m1    = m1.738
        pkV   = pkV.740
        z     = (authR.1457⊕
                 hkdfExpand(<$cAEAD0.731, 
                             h(<$cHash0.732, m1.738, x.1454^(x.1455*inv((~ltk.733*x.1456)))>), 
                             'K_2e', '2'>,
                            hkdfExtract('emptyStr', x.1454^(~xx.735*x.1455*inv((~ltk.733*x.1456)))))
                )
        z.1   = x.1454^(~xx.735*x.1455*inv((~ltk.733*x.1456)))
        z.2   = x.1454^(x.1455*inv(x.1456))
        z.3   = verify(authR.1457,
                       <
                        <$V.730, 
                         h(<$cHash0.732, m1.738, x.1454^(x.1455*inv((~ltk.733*x.1456)))>), pkV.740
                        >, 
                        aeadEncrypt('emptyStr',
                                    hkdfExpand(<$cAEAD0.731, 
                                                h(<$cHash0.732, m1.738, x.1454^(x.1455*inv((~ltk.733*x.1456)))
                                                  >), 
                                                'K_2m'>,
                                               hkdfExtract('emptyStr',
                                                           x.1454^(~xx.735*x.1455*inv((~ltk.733*x.1456))))),
                                    <$V.730, 
                                     h(<$cHash0.732, m1.738, x.1454^(x.1455*inv((~ltk.733*x.1456)))>), pkV.740
                                    >,
                                    $cAEAD0.731)
                       >,
                       pkV.740)
    
    52. $V    = $V.730
        $cAEAD0
              = $cAEAD0.731
        $cHash0
              = $cHash0.732
        ~ltk  = ~ltk.733
        ~xx   = ~xx.735
        gy    = x.1456^x.1457
        m1    = m1.738
        pkV   = pkV.740
        z     = zero
        z.1   = x.1456^(~xx.735*x.1457)
        z.2   = x.1456^(~ltk.733*x.1457)
        z.3   = verify(hkdfExpand(<$cAEAD0.731, 
                                   h(<$cHash0.732, m1.738, x.1456^x.1457>), 'K_2e', '2'>,
                                  hkdfExtract('emptyStr', x.1456^(~xx.735*x.1457))),
                       <<$V.730, h(<$cHash0.732, m1.738, x.1456^x.1457>), pkV.740>, 
                        aeadEncrypt('emptyStr',
                                    hkdfExpand(<$cAEAD0.731, h(<$cHash0.732, m1.738, x.1456^x.1457>), 'K_2m'
                                               >,
                                               hkdfExtract('emptyStr', x.1456^(~xx.735*x.1457))),
                                    <$V.730, h(<$cHash0.732, m1.738, x.1456^x.1457>), pkV.740>, $cAEAD0.731)
                       >,
                       pkV.740)
    
    53. $V    = $V.730
        $cAEAD0
              = $cAEAD0.731
        $cHash0
              = $cHash0.732
        ~ltk  = ~ltk.733
        ~xx   = ~xx.735
        gy    = x.1456^inv((~ltk.733*~xx.735*x.1457))
        m1    = m1.738
        pkV   = pkV.740
        z     = zero
        z.1   = x.1456^inv((~ltk.733*x.1457))
        z.2   = x.1456^inv((~xx.735*x.1457))
        z.3   = verify(hkdfExpand(<$cAEAD0.731, 
                                   h(<$cHash0.732, m1.738, x.1456^inv((~ltk.733*~xx.735*x.1457))>), 'K_2e', 
                                   '2'>,
                                  hkdfExtract('emptyStr', x.1456^inv((~ltk.733*x.1457)))),
                       <
                        <$V.730, 
                         h(<$cHash0.732, m1.738, x.1456^inv((~ltk.733*~xx.735*x.1457))>), pkV.740
                        >, 
                        aeadEncrypt('emptyStr',
                                    hkdfExpand(<$cAEAD0.731, 
                                                h(<$cHash0.732, m1.738, x.1456^inv((~ltk.733*~xx.735*x.1457))
                                                  >), 
                                                'K_2m'>,
                                               hkdfExtract('emptyStr', x.1456^inv((~ltk.733*x.1457)))),
                                    <$V.730, 
                                     h(<$cHash0.732, m1.738, x.1456^inv((~ltk.733*~xx.735*x.1457))>), pkV.740
                                    >,
                                    $cAEAD0.731)
                       >,
                       pkV.740)
    
    54. $V    = $V.730
        $cAEAD0
              = $cAEAD0.731
        $cHash0
              = $cHash0.732
        ~ltk  = ~ltk.733
        ~xx   = ~xx.735
        gy    = x.1456^inv((~ltk.733*x.1457))
        m1    = m1.738
        pkV   = pkV.740
        z     = zero
        z.1   = x.1456^(~xx.735*inv((~ltk.733*x.1457)))
        z.2   = x.1456^inv(x.1457)
        z.3   = verify(hkdfExpand(<$cAEAD0.731, 
                                   h(<$cHash0.732, m1.738, x.1456^inv((~ltk.733*x.1457))>), 'K_2e', '2'>,
                                  hkdfExtract('emptyStr', x.1456^(~xx.735*inv((~ltk.733*x.1457))))),
                       <
                        <$V.730, h(<$cHash0.732, m1.738, x.1456^inv((~ltk.733*x.1457))>), pkV.740
                        >, 
                        aeadEncrypt('emptyStr',
                                    hkdfExpand(<$cAEAD0.731, 
                                                h(<$cHash0.732, m1.738, x.1456^inv((~ltk.733*x.1457))>), 
                                                'K_2m'>,
                                               hkdfExtract('emptyStr',
                                                           x.1456^(~xx.735*inv((~ltk.733*x.1457))))),
                                    <$V.730, h(<$cHash0.732, m1.738, x.1456^inv((~ltk.733*x.1457))>), pkV.740
                                    >,
                                    $cAEAD0.731)
                       >,
                       pkV.740)
    
    55. $V    = $V.730
        $cAEAD0
              = $cAEAD0.731
        $cHash0
              = $cHash0.732
        ~ltk  = ~ltk.733
        ~xx   = ~xx.735
        gy    = x.1456^inv((~xx.735*x.1457))
        m1    = m1.738
        pkV   = pkV.740
        z     = zero
        z.1   = x.1456^inv(x.1457)
        z.2   = x.1456^(~ltk.733*inv((~xx.735*x.1457)))
        z.3   = verify(hkdfExpand(<$cAEAD0.731, 
                                   h(<$cHash0.732, m1.738, x.1456^inv((~xx.735*x.1457))>), 'K_2e', '2'>,
                                  hkdfExtract('emptyStr', x.1456^inv(x.1457))),
                       <
                        <$V.730, h(<$cHash0.732, m1.738, x.1456^inv((~xx.735*x.1457))>), pkV.740
                        >, 
                        aeadEncrypt('emptyStr',
                                    hkdfExpand(<$cAEAD0.731, 
                                                h(<$cHash0.732, m1.738, x.1456^inv((~xx.735*x.1457))>), 'K_2m'
                                               >,
                                               hkdfExtract('emptyStr', x.1456^inv(x.1457))),
                                    <$V.730, h(<$cHash0.732, m1.738, x.1456^inv((~xx.735*x.1457))>), pkV.740
                                    >,
                                    $cAEAD0.731)
                       >,
                       pkV.740)
    
    56. $V    = $V.730
        $cAEAD0
              = $cAEAD0.731
        $cHash0
              = $cHash0.732
        ~ltk  = ~ltk.733
        ~xx   = ~xx.735
        gy    = x.1456^(x.1457*inv(~ltk.733))
        m1    = m1.738
        pkV   = pkV.740
        z     = zero
        z.1   = x.1456^(~xx.735*x.1457*inv(~ltk.733))
        z.2   = x.1456^x.1457
        z.3   = verify(hkdfExpand(<$cAEAD0.731, 
                                   h(<$cHash0.732, m1.738, x.1456^(x.1457*inv(~ltk.733))>), 'K_2e', '2'>,
                                  hkdfExtract('emptyStr', x.1456^(~xx.735*x.1457*inv(~ltk.733)))),
                       <
                        <$V.730, h(<$cHash0.732, m1.738, x.1456^(x.1457*inv(~ltk.733))>), pkV.740
                        >, 
                        aeadEncrypt('emptyStr',
                                    hkdfExpand(<$cAEAD0.731, 
                                                h(<$cHash0.732, m1.738, x.1456^(x.1457*inv(~ltk.733))>), 
                                                'K_2m'>,
                                               hkdfExtract('emptyStr',
                                                           x.1456^(~xx.735*x.1457*inv(~ltk.733)))),
                                    <$V.730, h(<$cHash0.732, m1.738, x.1456^(x.1457*inv(~ltk.733))>), pkV.740
                                    >,
                                    $cAEAD0.731)
                       >,
                       pkV.740)
    
    57. $V    = $V.730
        $cAEAD0
              = $cAEAD0.731
        $cHash0
              = $cHash0.732
        ~ltk  = ~ltk.733
        ~xx   = ~xx.735
        gy    = x.1456^(x.1457*inv(~xx.735))
        m1    = m1.738
        pkV   = pkV.740
        z     = zero
        z.1   = x.1456^x.1457
        z.2   = x.1456^(~ltk.733*x.1457*inv(~xx.735))
        z.3   = verify(hkdfExpand(<$cAEAD0.731, 
                                   h(<$cHash0.732, m1.738, x.1456^(x.1457*inv(~xx.735))>), 'K_2e', '2'>,
                                  hkdfExtract('emptyStr', x.1456^x.1457)),
                       <
                        <$V.730, h(<$cHash0.732, m1.738, x.1456^(x.1457*inv(~xx.735))>), pkV.740
                        >, 
                        aeadEncrypt('emptyStr',
                                    hkdfExpand(<$cAEAD0.731, 
                                                h(<$cHash0.732, m1.738, x.1456^(x.1457*inv(~xx.735))>), 'K_2m'
                                               >,
                                               hkdfExtract('emptyStr', x.1456^x.1457)),
                                    <$V.730, h(<$cHash0.732, m1.738, x.1456^(x.1457*inv(~xx.735))>), pkV.740
                                    >,
                                    $cAEAD0.731)
                       >,
                       pkV.740)
    
    58. $V    = $V.730
        $cAEAD0
              = $cAEAD0.731
        $cHash0
              = $cHash0.732
        ~ltk  = ~ltk.733
        ~xx   = ~xx.735
        gy    = x.1456^(x.1457*inv((~ltk.733*~xx.735)))
        m1    = m1.738
        pkV   = pkV.740
        z     = zero
        z.1   = x.1456^(x.1457*inv(~ltk.733))
        z.2   = x.1456^(x.1457*inv(~xx.735))
        z.3   = verify(hkdfExpand(<$cAEAD0.731, 
                                   h(<$cHash0.732, m1.738, x.1456^(x.1457*inv((~ltk.733*~xx.735)))>), 
                                   'K_2e', '2'>,
                                  hkdfExtract('emptyStr', x.1456^(x.1457*inv(~ltk.733)))),
                       <
                        <$V.730, 
                         h(<$cHash0.732, m1.738, x.1456^(x.1457*inv((~ltk.733*~xx.735)))>), 
                         pkV.740>, 
                        aeadEncrypt('emptyStr',
                                    hkdfExpand(<$cAEAD0.731, 
                                                h(<$cHash0.732, m1.738, 
                                                   x.1456^(x.1457*inv((~ltk.733*~xx.735)))>), 
                                                'K_2m'>,
                                               hkdfExtract('emptyStr', x.1456^(x.1457*inv(~ltk.733)))),
                                    <$V.730, 
                                     h(<$cHash0.732, m1.738, x.1456^(x.1457*inv((~ltk.733*~xx.735)))>), 
                                     pkV.740>,
                                    $cAEAD0.731)
                       >,
                       pkV.740)
    
    59. $V    = $V.730
        $cAEAD0
              = $cAEAD0.731
        $cHash0
              = $cHash0.732
        ~ltk  = ~ltk.733
        ~xx   = ~xx.735
        gy    = x.1457^inv((~ltk.733*~xx.735))
        m1    = m1.738
        pkV   = pkV.740
        z     = z.742
        z.1   = x.1457^inv(~ltk.733)
        z.2   = x.1457^inv(~xx.735)
        z.3   = verify((z.742⊕
                        hkdfExpand(<$cAEAD0.731, 
                                    h(<$cHash0.732, m1.738, x.1457^inv((~ltk.733*~xx.735))>), 'K_2e', '2'>,
                                   hkdfExtract('emptyStr', x.1457^inv(~ltk.733)))
                       ),
                       <
                        <$V.730, h(<$cHash0.732, m1.738, x.1457^inv((~ltk.733*~xx.735))>), 
                         pkV.740>, 
                        aeadEncrypt('emptyStr',
                                    hkdfExpand(<$cAEAD0.731, 
                                                h(<$cHash0.732, m1.738, x.1457^inv((~ltk.733*~xx.735))>), 
                                                'K_2m'>,
                                               hkdfExtract('emptyStr', x.1457^inv(~ltk.733))),
                                    <$V.730, h(<$cHash0.732, m1.738, x.1457^inv((~ltk.733*~xx.735))>), 
                                     pkV.740>,
                                    $cAEAD0.731)
                       >,
                       pkV.740)
    
    60. $V    = $V.731
        $cAEAD0
              = $cAEAD0.732
        $cHash0
              = $cHash0.733
        ~ltk  = ~ltk.734
        ~xx   = ~ltk.734
        gy    = x.1457^inv((~ltk.734*x.1458))
        m1    = m1.739
        pkV   = pk(x.1459)
        z     = (
                 hkdfExpand(<$cAEAD0.732, 
                             h(<$cHash0.733, m1.739, x.1457^inv((~ltk.734*x.1458))>), 'K_2e', '2'>,
                            hkdfExtract('emptyStr', x.1457^inv(x.1458)))⊕
                 sign(<
                       <$V.731, h(<$cHash0.733, m1.739, x.1457^inv((~ltk.734*x.1458))>), 
                        pk(x.1459)>, 
                       aeadEncrypt('emptyStr',
                                   hkdfExpand(<$cAEAD0.732, 
                                               h(<$cHash0.733, m1.739, x.1457^inv((~ltk.734*x.1458))>), 'K_2m'
                                              >,
                                              hkdfExtract('emptyStr', x.1457^inv(x.1458))),
                                   <$V.731, h(<$cHash0.733, m1.739, x.1457^inv((~ltk.734*x.1458))>), 
                                    pk(x.1459)>,
                                   $cAEAD0.732)
                      >,
                      x.1459)
                )
        z.1   = x.1457^inv(x.1458)
        z.2   = x.1457^inv(x.1458)
        z.3   = true
    
    61. $V    = $V.731
        $cAEAD0
              = $cAEAD0.732
        $cHash0
              = $cHash0.733
        ~ltk  = ~ltk.734
        ~xx   = ~ltk.734
        gy    = x.1457^(x.1458*inv(~ltk.734))
        m1    = m1.739
        pkV   = pk(x.1459)
        z     = (
                 hkdfExpand(<$cAEAD0.732, 
                             h(<$cHash0.733, m1.739, x.1457^(x.1458*inv(~ltk.734))>), 'K_2e', '2'>,
                            hkdfExtract('emptyStr', x.1457^x.1458))⊕
                 sign(<
                       <$V.731, h(<$cHash0.733, m1.739, x.1457^(x.1458*inv(~ltk.734))>), 
                        pk(x.1459)>, 
                       aeadEncrypt('emptyStr',
                                   hkdfExpand(<$cAEAD0.732, 
                                               h(<$cHash0.733, m1.739, x.1457^(x.1458*inv(~ltk.734))>), 'K_2m'
                                              >,
                                              hkdfExtract('emptyStr', x.1457^x.1458)),
                                   <$V.731, h(<$cHash0.733, m1.739, x.1457^(x.1458*inv(~ltk.734))>), 
                                    pk(x.1459)>,
                                   $cAEAD0.732)
                      >,
                      x.1459)
                )
        z.1   = x.1457^x.1458
        z.2   = x.1457^x.1458
        z.3   = true
    
    62. $V    = $V.731
        $cAEAD0
              = $cAEAD0.732
        $cHash0
              = $cHash0.733
        ~ltk  = ~ltk.734
        ~xx   = ~ltk.734
        gy    = x.1457^(x.1458*inv((~ltk.734*x.1459)))
        m1    = m1.739
        pkV   = pkV.741
        z     = z.743
        z.1   = x.1457^(x.1458*inv(x.1459))
        z.2   = x.1457^(x.1458*inv(x.1459))
        z.3   = verify((z.743⊕
                        hkdfExpand(<$cAEAD0.732, 
                                    h(<$cHash0.733, m1.739, x.1457^(x.1458*inv((~ltk.734*x.1459)))>), 
                                    'K_2e', '2'>,
                                   hkdfExtract('emptyStr', x.1457^(x.1458*inv(x.1459))))
                       ),
                       <
                        <$V.731, 
                         h(<$cHash0.733, m1.739, x.1457^(x.1458*inv((~ltk.734*x.1459)))>), pkV.741
                        >, 
                        aeadEncrypt('emptyStr',
                                    hkdfExpand(<$cAEAD0.732, 
                                                h(<$cHash0.733, m1.739, x.1457^(x.1458*inv((~ltk.734*x.1459)))
                                                  >), 
                                                'K_2m'>,
                                               hkdfExtract('emptyStr', x.1457^(x.1458*inv(x.1459)))),
                                    <$V.731, 
                                     h(<$cHash0.733, m1.739, x.1457^(x.1458*inv((~ltk.734*x.1459)))>), pkV.741
                                    >,
                                    $cAEAD0.732)
                       >,
                       pkV.741)
    
    63. $V    = $V.731
        $cAEAD0
              = $cAEAD0.732
        $cHash0
              = $cHash0.733
        ~ltk  = ~ltk.734
        ~xx   = ~xx.736
        gy    = gy.738
        m1    = m1.739
        pkV   = pk(x.1459)
        z     = (
                 hkdfExpand(<$cAEAD0.732, h(<$cHash0.733, m1.739, gy.738>), 'K_2e', '2'>,
                            hkdfExtract('emptyStr', gy.738^~xx.736))⊕
                 sign(<<$V.731, h(<$cHash0.733, m1.739, gy.738>), pk(x.1459)>, 
                       aeadEncrypt('emptyStr',
                                   hkdfExpand(<$cAEAD0.732, h(<$cHash0.733, m1.739, gy.738>), 'K_2m'>,
                                              hkdfExtract('emptyStr', gy.738^~xx.736)),
                                   <$V.731, h(<$cHash0.733, m1.739, gy.738>), pk(x.1459)>, $cAEAD0.732)
                      >,
                      x.1459)
                )
        z.1   = gy.738^~xx.736
        z.2   = gy.738^~ltk.734
        z.3   = true
    
    64. $V    = $V.731
        $cAEAD0
              = $cAEAD0.732
        $cHash0
              = $cHash0.733
        ~ltk  = ~ltk.734
        ~xx   = ~xx.736
        gy    = z.746^inv(~xx.736)
        m1    = m1.739
        pkV   = pk(x.1459)
        z     = (
                 hkdfExpand(<$cAEAD0.732, h(<$cHash0.733, m1.739, z.746^inv(~xx.736)>), 
                             'K_2e', '2'>,
                            hkdfExtract('emptyStr', z.746))⊕
                 sign(<
                       <$V.731, h(<$cHash0.733, m1.739, z.746^inv(~xx.736)>), pk(x.1459)>, 
                       aeadEncrypt('emptyStr',
                                   hkdfExpand(<$cAEAD0.732, h(<$cHash0.733, m1.739, z.746^inv(~xx.736)>), 
                                               'K_2m'>,
                                              hkdfExtract('emptyStr', z.746)),
                                   <$V.731, h(<$cHash0.733, m1.739, z.746^inv(~xx.736)>), pk(x.1459)>,
                                   $cAEAD0.732)
                      >,
                      x.1459)
                )
        z.1   = z.746
        z.2   = z.746^(~ltk.734*inv(~xx.736))
        z.3   = true
    
    65. $V    = $V.731
        $cAEAD0
              = $cAEAD0.732
        $cHash0
              = $cHash0.733
        ~ltk  = ~ltk.734
        ~xx   = ~xx.736
        gy    = z.747^inv(~ltk.734)
        m1    = m1.739
        pkV   = pk(x.1459)
        z     = (
                 hkdfExpand(<$cAEAD0.732, h(<$cHash0.733, m1.739, z.747^inv(~ltk.734)>), 
                             'K_2e', '2'>,
                            hkdfExtract('emptyStr', z.747^(~xx.736*inv(~ltk.734))))⊕
                 sign(<
                       <$V.731, h(<$cHash0.733, m1.739, z.747^inv(~ltk.734)>), pk(x.1459)>, 
                       aeadEncrypt('emptyStr',
                                   hkdfExpand(<$cAEAD0.732, h(<$cHash0.733, m1.739, z.747^inv(~ltk.734)>), 
                                               'K_2m'>,
                                              hkdfExtract('emptyStr', z.747^(~xx.736*inv(~ltk.734)))),
                                   <$V.731, h(<$cHash0.733, m1.739, z.747^inv(~ltk.734)>), pk(x.1459)>,
                                   $cAEAD0.732)
                      >,
                      x.1459)
                )
        z.1   = z.747^(~xx.736*inv(~ltk.734))
        z.2   = z.747
        z.3   = true
    
    66. $V    = $V.731
        $cAEAD0
              = $cAEAD0.732
        $cHash0
              = $cHash0.733
        ~ltk  = ~ltk.734
        ~xx   = ~xx.736
        gy    = x.1457^(x.1458*inv((~ltk.734*~xx.736*x.1459)))
        m1    = m1.739
        pkV   = pkV.741
        z     = zero
        z.1   = x.1457^(x.1458*inv((~ltk.734*x.1459)))
        z.2   = x.1457^(x.1458*inv((~xx.736*x.1459)))
        z.3   = verify(hkdfExpand(<$cAEAD0.732, 
                                   h(<$cHash0.733, m1.739, x.1457^(x.1458*inv((~ltk.734*~xx.736*x.1459)))
                                     >), 
                                   'K_2e', '2'>,
                                  hkdfExtract('emptyStr', x.1457^(x.1458*inv((~ltk.734*x.1459))))),
                       <
                        <$V.731, 
                         h(<$cHash0.733, m1.739, x.1457^(x.1458*inv((~ltk.734*~xx.736*x.1459)))
                           >), 
                         pkV.741>, 
                        aeadEncrypt('emptyStr',
                                    hkdfExpand(<$cAEAD0.732, 
                                                h(<$cHash0.733, m1.739, 
                                                   x.1457^(x.1458*inv((~ltk.734*~xx.736*x.1459)))>), 
                                                'K_2m'>,
                                               hkdfExtract('emptyStr',
                                                           x.1457^(x.1458*inv((~ltk.734*x.1459))))),
                                    <$V.731, 
                                     h(<$cHash0.733, m1.739, x.1457^(x.1458*inv((~ltk.734*~xx.736*x.1459)))
                                       >), 
                                     pkV.741>,
                                    $cAEAD0.732)
                       >,
                       pkV.741)
    
    67. $V    = $V.731
        $cAEAD0
              = $cAEAD0.732
        $cHash0
              = $cHash0.733
        ~ltk  = ~ltk.734
        ~xx   = ~xx.736
        gy    = x.1457^(x.1458*inv((~ltk.734*x.1459)))
        m1    = m1.739
        pkV   = pkV.741
        z     = zero
        z.1   = x.1457^(~xx.736*x.1458*inv((~ltk.734*x.1459)))
        z.2   = x.1457^(x.1458*inv(x.1459))
        z.3   = verify(hkdfExpand(<$cAEAD0.732, 
                                   h(<$cHash0.733, m1.739, x.1457^(x.1458*inv((~ltk.734*x.1459)))>), 
                                   'K_2e', '2'>,
                                  hkdfExtract('emptyStr', x.1457^(~xx.736*x.1458*inv((~ltk.734*x.1459))))),
                       <
                        <$V.731, 
                         h(<$cHash0.733, m1.739, x.1457^(x.1458*inv((~ltk.734*x.1459)))>), pkV.741
                        >, 
                        aeadEncrypt('emptyStr',
                                    hkdfExpand(<$cAEAD0.732, 
                                                h(<$cHash0.733, m1.739, x.1457^(x.1458*inv((~ltk.734*x.1459)))
                                                  >), 
                                                'K_2m'>,
                                               hkdfExtract('emptyStr',
                                                           x.1457^(~xx.736*x.1458*inv((~ltk.734*x.1459))))),
                                    <$V.731, 
                                     h(<$cHash0.733, m1.739, x.1457^(x.1458*inv((~ltk.734*x.1459)))>), pkV.741
                                    >,
                                    $cAEAD0.732)
                       >,
                       pkV.741)
    
    68. $V    = $V.731
        $cAEAD0
              = $cAEAD0.732
        $cHash0
              = $cHash0.733
        ~ltk  = ~ltk.734
        ~xx   = ~xx.736
        gy    = x.1457^(x.1458*inv((~xx.736*x.1459)))
        m1    = m1.739
        pkV   = pkV.741
        z     = zero
        z.1   = x.1457^(x.1458*inv(x.1459))
        z.2   = x.1457^(~ltk.734*x.1458*inv((~xx.736*x.1459)))
        z.3   = verify(hkdfExpand(<$cAEAD0.732, 
                                   h(<$cHash0.733, m1.739, x.1457^(x.1458*inv((~xx.736*x.1459)))>), 'K_2e', 
                                   '2'>,
                                  hkdfExtract('emptyStr', x.1457^(x.1458*inv(x.1459)))),
                       <
                        <$V.731, 
                         h(<$cHash0.733, m1.739, x.1457^(x.1458*inv((~xx.736*x.1459)))>), pkV.741
                        >, 
                        aeadEncrypt('emptyStr',
                                    hkdfExpand(<$cAEAD0.732, 
                                                h(<$cHash0.733, m1.739, x.1457^(x.1458*inv((~xx.736*x.1459)))
                                                  >), 
                                                'K_2m'>,
                                               hkdfExtract('emptyStr', x.1457^(x.1458*inv(x.1459)))),
                                    <$V.731, 
                                     h(<$cHash0.733, m1.739, x.1457^(x.1458*inv((~xx.736*x.1459)))>), pkV.741
                                    >,
                                    $cAEAD0.732)
                       >,
                       pkV.741)
    
    69. $V    = $V.731
        $cAEAD0
              = $cAEAD0.732
        $cHash0
              = $cHash0.733
        ~ltk  = ~ltk.734
        ~xx   = ~xx.736
        gy    = x.1458^x.1459
        m1    = m1.739
        pkV   = pkV.741
        z     = z.743
        z.1   = x.1458^(~xx.736*x.1459)
        z.2   = x.1458^(~ltk.734*x.1459)
        z.3   = verify((z.743⊕
                        hkdfExpand(<$cAEAD0.732, h(<$cHash0.733, m1.739, x.1458^x.1459>), 
                                    'K_2e', '2'>,
                                   hkdfExtract('emptyStr', x.1458^(~xx.736*x.1459)))
                       ),
                       <<$V.731, h(<$cHash0.733, m1.739, x.1458^x.1459>), pkV.741>, 
                        aeadEncrypt('emptyStr',
                                    hkdfExpand(<$cAEAD0.732, h(<$cHash0.733, m1.739, x.1458^x.1459>), 'K_2m'
                                               >,
                                               hkdfExtract('emptyStr', x.1458^(~xx.736*x.1459))),
                                    <$V.731, h(<$cHash0.733, m1.739, x.1458^x.1459>), pkV.741>, $cAEAD0.732)
                       >,
                       pkV.741)
    
    70. $V    = $V.731
        $cAEAD0
              = $cAEAD0.732
        $cHash0
              = $cHash0.733
        ~ltk  = ~ltk.734
        ~xx   = ~xx.736
        gy    = x.1458^inv((~ltk.734*~xx.736))
        m1    = m1.739
        pkV   = pk(x.1459)
        z     = (
                 hkdfExpand(<$cAEAD0.732, 
                             h(<$cHash0.733, m1.739, x.1458^inv((~ltk.734*~xx.736))>), 'K_2e', '2'>,
                            hkdfExtract('emptyStr', x.1458^inv(~ltk.734)))⊕
                 sign(<
                       <$V.731, h(<$cHash0.733, m1.739, x.1458^inv((~ltk.734*~xx.736))>), 
                        pk(x.1459)>, 
                       aeadEncrypt('emptyStr',
                                   hkdfExpand(<$cAEAD0.732, 
                                               h(<$cHash0.733, m1.739, x.1458^inv((~ltk.734*~xx.736))>), 
                                               'K_2m'>,
                                              hkdfExtract('emptyStr', x.1458^inv(~ltk.734))),
                                   <$V.731, h(<$cHash0.733, m1.739, x.1458^inv((~ltk.734*~xx.736))>), 
                                    pk(x.1459)>,
                                   $cAEAD0.732)
                      >,
                      x.1459)
                )
        z.1   = x.1458^inv(~ltk.734)
        z.2   = x.1458^inv(~xx.736)
        z.3   = true
    
    71. $V    = $V.731
        $cAEAD0
              = $cAEAD0.732
        $cHash0
              = $cHash0.733
        ~ltk  = ~ltk.734
        ~xx   = ~xx.736
        gy    = x.1458^inv((~ltk.734*~xx.736*x.1459))
        m1    = m1.739
        pkV   = pkV.741
        z     = z.743
        z.1   = x.1458^inv((~ltk.734*x.1459))
        z.2   = x.1458^inv((~xx.736*x.1459))
        z.3   = verify((z.743⊕
                        hkdfExpand(<$cAEAD0.732, 
                                    h(<$cHash0.733, m1.739, x.1458^inv((~ltk.734*~xx.736*x.1459))>), 'K_2e', 
                                    '2'>,
                                   hkdfExtract('emptyStr', x.1458^inv((~ltk.734*x.1459))))
                       ),
                       <
                        <$V.731, 
                         h(<$cHash0.733, m1.739, x.1458^inv((~ltk.734*~xx.736*x.1459))>), pkV.741
                        >, 
                        aeadEncrypt('emptyStr',
                                    hkdfExpand(<$cAEAD0.732, 
                                                h(<$cHash0.733, m1.739, x.1458^inv((~ltk.734*~xx.736*x.1459))
                                                  >), 
                                                'K_2m'>,
                                               hkdfExtract('emptyStr', x.1458^inv((~ltk.734*x.1459)))),
                                    <$V.731, 
                                     h(<$cHash0.733, m1.739, x.1458^inv((~ltk.734*~xx.736*x.1459))>), pkV.741
                                    >,
                                    $cAEAD0.732)
                       >,
                       pkV.741)
    
    72. $V    = $V.731
        $cAEAD0
              = $cAEAD0.732
        $cHash0
              = $cHash0.733
        ~ltk  = ~ltk.734
        ~xx   = ~xx.736
        gy    = x.1458^inv((~ltk.734*x.1459))
        m1    = m1.739
        pkV   = pkV.741
        z     = z.743
        z.1   = x.1458^(~xx.736*inv((~ltk.734*x.1459)))
        z.2   = x.1458^inv(x.1459)
        z.3   = verify((z.743⊕
                        hkdfExpand(<$cAEAD0.732, 
                                    h(<$cHash0.733, m1.739, x.1458^inv((~ltk.734*x.1459))>), 'K_2e', '2'>,
                                   hkdfExtract('emptyStr', x.1458^(~xx.736*inv((~ltk.734*x.1459)))))
                       ),
                       <
                        <$V.731, h(<$cHash0.733, m1.739, x.1458^inv((~ltk.734*x.1459))>), pkV.741
                        >, 
                        aeadEncrypt('emptyStr',
                                    hkdfExpand(<$cAEAD0.732, 
                                                h(<$cHash0.733, m1.739, x.1458^inv((~ltk.734*x.1459))>), 
                                                'K_2m'>,
                                               hkdfExtract('emptyStr',
                                                           x.1458^(~xx.736*inv((~ltk.734*x.1459))))),
                                    <$V.731, h(<$cHash0.733, m1.739, x.1458^inv((~ltk.734*x.1459))>), pkV.741
                                    >,
                                    $cAEAD0.732)
                       >,
                       pkV.741)
    
    73. $V    = $V.731
        $cAEAD0
              = $cAEAD0.732
        $cHash0
              = $cHash0.733
        ~ltk  = ~ltk.734
        ~xx   = ~xx.736
        gy    = x.1458^inv((~xx.736*x.1459))
        m1    = m1.739
        pkV   = pkV.741
        z     = z.743
        z.1   = x.1458^inv(x.1459)
        z.2   = x.1458^(~ltk.734*inv((~xx.736*x.1459)))
        z.3   = verify((z.743⊕
                        hkdfExpand(<$cAEAD0.732, 
                                    h(<$cHash0.733, m1.739, x.1458^inv((~xx.736*x.1459))>), 'K_2e', '2'>,
                                   hkdfExtract('emptyStr', x.1458^inv(x.1459)))
                       ),
                       <
                        <$V.731, h(<$cHash0.733, m1.739, x.1458^inv((~xx.736*x.1459))>), pkV.741
                        >, 
                        aeadEncrypt('emptyStr',
                                    hkdfExpand(<$cAEAD0.732, 
                                                h(<$cHash0.733, m1.739, x.1458^inv((~xx.736*x.1459))>), 'K_2m'
                                               >,
                                               hkdfExtract('emptyStr', x.1458^inv(x.1459))),
                                    <$V.731, h(<$cHash0.733, m1.739, x.1458^inv((~xx.736*x.1459))>), pkV.741
                                    >,
                                    $cAEAD0.732)
                       >,
                       pkV.741)
    
    74. $V    = $V.731
        $cAEAD0
              = $cAEAD0.732
        $cHash0
              = $cHash0.733
        ~ltk  = ~ltk.734
        ~xx   = ~xx.736
        gy    = x.1458^(x.1459*inv(~ltk.734))
        m1    = m1.739
        pkV   = pkV.741
        z     = z.743
        z.1   = x.1458^(~xx.736*x.1459*inv(~ltk.734))
        z.2   = x.1458^x.1459
        z.3   = verify((z.743⊕
                        hkdfExpand(<$cAEAD0.732, 
                                    h(<$cHash0.733, m1.739, x.1458^(x.1459*inv(~ltk.734))>), 'K_2e', '2'>,
                                   hkdfExtract('emptyStr', x.1458^(~xx.736*x.1459*inv(~ltk.734))))
                       ),
                       <
                        <$V.731, h(<$cHash0.733, m1.739, x.1458^(x.1459*inv(~ltk.734))>), pkV.741
                        >, 
                        aeadEncrypt('emptyStr',
                                    hkdfExpand(<$cAEAD0.732, 
                                                h(<$cHash0.733, m1.739, x.1458^(x.1459*inv(~ltk.734))>), 
                                                'K_2m'>,
                                               hkdfExtract('emptyStr',
                                                           x.1458^(~xx.736*x.1459*inv(~ltk.734)))),
                                    <$V.731, h(<$cHash0.733, m1.739, x.1458^(x.1459*inv(~ltk.734))>), pkV.741
                                    >,
                                    $cAEAD0.732)
                       >,
                       pkV.741)
    
    75. $V    = $V.731
        $cAEAD0
              = $cAEAD0.732
        $cHash0
              = $cHash0.733
        ~ltk  = ~ltk.734
        ~xx   = ~xx.736
        gy    = x.1458^(x.1459*inv(~xx.736))
        m1    = m1.739
        pkV   = pkV.741
        z     = z.743
        z.1   = x.1458^x.1459
        z.2   = x.1458^(~ltk.734*x.1459*inv(~xx.736))
        z.3   = verify((z.743⊕
                        hkdfExpand(<$cAEAD0.732, 
                                    h(<$cHash0.733, m1.739, x.1458^(x.1459*inv(~xx.736))>), 'K_2e', '2'>,
                                   hkdfExtract('emptyStr', x.1458^x.1459))
                       ),
                       <
                        <$V.731, h(<$cHash0.733, m1.739, x.1458^(x.1459*inv(~xx.736))>), pkV.741
                        >, 
                        aeadEncrypt('emptyStr',
                                    hkdfExpand(<$cAEAD0.732, 
                                                h(<$cHash0.733, m1.739, x.1458^(x.1459*inv(~xx.736))>), 'K_2m'
                                               >,
                                               hkdfExtract('emptyStr', x.1458^x.1459)),
                                    <$V.731, h(<$cHash0.733, m1.739, x.1458^(x.1459*inv(~xx.736))>), pkV.741
                                    >,
                                    $cAEAD0.732)
                       >,
                       pkV.741)
    
    76. $V    = $V.731
        $cAEAD0
              = $cAEAD0.732
        $cHash0
              = $cHash0.733
        ~ltk  = ~ltk.734
        ~xx   = ~xx.736
        gy    = x.1458^(x.1459*inv((~ltk.734*~xx.736)))
        m1    = m1.739
        pkV   = pkV.741
        z     = z.743
        z.1   = x.1458^(x.1459*inv(~ltk.734))
        z.2   = x.1458^(x.1459*inv(~xx.736))
        z.3   = verify((z.743⊕
                        hkdfExpand(<$cAEAD0.732, 
                                    h(<$cHash0.733, m1.739, x.1458^(x.1459*inv((~ltk.734*~xx.736)))>), 
                                    'K_2e', '2'>,
                                   hkdfExtract('emptyStr', x.1458^(x.1459*inv(~ltk.734))))
                       ),
                       <
                        <$V.731, 
                         h(<$cHash0.733, m1.739, x.1458^(x.1459*inv((~ltk.734*~xx.736)))>), 
                         pkV.741>, 
                        aeadEncrypt('emptyStr',
                                    hkdfExpand(<$cAEAD0.732, 
                                                h(<$cHash0.733, m1.739, 
                                                   x.1458^(x.1459*inv((~ltk.734*~xx.736)))>), 
                                                'K_2m'>,
                                               hkdfExtract('emptyStr', x.1458^(x.1459*inv(~ltk.734)))),
                                    <$V.731, 
                                     h(<$cHash0.733, m1.739, x.1458^(x.1459*inv((~ltk.734*~xx.736)))>), 
                                     pkV.741>,
                                    $cAEAD0.732)
                       >,
                       pkV.741)
    
    77. $V    = $V.732
        $cAEAD0
              = $cAEAD0.733
        $cHash0
              = $cHash0.734
        ~ltk  = ~ltk.735
        ~xx   = ~ltk.735
        gy    = x.1458^(x.1459*inv((~ltk.735*x.1460)))
        m1    = m1.740
        pkV   = pk(x.1461)
        z     = (
                 hkdfExpand(<$cAEAD0.733, 
                             h(<$cHash0.734, m1.740, x.1458^(x.1459*inv((~ltk.735*x.1460)))>), 
                             'K_2e', '2'>,
                            hkdfExtract('emptyStr', x.1458^(x.1459*inv(x.1460))))⊕
                 sign(<
                       <$V.732, 
                        h(<$cHash0.734, m1.740, x.1458^(x.1459*inv((~ltk.735*x.1460)))>), 
                        pk(x.1461)>, 
                       aeadEncrypt('emptyStr',
                                   hkdfExpand(<$cAEAD0.733, 
                                               h(<$cHash0.734, m1.740, x.1458^(x.1459*inv((~ltk.735*x.1460)))
                                                 >), 
                                               'K_2m'>,
                                              hkdfExtract('emptyStr', x.1458^(x.1459*inv(x.1460)))),
                                   <$V.732, 
                                    h(<$cHash0.734, m1.740, x.1458^(x.1459*inv((~ltk.735*x.1460)))>), 
                                    pk(x.1461)>,
                                   $cAEAD0.733)
                      >,
                      x.1461)
                )
        z.1   = x.1458^(x.1459*inv(x.1460))
        z.2   = x.1458^(x.1459*inv(x.1460))
        z.3   = true
    
    78. $V    = $V.732
        $cAEAD0
              = $cAEAD0.733
        $cHash0
              = $cHash0.734
        ~ltk  = ~ltk.735
        ~xx   = ~xx.737
        gy    = x.1459^x.1460
        m1    = m1.740
        pkV   = pk(x.1461)
        z     = (
                 hkdfExpand(<$cAEAD0.733, h(<$cHash0.734, m1.740, x.1459^x.1460>), 
                             'K_2e', '2'>,
                            hkdfExtract('emptyStr', x.1459^(~xx.737*x.1460)))⊕
                 sign(<<$V.732, h(<$cHash0.734, m1.740, x.1459^x.1460>), pk(x.1461)>, 
                       aeadEncrypt('emptyStr',
                                   hkdfExpand(<$cAEAD0.733, h(<$cHash0.734, m1.740, x.1459^x.1460>), 'K_2m'
                                              >,
                                              hkdfExtract('emptyStr', x.1459^(~xx.737*x.1460))),
                                   <$V.732, h(<$cHash0.734, m1.740, x.1459^x.1460>), pk(x.1461)>,
                                   $cAEAD0.733)
                      >,
                      x.1461)
                )
        z.1   = x.1459^(~xx.737*x.1460)
        z.2   = x.1459^(~ltk.735*x.1460)
        z.3   = true
    
    79. $V    = $V.732
        $cAEAD0
              = $cAEAD0.733
        $cHash0
              = $cHash0.734
        ~ltk  = ~ltk.735
        ~xx   = ~xx.737
        gy    = x.1459^inv((~ltk.735*~xx.737*x.1460))
        m1    = m1.740
        pkV   = pk(x.1461)
        z     = (
                 hkdfExpand(<$cAEAD0.733, 
                             h(<$cHash0.734, m1.740, x.1459^inv((~ltk.735*~xx.737*x.1460))>), 'K_2e', 
                             '2'>,
                            hkdfExtract('emptyStr', x.1459^inv((~ltk.735*x.1460))))⊕
                 sign(<
                       <$V.732, 
                        h(<$cHash0.734, m1.740, x.1459^inv((~ltk.735*~xx.737*x.1460))>), 
                        pk(x.1461)>, 
                       aeadEncrypt('emptyStr',
                                   hkdfExpand(<$cAEAD0.733, 
                                               h(<$cHash0.734, m1.740, x.1459^inv((~ltk.735*~xx.737*x.1460))
                                                 >), 
                                               'K_2m'>,
                                              hkdfExtract('emptyStr', x.1459^inv((~ltk.735*x.1460)))),
                                   <$V.732, 
                                    h(<$cHash0.734, m1.740, x.1459^inv((~ltk.735*~xx.737*x.1460))>), 
                                    pk(x.1461)>,
                                   $cAEAD0.733)
                      >,
                      x.1461)
                )
        z.1   = x.1459^inv((~ltk.735*x.1460))
        z.2   = x.1459^inv((~xx.737*x.1460))
        z.3   = true
    
    80. $V    = $V.732
        $cAEAD0
              = $cAEAD0.733
        $cHash0
              = $cHash0.734
        ~ltk  = ~ltk.735
        ~xx   = ~xx.737
        gy    = x.1459^inv((~ltk.735*x.1460))
        m1    = m1.740
        pkV   = pk(x.1461)
        z     = (
                 hkdfExpand(<$cAEAD0.733, 
                             h(<$cHash0.734, m1.740, x.1459^inv((~ltk.735*x.1460))>), 'K_2e', '2'>,
                            hkdfExtract('emptyStr', x.1459^(~xx.737*inv((~ltk.735*x.1460)))))⊕
                 sign(<
                       <$V.732, h(<$cHash0.734, m1.740, x.1459^inv((~ltk.735*x.1460))>), 
                        pk(x.1461)>, 
                       aeadEncrypt('emptyStr',
                                   hkdfExpand(<$cAEAD0.733, 
                                               h(<$cHash0.734, m1.740, x.1459^inv((~ltk.735*x.1460))>), 'K_2m'
                                              >,
                                              hkdfExtract('emptyStr',
                                                          x.1459^(~xx.737*inv((~ltk.735*x.1460))))),
                                   <$V.732, h(<$cHash0.734, m1.740, x.1459^inv((~ltk.735*x.1460))>), 
                                    pk(x.1461)>,
                                   $cAEAD0.733)
                      >,
                      x.1461)
                )
        z.1   = x.1459^(~xx.737*inv((~ltk.735*x.1460)))
        z.2   = x.1459^inv(x.1460)
        z.3   = true
    
    81. $V    = $V.732
        $cAEAD0
              = $cAEAD0.733
        $cHash0
              = $cHash0.734
        ~ltk  = ~ltk.735
        ~xx   = ~xx.737
        gy    = x.1459^inv((~xx.737*x.1460))
        m1    = m1.740
        pkV   = pk(x.1461)
        z     = (
                 hkdfExpand(<$cAEAD0.733, 
                             h(<$cHash0.734, m1.740, x.1459^inv((~xx.737*x.1460))>), 'K_2e', '2'>,
                            hkdfExtract('emptyStr', x.1459^inv(x.1460)))⊕
                 sign(<
                       <$V.732, h(<$cHash0.734, m1.740, x.1459^inv((~xx.737*x.1460))>), 
                        pk(x.1461)>, 
                       aeadEncrypt('emptyStr',
                                   hkdfExpand(<$cAEAD0.733, 
                                               h(<$cHash0.734, m1.740, x.1459^inv((~xx.737*x.1460))>), 'K_2m'
                                              >,
                                              hkdfExtract('emptyStr', x.1459^inv(x.1460))),
                                   <$V.732, h(<$cHash0.734, m1.740, x.1459^inv((~xx.737*x.1460))>), 
                                    pk(x.1461)>,
                                   $cAEAD0.733)
                      >,
                      x.1461)
                )
        z.1   = x.1459^inv(x.1460)
        z.2   = x.1459^(~ltk.735*inv((~xx.737*x.1460)))
        z.3   = true
    
    82. $V    = $V.732
        $cAEAD0
              = $cAEAD0.733
        $cHash0
              = $cHash0.734
        ~ltk  = ~ltk.735
        ~xx   = ~xx.737
        gy    = x.1459^(x.1460*inv(~ltk.735))
        m1    = m1.740
        pkV   = pk(x.1461)
        z     = (
                 hkdfExpand(<$cAEAD0.733, 
                             h(<$cHash0.734, m1.740, x.1459^(x.1460*inv(~ltk.735))>), 'K_2e', '2'>,
                            hkdfExtract('emptyStr', x.1459^(~xx.737*x.1460*inv(~ltk.735))))⊕
                 sign(<
                       <$V.732, h(<$cHash0.734, m1.740, x.1459^(x.1460*inv(~ltk.735))>), 
                        pk(x.1461)>, 
                       aeadEncrypt('emptyStr',
                                   hkdfExpand(<$cAEAD0.733, 
                                               h(<$cHash0.734, m1.740, x.1459^(x.1460*inv(~ltk.735))>), 'K_2m'
                                              >,
                                              hkdfExtract('emptyStr', x.1459^(~xx.737*x.1460*inv(~ltk.735)))),
                                   <$V.732, h(<$cHash0.734, m1.740, x.1459^(x.1460*inv(~ltk.735))>), 
                                    pk(x.1461)>,
                                   $cAEAD0.733)
                      >,
                      x.1461)
                )
        z.1   = x.1459^(~xx.737*x.1460*inv(~ltk.735))
        z.2   = x.1459^x.1460
        z.3   = true
    
    83. $V    = $V.732
        $cAEAD0
              = $cAEAD0.733
        $cHash0
              = $cHash0.734
        ~ltk  = ~ltk.735
        ~xx   = ~xx.737
        gy    = x.1459^(x.1460*inv(~xx.737))
        m1    = m1.740
        pkV   = pk(x.1461)
        z     = (
                 hkdfExpand(<$cAEAD0.733, 
                             h(<$cHash0.734, m1.740, x.1459^(x.1460*inv(~xx.737))>), 'K_2e', '2'>,
                            hkdfExtract('emptyStr', x.1459^x.1460))⊕
                 sign(<
                       <$V.732, h(<$cHash0.734, m1.740, x.1459^(x.1460*inv(~xx.737))>), 
                        pk(x.1461)>, 
                       aeadEncrypt('emptyStr',
                                   hkdfExpand(<$cAEAD0.733, 
                                               h(<$cHash0.734, m1.740, x.1459^(x.1460*inv(~xx.737))>), 'K_2m'
                                              >,
                                              hkdfExtract('emptyStr', x.1459^x.1460)),
                                   <$V.732, h(<$cHash0.734, m1.740, x.1459^(x.1460*inv(~xx.737))>), 
                                    pk(x.1461)>,
                                   $cAEAD0.733)
                      >,
                      x.1461)
                )
        z.1   = x.1459^x.1460
        z.2   = x.1459^(~ltk.735*x.1460*inv(~xx.737))
        z.3   = true
    
    84. $V    = $V.732
        $cAEAD0
              = $cAEAD0.733
        $cHash0
              = $cHash0.734
        ~ltk  = ~ltk.735
        ~xx   = ~xx.737
        gy    = x.1459^(x.1460*inv((~ltk.735*~xx.737)))
        m1    = m1.740
        pkV   = pk(x.1461)
        z     = (
                 hkdfExpand(<$cAEAD0.733, 
                             h(<$cHash0.734, m1.740, x.1459^(x.1460*inv((~ltk.735*~xx.737)))>), 
                             'K_2e', '2'>,
                            hkdfExtract('emptyStr', x.1459^(x.1460*inv(~ltk.735))))⊕
                 sign(<
                       <$V.732, 
                        h(<$cHash0.734, m1.740, x.1459^(x.1460*inv((~ltk.735*~xx.737)))>), 
                        pk(x.1461)>, 
                       aeadEncrypt('emptyStr',
                                   hkdfExpand(<$cAEAD0.733, 
                                               h(<$cHash0.734, m1.740, x.1459^(x.1460*inv((~ltk.735*~xx.737)))
                                                 >), 
                                               'K_2m'>,
                                              hkdfExtract('emptyStr', x.1459^(x.1460*inv(~ltk.735)))),
                                   <$V.732, 
                                    h(<$cHash0.734, m1.740, x.1459^(x.1460*inv((~ltk.735*~xx.737)))>), 
                                    pk(x.1461)>,
                                   $cAEAD0.733)
                      >,
                      x.1461)
                )
        z.1   = x.1459^(x.1460*inv(~ltk.735))
        z.2   = x.1459^(x.1460*inv(~xx.737))
        z.3   = true
    
    85. $V    = $V.732
        $cAEAD0
              = $cAEAD0.733
        $cHash0
              = $cHash0.734
        ~ltk  = ~ltk.735
        ~xx   = ~xx.737
        gy    = x.1459^(x.1460*inv((~ltk.735*~xx.737*x.1461)))
        m1    = m1.740
        pkV   = pkV.742
        z     = z.744
        z.1   = x.1459^(x.1460*inv((~ltk.735*x.1461)))
        z.2   = x.1459^(x.1460*inv((~xx.737*x.1461)))
        z.3   = verify((z.744⊕
                        hkdfExpand(<$cAEAD0.733, 
                                    h(<$cHash0.734, m1.740, x.1459^(x.1460*inv((~ltk.735*~xx.737*x.1461)))
                                      >), 
                                    'K_2e', '2'>,
                                   hkdfExtract('emptyStr', x.1459^(x.1460*inv((~ltk.735*x.1461)))))
                       ),
                       <
                        <$V.732, 
                         h(<$cHash0.734, m1.740, x.1459^(x.1460*inv((~ltk.735*~xx.737*x.1461)))
                           >), 
                         pkV.742>, 
                        aeadEncrypt('emptyStr',
                                    hkdfExpand(<$cAEAD0.733, 
                                                h(<$cHash0.734, m1.740, 
                                                   x.1459^(x.1460*inv((~ltk.735*~xx.737*x.1461)))>), 
                                                'K_2m'>,
                                               hkdfExtract('emptyStr',
                                                           x.1459^(x.1460*inv((~ltk.735*x.1461))))),
                                    <$V.732, 
                                     h(<$cHash0.734, m1.740, x.1459^(x.1460*inv((~ltk.735*~xx.737*x.1461)))
                                       >), 
                                     pkV.742>,
                                    $cAEAD0.733)
                       >,
                       pkV.742)
    
    86. $V    = $V.732
        $cAEAD0
              = $cAEAD0.733
        $cHash0
              = $cHash0.734
        ~ltk  = ~ltk.735
        ~xx   = ~xx.737
        gy    = x.1459^(x.1460*inv((~ltk.735*x.1461)))
        m1    = m1.740
        pkV   = pkV.742
        z     = z.744
        z.1   = x.1459^(~xx.737*x.1460*inv((~ltk.735*x.1461)))
        z.2   = x.1459^(x.1460*inv(x.1461))
        z.3   = verify((z.744⊕
                        hkdfExpand(<$cAEAD0.733, 
                                    h(<$cHash0.734, m1.740, x.1459^(x.1460*inv((~ltk.735*x.1461)))>), 
                                    'K_2e', '2'>,
                                   hkdfExtract('emptyStr', x.1459^(~xx.737*x.1460*inv((~ltk.735*x.1461)))))
                       ),
                       <
                        <$V.732, 
                         h(<$cHash0.734, m1.740, x.1459^(x.1460*inv((~ltk.735*x.1461)))>), pkV.742
                        >, 
                        aeadEncrypt('emptyStr',
                                    hkdfExpand(<$cAEAD0.733, 
                                                h(<$cHash0.734, m1.740, x.1459^(x.1460*inv((~ltk.735*x.1461)))
                                                  >), 
                                                'K_2m'>,
                                               hkdfExtract('emptyStr',
                                                           x.1459^(~xx.737*x.1460*inv((~ltk.735*x.1461))))),
                                    <$V.732, 
                                     h(<$cHash0.734, m1.740, x.1459^(x.1460*inv((~ltk.735*x.1461)))>), pkV.742
                                    >,
                                    $cAEAD0.733)
                       >,
                       pkV.742)
    
    87. $V    = $V.732
        $cAEAD0
              = $cAEAD0.733
        $cHash0
              = $cHash0.734
        ~ltk  = ~ltk.735
        ~xx   = ~xx.737
        gy    = x.1459^(x.1460*inv((~xx.737*x.1461)))
        m1    = m1.740
        pkV   = pkV.742
        z     = z.744
        z.1   = x.1459^(x.1460*inv(x.1461))
        z.2   = x.1459^(~ltk.735*x.1460*inv((~xx.737*x.1461)))
        z.3   = verify((z.744⊕
                        hkdfExpand(<$cAEAD0.733, 
                                    h(<$cHash0.734, m1.740, x.1459^(x.1460*inv((~xx.737*x.1461)))>), 'K_2e', 
                                    '2'>,
                                   hkdfExtract('emptyStr', x.1459^(x.1460*inv(x.1461))))
                       ),
                       <
                        <$V.732, 
                         h(<$cHash0.734, m1.740, x.1459^(x.1460*inv((~xx.737*x.1461)))>), pkV.742
                        >, 
                        aeadEncrypt('emptyStr',
                                    hkdfExpand(<$cAEAD0.733, 
                                                h(<$cHash0.734, m1.740, x.1459^(x.1460*inv((~xx.737*x.1461)))
                                                  >), 
                                                'K_2m'>,
                                               hkdfExtract('emptyStr', x.1459^(x.1460*inv(x.1461)))),
                                    <$V.732, 
                                     h(<$cHash0.734, m1.740, x.1459^(x.1460*inv((~xx.737*x.1461)))>), pkV.742
                                    >,
                                    $cAEAD0.733)
                       >,
                       pkV.742)
    
    88. $V    = $V.733
        $cAEAD0
              = $cAEAD0.734
        $cHash0
              = $cHash0.735
        ~ltk  = ~ltk.736
        ~xx   = ~xx.738
        gy    = x.1460^(x.1461*inv((~ltk.736*~xx.738*x.1462)))
        m1    = m1.741
        pkV   = pk(x.1463)
        z     = (
                 hkdfExpand(<$cAEAD0.734, 
                             h(<$cHash0.735, m1.741, x.1460^(x.1461*inv((~ltk.736*~xx.738*x.1462)))
                               >), 
                             'K_2e', '2'>,
                            hkdfExtract('emptyStr', x.1460^(x.1461*inv((~ltk.736*x.1462)))))⊕
                 sign(<
                       <$V.733, 
                        h(<$cHash0.735, m1.741, x.1460^(x.1461*inv((~ltk.736*~xx.738*x.1462)))
                          >), 
                        pk(x.1463)>, 
                       aeadEncrypt('emptyStr',
                                   hkdfExpand(<$cAEAD0.734, 
                                               h(<$cHash0.735, m1.741, 
                                                  x.1460^(x.1461*inv((~ltk.736*~xx.738*x.1462)))>), 
                                               'K_2m'>,
                                              hkdfExtract('emptyStr',
                                                          x.1460^(x.1461*inv((~ltk.736*x.1462))))),
                                   <$V.733, 
                                    h(<$cHash0.735, m1.741, x.1460^(x.1461*inv((~ltk.736*~xx.738*x.1462)))
                                      >), 
                                    pk(x.1463)>,
                                   $cAEAD0.734)
                      >,
                      x.1463)
                )
        z.1   = x.1460^(x.1461*inv((~ltk.736*x.1462)))
        z.2   = x.1460^(x.1461*inv((~xx.738*x.1462)))
        z.3   = true
    
    89. $V    = $V.733
        $cAEAD0
              = $cAEAD0.734
        $cHash0
              = $cHash0.735
        ~ltk  = ~ltk.736
        ~xx   = ~xx.738
        gy    = x.1460^(x.1461*inv((~ltk.736*x.1462)))
        m1    = m1.741
        pkV   = pk(x.1463)
        z     = (
                 hkdfExpand(<$cAEAD0.734, 
                             h(<$cHash0.735, m1.741, x.1460^(x.1461*inv((~ltk.736*x.1462)))>), 
                             'K_2e', '2'>,
                            hkdfExtract('emptyStr', x.1460^(~xx.738*x.1461*inv((~ltk.736*x.1462)))))⊕
                 sign(<
                       <$V.733, 
                        h(<$cHash0.735, m1.741, x.1460^(x.1461*inv((~ltk.736*x.1462)))>), 
                        pk(x.1463)>, 
                       aeadEncrypt('emptyStr',
                                   hkdfExpand(<$cAEAD0.734, 
                                               h(<$cHash0.735, m1.741, x.1460^(x.1461*inv((~ltk.736*x.1462)))
                                                 >), 
                                               'K_2m'>,
                                              hkdfExtract('emptyStr',
                                                          x.1460^(~xx.738*x.1461*inv((~ltk.736*x.1462))))),
                                   <$V.733, 
                                    h(<$cHash0.735, m1.741, x.1460^(x.1461*inv((~ltk.736*x.1462)))>), 
                                    pk(x.1463)>,
                                   $cAEAD0.734)
                      >,
                      x.1463)
                )
        z.1   = x.1460^(~xx.738*x.1461*inv((~ltk.736*x.1462)))
        z.2   = x.1460^(x.1461*inv(x.1462))
        z.3   = true
    
    90. $V    = $V.733
        $cAEAD0
              = $cAEAD0.734
        $cHash0
              = $cHash0.735
        ~ltk  = ~ltk.736
        ~xx   = ~xx.738
        gy    = x.1460^(x.1461*inv((~xx.738*x.1462)))
        m1    = m1.741
        pkV   = pk(x.1463)
        z     = (
                 hkdfExpand(<$cAEAD0.734, 
                             h(<$cHash0.735, m1.741, x.1460^(x.1461*inv((~xx.738*x.1462)))>), 'K_2e', 
                             '2'>,
                            hkdfExtract('emptyStr', x.1460^(x.1461*inv(x.1462))))⊕
                 sign(<
                       <$V.733, 
                        h(<$cHash0.735, m1.741, x.1460^(x.1461*inv((~xx.738*x.1462)))>), 
                        pk(x.1463)>, 
                       aeadEncrypt('emptyStr',
                                   hkdfExpand(<$cAEAD0.734, 
                                               h(<$cHash0.735, m1.741, x.1460^(x.1461*inv((~xx.738*x.1462)))
                                                 >), 
                                               'K_2m'>,
                                              hkdfExtract('emptyStr', x.1460^(x.1461*inv(x.1462)))),
                                   <$V.733, 
                                    h(<$cHash0.735, m1.741, x.1460^(x.1461*inv((~xx.738*x.1462)))>), 
                                    pk(x.1463)>,
                                   $cAEAD0.734)
                      >,
                      x.1463)
                )
        z.1   = x.1460^(x.1461*inv(x.1462))
        z.2   = x.1460^(~ltk.736*x.1461*inv((~xx.738*x.1462)))
        z.3   = true
  */

rule (modulo E) R4_STAT_SIG:
   [
   StR2_STAT_SIG( $V, ~ltk, ~yy, prk_3e2m, TH_2, CIPHERTEXT_2, gxy, ~tid,
                  m1, m2
   ),
   !PK_STAT( $U, pkU ), !PK_SIG( $V, pkV ),
   In( <'emptyStr', 
        aeadEncrypt(<$U, authI>,
                    hkdfExpand(<$cAEAD0, h(<$cHash0, TH_2, CIPHERTEXT_2, 'emptyStr'>), 
                                'K_3ae'>,
                               prk_3e2m),
                    extAad3Outer, $cAEAD0)
       >
   )
   ]
  --[
  ExpCommitR( ~tid, $U, $V, gxy ), CommitR( ~tid, $U, $V, <gxy, pkU^~yy> ),
  R4( ~tid, $U, $V, m1, m2,
      <'emptyStr', 
       aeadEncrypt(<$U, authI>,
                   hkdfExpand(<$cAEAD0, h(<$cHash0, TH_2, CIPHERTEXT_2, 'emptyStr'>), 
                               'K_3ae'>,
                              prk_3e2m),
                   extAad3Outer, $cAEAD0)
      >
  ),
  Eq( authI,
      aeadEncrypt('emptyStr',
                  hkdfExpand(<$cAEAD0, h(<$cHash0, TH_2, CIPHERTEXT_2, 'emptyStr'>), 'K_3m'
                             >,
                             hkdfExtract(prk_3e2m, pkU^~yy)),
                  <$U, h(<$cHash0, TH_2, CIPHERTEXT_2, 'emptyStr'>), pkU>, $cAEAD0)
  )
  ]->
   [ ]

  /*
  rule (modulo AC) R4_STAT_SIG:
     [
     StR2_STAT_SIG( $V, ~ltk, ~yy, prk_3e2m, TH_2, CIPHERTEXT_2, gxy, ~tid,
                    m1, m2
     ),
     !PK_STAT( $U, pkU ), !PK_SIG( $V, pkV ),
     In( <'emptyStr', 
          aeadEncrypt(<$U, authI>,
                      hkdfExpand(<$cAEAD0, h(<$cHash0, TH_2, CIPHERTEXT_2, 'emptyStr'>), 
                                  'K_3ae'>,
                                 prk_3e2m),
                      extAad3Outer, $cAEAD0)
         >
     )
     ]
    --[
    ExpCommitR( ~tid, $U, $V, gxy ), CommitR( ~tid, $U, $V, <gxy, z> ),
    R4( ~tid, $U, $V, m1, m2,
        <'emptyStr', 
         aeadEncrypt(<$U, authI>,
                     hkdfExpand(<$cAEAD0, h(<$cHash0, TH_2, CIPHERTEXT_2, 'emptyStr'>), 
                                 'K_3ae'>,
                                prk_3e2m),
                     extAad3Outer, $cAEAD0)
        >
    ),
    Eq( authI,
        aeadEncrypt('emptyStr',
                    hkdfExpand(<$cAEAD0, h(<$cHash0, TH_2, CIPHERTEXT_2, 'emptyStr'>), 'K_3m'
                               >,
                               hkdfExtract(prk_3e2m, z)),
                    <$U, h(<$cHash0, TH_2, CIPHERTEXT_2, 'emptyStr'>), pkU>, $cAEAD0)
    )
    ]->
     [ ]
    variants (modulo AC)
    1. ~yy   = ~yy.30
       pkU   = pkU.38
       z     = pkU.38^~yy.30
    
    2. ~yy   = ~yy.35
       pkU   = z.48^inv(~yy.35)
       z     = z.48
    
    3. ~yy   = ~yy.53
       pkU   = x.97^x.98
       z     = x.97^(~yy.53*x.98)
    
    4. ~yy   = ~yy.61
       pkU   = x.113^inv((~yy.61*x.114))
       z     = x.113^inv(x.114)
    
    5. ~yy   = ~yy.61
       pkU   = x.113^(x.114*inv(~yy.61))
       z     = x.113^x.114
    
    6. ~yy   = ~yy.62
       pkU   = x.114^(x.115*inv((~yy.62*x.116)))
       z     = x.114^(x.115*inv(x.116))
  */

rule (modulo E) registerLTK_SIG:
   [ Fr( ~ltk ) ]
  --[ UniqLTK( $A, ~ltk ) ]->
   [ !LTK_SIG( $A, ~ltk ), !PK_SIG( $A, pk(~ltk) ), Out( <$A, pk(~ltk)> ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) registerLTK_STAT:
   [ Fr( ~ltk ) ]
  --[ UniqLTK( $A, 'g'^~ltk ) ]->
   [ !LTK_STAT( $A, ~ltk ), !PK_STAT( $A, 'g'^~ltk ), Out( <$A, 'g'^~ltk> )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) registerLTK_PSK:
   [ Fr( ~ltk ) ]
  --[ UniqLTK( <$A, $B>, ~ltk ) ]->
   [ !LTK_PSK( <$A, $B>, ~ltk ) ]

  /* has exactly the trivial AC variant */

restriction uniqLTKs:
  "∀ id k1 k2 #i #j.
    ((UniqLTK( id, k1 ) @ #i) ∧ (UniqLTK( id, k2 ) @ #j)) ⇒ (k1 = k2)"
  // safety formula

rule (modulo E) revealLTK_SIG:
   [ !LTK_SIG( $A, ~ltk ) ] --[ LTKRev( $A ) ]-> [ Out( ~ltk ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) revealLTK_STAT:
   [ !LTK_STAT( $A, ~ltk ) ] --[ LTKRev( $A ) ]-> [ Out( ~ltk ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) revealLTK_PSK:
   [ !LTK_PSK( <$A, $B>, ~ltk ) ] --[ LTKRev( <$A, $B> ) ]-> [ Out( ~ltk ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) revealSessionKeyI:
   [ CommitI( tid, u, v, sk ) ] --[ SKRev( sk ) ]-> [ Out( sk ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) revealSessionKeyR:
   [ CommitR( tid, u, v, sk ) ] --[ SKRev( sk ) ]-> [ Out( sk ) ]

  /* has exactly the trivial AC variant */

lemma sanityExecutableToTheEnd:
  exists-trace
  "∃ tidI tidR u v m1 m2 m3 sk sk2 #i #j #k #l.
    ((((((((((((I1( tidI, u, v, m1 ) @ #i) ∧ (R2( tidR, v, m1, m2 ) @ #j)) ∧
              (#i < #j)) ∧
             (I3( tidI, u, v, m1, m2, m3 ) @ #k)) ∧
            (#j < #k)) ∧
           (CommitI( tidI, u, v, sk ) @ #k)) ∧
          (ExpCommitI( tidI, u, v, sk2 ) @ #k)) ∧
         (RunningI( tidI, u, v, sk ) @ #k)) ∧
        (ExpRunningI( tidI, u, v, sk2 ) @ #k)) ∧
       (R4( tidR, u, v, m1, m2, m3 ) @ #l)) ∧
      (#k < #l)) ∧
     (CommitR( tidR, u, v, sk ) @ #l)) ∧
    (ExpCommitR( tidR, u, v, sk2 ) @ #l)"
/*
guarded formula characterizing all satisfying traces:
"∃ tidI tidR u v m1 m2 m3 sk sk2 #i #j #k #l.
  (I1( tidI, u, v, m1 ) @ #i) ∧
  (R2( tidR, v, m1, m2 ) @ #j) ∧
  (I3( tidI, u, v, m1, m2, m3 ) @ #k) ∧
  (CommitI( tidI, u, v, sk ) @ #k) ∧
  (ExpCommitI( tidI, u, v, sk2 ) @ #k) ∧
  (RunningI( tidI, u, v, sk ) @ #k) ∧
  (ExpRunningI( tidI, u, v, sk2 ) @ #k) ∧
  (R4( tidR, u, v, m1, m2, m3 ) @ #l) ∧
  (CommitR( tidR, u, v, sk ) @ #l) ∧
  (ExpCommitR( tidR, u, v, sk2 ) @ #l)
 ∧
  (#i < #j) ∧ (#j < #k) ∧ (#k < #l)"
*/
by sorry

lemma authInjAgreeGuaranteeForI:
  all-traces
  "∀ tidI u v expSk #i.
    (ExpCommitI( tidI, u, v, expSk ) @ #i) ⇒
    (((((∃ tidR #j. (ExpRunningR( tidR, v, expSk ) @ #j) ∧ (#j < #i)) ∧
        (¬(∃ tidI2 u2 v2 #i2.
            (ExpCommitI( tidI2, u2, v2, expSk ) @ #i2) ∧ (¬(#i = #i2))))) ∨
       (∃ #j. (LTKRev( <u, v> ) @ #j) ∧ (#j < #i))) ∨
      (∃ #j. (LTKRev( u ) @ #j) ∧ (#j < #i))) ∨
     (∃ #j. (LTKRev( v ) @ #j) ∧ (#j < #i)))"
/*
guarded formula characterizing all counter-examples:
"∃ tidI u v expSk #i.
  (ExpCommitI( tidI, u, v, expSk ) @ #i)
 ∧
  (((∀ tidR #j. (ExpRunningR( tidR, v, expSk ) @ #j) ⇒ ¬(#j < #i)) ∨
    (∃ tidI2 u2 v2 #i2.
      (ExpCommitI( tidI2, u2, v2, expSk ) @ #i2) ∧ ¬(#i = #i2)))) ∧
  (∀ #j. (LTKRev( <u, v> ) @ #j) ⇒ ¬(#j < #i)) ∧
  (∀ #j. (LTKRev( u ) @ #j) ⇒ ¬(#j < #i)) ∧
  (∀ #j. (LTKRev( v ) @ #j) ⇒ ¬(#j < #i))"
*/
by sorry

lemma authInjAgreeGuaranteeForR:
  all-traces
  "∀ tidR u v sk #i.
    (CommitR( tidR, u, v, sk ) @ #i) ⇒
    (((((∃ tidI #j. (RunningI( tidI, u, v, sk ) @ #j) ∧ (#j < #i)) ∧
        (¬(∃ tidR2 u2 v2 #i2.
            (CommitR( tidR2, u2, v2, sk ) @ #i2) ∧ (¬(#i = #i2))))) ∨
       (∃ #j. (LTKRev( <u, v> ) @ #j) ∧ (#j < #i))) ∨
      (∃ #j. (LTKRev( u ) @ #j) ∧ (#j < #i))) ∨
     (∃ #j. (LTKRev( v ) @ #j) ∧ (#j < #i)))"
/*
guarded formula characterizing all counter-examples:
"∃ tidR u v sk #i.
  (CommitR( tidR, u, v, sk ) @ #i)
 ∧
  (((∀ tidI #j. (RunningI( tidI, u, v, sk ) @ #j) ⇒ ¬(#j < #i)) ∨
    (∃ tidR2 u2 v2 #i2.
      (CommitR( tidR2, u2, v2, sk ) @ #i2) ∧ ¬(#i = #i2)))) ∧
  (∀ #j. (LTKRev( <u, v> ) @ #j) ⇒ ¬(#j < #i)) ∧
  (∀ #j. (LTKRev( u ) @ #j) ⇒ ¬(#j < #i)) ∧
  (∀ #j. (LTKRev( v ) @ #j) ⇒ ¬(#j < #i))"
*/
by sorry

lemma authGIYImplicitAuthGuaranteeForI:
  all-traces
  "∀ tidI u v impSk #i.
    (CommitI( tidI, u, v, impSk ) @ #i) ⇒
    ((((((∀ tidR u2 v2 #j.
           (CommitR( tidR, u2, v2, impSk ) @ #j) ⇒ ((u = u2) ∧ (v = v2))) ∧
         (¬(∃ #k. K( impSk ) @ #k))) ∧
        (¬(∃ tidR u.1 v.1 #j tidR2 u2 v2 #j2.
            ((CommitR( tidR, u.1, v.1, impSk ) @ #j) ∧
             (CommitR( tidR2, u2, v2, impSk ) @ #j2)) ∧
            (¬(#j = #j2))))) ∨
       (∃ #k. LTKRev( u ) @ #k)) ∨
      (∃ #k. LTKRev( v ) @ #k)) ∨
     (∃ #k. LTKRev( <u, v> ) @ #k))"
/*
guarded formula characterizing all counter-examples:
"∃ tidI u v impSk #i.
  (CommitI( tidI, u, v, impSk ) @ #i)
 ∧
  (((∃ tidR u2 v2 #j.
      (CommitR( tidR, u2, v2, impSk ) @ #j) ∧ ((¬(u = u2)) ∨ (¬(v = v2)))) ∨
    (∃ #k. (K( impSk ) @ #k)) ∨
    (∃ tidR u.1 v.1 #j tidR2 u2 v2 #j2.
      (CommitR( tidR, u.1, v.1, impSk ) @ #j) ∧
      (CommitR( tidR2, u2, v2, impSk ) @ #j2)
     ∧
      ¬(#j = #j2)))) ∧
  (∀ #k. (LTKRev( u ) @ #k) ⇒ ⊥) ∧
  (∀ #k. (LTKRev( v ) @ #k) ⇒ ⊥) ∧
  (∀ #k. (LTKRev( <u, v> ) @ #k) ⇒ ⊥)"
*/
by sorry

lemma authGIYImplicitAuthGuaranteeForI2:
  all-traces
  "∀ tidI u v impSk #i.
    (CommitI( tidI, u, v, impSk ) @ #i) ⇒
    ((((∀ tidR u2 v2 #j.
         (CommitR( tidR, u2, v2, impSk ) @ #j) ⇒
         ((((u = u2) ∧ (v = v2)) ∧
           (∀ tidR2 u3 v3 #j2.
             (CommitR( tidR2, u3, v3, impSk ) @ #j2) ⇒ (#j = #j2))) ∧
          (¬(∃ #k. K( impSk ) @ #k)))) ∨
       (∃ #k. LTKRev( u ) @ #k)) ∨
      (∃ #k. LTKRev( v ) @ #k)) ∨
     (∃ #k. LTKRev( <u, v> ) @ #k))"
/*
guarded formula characterizing all counter-examples:
"∃ tidI u v impSk #i.
  (CommitI( tidI, u, v, impSk ) @ #i)
 ∧
  (∃ tidR u2 v2 #j.
    (CommitR( tidR, u2, v2, impSk ) @ #j)
   ∧
    ((¬(u = u2)) ∨
     (¬(v = v2)) ∨
     (∃ tidR2 u3 v3 #j2.
       (CommitR( tidR2, u3, v3, impSk ) @ #j2) ∧ ¬(#j = #j2)) ∨
     (∃ #k. (K( impSk ) @ #k)))) ∧
  (∀ #k. (LTKRev( u ) @ #k) ⇒ ⊥) ∧
  (∀ #k. (LTKRev( v ) @ #k) ⇒ ⊥) ∧
  (∀ #k. (LTKRev( <u, v> ) @ #k) ⇒ ⊥)"
*/
by sorry

lemma secrecyPFSGIYSessionKey:
  all-traces
  "(∀ tid u v sk #i #j.
     ((K( sk ) @ #i) ∧ (CommitI( tid, u, v, sk ) @ #j)) ⇒
     (((∃ #l. (LTKRev( u ) @ #l) ∧ (#l < #j)) ∨
       (∃ #l. (LTKRev( v ) @ #l) ∧ (#l < #j))) ∨
      (∃ #l. SKRev( sk ) @ #l))) ∧
   (∀ tid u v sk #i #j.
     ((K( sk ) @ #i) ∧ (CommitR( tid, u, v, sk ) @ #j)) ⇒
     (((∃ #l. (LTKRev( u ) @ #l) ∧ (#l < #j)) ∨
       (∃ #l. (LTKRev( v ) @ #l) ∧ (#l < #j))) ∨
      (∃ #l. SKRev( sk ) @ #l)))"
/*
guarded formula characterizing all counter-examples:
"((∃ tid u v sk #i #j.
    (K( sk ) @ #i) ∧ (CommitI( tid, u, v, sk ) @ #j)
   ∧
    (∀ #l. (LTKRev( u ) @ #l) ⇒ ¬(#l < #j)) ∧
    (∀ #l. (LTKRev( v ) @ #l) ⇒ ¬(#l < #j)) ∧
    (∀ #l. (SKRev( sk ) @ #l) ⇒ ⊥)) ∨
  (∃ tid u v sk #i #j.
    (K( sk ) @ #i) ∧ (CommitR( tid, u, v, sk ) @ #j)
   ∧
    (∀ #l. (LTKRev( u ) @ #l) ⇒ ¬(#l < #j)) ∧
    (∀ #l. (LTKRev( v ) @ #l) ⇒ ¬(#l < #j)) ∧
    (∀ #l. (SKRev( sk ) @ #l) ⇒ ⊥)))"
*/
induction
  case empty_trace
  by contradiction /* from formulas */
next
  case non_empty_trace
  simplify
  solve( (∃ tid u v sk #i #j.
           (K( sk ) @ #i) ∧ (CommitI( tid, u, v, sk ) @ #j)
          ∧
           (∀ #l. (LTKRev( u ) @ #l) ⇒ ¬(#l < #j)) ∧
           (∀ #l. (LTKRev( v ) @ #l) ⇒ ¬(#l < #j)) ∧
           (∀ #l. (SKRev( sk ) @ #l) ⇒ ⊥))  ∥
         (∃ tid u v sk #i #j.
           (K( sk ) @ #i) ∧ (CommitR( tid, u, v, sk ) @ #j)
          ∧
           (∀ #l. (LTKRev( u ) @ #l) ⇒ ¬(#l < #j)) ∧
           (∀ #l. (LTKRev( v ) @ #l) ⇒ ¬(#l < #j)) ∧
           (∀ #l. (SKRev( sk ) @ #l) ⇒ ⊥)) )
    case case_1
    solve( (last(#j))  ∥ (last(#i))  ∥
           (∃ #l. (LTKRev( $U ) @ #l) ∧ (¬(last(#l))) ∧ (#l < #j))  ∥
           (∃ #l. (LTKRev( $V ) @ #l) ∧ (¬(last(#l))) ∧ (#l < #j))  ∥
           (∃ #l. (SKRev( <z, z.1> ) @ #l) ∧ ¬(last(#l))) )
      case case_1
      solve( StI1_STAT_SIG( $U, ~ltk, $V, ~xx, m1, ~tid ) ▶₀ #j )
        case I1_STAT_SIG
        solve( !PK_SIG( $V, pk(x) ) ▶₁ #j )
          case registerLTK_SIG
          solve( !PK_STAT( $U, pkU ) ▶₂ #j )
            case registerLTK_STAT
            solve( !KU( ($V⊕
                         hkdfExpand(<$cAEAD0, 
                                     h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,
                                    hkdfExtract('emptyStr', z))
                        )
                   ) @ #vk.4 )
              case c_xor
              solve( !KU( (
                           hkdfExpand(<$cAEAD0, 
                                       h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,
                                      hkdfExtract('emptyStr', z))⊕
                           sign(<
                                 <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), pk(~ltk.1)>, 
                                 aeadEncrypt('emptyStr',
                                             hkdfExpand(<$cAEAD0, 
                                                         h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy
                                                           >), 
                                                         'K_2m'>,
                                                        hkdfExtract('emptyStr', z)),
                                             <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 
                                              pk(~ltk.1)>,
                                             $cAEAD0)
                                >,
                                ~ltk.1)
                          )
                     ) @ #vk.5 )
                case c_xor
                solve( !KU( sign(<
                                  <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), pk(~ltk.1)>, 
                                  aeadEncrypt('emptyStr',
                                              hkdfExpand(<$cAEAD0, 
                                                          h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy
                                                            >), 
                                                          'K_2m'>,
                                                         hkdfExtract('emptyStr', z)),
                                              <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 
                                               pk(~ltk.1)>,
                                              $cAEAD0)
                                 >,
                                 ~ltk.1)
                       ) @ #vk.10 )
                  case R2_STAT_SIG
                  solve( !KU( 'g'^(~xx*~yy) ) @ #vk.7 )
                    case I1_STAT_SIG
                    by solve( !KU( ~yy ) @ #vk.19 )
                  next
                    case R2_STAT_SIG
                    by solve( !KU( ~xx ) @ #vk.19 )
                  next
                    case c_exp
                    by solve( !KU( ~xx ) @ #vk.21 )
                  qed
                next
                  case c_sign
                  solve( !KU( ~ltk.1 ) @ #vk.14 )
                    case revealLTK_SIG
                    by contradiction /* from formulas */
                  qed
                qed
              next
                case coerce
                solve( !KD( (
                             hkdfExpand(<$cAEAD0, 
                                         h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,
                                        hkdfExtract('emptyStr', z))⊕
                             sign(<
                                   <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), pk(~ltk.1)>, 
                                   aeadEncrypt('emptyStr',
                                               hkdfExpand(<$cAEAD0, 
                                                           h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy
                                                             >), 
                                                           'K_2m'>,
                                                          hkdfExtract('emptyStr', z)),
                                               <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 
                                                pk(~ltk.1)>,
                                               $cAEAD0)
                                  >,
                                  ~ltk.1)
                            )
                       ) ▶₀ #vk.1 )
                  case I1_STAT_SIG
                  by contradiction /* impossible chain */
                next
                  case I3_STAT_SIG
                  solve( (#vl, 0) ~~> (#vk.1, 0) )
                    case d_0_fst
                    by contradiction /* forbidden KD-fact */
                  next
                    case d_0_snd
                    solve( (#vr.4, 0) ~~> (#vk.1, 0) )
                      case d_1_aeadDecrypt
                      by solve( (#vr.5, 0) ~~> (#vk.1, 0) )
                    next
                      case d_1_decrypt
                      by solve( (#vr.5, 0) ~~> (#vk.1, 0) )
                    qed
                  qed
                next
                  case R2_STAT_SIG
                  solve( (#vl, 0) ~~> (#vk.1, 0) )
                    case d_0_fst
                    by contradiction /* impossible chain */
                  next
                    case d_0_snd
                    solve( (#vr.4, 0) ~~> (#vk.1, 0) )
                      case d_0_fst
                      solve( (#vr.5, 0) ~~> (#vk.1, 0) )
                        case d_xor_case_1
                        by solve( (#vr.6, 0) ~~> (#vk.1, 0) )
                      next
                        case d_xor_case_2
                        by solve( (#vr.6, 0) ~~> (#vk.1, 0) )
                      next
                        case d_xor_case_3
                        by contradiction /* forbidden KD-fact */
                      next
                        case d_xor_case_4
                        by solve( (#vr.6, 0) ~~> (#vk.1, 0) )
                      qed
                    next
                      case d_0_snd
                      solve( (#vr.5, 0) ~~> (#vk.1, 0) )
                        case Xor
                        solve( !LTK_SIG( $V, ~ltk.1 ) ▶₀ #vr.3 )
                          case registerLTK_SIG
                          solve( !PK_SIG( $V, pk(~ltk.1) ) ▶₁ #vr.3 )
                            case registerLTK_SIG
                            solve( !KU( 'g'^(~xx*~yy) ) @ #vk.6 )
                              case I1_STAT_SIG
                              by solve( !KU( ~yy ) @ #vk.17 )
                            next
                              case R2_STAT_SIG
                              by solve( !KU( ~xx ) @ #vk.17 )
                            next
                              case c_exp
                              by solve( !KU( ~xx ) @ #vk.19 )
                            qed
                          qed
                        qed
                      next
                        case d_xor_case_1
                        solve( (#vr.6, 0) ~~> (#vk.1, 0) )
                          case Xor
                          solve( !LTK_SIG( $V.1, ~ltk.2 ) ▶₀ #vr.3 )
                            case registerLTK_SIG
                            solve( !PK_SIG( $V.1, pkV ) ▶₁ #vr.3 )
                              case registerLTK_SIG
                              solve( !KU( 'g'^(~xx*~yy) ) @ #vk.6 )
                                case I1_STAT_SIG
                                by solve( !KU( ~yy ) @ #vk.18 )
                              next
                                case R2_STAT_SIG
                                by solve( !KU( ~xx ) @ #vk.18 )
                              next
                                case c_exp
                                by solve( !KU( ~xx ) @ #vk.20 )
                              qed
                            qed
                          qed
                        qed
                      next
                        case d_xor_case_2
                        by solve( (#vr.6, 0) ~~> (#vk.1, 0) )
                      next
                        case d_xor_case_3
                        by solve( (#vr.6, 0) ~~> (#vk.1, 0) )
                      next
                        case d_xor_case_4
                        by solve( (#vr.6, 0) ~~> (#vk.1, 0) )
                      qed
                    qed
                  qed
                next
                  case registerLTK_SIG
                  by contradiction /* impossible chain */
                next
                  case registerLTK_STAT
                  by contradiction /* impossible chain */
                next
                  case revealLTK_PSK
                  by contradiction /* impossible chain */
                next
                  case revealLTK_SIG
                  by contradiction /* impossible chain */
                next
                  case revealLTK_STAT
                  by contradiction /* impossible chain */
                next
                  case revealSessionKeyI
                  by solve( CommitI( tid.1, u, v, t ) ▶₀ #vr.3 )
                next
                  case revealSessionKeyR
                  by solve( CommitR( tid.1, u, v, t ) ▶₀ #vr.3 )
                qed
              qed
            next
              case coerce
              solve( !KD( ($V⊕
                           hkdfExpand(<$cAEAD0, 
                                       h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,
                                      hkdfExtract('emptyStr', z))
                          )
                     ) ▶₀ #vk )
                case I1_STAT_SIG
                by contradiction /* impossible chain */
              next
                case I3_STAT_SIG
                solve( (#vl, 0) ~~> (#vk, 0) )
                  case d_0_fst
                  by contradiction /* forbidden KD-fact */
                next
                  case d_0_snd
                  solve( (#vr.4, 0) ~~> (#vk, 0) )
                    case d_1_aeadDecrypt
                    by solve( (#vr.5, 0) ~~> (#vk, 0) )
                  next
                    case d_1_decrypt
                    by solve( (#vr.5, 0) ~~> (#vk, 0) )
                  qed
                qed
              next
                case R2_STAT_SIG
                solve( (#vl, 0) ~~> (#vk, 0) )
                  case d_0_fst
                  by contradiction /* impossible chain */
                next
                  case d_0_snd
                  solve( (#vr.4, 0) ~~> (#vk, 0) )
                    case d_0_fst
                    solve( (#vr.5, 0) ~~> (#vk, 0) )
                      case Xor
                      solve( !LTK_SIG( $V, ~ltk.2 ) ▶₀ #vr.3 )
                        case registerLTK_SIG
                        solve( !PK_SIG( $V, pkV ) ▶₁ #vr.3 )
                          case registerLTK_SIG
                          solve( !KU( 'g'^(~xx*~yy) ) @ #vk.6 )
                            case I1_STAT_SIG
                            by solve( !KU( ~yy ) @ #vk.15 )
                          next
                            case R2_STAT_SIG
                            by solve( !KU( ~xx ) @ #vk.15 )
                          next
                            case c_exp
                            by solve( !KU( ~xx ) @ #vk.17 )
                          qed
                        qed
                      qed
                    next
                      case d_xor_case_1
                      solve( (#vr.6, 0) ~~> (#vk, 0) )
                        case Xor
                        solve( !LTK_SIG( $V, ~ltk.2 ) ▶₀ #vr.3 )
                          case registerLTK_SIG
                          solve( !PK_SIG( $V, pkV ) ▶₁ #vr.3 )
                            case registerLTK_SIG
                            solve( !KU( (
                                         hkdfExpand(<$cAEAD0, 
                                                     h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 
                                                     'K_2e', '2'>,
                                                    hkdfExtract('emptyStr', z))⊕
                                         sign(<
                                               <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 
                                                pk(~ltk.1)>, 
                                               aeadEncrypt('emptyStr',
                                                           hkdfExpand(<$cAEAD0, 
                                                                       h(<$cHash0, 
                                                                          <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 
                                                                          gy>), 
                                                                       'K_2m'>,
                                                                      hkdfExtract('emptyStr', z)),
                                                           <$V, 
                                                            h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy
                                                              >), 
                                                            pk(~ltk.1)>,
                                                           $cAEAD0)
                                              >,
                                              ~ltk.1)
                                        )
                                   ) @ #vk.5 )
                              case c_xor
                              solve( !KU( sign(<
                                                <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 
                                                 pk(~ltk.1)>, 
                                                aeadEncrypt('emptyStr',
                                                            hkdfExpand(<$cAEAD0, 
                                                                        h(<$cHash0, 
                                                                           <'STAT', 'SIG', $cSUITE0, 'g'^~xx
                                                                           >, 
                                                                           gy>), 
                                                                        'K_2m'>,
                                                                       hkdfExtract('emptyStr', z)),
                                                            <$V, 
                                                             h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 
                                                                gy>), 
                                                             pk(~ltk.1)>,
                                                            $cAEAD0)
                                               >,
                                               ~ltk.1)
                                     ) @ #vk.16 )
                                case R2_STAT_SIG
                                solve( !KU( 'g'^(~xx*~yy) ) @ #vk.7 )
                                  case I1_STAT_SIG
                                  by solve( !KU( ~yy ) @ #vk.23 )
                                next
                                  case R2_STAT_SIG
                                  by solve( !KU( ~xx ) @ #vk.23 )
                                next
                                  case c_exp
                                  by solve( !KU( ~xx ) @ #vk.25 )
                                qed
                              next
                                case c_sign
                                solve( !KU( ~ltk.1 ) @ #vk.19 )
                                  case revealLTK_SIG
                                  by contradiction /* from formulas */
                                qed
                              qed
                            next
                              case coerce
                              solve( !KD( (
                                           hkdfExpand(<$cAEAD0, 
                                                       h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 
                                                       'K_2e', '2'>,
                                                      hkdfExtract('emptyStr', z))⊕
                                           sign(<
                                                 <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 
                                                  pk(~ltk.1)>, 
                                                 aeadEncrypt('emptyStr',
                                                             hkdfExpand(<$cAEAD0, 
                                                                         h(<$cHash0, 
                                                                            <'STAT', 'SIG', $cSUITE0, 'g'^~xx
                                                                            >, 
                                                                            gy>), 
                                                                         'K_2m'>,
                                                                        hkdfExtract('emptyStr', z)),
                                                             <$V, 
                                                              h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 
                                                                 gy>), 
                                                              pk(~ltk.1)>,
                                                             $cAEAD0)
                                                >,
                                                ~ltk.1)
                                          )
                                     ) ▶₀ #vk.1 )
                                case I1_STAT_SIG
                                by contradiction /* impossible chain */
                              next
                                case I3_STAT_SIG
                                solve( (#vl.1, 0) ~~> (#vk.1, 0) )
                                  case d_0_fst
                                  by contradiction /* forbidden KD-fact */
                                next
                                  case d_0_snd
                                  solve( (#vr.8, 0) ~~> (#vk.1, 0) )
                                    case d_1_aeadDecrypt
                                    by solve( (#vr.9, 0) ~~> (#vk.1, 0) )
                                  next
                                    case d_1_decrypt
                                    by solve( (#vr.9, 0) ~~> (#vk.1, 0) )
                                  qed
                                qed
                              next
                                case R2_STAT_SIG
                                solve( (#vl.1, 0) ~~> (#vk.1, 0) )
                                  case d_0_fst
                                  by contradiction /* impossible chain */
                                next
                                  case d_0_snd
                                  solve( (#vr.8, 0) ~~> (#vk.1, 0) )
                                    case d_0_fst
                                    solve( (#vr.9, 0) ~~> (#vk.1, 0) )
                                      case d_xor_case_1
                                      by solve( (#vr.10, 0) ~~> (#vk.1, 0) )
                                    next
                                      case d_xor_case_2
                                      by solve( (#vr.10, 0) ~~> (#vk.1, 0) )
                                    next
                                      case d_xor_case_3
                                      by contradiction /* forbidden KD-fact */
                                    next
                                      case d_xor_case_4
                                      by solve( (#vr.10, 0) ~~> (#vk.1, 0) )
                                    qed
                                  next
                                    case d_0_snd
                                    solve( (#vr.9, 0) ~~> (#vk.1, 0) )
                                      case Xor
                                      solve( !LTK_SIG( $V, ~ltk.1 ) ▶₀ #vr.7 )
                                        case registerLTK_SIG
                                        solve( !PK_SIG( $V, pk(~ltk.1) ) ▶₁ #vr.7 )
                                          case registerLTK_SIG
                                          solve( !KU( 'g'^(~xx*~yy) ) @ #vk.6 )
                                            case I1_STAT_SIG
                                            by solve( !KU( ~yy ) @ #vk.21 )
                                          next
                                            case R2_STAT_SIG
                                            by solve( !KU( ~xx ) @ #vk.21 )
                                          next
                                            case c_exp
                                            by solve( !KU( ~xx ) @ #vk.23 )
                                          qed
                                        qed
                                      qed
                                    next
                                      case d_xor_case_1
                                      solve( (#vr.10, 0) ~~> (#vk.1, 0) )
                                        case Xor
                                        solve( !LTK_SIG( $V.1, ~ltk.2 ) ▶₀ #vr.7 )
                                          case registerLTK_SIG
                                          solve( !PK_SIG( $V.1, pkV ) ▶₁ #vr.7 )
                                            case registerLTK_SIG
                                            solve( !KU( 'g'^(~xx*~yy) ) @ #vk.6 )
                                              case I1_STAT_SIG
                                              by solve( !KU( ~yy ) @ #vk.22 )
                                            next
                                              case R2_STAT_SIG
                                              by solve( !KU( ~xx ) @ #vk.22 )
                                            next
                                              case c_exp
                                              by solve( !KU( ~xx ) @ #vk.24 )
                                            qed
                                          qed
                                        qed
                                      qed
                                    next
                                      case d_xor_case_2
                                      by solve( (#vr.10, 0) ~~> (#vk.1, 0) )
                                    next
                                      case d_xor_case_3
                                      by solve( (#vr.10, 0) ~~> (#vk.1, 0) )
                                    next
                                      case d_xor_case_4
                                      by solve( (#vr.10, 0) ~~> (#vk.1, 0) )
                                    qed
                                  qed
                                qed
                              next
                                case registerLTK_SIG
                                by contradiction /* impossible chain */
                              next
                                case registerLTK_STAT
                                by contradiction /* impossible chain */
                              next
                                case revealLTK_PSK
                                by contradiction /* impossible chain */
                              next
                                case revealLTK_SIG
                                by contradiction /* impossible chain */
                              next
                                case revealLTK_STAT
                                by contradiction /* impossible chain */
                              next
                                case revealSessionKeyI
                                by solve( CommitI( tid.2, u, v, t ) ▶₀ #vr.7 )
                              next
                                case revealSessionKeyR
                                by solve( CommitR( tid.2, u, v, t ) ▶₀ #vr.7 )
                              qed
                            qed
                          qed
                        qed
                      qed
                    next
                      case d_xor_case_2
                      solve( (#vr.6, 0) ~~> (#vk, 0) )
                        case Xor
                        solve( !LTK_SIG( $V.1, ~ltk.2 ) ▶₀ #vr.3 )
                          case registerLTK_SIG
                          solve( !PK_SIG( $V.1, pkV ) ▶₁ #vr.3 )
                            case registerLTK_SIG
                            solve( !KU( 'g'^(~xx*~yy) ) @ #vk.6 )
                              case I1_STAT_SIG
                              by solve( !KU( ~yy ) @ #vk.16 )
                            next
                              case R2_STAT_SIG
                              by solve( !KU( ~xx ) @ #vk.16 )
                            next
                              case c_exp
                              by solve( !KU( ~xx ) @ #vk.18 )
                            qed
                          qed
                        qed
                      qed
                    next
                      case d_xor_case_3
                      by contradiction /* forbidden KD-fact */
                    next
                      case d_xor_case_4
                      by solve( (#vr.6, 0) ~~> (#vk, 0) )
                    qed
                  next
                    case d_0_snd
                    solve( (#vr.5, 0) ~~> (#vk, 0) )
                      case d_xor_case_1
                      by solve( (#vr.6, 0) ~~> (#vk, 0) )
                    next
                      case d_xor_case_2
                      by solve( (#vr.6, 0) ~~> (#vk, 0) )
                    next
                      case d_xor_case_3
                      by solve( (#vr.6, 0) ~~> (#vk, 0) )
                    next
                      case d_xor_case_4
                      by solve( (#vr.6, 0) ~~> (#vk, 0) )
                    qed
                  qed
                qed
              next
                case registerLTK_SIG
                by contradiction /* impossible chain */
              next
                case registerLTK_STAT
                by contradiction /* impossible chain */
              next
                case revealLTK_PSK
                by contradiction /* impossible chain */
              next
                case revealLTK_SIG
                by contradiction /* impossible chain */
              next
                case revealLTK_STAT
                by contradiction /* impossible chain */
              next
                case revealSessionKeyI
                by solve( CommitI( tid.1, u, v, t ) ▶₀ #vr.3 )
              next
                case revealSessionKeyR
                by solve( CommitR( tid.1, u, v, t ) ▶₀ #vr.3 )
              qed
            qed
          qed
        qed
      qed
    next
      case case_2
      solve( StI1_STAT_SIG( $U, ~ltk, $V, ~xx, m1, ~tid ) ▶₀ #j )
        case I1_STAT_SIG
        solve( !PK_SIG( $V, pk(x) ) ▶₁ #j )
          case registerLTK_SIG
          solve( !PK_STAT( $U, pkU ) ▶₂ #j )
            case registerLTK_STAT
            solve( !KU( ($V⊕
                         hkdfExpand(<$cAEAD0, 
                                     h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,
                                    hkdfExtract('emptyStr', z))
                        )
                   ) @ #vk.4 )
              case c_xor
              solve( !KU( (
                           hkdfExpand(<$cAEAD0, 
                                       h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,
                                      hkdfExtract('emptyStr', z))⊕
                           sign(<
                                 <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), pk(~ltk.1)>, 
                                 aeadEncrypt('emptyStr',
                                             hkdfExpand(<$cAEAD0, 
                                                         h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy
                                                           >), 
                                                         'K_2m'>,
                                                        hkdfExtract('emptyStr', z)),
                                             <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 
                                              pk(~ltk.1)>,
                                             $cAEAD0)
                                >,
                                ~ltk.1)
                          )
                     ) @ #vk.5 )
                case c_xor
                solve( !KU( sign(<
                                  <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), pk(~ltk.1)>, 
                                  aeadEncrypt('emptyStr',
                                              hkdfExpand(<$cAEAD0, 
                                                          h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy
                                                            >), 
                                                          'K_2m'>,
                                                         hkdfExtract('emptyStr', z)),
                                              <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 
                                               pk(~ltk.1)>,
                                              $cAEAD0)
                                 >,
                                 ~ltk.1)
                       ) @ #vk.10 )
                  case R2_STAT_SIG
                  solve( !KU( 'g'^(~xx*~yy) ) @ #vk.7 )
                    case I1_STAT_SIG
                    by solve( !KU( ~yy ) @ #vk.19 )
                  next
                    case R2_STAT_SIG
                    by solve( !KU( ~xx ) @ #vk.19 )
                  next
                    case c_exp
                    by solve( !KU( ~xx ) @ #vk.21 )
                  qed
                next
                  case c_sign
                  solve( !KU( ~ltk.1 ) @ #vk.14 )
                    case revealLTK_SIG
                    by contradiction /* from formulas */
                  qed
                qed
              next
                case coerce
                solve( !KD( (
                             hkdfExpand(<$cAEAD0, 
                                         h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,
                                        hkdfExtract('emptyStr', z))⊕
                             sign(<
                                   <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), pk(~ltk.1)>, 
                                   aeadEncrypt('emptyStr',
                                               hkdfExpand(<$cAEAD0, 
                                                           h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy
                                                             >), 
                                                           'K_2m'>,
                                                          hkdfExtract('emptyStr', z)),
                                               <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 
                                                pk(~ltk.1)>,
                                               $cAEAD0)
                                  >,
                                  ~ltk.1)
                            )
                       ) ▶₀ #vk.1 )
                  case I1_STAT_SIG
                  by contradiction /* impossible chain */
                next
                  case I3_STAT_SIG
                  solve( (#vl, 0) ~~> (#vk.1, 0) )
                    case d_0_fst
                    by contradiction /* forbidden KD-fact */
                  next
                    case d_0_snd
                    solve( (#vr.4, 0) ~~> (#vk.1, 0) )
                      case d_1_aeadDecrypt
                      by solve( (#vr.5, 0) ~~> (#vk.1, 0) )
                    next
                      case d_1_decrypt
                      by solve( (#vr.5, 0) ~~> (#vk.1, 0) )
                    qed
                  qed
                next
                  case R2_STAT_SIG
                  solve( (#vl, 0) ~~> (#vk.1, 0) )
                    case d_0_fst
                    by contradiction /* impossible chain */
                  next
                    case d_0_snd
                    solve( (#vr.4, 0) ~~> (#vk.1, 0) )
                      case d_0_fst
                      solve( (#vr.5, 0) ~~> (#vk.1, 0) )
                        case d_xor_case_1
                        by solve( (#vr.6, 0) ~~> (#vk.1, 0) )
                      next
                        case d_xor_case_2
                        by solve( (#vr.6, 0) ~~> (#vk.1, 0) )
                      next
                        case d_xor_case_3
                        by contradiction /* forbidden KD-fact */
                      next
                        case d_xor_case_4
                        by solve( (#vr.6, 0) ~~> (#vk.1, 0) )
                      qed
                    next
                      case d_0_snd
                      solve( (#vr.5, 0) ~~> (#vk.1, 0) )
                        case Xor
                        solve( !LTK_SIG( $V, ~ltk.1 ) ▶₀ #vr.3 )
                          case registerLTK_SIG
                          solve( !PK_SIG( $V, pk(~ltk.1) ) ▶₁ #vr.3 )
                            case registerLTK_SIG
                            solve( !KU( 'g'^(~xx*~yy) ) @ #vk.6 )
                              case I1_STAT_SIG
                              by solve( !KU( ~yy ) @ #vk.17 )
                            next
                              case R2_STAT_SIG
                              by solve( !KU( ~xx ) @ #vk.17 )
                            next
                              case c_exp
                              by solve( !KU( ~xx ) @ #vk.19 )
                            qed
                          qed
                        qed
                      next
                        case d_xor_case_1
                        solve( (#vr.6, 0) ~~> (#vk.1, 0) )
                          case Xor
                          solve( !LTK_SIG( $V.1, ~ltk.2 ) ▶₀ #vr.3 )
                            case registerLTK_SIG
                            solve( !PK_SIG( $V.1, pkV ) ▶₁ #vr.3 )
                              case registerLTK_SIG
                              solve( !KU( 'g'^(~xx*~yy) ) @ #vk.6 )
                                case I1_STAT_SIG
                                by solve( !KU( ~yy ) @ #vk.18 )
                              next
                                case R2_STAT_SIG
                                by solve( !KU( ~xx ) @ #vk.18 )
                              next
                                case c_exp
                                by solve( !KU( ~xx ) @ #vk.20 )
                              qed
                            qed
                          qed
                        qed
                      next
                        case d_xor_case_2
                        by solve( (#vr.6, 0) ~~> (#vk.1, 0) )
                      next
                        case d_xor_case_3
                        by solve( (#vr.6, 0) ~~> (#vk.1, 0) )
                      next
                        case d_xor_case_4
                        by solve( (#vr.6, 0) ~~> (#vk.1, 0) )
                      qed
                    qed
                  qed
                next
                  case registerLTK_SIG
                  by contradiction /* impossible chain */
                next
                  case registerLTK_STAT
                  by contradiction /* impossible chain */
                next
                  case revealLTK_PSK
                  by contradiction /* impossible chain */
                next
                  case revealLTK_SIG
                  by contradiction /* impossible chain */
                next
                  case revealLTK_STAT
                  by contradiction /* impossible chain */
                next
                  case revealSessionKeyI
                  by solve( CommitI( tid.1, u, v, t ) ▶₀ #vr.3 )
                next
                  case revealSessionKeyR
                  by solve( CommitR( tid.1, u, v, t ) ▶₀ #vr.3 )
                qed
              qed
            next
              case coerce
              solve( !KD( ($V⊕
                           hkdfExpand(<$cAEAD0, 
                                       h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,
                                      hkdfExtract('emptyStr', z))
                          )
                     ) ▶₀ #vk )
                case I1_STAT_SIG
                by contradiction /* impossible chain */
              next
                case I3_STAT_SIG
                solve( (#vl, 0) ~~> (#vk, 0) )
                  case d_0_fst
                  by contradiction /* forbidden KD-fact */
                next
                  case d_0_snd
                  solve( (#vr.4, 0) ~~> (#vk, 0) )
                    case d_1_aeadDecrypt
                    by solve( (#vr.5, 0) ~~> (#vk, 0) )
                  next
                    case d_1_decrypt
                    by solve( (#vr.5, 0) ~~> (#vk, 0) )
                  qed
                qed
              next
                case R2_STAT_SIG
                solve( (#vl, 0) ~~> (#vk, 0) )
                  case d_0_fst
                  by contradiction /* impossible chain */
                next
                  case d_0_snd
                  solve( (#vr.4, 0) ~~> (#vk, 0) )
                    case d_0_fst
                    solve( (#vr.5, 0) ~~> (#vk, 0) )
                      case Xor
                      solve( !LTK_SIG( $V, ~ltk.2 ) ▶₀ #vr.3 )
                        case registerLTK_SIG
                        solve( !PK_SIG( $V, pkV ) ▶₁ #vr.3 )
                          case registerLTK_SIG
                          solve( !KU( 'g'^(~xx*~yy) ) @ #vk.6 )
                            case I1_STAT_SIG
                            by solve( !KU( ~yy ) @ #vk.15 )
                          next
                            case R2_STAT_SIG
                            by solve( !KU( ~xx ) @ #vk.15 )
                          next
                            case c_exp
                            by solve( !KU( ~xx ) @ #vk.17 )
                          qed
                        qed
                      qed
                    next
                      case d_xor_case_1
                      solve( (#vr.6, 0) ~~> (#vk, 0) )
                        case Xor
                        solve( !LTK_SIG( $V, ~ltk.2 ) ▶₀ #vr.3 )
                          case registerLTK_SIG
                          solve( !PK_SIG( $V, pkV ) ▶₁ #vr.3 )
                            case registerLTK_SIG
                            solve( !KU( (
                                         hkdfExpand(<$cAEAD0, 
                                                     h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 
                                                     'K_2e', '2'>,
                                                    hkdfExtract('emptyStr', z))⊕
                                         sign(<
                                               <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 
                                                pk(~ltk.1)>, 
                                               aeadEncrypt('emptyStr',
                                                           hkdfExpand(<$cAEAD0, 
                                                                       h(<$cHash0, 
                                                                          <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 
                                                                          gy>), 
                                                                       'K_2m'>,
                                                                      hkdfExtract('emptyStr', z)),
                                                           <$V, 
                                                            h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy
                                                              >), 
                                                            pk(~ltk.1)>,
                                                           $cAEAD0)
                                              >,
                                              ~ltk.1)
                                        )
                                   ) @ #vk.5 )
                              case c_xor
                              solve( !KU( sign(<
                                                <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 
                                                 pk(~ltk.1)>, 
                                                aeadEncrypt('emptyStr',
                                                            hkdfExpand(<$cAEAD0, 
                                                                        h(<$cHash0, 
                                                                           <'STAT', 'SIG', $cSUITE0, 'g'^~xx
                                                                           >, 
                                                                           gy>), 
                                                                        'K_2m'>,
                                                                       hkdfExtract('emptyStr', z)),
                                                            <$V, 
                                                             h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 
                                                                gy>), 
                                                             pk(~ltk.1)>,
                                                            $cAEAD0)
                                               >,
                                               ~ltk.1)
                                     ) @ #vk.16 )
                                case R2_STAT_SIG
                                solve( !KU( 'g'^(~xx*~yy) ) @ #vk.7 )
                                  case I1_STAT_SIG
                                  by solve( !KU( ~yy ) @ #vk.23 )
                                next
                                  case R2_STAT_SIG
                                  by solve( !KU( ~xx ) @ #vk.23 )
                                next
                                  case c_exp
                                  by solve( !KU( ~xx ) @ #vk.25 )
                                qed
                              next
                                case c_sign
                                solve( !KU( ~ltk.1 ) @ #vk.19 )
                                  case revealLTK_SIG
                                  by contradiction /* from formulas */
                                qed
                              qed
                            next
                              case coerce
                              solve( !KD( (
                                           hkdfExpand(<$cAEAD0, 
                                                       h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 
                                                       'K_2e', '2'>,
                                                      hkdfExtract('emptyStr', z))⊕
                                           sign(<
                                                 <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 
                                                  pk(~ltk.1)>, 
                                                 aeadEncrypt('emptyStr',
                                                             hkdfExpand(<$cAEAD0, 
                                                                         h(<$cHash0, 
                                                                            <'STAT', 'SIG', $cSUITE0, 'g'^~xx
                                                                            >, 
                                                                            gy>), 
                                                                         'K_2m'>,
                                                                        hkdfExtract('emptyStr', z)),
                                                             <$V, 
                                                              h(<$cHash0, <'STAT', 'SIG', $cSUITE0, 'g'^~xx>, 
                                                                 gy>), 
                                                              pk(~ltk.1)>,
                                                             $cAEAD0)
                                                >,
                                                ~ltk.1)
                                          )
                                     ) ▶₀ #vk.1 )
                                case I1_STAT_SIG
                                by contradiction /* impossible chain */
                              next
                                case I3_STAT_SIG
                                solve( (#vl.1, 0) ~~> (#vk.1, 0) )
                                  case d_0_fst
                                  by contradiction /* forbidden KD-fact */
                                next
                                  case d_0_snd
                                  solve( (#vr.8, 0) ~~> (#vk.1, 0) )
                                    case d_1_aeadDecrypt
                                    by solve( (#vr.9, 0) ~~> (#vk.1, 0) )
                                  next
                                    case d_1_decrypt
                                    by solve( (#vr.9, 0) ~~> (#vk.1, 0) )
                                  qed
                                qed
                              next
                                case R2_STAT_SIG
                                solve( (#vl.1, 0) ~~> (#vk.1, 0) )
                                  case d_0_fst
                                  by contradiction /* impossible chain */
                                next
                                  case d_0_snd
                                  solve( (#vr.8, 0) ~~> (#vk.1, 0) )
                                    case d_0_fst
                                    solve( (#vr.9, 0) ~~> (#vk.1, 0) )
                                      case d_xor_case_1
                                      by solve( (#vr.10, 0) ~~> (#vk.1, 0) )
                                    next
                                      case d_xor_case_2
                                      by solve( (#vr.10, 0) ~~> (#vk.1, 0) )
                                    next
                                      case d_xor_case_3
                                      by contradiction /* forbidden KD-fact */
                                    next
                                      case d_xor_case_4
                                      by solve( (#vr.10, 0) ~~> (#vk.1, 0) )
                                    qed
                                  next
                                    case d_0_snd
                                    solve( (#vr.9, 0) ~~> (#vk.1, 0) )
                                      case Xor
                                      solve( !LTK_SIG( $V, ~ltk.1 ) ▶₀ #vr.7 )
                                        case registerLTK_SIG
                                        solve( !PK_SIG( $V, pk(~ltk.1) ) ▶₁ #vr.7 )
                                          case registerLTK_SIG
                                          solve( !KU( 'g'^(~xx*~yy) ) @ #vk.6 )
                                            case I1_STAT_SIG
                                            by solve( !KU( ~yy ) @ #vk.21 )
                                          next
                                            case R2_STAT_SIG
                                            by solve( !KU( ~xx ) @ #vk.21 )
                                          next
                                            case c_exp
                                            by solve( !KU( ~xx ) @ #vk.23 )
                                          qed
                                        qed
                                      qed
                                    next
                                      case d_xor_case_1
                                      solve( (#vr.10, 0) ~~> (#vk.1, 0) )
                                        case Xor
                                        solve( !LTK_SIG( $V.1, ~ltk.2 ) ▶₀ #vr.7 )
                                          case registerLTK_SIG
                                          solve( !PK_SIG( $V.1, pkV ) ▶₁ #vr.7 )
                                            case registerLTK_SIG
                                            solve( !KU( 'g'^(~xx*~yy) ) @ #vk.6 )
                                              case I1_STAT_SIG
                                              by solve( !KU( ~yy ) @ #vk.22 )
                                            next
                                              case R2_STAT_SIG
                                              by solve( !KU( ~xx ) @ #vk.22 )
                                            next
                                              case c_exp
                                              by solve( !KU( ~xx ) @ #vk.24 )
                                            qed
                                          qed
                                        qed
                                      qed
                                    next
                                      case d_xor_case_2
                                      by solve( (#vr.10, 0) ~~> (#vk.1, 0) )
                                    next
                                      case d_xor_case_3
                                      by solve( (#vr.10, 0) ~~> (#vk.1, 0) )
                                    next
                                      case d_xor_case_4
                                      by solve( (#vr.10, 0) ~~> (#vk.1, 0) )
                                    qed
                                  qed
                                qed
                              next
                                case registerLTK_SIG
                                by contradiction /* impossible chain */
                              next
                                case registerLTK_STAT
                                by contradiction /* impossible chain */
                              next
                                case revealLTK_PSK
                                by contradiction /* impossible chain */
                              next
                                case revealLTK_SIG
                                by contradiction /* impossible chain */
                              next
                                case revealLTK_STAT
                                by contradiction /* impossible chain */
                              next
                                case revealSessionKeyI
                                by solve( CommitI( tid.2, u, v, t ) ▶₀ #vr.7 )
                              next
                                case revealSessionKeyR
                                by solve( CommitR( tid.2, u, v, t ) ▶₀ #vr.7 )
                              qed
                            qed
                          qed
                        qed
                      qed
                    next
                      case d_xor_case_2
                      solve( (#vr.6, 0) ~~> (#vk, 0) )
                        case Xor
                        solve( !LTK_SIG( $V.1, ~ltk.2 ) ▶₀ #vr.3 )
                          case registerLTK_SIG
                          solve( !PK_SIG( $V.1, pkV ) ▶₁ #vr.3 )
                            case registerLTK_SIG
                            solve( !KU( 'g'^(~xx*~yy) ) @ #vk.6 )
                              case I1_STAT_SIG
                              by solve( !KU( ~yy ) @ #vk.16 )
                            next
                              case R2_STAT_SIG
                              by solve( !KU( ~xx ) @ #vk.16 )
                            next
                              case c_exp
                              by solve( !KU( ~xx ) @ #vk.18 )
                            qed
                          qed
                        qed
                      qed
                    next
                      case d_xor_case_3
                      by contradiction /* forbidden KD-fact */
                    next
                      case d_xor_case_4
                      by solve( (#vr.6, 0) ~~> (#vk, 0) )
                    qed
                  next
                    case d_0_snd
                    solve( (#vr.5, 0) ~~> (#vk, 0) )
                      case d_xor_case_1
                      by solve( (#vr.6, 0) ~~> (#vk, 0) )
                    next
                      case d_xor_case_2
                      by solve( (#vr.6, 0) ~~> (#vk, 0) )
                    next
                      case d_xor_case_3
                      by solve( (#vr.6, 0) ~~> (#vk, 0) )
                    next
                      case d_xor_case_4
                      by solve( (#vr.6, 0) ~~> (#vk, 0) )
                    qed
                  qed
                qed
              next
                case registerLTK_SIG
                by contradiction /* impossible chain */
              next
                case registerLTK_STAT
                by contradiction /* impossible chain */
              next
                case revealLTK_PSK
                by contradiction /* impossible chain */
              next
                case revealLTK_SIG
                by contradiction /* impossible chain */
              next
                case revealLTK_STAT
                by contradiction /* impossible chain */
              next
                case revealSessionKeyI
                by solve( CommitI( tid.1, u, v, t ) ▶₀ #vr.3 )
              next
                case revealSessionKeyR
                by solve( CommitR( tid.1, u, v, t ) ▶₀ #vr.3 )
              qed
            qed
          qed
        qed
      qed
    next
      case case_3
      by contradiction /* from formulas */
    next
      case case_4
      by contradiction /* from formulas */
    next
      case case_5
      by contradiction /* from formulas */
    qed
  next
    case case_2
    solve( (last(#j))  ∥ (last(#i))  ∥
           (∃ #l. (LTKRev( $U ) @ #l) ∧ (¬(last(#l))) ∧ (#l < #j))  ∥
           (∃ #l. (LTKRev( $V ) @ #l) ∧ (¬(last(#l))) ∧ (#l < #j))  ∥
           (∃ #l. (SKRev( <gxy, z> ) @ #l) ∧ ¬(last(#l))) )
      case case_1
      solve( StR2_STAT_SIG( $V, ~ltk, ~yy, prk_3e2m, TH_2, CIPHERTEXT_2, gxy,
                            ~tid, m1, m2
             ) ▶₀ #j )
        case R2_STAT_SIG
        solve( !PK_STAT( $U, pkU ) ▶₁ #j )
          case registerLTK_STAT
          solve( !PK_SIG( $V, pkV ) ▶₂ #j )
            case registerLTK_SIG
            solve( !KU( 'g'^(~ltk*~yy) ) @ #vk.5 )
              case R2_STAT_SIG
              solve( !KU( ~ltk ) @ #vk.13 )
                case revealLTK_STAT
                by contradiction /* from formulas */
              qed
            next
              case c_exp
              solve( !KU( ~ltk ) @ #vk.15 )
                case revealLTK_STAT
                by contradiction /* from formulas */
              qed
            next
              case registerLTK_STAT
              by solve( !KU( ~yy ) @ #vk.13 )
            qed
          qed
        qed
      qed
    next
      case case_2
      solve( StR2_STAT_SIG( $V, ~ltk, ~yy, prk_3e2m, TH_2, CIPHERTEXT_2, gxy,
                            ~tid, m1, m2
             ) ▶₀ #j )
        case R2_STAT_SIG
        solve( !PK_STAT( $U, pkU ) ▶₁ #j )
          case registerLTK_STAT
          solve( !PK_SIG( $V, pkV ) ▶₂ #j )
            case registerLTK_SIG
            solve( !KU( 'g'^(~ltk*~yy) ) @ #vk.5 )
              case R2_STAT_SIG
              solve( !KU( ~ltk ) @ #vk.13 )
                case revealLTK_STAT
                solve( !KU( aeadEncrypt(<$U, 
                                         aeadEncrypt('emptyStr',
                                                     hkdfExpand(<$cAEAD0.1, 
                                                                 h(<$cHash0.1, 
                                                                    h(<$cHash0, 
                                                                       <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy
                                                                      >), 
                                                                    <
                                                                     ($V⊕
                                                                      hkdfExpand(<$cAEAD0, 
                                                                                  h(<$cHash0, 
                                                                                     <'STAT', 'SIG', 
                                                                                      $cSUITE0, gx>, 
                                                                                     'g'^~yy>), 
                                                                                  'K_2e', '1'>,
                                                                                 hkdfExtract('emptyStr', gxy))
                                                                     ), 
                                                                     (
                                                                      hkdfExpand(<$cAEAD0, 
                                                                                  h(<$cHash0, 
                                                                                     <'STAT', 'SIG', 
                                                                                      $cSUITE0, gx>, 
                                                                                     'g'^~yy>), 
                                                                                  'K_2e', '2'>,
                                                                                 hkdfExtract('emptyStr',
                                                                                             gxy))⊕
                                                                      sign(<
                                                                            <$V, 
                                                                             h(<$cHash0, 
                                                                                <'STAT', 'SIG', $cSUITE0, gx
                                                                                >, 
                                                                                'g'^~yy>), 
                                                                             pk(~ltk.1)>, 
                                                                            aeadEncrypt('emptyStr',
                                                                                        hkdfExpand(<$cAEAD0, 
                                                                                                    h(<
                                                                                                       $cHash0, 
                                                                                                       <
                                                                                                        'STAT', 
                                                                                                        'SIG', 
                                                                                                        $cSUITE0, 
                                                                                                        gx>, 
                                                                                                       'g'^~yy
                                                                                                      >), 
                                                                                                    'K_2m'>,
                                                                                                   hkdfExtract('emptyStr',
                                                                                                               gxy)),
                                                                                        <$V, 
                                                                                         h(<$cHash0, 
                                                                                            <'STAT', 'SIG', 
                                                                                             $cSUITE0, gx>, 
                                                                                            'g'^~yy>), 
                                                                                         pk(~ltk.1)>,
                                                                                        $cAEAD0)
                                                                           >,
                                                                           ~ltk.1)
                                                                     )
                                                                    >, 
                                                                    'emptyStr'>), 
                                                                 'K_3m'>,
                                                                hkdfExtract(hkdfExtract('emptyStr', gxy),
                                                                            'g'^(~ltk*~yy))),
                                                     <$U, 
                                                      h(<$cHash0.1, 
                                                         h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy
                                                           >), 
                                                         <
                                                          ($V⊕
                                                           hkdfExpand(<$cAEAD0, 
                                                                       h(<$cHash0, 
                                                                          <'STAT', 'SIG', $cSUITE0, gx>, 
                                                                          'g'^~yy>), 
                                                                       'K_2e', '1'>,
                                                                      hkdfExtract('emptyStr', gxy))
                                                          ), 
                                                          (
                                                           hkdfExpand(<$cAEAD0, 
                                                                       h(<$cHash0, 
                                                                          <'STAT', 'SIG', $cSUITE0, gx>, 
                                                                          'g'^~yy>), 
                                                                       'K_2e', '2'>,
                                                                      hkdfExtract('emptyStr', gxy))⊕
                                                           sign(<
                                                                 <$V, 
                                                                  h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 
                                                                     'g'^~yy>), 
                                                                  pk(~ltk.1)>, 
                                                                 aeadEncrypt('emptyStr',
                                                                             hkdfExpand(<$cAEAD0, 
                                                                                         h(<$cHash0, 
                                                                                            <'STAT', 'SIG', 
                                                                                             $cSUITE0, gx>, 
                                                                                            'g'^~yy>), 
                                                                                         'K_2m'>,
                                                                                        hkdfExtract('emptyStr',
                                                                                                    gxy)),
                                                                             <$V, 
                                                                              h(<$cHash0, 
                                                                                 <'STAT', 'SIG', $cSUITE0, gx
                                                                                 >, 
                                                                                 'g'^~yy>), 
                                                                              pk(~ltk.1)>,
                                                                             $cAEAD0)
                                                                >,
                                                                ~ltk.1)
                                                          )
                                                         >, 
                                                         'emptyStr'>), 
                                                      'g'^~ltk>,
                                                     $cAEAD0.1)
                                        >,
                                        hkdfExpand(<$cAEAD0.1, 
                                                    h(<$cHash0.1, 
                                                       h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 
                                                       <
                                                        ($V⊕
                                                         hkdfExpand(<$cAEAD0, 
                                                                     h(<$cHash0, 
                                                                        <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy
                                                                       >), 
                                                                     'K_2e', '1'>,
                                                                    hkdfExtract('emptyStr', gxy))
                                                        ), 
                                                        (
                                                         hkdfExpand(<$cAEAD0, 
                                                                     h(<$cHash0, 
                                                                        <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy
                                                                       >), 
                                                                     'K_2e', '2'>,
                                                                    hkdfExtract('emptyStr', gxy))⊕
                                                         sign(<
                                                               <$V, 
                                                                h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 
                                                                   'g'^~yy>), 
                                                                pk(~ltk.1)>, 
                                                               aeadEncrypt('emptyStr',
                                                                           hkdfExpand(<$cAEAD0, 
                                                                                       h(<$cHash0, 
                                                                                          <'STAT', 'SIG', 
                                                                                           $cSUITE0, gx>, 
                                                                                          'g'^~yy>), 
                                                                                       'K_2m'>,
                                                                                      hkdfExtract('emptyStr',
                                                                                                  gxy)),
                                                                           <$V, 
                                                                            h(<$cHash0, 
                                                                               <'STAT', 'SIG', $cSUITE0, gx>, 
                                                                               'g'^~yy>), 
                                                                            pk(~ltk.1)>,
                                                                           $cAEAD0)
                                                              >,
                                                              ~ltk.1)
                                                        )
                                                       >, 
                                                       'emptyStr'>), 
                                                    'K_3ae'>,
                                                   hkdfExtract('emptyStr', gxy)),
                                        extAad3Outer, $cAEAD0.1)
                       ) @ #vk.5 )
                  case I3_STAT_SIG
                  solve( !KU( 'g'^(~xx*~yy) ) @ #vk.8 )
                    case I1_STAT_SIG
                    by solve( !KU( ~yy ) @ #vk.19 )
                  next
                    case R2_STAT_SIG
                    by solve( !KU( ~xx ) @ #vk.19 )
                  next
                    case c_exp
                    by solve( !KU( ~xx ) @ #vk.21 )
                  qed
                next
                  case c_aeadEncrypt
                  solve( !KU( hkdfExpand(<$cAEAD0.1, 
                                          h(<$cHash0.1, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 
                                             <
                                              ($V⊕
                                               hkdfExpand(<$cAEAD0, 
                                                           h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy
                                                             >), 
                                                           'K_2e', '1'>,
                                                          hkdfExtract('emptyStr', gxy))
                                              ), 
                                              (
                                               hkdfExpand(<$cAEAD0, 
                                                           h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy
                                                             >), 
                                                           'K_2e', '2'>,
                                                          hkdfExtract('emptyStr', gxy))⊕
                                               sign(<
                                                     <$V, 
                                                      h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 
                                                      pk(~ltk.1)>, 
                                                     aeadEncrypt('emptyStr',
                                                                 hkdfExpand(<$cAEAD0, 
                                                                             h(<$cHash0, 
                                                                                <'STAT', 'SIG', $cSUITE0, gx
                                                                                >, 
                                                                                'g'^~yy>), 
                                                                             'K_2m'>,
                                                                            hkdfExtract('emptyStr', gxy)),
                                                                 <$V, 
                                                                  h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 
                                                                     'g'^~yy>), 
                                                                  pk(~ltk.1)>,
                                                                 $cAEAD0)
                                                    >,
                                                    ~ltk.1)
                                              )
                                             >, 
                                             'emptyStr'>), 
                                          'K_3ae'>,
                                         hkdfExtract('emptyStr', gxy))
                         ) @ #vk.15 )
                    case I3_STAT_SIG_case_1
                    solve( !KU( 'g'^(~xx*~yy) ) @ #vk.12 )
                      case I1_STAT_SIG
                      by solve( !KU( ~yy ) @ #vk.36 )
                    next
                      case R2_STAT_SIG
                      by solve( !KU( ~xx ) @ #vk.36 )
                    next
                      case c_exp
                      by solve( !KU( ~xx ) @ #vk.38 )
                    qed
                  next
                    case I3_STAT_SIG_case_2
                    solve( !KU( 'g'^(~xx*~yy) ) @ #vk.9 )
                      case I1_STAT_SIG
                      by solve( !KU( ~yy ) @ #vk.29 )
                    next
                      case R2_STAT_SIG
                      by solve( !KU( ~xx ) @ #vk.29 )
                    next
                      case c_exp
                      by solve( !KU( ~xx ) @ #vk.31 )
                    qed
                  next
                    case c_hkdfExpand
                    solve( !KU( h(<$cHash0.1, 
                                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 
                                   <
                                    ($V⊕
                                     hkdfExpand(<$cAEAD0, 
                                                 h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 
                                                 'K_2e', '1'>,
                                                hkdfExtract('emptyStr', gxy))
                                    ), 
                                    (
                                     hkdfExpand(<$cAEAD0, 
                                                 h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 
                                                 'K_2e', '2'>,
                                                hkdfExtract('emptyStr', gxy))⊕
                                     sign(<
                                           <$V, h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 
                                            pk(~ltk.1)>, 
                                           aeadEncrypt('emptyStr',
                                                       hkdfExpand(<$cAEAD0, 
                                                                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 
                                                                      'g'^~yy>), 
                                                                   'K_2m'>,
                                                                  hkdfExtract('emptyStr', gxy)),
                                                       <$V, 
                                                        h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 
                                                        pk(~ltk.1)>,
                                                       $cAEAD0)
                                          >,
                                          ~ltk.1)
                                    )
                                   >, 
                                   'emptyStr'>)
                           ) @ #vk.23 )
                      case c_h
                      solve( !KU( h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>)
                             ) @ #vk.29 )
                        case c_h
                        solve( !KU( aeadEncrypt('emptyStr',
                                                hkdfExpand(<$cAEAD0.1, 
                                                            h(<$cHash0.1, 
                                                               h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 
                                                                  'g'^~yy>), 
                                                               <
                                                                ($V⊕
                                                                 hkdfExpand(<$cAEAD0, 
                                                                             h(<$cHash0, 
                                                                                <'STAT', 'SIG', $cSUITE0, gx
                                                                                >, 
                                                                                'g'^~yy>), 
                                                                             'K_2e', '1'>,
                                                                            hkdfExtract('emptyStr', gxy))
                                                                ), 
                                                                (
                                                                 hkdfExpand(<$cAEAD0, 
                                                                             h(<$cHash0, 
                                                                                <'STAT', 'SIG', $cSUITE0, gx
                                                                                >, 
                                                                                'g'^~yy>), 
                                                                             'K_2e', '2'>,
                                                                            hkdfExtract('emptyStr', gxy))⊕
                                                                 sign(<
                                                                       <$V, 
                                                                        h(<$cHash0, 
                                                                           <'STAT', 'SIG', $cSUITE0, gx>, 
                                                                           'g'^~yy>), 
                                                                        pk(~ltk.1)>, 
                                                                       aeadEncrypt('emptyStr',
                                                                                   hkdfExpand(<$cAEAD0, 
                                                                                               h(<$cHash0, 
                                                                                                  <'STAT', 
                                                                                                   'SIG', 
                                                                                                   $cSUITE0, 
                                                                                                   gx>, 
                                                                                                  'g'^~yy>), 
                                                                                               'K_2m'>,
                                                                                              hkdfExtract('emptyStr',
                                                                                                          gxy)),
                                                                                   <$V, 
                                                                                    h(<$cHash0, 
                                                                                       <'STAT', 'SIG', 
                                                                                        $cSUITE0, gx>, 
                                                                                       'g'^~yy>), 
                                                                                    pk(~ltk.1)>,
                                                                                   $cAEAD0)
                                                                      >,
                                                                      ~ltk.1)
                                                                )
                                                               >, 
                                                               'emptyStr'>), 
                                                            'K_3m'>,
                                                           hkdfExtract(hkdfExtract('emptyStr', gxy),
                                                                       'g'^(~ltk*~yy))),
                                                <$U, 
                                                 h(<$cHash0.1, 
                                                    h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 
                                                    <
                                                     ($V⊕
                                                      hkdfExpand(<$cAEAD0, 
                                                                  h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 
                                                                     'g'^~yy>), 
                                                                  'K_2e', '1'>,
                                                                 hkdfExtract('emptyStr', gxy))
                                                     ), 
                                                     (
                                                      hkdfExpand(<$cAEAD0, 
                                                                  h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 
                                                                     'g'^~yy>), 
                                                                  'K_2e', '2'>,
                                                                 hkdfExtract('emptyStr', gxy))⊕
                                                      sign(<
                                                            <$V, 
                                                             h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 
                                                                'g'^~yy>), 
                                                             pk(~ltk.1)>, 
                                                            aeadEncrypt('emptyStr',
                                                                        hkdfExpand(<$cAEAD0, 
                                                                                    h(<$cHash0, 
                                                                                       <'STAT', 'SIG', 
                                                                                        $cSUITE0, gx>, 
                                                                                       'g'^~yy>), 
                                                                                    'K_2m'>,
                                                                                   hkdfExtract('emptyStr',
                                                                                               gxy)),
                                                                        <$V, 
                                                                         h(<$cHash0, 
                                                                            <'STAT', 'SIG', $cSUITE0, gx>, 
                                                                            'g'^~yy>), 
                                                                         pk(~ltk.1)>,
                                                                        $cAEAD0)
                                                           >,
                                                           ~ltk.1)
                                                     )
                                                    >, 
                                                    'emptyStr'>), 
                                                 'g'^~ltk>,
                                                $cAEAD0.1)
                               ) @ #vk.27 )
                          case c_aeadEncrypt
                          solve( !KU( hkdfExpand(<$cAEAD0.1, 
                                                  h(<$cHash0.1, 
                                                     h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 
                                                     <
                                                      ($V⊕
                                                       hkdfExpand(<$cAEAD0, 
                                                                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 
                                                                      'g'^~yy>), 
                                                                   'K_2e', '1'>,
                                                                  hkdfExtract('emptyStr', gxy))
                                                      ), 
                                                      (
                                                       hkdfExpand(<$cAEAD0, 
                                                                   h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 
                                                                      'g'^~yy>), 
                                                                   'K_2e', '2'>,
                                                                  hkdfExtract('emptyStr', gxy))⊕
                                                       sign(<
                                                             <$V, 
                                                              h(<$cHash0, <'STAT', 'SIG', $cSUITE0, gx>, 
                                                                 'g'^~yy>), 
                                                              pk(~ltk.1)>, 
                                                             aeadEncrypt('emptyStr',
                                                                         hkdfExpand(<$cAEAD0, 
                                                                                     h(<$cHash0, 
                                                                                        <'STAT', 'SIG', 
                                                                                         $cSUITE0, gx>, 
                                                                                        'g'^~yy>), 
                                                                                     'K_2m'>,
                                                                                    hkdfExtract('emptyStr',
                                                                                                gxy)),
                                                                         <$V, 
                                                                          h(<$cHash0, 
                                                                             <'STAT', 'SIG', $cSUITE0, gx>, 
                                                                             'g'^~yy>), 
                                                                          pk(~ltk.1)>,
                                                                         $cAEAD0)
                                                            >,
                                                            ~ltk.1)
                                                      )
                                                     >, 
                                                     'emptyStr'>), 
                                                  'K_3m'>,
                                                 hkdfExtract(hkdfExtract('emptyStr', gxy), 'g'^(~ltk*~yy)))
                                 ) @ #vk.39 )
                            case c_hkdfExpand
                            solve( !KU( hkdfExtract(hkdfExtract('emptyStr', gxy), 'g'^(~ltk*~yy))
                                   ) @ #vk.43 )
                              case c_hkdfExtract
                              by contradiction /* cyclic */
                            qed
                          qed
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            next
              case c_exp
              solve( !KU( ~ltk ) @ #vk.15 )
                case revealLTK_STAT
                by solve( !KU( ~yy ) @ #vk.16 )
              qed
            next
              case registerLTK_STAT
              by solve( !KU( ~yy ) @ #vk.13 )
            qed
          qed
        qed
      qed
    next
      case case_3
      by contradiction /* from formulas */
    next
      case case_4
      by contradiction /* from formulas */
    next
      case case_5
      by contradiction /* from formulas */
    qed
  qed
qed

/* All well-formedness checks were successful. */

end

==============================================================================
summary of summaries:

analyzed: TMP_edhoc_STAT_SIG.spthy

  sanityExecutableToTheEnd (exists-trace): analysis incomplete (1 steps)
  authInjAgreeGuaranteeForI (all-traces): analysis incomplete (1 steps)
  authInjAgreeGuaranteeForR (all-traces): analysis incomplete (1 steps)
  authGIYImplicitAuthGuaranteeForI (all-traces): analysis incomplete (1 steps)
  authGIYImplicitAuthGuaranteeForI2 (all-traces): analysis incomplete (1 steps)
  secrecyPFSGIYSessionKey (all-traces): verified (327 steps)

==============================================================================

real	0m57,692s
user	1m48,354s
sys	0m20,353s
