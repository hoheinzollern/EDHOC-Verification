maude tool: 'maude'
 checking version: 2.7.1. OK.
 checking installation: OK.
SAPIC tool: 'sapic'
Checking availablity ...  solved goal nr. 0 (directly):
    ExpCommitI( tidI, u.1, v.2, expSk.3 ) @ #i.4
  solved goal nr. 0 (directly):
    CommitR( tidR, u.1, v.2, sk.3 ) @ #i.4
  solved goal nr. 0 (directly): !LTK_PSK( t.1, t.2 ) ▶₀ #i
  solved goal nr. 0 (directly): !LTK_SIG( t.1, t.2 ) ▶₀ #i
  solved goal nr. 0 (directly): !LTK_STAT( t.1, t.2 ) ▶₀ #i
  solved goal nr. 0 (directly): !PK_SIG( t.1, t.2 ) ▶₀ #i
  solved goal nr. 0 (directly): !PK_STAT( t.1, t.2 ) ▶₀ #i
  solved goal nr. 0 (directly): CommitI( t.1, t.2, t.3, t.4 ) ▶₀ #i
  solved goal nr. 0 (directly): CommitR( t.1, t.2, t.3, t.4 ) ▶₀ #i
  solved goal nr. 0 (directly):
    StI1_SIG_SIG( t.1, t.2, t.3, t.4, t.5, t.6 ) ▶₀ #i
  solved goal nr. 2 (directly): !LTK_SIG( $U.8, ~ltk.8 ) ▶₀ #vr.7
  solved goal nr. 0 (directly):
    StR2_SIG_SIG( t.1, t.2, t.3, t.4, t.5, t.6, t.7, t.8, t.9, t.10
    ) ▶₀ #i
  solved goal nr. 0 (directly): !KU( ~t.1 ) @ #i
  solved goal nr. 2 (directly): !LTK_SIG( $V.12, ~ltk.12 ) ▶₀ #vr.11
  solved goal nr. 0 (directly):
    !KU( aeadDecrypt(t.1, t.2, t.3, t.4) ) @ #i
  solved goal nr. 3 (directly): !PK_SIG( $V.12, pkV.12 ) ▶₁ #vr.11
  solved goal nr. 0 (directly):
    !KU( aeadEncrypt(t.1, t.2, t.3, t.4) ) @ #i
  solved goal nr. 0 (directly): !KU( decrypt(t.1, t.2, t.3) ) @ #i
  solved goal nr. 0 (directly): !KU( t.1^t.2 ) @ #i
  solved goal nr. 4 (directly): !LTK_SIG( $U.10, ~ltk.10 ) ▶₀ #vr.9
  solved goal nr. 0 (directly): !KU( fst(t.1) ) @ #i
  solved goal nr. 0 (directly): !KU( h(t.1) ) @ #i
  solved goal nr. 0 (directly): !KU( hkdfExpand(t.1, t.2) ) @ #i
  solved goal nr. 4 (directly): !LTK_SIG( $U.10, ~ltk.10 ) ▶₀ #vr.9
  solved goal nr. 0 (directly): !KU( hkdfExtract(t.1, t.2) ) @ #i
  solved goal nr. 0 (directly): !KU( pk(t.1) ) @ #i
  solved goal nr. 0 (directly): !KU( sign(t.1, t.2) ) @ #i
  solved goal nr. 4 (directly): !LTK_SIG( $V.10, ~ltk.10 ) ▶₀ #vr.9
  solved goal nr. 0 (directly): !KU( snd(t.1) ) @ #i
  solved goal nr. 0 (directly): !KU( verify(t.1, t.2, t.3) ) @ #i
  solved goal nr. 5 (directly): !PK_SIG( $V.10, pkV.10 ) ▶₁ #vr.9
  solved goal nr. 4 (directly): !LTK_SIG( $V.10, ~ltk.10 ) ▶₀ #vr.9
  solved goal nr. 5 (directly): !PK_SIG( $V.10, pkV.10 ) ▶₁ #vr.9
  solved goal nr. 4 (directly): !LTK_SIG( $V.30, ~ltk.10 ) ▶₀ #vr.9
  solved goal nr. 5 (directly): !PK_SIG( $V.30, pkV.10 ) ▶₁ #vr.9
  solved goal nr. 4 (directly):
    CommitI( tid.16, u.16, v.16, t.14 ) ▶₀ #vr.15
  solved goal nr. 4 (directly):
    CommitR( tid.16, u.16, v.16, t.14 ) ▶₀ #vr.15
  solved goal nr. 4 (directly): !LTK_SIG( $A.7, ~t.1 ) ▶₀ #vr.6
  solved goal nr. 4 (directly): !LTK_STAT( $A.7, ~t.1 ) ▶₀ #vr.6
  solved goal nr. 4 (directly):
    !LTK_PSK( <$A.7, $B.7>, ~t.1 ) ▶₀ #vr.6
  solved goal nr. 4 (directly):
    CommitI( tid.7, u.7, v.7, t.5 ) ▶₀ #vr.6
  solved goal nr. 4 (directly):
    CommitR( tid.7, u.7, v.7, t.5 ) ▶₀ #vr.6
  solved goal nr. 4 (directly): !LTK_SIG( $V.30, ~ltk.34 ) ▶₀ #vr.9
  solved goal nr. 5 (directly): !PK_SIG( $V.30, pkV.37 ) ▶₁ #vr.9
  solved goal nr. 4 (directly):
    CommitI( tid.7, u.7, v.7, t.5 ) ▶₀ #vr.6
  solved goal nr. 4 (directly):
    CommitR( tid.7, u.7, v.7, t.5 ) ▶₀ #vr.6
  solved goal nr. 4 (directly):
    CommitI( tid.13, u.13, v.13, t.11 ) ▶₀ #vr.12
  solved goal nr. 4 (directly):
    CommitR( tid.13, u.13, v.13, t.11 ) ▶₀ #vr.12
  solved goal nr. 4 (directly): !LTK_SIG( $V.30, ~ltk.34 ) ▶₀ #vr.9
  solved goal nr. 5 (directly): !PK_SIG( $V.30, pkV.37 ) ▶₁ #vr.9
  solved goal nr. 4 (directly):
    StI1_SIG_SIG( $U.16, ~ltk.16, $V.16, ~xx.16, m1.16, ~tid.16
    ) ▶₀ #vr.15
  solved goal nr. 4 (directly):
    StI1_SIG_SIG( $U.10, ~ltk.10, $V.10, ~xx.10, m1.10, ~tid.10
    ) ▶₀ #vr.9
  solved goal nr. 5 (directly): !PK_SIG( $V.10, pk(x.19) ) ▶₁ #vr.9
  solved goal nr. 6 (directly): !PK_SIG( $U.10, pkU.10 ) ▶₂ #vr.9
  solved goal nr. 5 (directly): !PK_SIG( $V.16, pk(x.25) ) ▶₁ #vr.15
  solved goal nr. 26 (directly): !LTK_SIG( $U.10, ~ltk.10 ) ▶₀ #vr.97
  solved goal nr. 4 (directly):
    CommitI( tid.10, u.10, v.10, t.8 ) ▶₀ #vr.9
  solved goal nr. 4 (directly):
    CommitR( tid.10, u.10, v.10, t.8 ) ▶₀ #vr.9
  solved goal nr. 4 (directly):
    CommitI( tid.7, u.7, v.7, t.5 ) ▶₀ #vr.6
  solved goal nr. 4 (directly):
    CommitR( tid.7, u.7, v.7, t.5 ) ▶₀ #vr.6
  solved goal nr. 6 (directly): !PK_SIG( $U.16, pkU.16 ) ▶₂ #vr.15
  solved goal nr. 16 (directly): !LTK_SIG( $U.16, ~ltk.16 ) ▶₀ #vr.96
  solved goal nr. 4 (directly):
    StI1_SIG_SIG( $U.10, ~ltk.10, $V.10, ~xx.10, m1.10, ~tid.10
    ) ▶₀ #vr.9
  solved goal nr. 5 (directly): !PK_SIG( $V.10, pk(x.19) ) ▶₁ #vr.9
  solved goal nr. 6 (directly): !PK_SIG( $U.10, pkU.10 ) ▶₂ #vr.9
  solved goal nr. 23 (directly): !LTK_SIG( $U.10, ~ltk.10 ) ▶₀ #vr.96
  solved goal nr. 4 (directly):
    CommitI( tid.16, u.16, v.16, t.14 ) ▶₀ #vr.15
  solved goal nr. 4 (directly):
    CommitR( tid.16, u.16, v.16, t.14 ) ▶₀ #vr.15
  solved goal nr. 4 (directly):
    CommitI( tid.10, u.10, v.10, t.8 ) ▶₀ #vr.9
  solved goal nr. 4 (directly):
    CommitR( tid.10, u.10, v.10, t.8 ) ▶₀ #vr.9
  solved goal nr. 4 (directly):
    CommitI( tid.10, u.10, v.10, t.8 ) ▶₀ #vr.9
  solved goal nr. 4 (directly):
    CommitR( tid.10, u.10, v.10, t.8 ) ▶₀ #vr.9
  solved goal nr. 4 (directly):
    CommitI( tid.7, u.7, v.7, t.5 ) ▶₀ #vr.6
  solved goal nr. 4 (directly):
    CommitR( tid.7, u.7, v.7, t.5 ) ▶₀ #vr.6
  solved goal nr. 4 (directly):
    CommitI( tid.13, u.13, v.13, t.11 ) ▶₀ #vr.12
  solved goal nr. 4 (directly):
    CommitR( tid.13, u.13, v.13, t.11 ) ▶₀ #vr.12
  solved goal nr. 4 (directly):
    CommitI( tid.7, u.7, v.7, t.5 ) ▶₀ #vr.6
  solved goal nr. 4 (directly):
    CommitR( tid.7, u.7, v.7, t.5 ) ▶₀ #vr.6
  solved goal nr. 4 (directly):
    CommitI( tid.10, u.10, v.10, t.8 ) ▶₀ #vr.9
  solved goal nr. 4 (directly):
    CommitR( tid.10, u.10, v.10, t.8 ) ▶₀ #vr.9
  solved goal nr. 23 (precomputed):
    !KU( h(<$cHash0.10, 
            h(<$cHash0.10, <'SIG', 'SIG', $cSUITE0.98, 'g'^~xx.10>, gy.10>), 
            <
             ($V.10⊕
              hkdfExpand(<$cAEAD0.10, 
                          h(<$cHash0.10, <'SIG', 'SIG', $cSUITE0.98, 'g'^~xx.10>, gy.10>), 
                          'K_2e', '1'>,
                         hkdfExtract('emptyStr', z.11))
             ), 
             (
              hkdfExpand(<$cAEAD0.10, 
                          h(<$cHash0.10, <'SIG', 'SIG', $cSUITE0.98, 'g'^~xx.10>, gy.10>), 
                          'K_2e', '2'>,
                         hkdfExtract('emptyStr', z.11))⊕
              sign(<
                    <$V.10, 
                     h(<$cHash0.10, <'SIG', 'SIG', $cSUITE0.98, 'g'^~xx.10>, gy.10>), 
                     pk(~ltk.102)>, 
                    aeadEncrypt('emptyStr',
                                hkdfExpand(<$cAEAD0.10, 
                                            h(<$cHash0.10, <'SIG', 'SIG', $cSUITE0.98, 'g'^~xx.10>, 
                                               gy.10>), 
                                            'K_2m'>,
                                           hkdfExtract('emptyStr', z.11)),
                                <$V.10, 
                                 h(<$cHash0.10, <'SIG', 'SIG', $cSUITE0.98, 'g'^~xx.10>, gy.10>), 
                                 pk(~ltk.102)>,
                                $cAEAD0.10)
                   >,
                   ~ltk.102)
             )
            >, 
            'emptyStr'>)
    ) @ #vk.93
  solved goal nr. 34 (precomputed):
    !KU( h(<$cHash0.10, <'SIG', 'SIG', $cSUITE0.98, 'g'^~xx.10>, gy.10
           >)
    ) @ #vk.110
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0:  (∀ tidI #j. (RunningI( tidI, $U, $V, sk ) @ #j) ⇒ ¬(#j < #i))  ∥ (∃ tidR2 u2 v2 #i2.   (CommitR( tidR2, u2, v2, sk ) @ #i2) ∧ ¬(#i = #i2))
1: StR2_SIG_SIG( $V, ~ltk, ~yy, prk_3e2m, TH_2, CIPHERTEXT_2, sk,              ~tid, m1, m2) ▶₀ #i
2: !PK_SIG( $U, pk(x) ) ▶₁ #i
3: !PK_SIG( $V, pkV ) ▶₂ #i
4: !KU( aeadEncrypt(<$U,                   sign(<<$U, h(<$cHash0, TH_2, CIPHERTEXT_2, 'emptyStr'>), pk(x)>,                         aeadEncrypt('emptyStr',                                    hkdfExpand(<$cAEAD0,                                                 h(<$cHash0, TH_2, CIPHERTEXT_2, 'emptyStr'>), 'K_3m'                                               >,                                               prk_3e2m),                                    <$U, h(<$cHash0, TH_2, CIPHERTEXT_2, 'emptyStr'>), pk(x)>,                                    $cAEAD0)                       >,                       x)                 >,                 hkdfExpand(<$cAEAD0, h(<$cHash0, TH_2, CIPHERTEXT_2, 'emptyStr'>),                              'K_3ae'>,                            prk_3e2m),                 extAad3Outer, $cAEAD0)) @ #vk.2

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0:  (∀ tidR #j. (ExpRunningR( tidR, $V, expSk ) @ #j) ⇒ ¬(#j < #i))  ∥ (∃ tidI2 u2 v2 #i2.   (ExpCommitI( tidI2, u2, v2, expSk ) @ #i2) ∧ ¬(#i = #i2))
1: StI1_SIG_SIG( $U, ~ltk, $V, ~xx, m1, ~tid ) ▶₀ #i
2: !PK_SIG( $V, pk(x) ) ▶₁ #i
3: !PK_SIG( $U, pkU ) ▶₂ #i
4: splitEqs(0)
5: !KU( ($V⊕      hkdfExpand(<$cAEAD0, h(<$cHash0, m1, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))     )) @ #vk.3
6: !KU( (      hkdfExpand(<$cAEAD0, h(<$cHash0, m1, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<<$V, h(<$cHash0, m1, gy>), pk(x)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0, h(<$cHash0, m1, gy>), 'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V, h(<$cHash0, m1, gy>), pk(x)>, $cAEAD0)           >,           x)     )) @ #vk.4

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 1 (directly):
     (∀ tidI #j. (RunningI( tidI, $U, $V, sk ) @ #j) ⇒ ¬(#j < #i))  ∥
     (∃ tidR2 u2 v2 #i2.
       (CommitR( tidR2, u2, v2, sk ) @ #i2) ∧ ¬(#i = #i2))
  solved goal nr. 1 (directly):
     (∀ tidR #j. (ExpRunningR( tidR, $V, expSk ) @ #j) ⇒ ¬(#j < #i))  ∥
     (∃ tidI2 u2 v2 #i2.
       (ExpCommitI( tidI2, u2, v2, expSk ) @ #i2) ∧ ¬(#i = #i2))
  solved goal nr. 9 (directly):
    CommitR( tidR2.3, u2.4, v2.5, sk ) @ #i2.6
  solved goal nr. 12 (directly):
    ExpCommitI( tidI2.5, u2.6, v2.7, expSk ) @ #i2.8
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: StR2_SIG_SIG( $V, ~ltk, ~yy, prk_3e2m, TH_2, CIPHERTEXT_2, sk,              ~tid, m1, m2) ▶₀ #i
1: !PK_SIG( $U, pk(x) ) ▶₁ #i
2: !PK_SIG( $V, pkV ) ▶₂ #i
3: !KU( aeadEncrypt(<$U,                   sign(<<$U, h(<$cHash0, TH_2, CIPHERTEXT_2, 'emptyStr'>), pk(x)>,                         aeadEncrypt('emptyStr',                                    hkdfExpand(<$cAEAD0,                                                 h(<$cHash0, TH_2, CIPHERTEXT_2, 'emptyStr'>), 'K_3m'                                               >,                                               prk_3e2m),                                    <$U, h(<$cHash0, TH_2, CIPHERTEXT_2, 'emptyStr'>), pk(x)>,                                    $cAEAD0)                       >,                       x)                 >,                 hkdfExpand(<$cAEAD0, h(<$cHash0, TH_2, CIPHERTEXT_2, 'emptyStr'>),                              'K_3ae'>,                            prk_3e2m),                 extAad3Outer, $cAEAD0)) @ #vk.2

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 3 (precomputed):
    StR2_SIG_SIG( $V, ~ltk, ~yy, prk_3e2m, TH_2, CIPHERTEXT_2, sk,
                  ~tid, m1, m2
    ) ▶₀ #i
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0:  (#i < #i2)  ∥ (#i2 < #i)
1: StR2_SIG_SIG( $V, ~ltk, ~yy, prk_3e2m, TH_2, CIPHERTEXT_2, sk,              ~tid, m1, m2) ▶₀ #i
2: !PK_SIG( $U, pk(x) ) ▶₁ #i
3: !PK_SIG( $V, pkV ) ▶₂ #i
4: StR2_SIG_SIG( $V.1, ~ltk.1, ~yy.1, prk_3e2m.1, TH_2.1,              CIPHERTEXT_2.1, sk, ~tid.1, m1.1, m2.1) ▶₀ #i2
5: !PK_SIG( $U.1, pk(x.1) ) ▶₁ #i2
6: !PK_SIG( $V.1, pkV.1 ) ▶₂ #i2
7: !KU( aeadEncrypt(<$U,                   sign(<<$U, h(<$cHash0, TH_2, CIPHERTEXT_2, 'emptyStr'>), pk(x)>,                         aeadEncrypt('emptyStr',                                    hkdfExpand(<$cAEAD0,                                                 h(<$cHash0, TH_2, CIPHERTEXT_2, 'emptyStr'>), 'K_3m'                                               >,                                               prk_3e2m),                                    <$U, h(<$cHash0, TH_2, CIPHERTEXT_2, 'emptyStr'>), pk(x)>,                                    $cAEAD0)                       >,                       x)                 >,                 hkdfExpand(<$cAEAD0, h(<$cHash0, TH_2, CIPHERTEXT_2, 'emptyStr'>),                              'K_3ae'>,                            prk_3e2m),                 extAad3Outer, $cAEAD0)) @ #vk.3
8: !KU( aeadEncrypt(<$U.1,                   sign(<                        <$U.1, h(<$cHash0.1, TH_2.1, CIPHERTEXT_2.1, 'emptyStr'>), pk(x.1)                        >,                         aeadEncrypt('emptyStr',                                    hkdfExpand(<$cAEAD0.1,                                                 h(<$cHash0.1, TH_2.1, CIPHERTEXT_2.1, 'emptyStr'>),                                                 'K_3m'>,                                               prk_3e2m.1),                                    <$U.1, h(<$cHash0.1, TH_2.1, CIPHERTEXT_2.1, 'emptyStr'>),                                      pk(x.1)>,                                    $cAEAD0.1)                       >,                       x.1)                 >,                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1, TH_2.1, CIPHERTEXT_2.1, 'emptyStr'>), 'K_3ae'>,                            prk_3e2m.1),                 extAad3Outer.1, $cAEAD0.1)) @ #vk.4

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 10 (directly): (#i < #i2)  ∥ (#i2 < #i)
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !PK_SIG( $U, pk(x) ) ▶₁ #i
1: !PK_SIG( $V, pkV ) ▶₂ #i
2: !KU( aeadEncrypt(<$U,                   sign(<                        <$U,                          h(<$cHash0.1, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                             <                             ($V⊕                              hkdfExpand(<$cAEAD0,                                           h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                           'K_2e', '1'>,                                         hkdfExtract('emptyStr', sk))                             ),                              (                              hkdfExpand(<$cAEAD0,                                           h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                           'K_2e', '2'>,                                         hkdfExtract('emptyStr', sk))⊕                              sign(<                                    <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                      pk(~ltk)>,                                     aeadEncrypt('emptyStr',                                                hkdfExpand(<$cAEAD0,                                                             h(<$cHash0,                                                                <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy                                                              >),                                                             'K_2m'>,                                                           hkdfExtract('emptyStr', sk)),                                                <$V,                                                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy                                                   >),                                                  pk(~ltk)>,                                                $cAEAD0)                                   >,                                   ~ltk)                             )                            >,                             'emptyStr'>),                          pk(x)>,                         aeadEncrypt('emptyStr',                                    hkdfExpand(<$cAEAD0.1,                                                 h(<$cHash0.1,                                                    h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy                                                     >),                                                    <                                                    ($V⊕                                                     hkdfExpand(<$cAEAD0,                                                                  h(<$cHash0,                                                                     <'SIG', 'SIG', $cSUITE0, gx>,                                                                     'g'^~yy>),                                                                  'K_2e', '1'>,                                                                hkdfExtract('emptyStr', sk))                                                    ),                                                     (                                                     hkdfExpand(<$cAEAD0,                                                                  h(<$cHash0,                                                                     <'SIG', 'SIG', $cSUITE0, gx>,                                                                     'g'^~yy>),                                                                  'K_2e', '2'>,                                                                hkdfExtract('emptyStr', sk))⊕                                                     sign(<                                                           <$V,                                                             h(<$cHash0,                                                                <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy                                                              >),                                                             pk(~ltk)>,                                                            aeadEncrypt('emptyStr',                                                                       hkdfExpand(<$cAEAD0,                                                                                    h(<$cHash0,                                                                                       <'SIG',                                                                                        'SIG',                                                                                        $cSUITE0, gx                                                                                      >,                                                                                       'g'^~yy>),                                                                                    'K_2m'>,                                                                                  hkdfExtract('emptyStr',                                                                                              sk)),                                                                       <$V,                                                                         h(<$cHash0,                                                                            <'SIG', 'SIG', $cSUITE0,                                                                             gx>,                                                                            'g'^~yy>),                                                                         pk(~ltk)>,                                                                       $cAEAD0)                                                          >,                                                          ~ltk)                                                    )                                                   >,                                                    'emptyStr'>),                                                 'K_3m'>,                                               hkdfExtract('emptyStr', sk)),                                    <$U,                                      h(<$cHash0.1,                                         h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                         <                                         ($V⊕                                          hkdfExpand(<$cAEAD0,                                                       h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>,                                                          'g'^~yy>),                                                       'K_2e', '1'>,                                                     hkdfExtract('emptyStr', sk))                                         ),                                          (                                          hkdfExpand(<$cAEAD0,                                                       h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>,                                                          'g'^~yy>),                                                       'K_2e', '2'>,                                                     hkdfExtract('emptyStr', sk))⊕                                          sign(<                                                <$V,                                                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy                                                   >),                                                  pk(~ltk)>,                                                 aeadEncrypt('emptyStr',                                                            hkdfExpand(<$cAEAD0,                                                                         h(<$cHash0,                                                                            <'SIG', 'SIG', $cSUITE0,                                                                             gx>,                                                                            'g'^~yy>),                                                                         'K_2m'>,                                                                       hkdfExtract('emptyStr', sk)),                                                            <$V,                                                              h(<$cHash0,                                                                 <'SIG', 'SIG', $cSUITE0, gx>,                                                                 'g'^~yy>),                                                              pk(~ltk)>,                                                            $cAEAD0)                                               >,                                               ~ltk)                                         )                                        >,                                         'emptyStr'>),                                      pk(x)>,                                    $cAEAD0.1)                       >,                       x)                 >,                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                 <                                 ($V⊕                                  hkdfExpand(<$cAEAD0,                                               h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                               'K_2e', '1'>,                                             hkdfExtract('emptyStr', sk))                                 ),                                  (                                  hkdfExpand(<$cAEAD0,                                               h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                               'K_2e', '2'>,                                             hkdfExtract('emptyStr', sk))⊕                                  sign(<                                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                          pk(~ltk)>,                                         aeadEncrypt('emptyStr',                                                    hkdfExpand(<$cAEAD0,                                                                 h(<$cHash0,                                                                    <'SIG', 'SIG', $cSUITE0, gx>,                                                                    'g'^~yy>),                                                                 'K_2m'>,                                                               hkdfExtract('emptyStr', sk)),                                                    <$V,                                                      h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>,                                                         'g'^~yy>),                                                      pk(~ltk)>,                                                    $cAEAD0)                                       >,                                       ~ltk)                                 )                                >,                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract('emptyStr', sk)),                 extAad3Outer, $cAEAD0.1)) @ #vk.2
3: splitEqs(1)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 4 (precomputed): !PK_SIG( $U, pk(x) ) ▶₁ #i
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: StR2_SIG_SIG( $V, ~ltk, ~yy, prk_3e2m, TH_2, CIPHERTEXT_2, sk,              ~tid, m1, m2) ▶₀ #i
1: !PK_SIG( $U, pk(x) ) ▶₁ #i
2: !PK_SIG( $V, pkV ) ▶₂ #i
3: StR2_SIG_SIG( $V.1, ~ltk.1, ~yy.1, prk_3e2m.1, TH_2.1,              CIPHERTEXT_2.1, sk, ~tid.1, m1.1, m2.1) ▶₀ #i2
4: !PK_SIG( $U.1, pk(x.1) ) ▶₁ #i2
5: !PK_SIG( $V.1, pkV.1 ) ▶₂ #i2
6: !KU( aeadEncrypt(<$U,                   sign(<<$U, h(<$cHash0, TH_2, CIPHERTEXT_2, 'emptyStr'>), pk(x)>,                         aeadEncrypt('emptyStr',                                    hkdfExpand(<$cAEAD0,                                                 h(<$cHash0, TH_2, CIPHERTEXT_2, 'emptyStr'>), 'K_3m'                                               >,                                               prk_3e2m),                                    <$U, h(<$cHash0, TH_2, CIPHERTEXT_2, 'emptyStr'>), pk(x)>,                                    $cAEAD0)                       >,                       x)                 >,                 hkdfExpand(<$cAEAD0, h(<$cHash0, TH_2, CIPHERTEXT_2, 'emptyStr'>),                              'K_3ae'>,                            prk_3e2m),                 extAad3Outer, $cAEAD0)) @ #vk.3
7: !KU( aeadEncrypt(<$U.1,                   sign(<                        <$U.1, h(<$cHash0.1, TH_2.1, CIPHERTEXT_2.1, 'emptyStr'>), pk(x.1)                        >,                         aeadEncrypt('emptyStr',                                    hkdfExpand(<$cAEAD0.1,                                                 h(<$cHash0.1, TH_2.1, CIPHERTEXT_2.1, 'emptyStr'>),                                                 'K_3m'>,                                               prk_3e2m.1),                                    <$U.1, h(<$cHash0.1, TH_2.1, CIPHERTEXT_2.1, 'emptyStr'>),                                      pk(x.1)>,                                    $cAEAD0.1)                       >,                       x.1)                 >,                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1, TH_2.1, CIPHERTEXT_2.1, 'emptyStr'>), 'K_3ae'>,                            prk_3e2m.1),                 extAad3Outer.1, $cAEAD0.1)) @ #vk.4

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 3 (precomputed):
    StR2_SIG_SIG( $V, ~ltk, ~yy, prk_3e2m, TH_2, CIPHERTEXT_2, sk,
                  ~tid, m1, m2
    ) ▶₀ #i
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: StR2_SIG_SIG( $V, ~ltk, ~yy, prk_3e2m, TH_2, CIPHERTEXT_2, sk,              ~tid, m1, m2) ▶₀ #i
1: !PK_SIG( $U, pk(x) ) ▶₁ #i
2: !PK_SIG( $V, pkV ) ▶₂ #i
3: StR2_SIG_SIG( $V.1, ~ltk.1, ~yy.1, prk_3e2m.1, TH_2.1,              CIPHERTEXT_2.1, sk, ~tid.1, m1.1, m2.1) ▶₀ #i2
4: !PK_SIG( $U.1, pk(x.1) ) ▶₁ #i2
5: !PK_SIG( $V.1, pkV.1 ) ▶₂ #i2
6: !KU( aeadEncrypt(<$U,                   sign(<<$U, h(<$cHash0, TH_2, CIPHERTEXT_2, 'emptyStr'>), pk(x)>,                         aeadEncrypt('emptyStr',                                    hkdfExpand(<$cAEAD0,                                                 h(<$cHash0, TH_2, CIPHERTEXT_2, 'emptyStr'>), 'K_3m'                                               >,                                               prk_3e2m),                                    <$U, h(<$cHash0, TH_2, CIPHERTEXT_2, 'emptyStr'>), pk(x)>,                                    $cAEAD0)                       >,                       x)                 >,                 hkdfExpand(<$cAEAD0, h(<$cHash0, TH_2, CIPHERTEXT_2, 'emptyStr'>),                              'K_3ae'>,                            prk_3e2m),                 extAad3Outer, $cAEAD0)) @ #vk.3
7: !KU( aeadEncrypt(<$U.1,                   sign(<                        <$U.1, h(<$cHash0.1, TH_2.1, CIPHERTEXT_2.1, 'emptyStr'>), pk(x.1)                        >,                         aeadEncrypt('emptyStr',                                    hkdfExpand(<$cAEAD0.1,                                                 h(<$cHash0.1, TH_2.1, CIPHERTEXT_2.1, 'emptyStr'>),                                                 'K_3m'>,                                               prk_3e2m.1),                                    <$U.1, h(<$cHash0.1, TH_2.1, CIPHERTEXT_2.1, 'emptyStr'>),                                      pk(x.1)>,                                    $cAEAD0.1)                       >,                       x.1)                 >,                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1, TH_2.1, CIPHERTEXT_2.1, 'emptyStr'>), 'K_3ae'>,                            prk_3e2m.1),                 extAad3Outer.1, $cAEAD0.1)) @ #vk.4

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 3 (precomputed):
    StR2_SIG_SIG( $V, ~ltk, ~yy, prk_3e2m, TH_2, CIPHERTEXT_2, sk,
                  ~tid, m1, m2
    ) ▶₀ #i
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !PK_SIG( $V, pkV ) ▶₂ #i
1: !KU( aeadEncrypt(<$U,                   sign(<                        <$U,                          h(<$cHash0.1, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                             <                             ($V⊕                              hkdfExpand(<$cAEAD0,                                           h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                           'K_2e', '1'>,                                         hkdfExtract('emptyStr', sk))                             ),                              (                              hkdfExpand(<$cAEAD0,                                           h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                           'K_2e', '2'>,                                         hkdfExtract('emptyStr', sk))⊕                              sign(<                                    <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                      pk(~ltk)>,                                     aeadEncrypt('emptyStr',                                                hkdfExpand(<$cAEAD0,                                                             h(<$cHash0,                                                                <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy                                                              >),                                                             'K_2m'>,                                                           hkdfExtract('emptyStr', sk)),                                                <$V,                                                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy                                                   >),                                                  pk(~ltk)>,                                                $cAEAD0)                                   >,                                   ~ltk)                             )                            >,                             'emptyStr'>),                          pk(~ltk.1)>,                         aeadEncrypt('emptyStr',                                    hkdfExpand(<$cAEAD0.1,                                                 h(<$cHash0.1,                                                    h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy                                                     >),                                                    <                                                    ($V⊕                                                     hkdfExpand(<$cAEAD0,                                                                  h(<$cHash0,                                                                     <'SIG', 'SIG', $cSUITE0, gx>,                                                                     'g'^~yy>),                                                                  'K_2e', '1'>,                                                                hkdfExtract('emptyStr', sk))                                                    ),                                                     (                                                     hkdfExpand(<$cAEAD0,                                                                  h(<$cHash0,                                                                     <'SIG', 'SIG', $cSUITE0, gx>,                                                                     'g'^~yy>),                                                                  'K_2e', '2'>,                                                                hkdfExtract('emptyStr', sk))⊕                                                     sign(<                                                           <$V,                                                             h(<$cHash0,                                                                <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy                                                              >),                                                             pk(~ltk)>,                                                            aeadEncrypt('emptyStr',                                                                       hkdfExpand(<$cAEAD0,                                                                                    h(<$cHash0,                                                                                       <'SIG',                                                                                        'SIG',                                                                                        $cSUITE0, gx                                                                                      >,                                                                                       'g'^~yy>),                                                                                    'K_2m'>,                                                                                  hkdfExtract('emptyStr',                                                                                              sk)),                                                                       <$V,                                                                         h(<$cHash0,                                                                            <'SIG', 'SIG', $cSUITE0,                                                                             gx>,                                                                            'g'^~yy>),                                                                         pk(~ltk)>,                                                                       $cAEAD0)                                                          >,                                                          ~ltk)                                                    )                                                   >,                                                    'emptyStr'>),                                                 'K_3m'>,                                               hkdfExtract('emptyStr', sk)),                                    <$U,                                      h(<$cHash0.1,                                         h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                         <                                         ($V⊕                                          hkdfExpand(<$cAEAD0,                                                       h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>,                                                          'g'^~yy>),                                                       'K_2e', '1'>,                                                     hkdfExtract('emptyStr', sk))                                         ),                                          (                                          hkdfExpand(<$cAEAD0,                                                       h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>,                                                          'g'^~yy>),                                                       'K_2e', '2'>,                                                     hkdfExtract('emptyStr', sk))⊕                                          sign(<                                                <$V,                                                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy                                                   >),                                                  pk(~ltk)>,                                                 aeadEncrypt('emptyStr',                                                            hkdfExpand(<$cAEAD0,                                                                         h(<$cHash0,                                                                            <'SIG', 'SIG', $cSUITE0,                                                                             gx>,                                                                            'g'^~yy>),                                                                         'K_2m'>,                                                                       hkdfExtract('emptyStr', sk)),                                                            <$V,                                                              h(<$cHash0,                                                                 <'SIG', 'SIG', $cSUITE0, gx>,                                                                 'g'^~yy>),                                                              pk(~ltk)>,                                                            $cAEAD0)                                               >,                                               ~ltk)                                         )                                        >,                                         'emptyStr'>),                                      pk(~ltk.1)>,                                    $cAEAD0.1)                       >,                       ~ltk.1)                 >,                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                 <                                 ($V⊕                                  hkdfExpand(<$cAEAD0,                                               h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                               'K_2e', '1'>,                                             hkdfExtract('emptyStr', sk))                                 ),                                  (                                  hkdfExpand(<$cAEAD0,                                               h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                               'K_2e', '2'>,                                             hkdfExtract('emptyStr', sk))⊕                                  sign(<                                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                          pk(~ltk)>,                                         aeadEncrypt('emptyStr',                                                    hkdfExpand(<$cAEAD0,                                                                 h(<$cHash0,                                                                    <'SIG', 'SIG', $cSUITE0, gx>,                                                                    'g'^~yy>),                                                                 'K_2m'>,                                                               hkdfExtract('emptyStr', sk)),                                                    <$V,                                                      h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>,                                                         'g'^~yy>),                                                      pk(~ltk)>,                                                    $cAEAD0)                                       >,                                       ~ltk)                                 )                                >,                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract('emptyStr', sk)),                 extAad3Outer, $cAEAD0.1)) @ #vk.2
2: splitEqs(1)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 5 (precomputed): !PK_SIG( $V, pkV ) ▶₂ #i
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !PK_SIG( $U, pk(x) ) ▶₁ #i
1: !PK_SIG( $V, pkV ) ▶₂ #i
2: StR2_SIG_SIG( $V.1, ~ltk.1, ~yy.1, prk_3e2m, TH_2, CIPHERTEXT_2,              sk, ~tid.1, m1, m2) ▶₀ #i2
3: !PK_SIG( $U.1, pk(x.1) ) ▶₁ #i2
4: !PK_SIG( $V.1, pkV.1 ) ▶₂ #i2
5: !KU( aeadEncrypt(<$U,                   sign(<                        <$U,                          h(<$cHash0.1, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                             <                             ($V⊕                              hkdfExpand(<$cAEAD0,                                           h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                           'K_2e', '1'>,                                         hkdfExtract('emptyStr', sk))                             ),                              (                              hkdfExpand(<$cAEAD0,                                           h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                           'K_2e', '2'>,                                         hkdfExtract('emptyStr', sk))⊕                              sign(<                                    <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                      pk(~ltk)>,                                     aeadEncrypt('emptyStr',                                                hkdfExpand(<$cAEAD0,                                                             h(<$cHash0,                                                                <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy                                                              >),                                                             'K_2m'>,                                                           hkdfExtract('emptyStr', sk)),                                                <$V,                                                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy                                                   >),                                                  pk(~ltk)>,                                                $cAEAD0)                                   >,                                   ~ltk)                             )                            >,                             'emptyStr'>),                          pk(x)>,                         aeadEncrypt('emptyStr',                                    hkdfExpand(<$cAEAD0.1,                                                 h(<$cHash0.1,                                                    h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy                                                     >),                                                    <                                                    ($V⊕                                                     hkdfExpand(<$cAEAD0,                                                                  h(<$cHash0,                                                                     <'SIG', 'SIG', $cSUITE0, gx>,                                                                     'g'^~yy>),                                                                  'K_2e', '1'>,                                                                hkdfExtract('emptyStr', sk))                                                    ),                                                     (                                                     hkdfExpand(<$cAEAD0,                                                                  h(<$cHash0,                                                                     <'SIG', 'SIG', $cSUITE0, gx>,                                                                     'g'^~yy>),                                                                  'K_2e', '2'>,                                                                hkdfExtract('emptyStr', sk))⊕                                                     sign(<                                                           <$V,                                                             h(<$cHash0,                                                                <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy                                                              >),                                                             pk(~ltk)>,                                                            aeadEncrypt('emptyStr',                                                                       hkdfExpand(<$cAEAD0,                                                                                    h(<$cHash0,                                                                                       <'SIG',                                                                                        'SIG',                                                                                        $cSUITE0, gx                                                                                      >,                                                                                       'g'^~yy>),                                                                                    'K_2m'>,                                                                                  hkdfExtract('emptyStr',                                                                                              sk)),                                                                       <$V,                                                                         h(<$cHash0,                                                                            <'SIG', 'SIG', $cSUITE0,                                                                             gx>,                                                                            'g'^~yy>),                                                                         pk(~ltk)>,                                                                       $cAEAD0)                                                          >,                                                          ~ltk)                                                    )                                                   >,                                                    'emptyStr'>),                                                 'K_3m'>,                                               hkdfExtract('emptyStr', sk)),                                    <$U,                                      h(<$cHash0.1,                                         h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                         <                                         ($V⊕                                          hkdfExpand(<$cAEAD0,                                                       h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>,                                                          'g'^~yy>),                                                       'K_2e', '1'>,                                                     hkdfExtract('emptyStr', sk))                                         ),                                          (                                          hkdfExpand(<$cAEAD0,                                                       h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>,                                                          'g'^~yy>),                                                       'K_2e', '2'>,                                                     hkdfExtract('emptyStr', sk))⊕                                          sign(<                                                <$V,                                                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy                                                   >),                                                  pk(~ltk)>,                                                 aeadEncrypt('emptyStr',                                                            hkdfExpand(<$cAEAD0,                                                                         h(<$cHash0,                                                                            <'SIG', 'SIG', $cSUITE0,                                                                             gx>,                                                                            'g'^~yy>),                                                                         'K_2m'>,                                                                       hkdfExtract('emptyStr', sk)),                                                            <$V,                                                              h(<$cHash0,                                                                 <'SIG', 'SIG', $cSUITE0, gx>,                                                                 'g'^~yy>),                                                              pk(~ltk)>,                                                            $cAEAD0)                                               >,                                               ~ltk)                                         )                                        >,                                         'emptyStr'>),                                      pk(x)>,                                    $cAEAD0.1)                       >,                       x)                 >,                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                 <                                 ($V⊕                                  hkdfExpand(<$cAEAD0,                                               h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                               'K_2e', '1'>,                                             hkdfExtract('emptyStr', sk))                                 ),                                  (                                  hkdfExpand(<$cAEAD0,                                               h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                               'K_2e', '2'>,                                             hkdfExtract('emptyStr', sk))⊕                                  sign(<                                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                          pk(~ltk)>,                                         aeadEncrypt('emptyStr',                                                    hkdfExpand(<$cAEAD0,                                                                 h(<$cHash0,                                                                    <'SIG', 'SIG', $cSUITE0, gx>,                                                                    'g'^~yy>),                                                                 'K_2m'>,                                                               hkdfExtract('emptyStr', sk)),                                                    <$V,                                                      h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>,                                                         'g'^~yy>),                                                      pk(~ltk)>,                                                    $cAEAD0)                                       >,                                       ~ltk)                                 )                                >,                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract('emptyStr', sk)),                 extAad3Outer, $cAEAD0.1)) @ #vk.3
6: splitEqs(2)
7: !KU( aeadEncrypt(<$U.1,                   sign(<                        <$U.1, h(<$cHash0.2, TH_2, CIPHERTEXT_2, 'emptyStr'>), pk(x.1)>,                         aeadEncrypt('emptyStr',                                    hkdfExpand(<$cAEAD0.2,                                                 h(<$cHash0.2, TH_2, CIPHERTEXT_2, 'emptyStr'>),                                                 'K_3m'>,                                               prk_3e2m),                                    <$U.1, h(<$cHash0.2, TH_2, CIPHERTEXT_2, 'emptyStr'>), pk(x.1)>,                                    $cAEAD0.2)                       >,                       x.1)                 >,                 hkdfExpand(<$cAEAD0.2,                              h(<$cHash0.2, TH_2, CIPHERTEXT_2, 'emptyStr'>), 'K_3ae'>,                            prk_3e2m),                 extAad3Outer.1, $cAEAD0.2)) @ #vk.4

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 4 (precomputed): !PK_SIG( $U, pk(x) ) ▶₁ #i
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !PK_SIG( $U, pk(x) ) ▶₁ #i
1: !PK_SIG( $V, pkV ) ▶₂ #i
2: StR2_SIG_SIG( $V.1, ~ltk.1, ~yy.1, prk_3e2m, TH_2, CIPHERTEXT_2,              sk, ~tid.1, m1, m2) ▶₀ #i2
3: !PK_SIG( $U.1, pk(x.1) ) ▶₁ #i2
4: !PK_SIG( $V.1, pkV.1 ) ▶₂ #i2
5: !KU( aeadEncrypt(<$U,                   sign(<                        <$U,                          h(<$cHash0.1, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                             <                             ($V⊕                              hkdfExpand(<$cAEAD0,                                           h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                           'K_2e', '1'>,                                         hkdfExtract('emptyStr', sk))                             ),                              (                              hkdfExpand(<$cAEAD0,                                           h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                           'K_2e', '2'>,                                         hkdfExtract('emptyStr', sk))⊕                              sign(<                                    <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                      pk(~ltk)>,                                     aeadEncrypt('emptyStr',                                                hkdfExpand(<$cAEAD0,                                                             h(<$cHash0,                                                                <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy                                                              >),                                                             'K_2m'>,                                                           hkdfExtract('emptyStr', sk)),                                                <$V,                                                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy                                                   >),                                                  pk(~ltk)>,                                                $cAEAD0)                                   >,                                   ~ltk)                             )                            >,                             'emptyStr'>),                          pk(x)>,                         aeadEncrypt('emptyStr',                                    hkdfExpand(<$cAEAD0.1,                                                 h(<$cHash0.1,                                                    h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy                                                     >),                                                    <                                                    ($V⊕                                                     hkdfExpand(<$cAEAD0,                                                                  h(<$cHash0,                                                                     <'SIG', 'SIG', $cSUITE0, gx>,                                                                     'g'^~yy>),                                                                  'K_2e', '1'>,                                                                hkdfExtract('emptyStr', sk))                                                    ),                                                     (                                                     hkdfExpand(<$cAEAD0,                                                                  h(<$cHash0,                                                                     <'SIG', 'SIG', $cSUITE0, gx>,                                                                     'g'^~yy>),                                                                  'K_2e', '2'>,                                                                hkdfExtract('emptyStr', sk))⊕                                                     sign(<                                                           <$V,                                                             h(<$cHash0,                                                                <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy                                                              >),                                                             pk(~ltk)>,                                                            aeadEncrypt('emptyStr',                                                                       hkdfExpand(<$cAEAD0,                                                                                    h(<$cHash0,                                                                                       <'SIG',                                                                                        'SIG',                                                                                        $cSUITE0, gx                                                                                      >,                                                                                       'g'^~yy>),                                                                                    'K_2m'>,                                                                                  hkdfExtract('emptyStr',                                                                                              sk)),                                                                       <$V,                                                                         h(<$cHash0,                                                                            <'SIG', 'SIG', $cSUITE0,                                                                             gx>,                                                                            'g'^~yy>),                                                                         pk(~ltk)>,                                                                       $cAEAD0)                                                          >,                                                          ~ltk)                                                    )                                                   >,                                                    'emptyStr'>),                                                 'K_3m'>,                                               hkdfExtract('emptyStr', sk)),                                    <$U,                                      h(<$cHash0.1,                                         h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                         <                                         ($V⊕                                          hkdfExpand(<$cAEAD0,                                                       h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>,                                                          'g'^~yy>),                                                       'K_2e', '1'>,                                                     hkdfExtract('emptyStr', sk))                                         ),                                          (                                          hkdfExpand(<$cAEAD0,                                                       h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>,                                                          'g'^~yy>),                                                       'K_2e', '2'>,                                                     hkdfExtract('emptyStr', sk))⊕                                          sign(<                                                <$V,                                                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy                                                   >),                                                  pk(~ltk)>,                                                 aeadEncrypt('emptyStr',                                                            hkdfExpand(<$cAEAD0,                                                                         h(<$cHash0,                                                                            <'SIG', 'SIG', $cSUITE0,                                                                             gx>,                                                                            'g'^~yy>),                                                                         'K_2m'>,                                                                       hkdfExtract('emptyStr', sk)),                                                            <$V,                                                              h(<$cHash0,                                                                 <'SIG', 'SIG', $cSUITE0, gx>,                                                                 'g'^~yy>),                                                              pk(~ltk)>,                                                            $cAEAD0)                                               >,                                               ~ltk)                                         )                                        >,                                         'emptyStr'>),                                      pk(x)>,                                    $cAEAD0.1)                       >,                       x)                 >,                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                 <                                 ($V⊕                                  hkdfExpand(<$cAEAD0,                                               h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                               'K_2e', '1'>,                                             hkdfExtract('emptyStr', sk))                                 ),                                  (                                  hkdfExpand(<$cAEAD0,                                               h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                               'K_2e', '2'>,                                             hkdfExtract('emptyStr', sk))⊕                                  sign(<                                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                          pk(~ltk)>,                                         aeadEncrypt('emptyStr',                                                    hkdfExpand(<$cAEAD0,                                                                 h(<$cHash0,                                                                    <'SIG', 'SIG', $cSUITE0, gx>,                                                                    'g'^~yy>),                                                                 'K_2m'>,                                                               hkdfExtract('emptyStr', sk)),                                                    <$V,                                                      h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>,                                                         'g'^~yy>),                                                      pk(~ltk)>,                                                    $cAEAD0)                                       >,                                       ~ltk)                                 )                                >,                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract('emptyStr', sk)),                 extAad3Outer, $cAEAD0.1)) @ #vk.3
6: splitEqs(2)
7: !KU( aeadEncrypt(<$U.1,                   sign(<                        <$U.1, h(<$cHash0.2, TH_2, CIPHERTEXT_2, 'emptyStr'>), pk(x.1)>,                         aeadEncrypt('emptyStr',                                    hkdfExpand(<$cAEAD0.2,                                                 h(<$cHash0.2, TH_2, CIPHERTEXT_2, 'emptyStr'>),                                                 'K_3m'>,                                               prk_3e2m),                                    <$U.1, h(<$cHash0.2, TH_2, CIPHERTEXT_2, 'emptyStr'>), pk(x.1)>,                                    $cAEAD0.2)                       >,                       x.1)                 >,                 hkdfExpand(<$cAEAD0.2,                              h(<$cHash0.2, TH_2, CIPHERTEXT_2, 'emptyStr'>), 'K_3ae'>,                            prk_3e2m),                 extAad3Outer.1, $cAEAD0.2)) @ #vk.4

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 4 (precomputed): !PK_SIG( $U, pk(x) ) ▶₁ #i
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( aeadEncrypt(<$U,                   sign(<                        <$U,                          h(<$cHash0.1, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                             <                             ($V⊕                              hkdfExpand(<$cAEAD0,                                           h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                           'K_2e', '1'>,                                         hkdfExtract('emptyStr', sk))                             ),                              (                              hkdfExpand(<$cAEAD0,                                           h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                           'K_2e', '2'>,                                         hkdfExtract('emptyStr', sk))⊕                              sign(<                                    <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                      pk(~ltk)>,                                     aeadEncrypt('emptyStr',                                                hkdfExpand(<$cAEAD0,                                                             h(<$cHash0,                                                                <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy                                                              >),                                                             'K_2m'>,                                                           hkdfExtract('emptyStr', sk)),                                                <$V,                                                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy                                                   >),                                                  pk(~ltk)>,                                                $cAEAD0)                                   >,                                   ~ltk)                             )                            >,                             'emptyStr'>),                          pk(~ltk.1)>,                         aeadEncrypt('emptyStr',                                    hkdfExpand(<$cAEAD0.1,                                                 h(<$cHash0.1,                                                    h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy                                                     >),                                                    <                                                    ($V⊕                                                     hkdfExpand(<$cAEAD0,                                                                  h(<$cHash0,                                                                     <'SIG', 'SIG', $cSUITE0, gx>,                                                                     'g'^~yy>),                                                                  'K_2e', '1'>,                                                                hkdfExtract('emptyStr', sk))                                                    ),                                                     (                                                     hkdfExpand(<$cAEAD0,                                                                  h(<$cHash0,                                                                     <'SIG', 'SIG', $cSUITE0, gx>,                                                                     'g'^~yy>),                                                                  'K_2e', '2'>,                                                                hkdfExtract('emptyStr', sk))⊕                                                     sign(<                                                           <$V,                                                             h(<$cHash0,                                                                <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy                                                              >),                                                             pk(~ltk)>,                                                            aeadEncrypt('emptyStr',                                                                       hkdfExpand(<$cAEAD0,                                                                                    h(<$cHash0,                                                                                       <'SIG',                                                                                        'SIG',                                                                                        $cSUITE0, gx                                                                                      >,                                                                                       'g'^~yy>),                                                                                    'K_2m'>,                                                                                  hkdfExtract('emptyStr',                                                                                              sk)),                                                                       <$V,                                                                         h(<$cHash0,                                                                            <'SIG', 'SIG', $cSUITE0,                                                                             gx>,                                                                            'g'^~yy>),                                                                         pk(~ltk)>,                                                                       $cAEAD0)                                                          >,                                                          ~ltk)                                                    )                                                   >,                                                    'emptyStr'>),                                                 'K_3m'>,                                               hkdfExtract('emptyStr', sk)),                                    <$U,                                      h(<$cHash0.1,                                         h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                         <                                         ($V⊕                                          hkdfExpand(<$cAEAD0,                                                       h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>,                                                          'g'^~yy>),                                                       'K_2e', '1'>,                                                     hkdfExtract('emptyStr', sk))                                         ),                                          (                                          hkdfExpand(<$cAEAD0,                                                       h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>,                                                          'g'^~yy>),                                                       'K_2e', '2'>,                                                     hkdfExtract('emptyStr', sk))⊕                                          sign(<                                                <$V,                                                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy                                                   >),                                                  pk(~ltk)>,                                                 aeadEncrypt('emptyStr',                                                            hkdfExpand(<$cAEAD0,                                                                         h(<$cHash0,                                                                            <'SIG', 'SIG', $cSUITE0,                                                                             gx>,                                                                            'g'^~yy>),                                                                         'K_2m'>,                                                                       hkdfExtract('emptyStr', sk)),                                                            <$V,                                                              h(<$cHash0,                                                                 <'SIG', 'SIG', $cSUITE0, gx>,                                                                 'g'^~yy>),                                                              pk(~ltk)>,                                                            $cAEAD0)                                               >,                                               ~ltk)                                         )                                        >,                                         'emptyStr'>),                                      pk(~ltk.1)>,                                    $cAEAD0.1)                       >,                       ~ltk.1)                 >,                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                 <                                 ($V⊕                                  hkdfExpand(<$cAEAD0,                                               h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                               'K_2e', '1'>,                                             hkdfExtract('emptyStr', sk))                                 ),                                  (                                  hkdfExpand(<$cAEAD0,                                               h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                               'K_2e', '2'>,                                             hkdfExtract('emptyStr', sk))⊕                                  sign(<                                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                          pk(~ltk)>,                                         aeadEncrypt('emptyStr',                                                    hkdfExpand(<$cAEAD0,                                                                 h(<$cHash0,                                                                    <'SIG', 'SIG', $cSUITE0, gx>,                                                                    'g'^~yy>),                                                                 'K_2m'>,                                                               hkdfExtract('emptyStr', sk)),                                                    <$V,                                                      h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>,                                                         'g'^~yy>),                                                      pk(~ltk)>,                                                    $cAEAD0)                                       >,                                       ~ltk)                                 )                                >,                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract('emptyStr', sk)),                 extAad3Outer, $cAEAD0.1)) @ #vk.2
1: splitEqs(1)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 8 (precomputed):
    !KU( aeadEncrypt(<$U, 
                      sign(<
                            <$U, 
                             h(<$cHash0.1, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 
                                <
                                 ($V⊕
                                  hkdfExpand(<$cAEAD0, 
                                              h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 
                                              'K_2e', '1'>,
                                             hkdfExtract('emptyStr', sk))
                                 ), 
                                 (
                                  hkdfExpand(<$cAEAD0, 
                                              h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 
                                              'K_2e', '2'>,
                                             hkdfExtract('emptyStr', sk))⊕
                                  sign(<
                                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 
                                         pk(~ltk)>, 
                                        aeadEncrypt('emptyStr',
                                                    hkdfExpand(<$cAEAD0, 
                                                                h(<$cHash0, 
                                                                   <'SIG', 'SIG', $cSUITE0, gx>, 
                                                                   'g'^~yy>), 
                                                                'K_2m'>,
                                                               hkdfExtract('emptyStr', sk)),
                                                    <$V, 
                                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 
                                                        'g'^~yy>), 
                                                     pk(~ltk)>,
                                                    $cAEAD0)
                                       >,
                                       ~ltk)
                                 )
                                >, 
                                'emptyStr'>), 
                             pk(~ltk.1)>, 
                            aeadEncrypt('emptyStr',
                                        hkdfExpand(<$cAEAD0.1, 
                                                    h(<$cHash0.1, 
                                                       h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 
                                                          'g'^~yy>), 
                                                       <
                                                        ($V⊕
                                                         hkdfExpand(<$cAEAD0, 
                                                                     h(<$cHash0, 
                                                                        <'SIG', 'SIG', $cSUITE0, gx
                                                                        >, 
                                                                        'g'^~yy>), 
                                                                     'K_2e', '1'>,
                                                                    hkdfExtract('emptyStr', sk))
                                                        ), 
                                                        (
                                                         hkdfExpand(<$cAEAD0, 
                                                                     h(<$cHash0, 
                                                                        <'SIG', 'SIG', $cSUITE0, gx
                                                                        >, 
                                                                        'g'^~yy>), 
                                                                     'K_2e', '2'>,
                                                                    hkdfExtract('emptyStr', sk))⊕
                                                         sign(<
                                                               <$V, 
                                                                h(<$cHash0, 
                                                                   <'SIG', 'SIG', $cSUITE0, gx>, 
                                                                   'g'^~yy>), 
                                                                pk(~ltk)>, 
                                                               aeadEncrypt('emptyStr',
                                                                           hkdfExpand(<$cAEAD0, 
                                                                                       h(<$cHash0, 
                                                                                          <'SIG', 
                                                                                           'SIG', 
                                                                                           $cSUITE0, 
                                                                                           gx>, 
                                                                                          'g'^~yy
                                                                                         >), 
                                                                                       'K_2m'>,
                                                                                      hkdfExtract('emptyStr',
                                                                                                  sk)),
                                                                           <$V, 
                                                                            h(<$cHash0, 
                                                                               <'SIG', 'SIG', 
                                                                                $cSUITE0, gx>, 
                                                                               'g'^~yy>), 
                                                                            pk(~ltk)>,
                                                                           $cAEAD0)
                                                              >,
                                                              ~ltk)
                                                        )
                                                       >, 
                                                       'emptyStr'>), 
                                                    'K_3m'>,
                                                   hkdfExtract('emptyStr', sk)),
                                        <$U, 
                                         h(<$cHash0.1, 
                                            h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 
                                            <
                                             ($V⊕
                                              hkdfExpand(<$cAEAD0, 
                                                          h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 
                                                             'g'^~yy>), 
                                                          'K_2e', '1'>,
                                                         hkdfExtract('emptyStr', sk))
                                             ), 
                                             (
                                              hkdfExpand(<$cAEAD0, 
                                                          h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 
                                                             'g'^~yy>), 
                                                          'K_2e', '2'>,
                                                         hkdfExtract('emptyStr', sk))⊕
                                              sign(<
                                                    <$V, 
                                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 
                                                        'g'^~yy>), 
                                                     pk(~ltk)>, 
                                                    aeadEncrypt('emptyStr',
                                                                hkdfExpand(<$cAEAD0, 
                                                                            h(<$cHash0, 
                                                                               <'SIG', 'SIG', 
                                                                                $cSUITE0, gx>, 
                                                                               'g'^~yy>), 
                                                                            'K_2m'>,
                                                                           hkdfExtract('emptyStr',
                                                                                       sk)),
                                                                <$V, 
                                                                 h(<$cHash0, 
                                                                    <'SIG', 'SIG', $cSUITE0, gx>, 
                                                                    'g'^~yy>), 
                                                                 pk(~ltk)>,
                                                                $cAEAD0)
                                                   >,
                                                   ~ltk)
                                             )
                                            >, 
                                            'emptyStr'>), 
                                         pk(~ltk.1)>,
                                        $cAEAD0.1)
                           >,
                           ~ltk.1)
                     >,
                     hkdfExpand(<$cAEAD0.1, 
                                 h(<$cHash0.1, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 
                                    <
                                     ($V⊕
                                      hkdfExpand(<$cAEAD0, 
                                                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy
                                                    >), 
                                                  'K_2e', '1'>,
                                                 hkdfExtract('emptyStr', sk))
                                     ), 
                                     (
                                      hkdfExpand(<$cAEAD0, 
                                                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy
                                                    >), 
                                                  'K_2e', '2'>,
                                                 hkdfExtract('emptyStr', sk))⊕
                                      sign(<
                                            <$V, 
                                             h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 
                                             pk(~ltk)>, 
                                            aeadEncrypt('emptyStr',
                                                        hkdfExpand(<$cAEAD0, 
                                                                    h(<$cHash0, 
                                                                       <'SIG', 'SIG', $cSUITE0, gx
                                                                       >, 
                                                                       'g'^~yy>), 
                                                                    'K_2m'>,
                                                                   hkdfExtract('emptyStr', sk)),
                                                        <$V, 
                                                         h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 
                                                            'g'^~yy>), 
                                                         pk(~ltk)>,
                                                        $cAEAD0)
                                           >,
                                           ~ltk)
                                     )
                                    >, 
                                    'emptyStr'>), 
                                 'K_3ae'>,
                                hkdfExtract('emptyStr', sk)),
                     extAad3Outer, $cAEAD0.1)
    ) @ #vk.2
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: StI1_SIG_SIG( $U, ~ltk, $V, ~xx, m1, ~tid ) ▶₀ #i
1: !PK_SIG( $V, pk(x) ) ▶₁ #i
2: !PK_SIG( $U, pkU ) ▶₂ #i
3: splitEqs(0)
4: !KU( ($V⊕      hkdfExpand(<$cAEAD0, h(<$cHash0, m1, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))     )) @ #vk.3
5: !KU( (      hkdfExpand(<$cAEAD0, h(<$cHash0, m1, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<<$V, h(<$cHash0, m1, gy>), pk(x)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0, h(<$cHash0, m1, gy>), 'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V, h(<$cHash0, m1, gy>), pk(x)>, $cAEAD0)           >,           x)     )) @ #vk.4

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 3 (precomputed):
    StI1_SIG_SIG( $U, ~ltk, $V, ~xx, m1, ~tid ) ▶₀ #i
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0:  (#i < #i2)  ∥ (#i2 < #i)
1: StI1_SIG_SIG( $U, ~ltk, $V, ~xx, m1, ~tid ) ▶₀ #i
2: !PK_SIG( $V, pk(x) ) ▶₁ #i
3: !PK_SIG( $U, pkU ) ▶₂ #i
4: StI1_SIG_SIG( $U.1, ~ltk.1, $V.1, ~xx.1, m1.1, ~tid.1 ) ▶₀ #i2
5: !PK_SIG( $V.1, pk(x.1) ) ▶₁ #i2
6: !PK_SIG( $U.1, pkU.1 ) ▶₂ #i2
7: splitEqs(0)
8: splitEqs(1)
9: !KU( ($V⊕      hkdfExpand(<$cAEAD0, h(<$cHash0, m1, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))     )) @ #vk.3
10: !KU( (      hkdfExpand(<$cAEAD0, h(<$cHash0, m1, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<<$V, h(<$cHash0, m1, gy>), pk(x)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0, h(<$cHash0, m1, gy>), 'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V, h(<$cHash0, m1, gy>), pk(x)>, $cAEAD0)           >,           x)     )) @ #vk.4
11: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1.1, gy.1>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))     )) @ #vk.8
12: !KU( (      hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1.1, gy.1>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<<$V.1, h(<$cHash0.1, m1.1, gy.1>), pk(x.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1.1, gy.1>), 'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V.1, h(<$cHash0.1, m1.1, gy.1>), pk(x.1)>, $cAEAD0.1)           >,           x.1)     )) @ #vk.9

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 13 (directly): (#i < #i2)  ∥ (#i2 < #i)
  simplified formula:
      "((#vr.15 = #i) ∨ (#i < #vr.15))"
    to
      "⊥"
  solved goal nr. 32 (simplified): (#vr.15 = #i)  ∥ (#i < #vr.15)
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !PK_SIG( $V, pk(x) ) ▶₁ #i
1: !PK_SIG( $U, pkU ) ▶₂ #i
2: !KU( ($V⊕      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))     )) @ #vk.3
3: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), pk(x)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), pk(x)>,                        $cAEAD0)           >,           x)     )) @ #vk.4
4: splitEqs(0)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 4 (precomputed): !PK_SIG( $V, pk(x) ) ▶₁ #i
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: StI1_SIG_SIG( $U, ~ltk, $V, ~xx, m1, ~tid ) ▶₀ #i
1: !PK_SIG( $V, pk(x) ) ▶₁ #i
2: !PK_SIG( $U, pkU ) ▶₂ #i
3: StI1_SIG_SIG( $U.1, ~ltk.1, $V.1, ~xx.1, m1.1, ~tid.1 ) ▶₀ #i2
4: !PK_SIG( $V.1, pk(x.1) ) ▶₁ #i2
5: !PK_SIG( $U.1, pkU.1 ) ▶₂ #i2
6: splitEqs(0)
7: splitEqs(1)
8: !KU( ($V⊕      hkdfExpand(<$cAEAD0, h(<$cHash0, m1, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))     )) @ #vk.3
9: !KU( (      hkdfExpand(<$cAEAD0, h(<$cHash0, m1, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<<$V, h(<$cHash0, m1, gy>), pk(x)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0, h(<$cHash0, m1, gy>), 'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V, h(<$cHash0, m1, gy>), pk(x)>, $cAEAD0)           >,           x)     )) @ #vk.4
10: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1.1, gy.1>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))     )) @ #vk.8
11: !KU( (      hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1.1, gy.1>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<<$V.1, h(<$cHash0.1, m1.1, gy.1>), pk(x.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1.1, gy.1>), 'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V.1, h(<$cHash0.1, m1.1, gy.1>), pk(x.1)>, $cAEAD0.1)           >,           x.1)     )) @ #vk.9

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 3 (precomputed):
    StI1_SIG_SIG( $U, ~ltk, $V, ~xx, m1, ~tid ) ▶₀ #i
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: StI1_SIG_SIG( $U, ~ltk, $V, ~xx, m1, ~tid ) ▶₀ #i
1: !PK_SIG( $V, pk(x) ) ▶₁ #i
2: !PK_SIG( $U, pkU ) ▶₂ #i
3: StI1_SIG_SIG( $U.1, ~ltk.1, $V.1, ~xx.1, m1.1, ~tid.1 ) ▶₀ #i2
4: !PK_SIG( $V.1, pk(x.1) ) ▶₁ #i2
5: !PK_SIG( $U.1, pkU.1 ) ▶₂ #i2
6: splitEqs(0)
7: splitEqs(1)
8: !KU( ($V⊕      hkdfExpand(<$cAEAD0, h(<$cHash0, m1, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))     )) @ #vk.3
9: !KU( (      hkdfExpand(<$cAEAD0, h(<$cHash0, m1, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<<$V, h(<$cHash0, m1, gy>), pk(x)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0, h(<$cHash0, m1, gy>), 'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V, h(<$cHash0, m1, gy>), pk(x)>, $cAEAD0)           >,           x)     )) @ #vk.4
10: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1.1, gy.1>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))     )) @ #vk.8
11: !KU( (      hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1.1, gy.1>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<<$V.1, h(<$cHash0.1, m1.1, gy.1>), pk(x.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1.1, gy.1>), 'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V.1, h(<$cHash0.1, m1.1, gy.1>), pk(x.1)>, $cAEAD0.1)           >,           x.1)     )) @ #vk.9

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 3 (precomputed):
    StI1_SIG_SIG( $U, ~ltk, $V, ~xx, m1, ~tid ) ▶₀ #i
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( sign(<           <$U,             h(<$cHash0.1, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                <                ($V⊕                 hkdfExpand(<$cAEAD0,                              h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 'K_2e', '1'>,                            hkdfExtract('emptyStr', sk))                ),                 (                 hkdfExpand(<$cAEAD0,                              h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 'K_2e', '2'>,                            hkdfExtract('emptyStr', sk))⊕                 sign(<                       <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>), pk(~ltk)                       >,                        aeadEncrypt('emptyStr',                                   hkdfExpand(<$cAEAD0,                                                h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                                'K_2m'>,                                              hkdfExtract('emptyStr', sk)),                                   <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                     pk(~ltk)>,                                   $cAEAD0)                      >,                      ~ltk)                )               >,                'emptyStr'>),             pk(~ltk.1)>,            aeadEncrypt('emptyStr',                       hkdfExpand(<$cAEAD0.1,                                    h(<$cHash0.1,                                       h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                       <                                       ($V⊕                                        hkdfExpand(<$cAEAD0,                                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>,                                                        'g'^~yy>),                                                     'K_2e', '1'>,                                                   hkdfExtract('emptyStr', sk))                                       ),                                        (                                        hkdfExpand(<$cAEAD0,                                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>,                                                        'g'^~yy>),                                                     'K_2e', '2'>,                                                   hkdfExtract('emptyStr', sk))⊕                                        sign(<                                              <$V,                                                h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                                pk(~ltk)>,                                               aeadEncrypt('emptyStr',                                                          hkdfExpand(<$cAEAD0,                                                                       h(<$cHash0,                                                                          <'SIG', 'SIG', $cSUITE0, gx                                                                         >,                                                                          'g'^~yy>),                                                                       'K_2m'>,                                                                     hkdfExtract('emptyStr', sk)),                                                          <$V,                                                            h(<$cHash0,                                                               <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy                                                             >),                                                            pk(~ltk)>,                                                          $cAEAD0)                                             >,                                             ~ltk)                                       )                                      >,                                       'emptyStr'>),                                    'K_3m'>,                                  hkdfExtract('emptyStr', sk)),                       <$U,                         h(<$cHash0.1, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                            <                            ($V⊕                             hkdfExpand(<$cAEAD0,                                          h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                          'K_2e', '1'>,                                        hkdfExtract('emptyStr', sk))                            ),                             (                             hkdfExpand(<$cAEAD0,                                          h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                          'K_2e', '2'>,                                        hkdfExtract('emptyStr', sk))⊕                             sign(<                                   <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                     pk(~ltk)>,                                    aeadEncrypt('emptyStr',                                               hkdfExpand(<$cAEAD0,                                                            h(<$cHash0,                                                               <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy                                                             >),                                                            'K_2m'>,                                                          hkdfExtract('emptyStr', sk)),                                               <$V,                                                 h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy                                                  >),                                                 pk(~ltk)>,                                               $cAEAD0)                                  >,                                  ~ltk)                            )                           >,                            'emptyStr'>),                         pk(~ltk.1)>,                       $cAEAD0.1)          >,          ~ltk.1)) @ #vk.14
1: !KU( hkdfExpand(<$cAEAD0.1,                  h(<$cHash0.1, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                     <                     ($V⊕                      hkdfExpand(<$cAEAD0,                                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 'K_2e', '1'>,                                 hkdfExtract('emptyStr', sk))                     ),                      (                      hkdfExpand(<$cAEAD0,                                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 'K_2e', '2'>,                                 hkdfExtract('emptyStr', sk))⊕                      sign(<                            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>), pk(~ltk)                            >,                             aeadEncrypt('emptyStr',                                        hkdfExpand(<$cAEAD0,                                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>,                                                        'g'^~yy>),                                                     'K_2m'>,                                                   hkdfExtract('emptyStr', sk)),                                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                          pk(~ltk)>,                                        $cAEAD0)                           >,                           ~ltk)                     )                    >,                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract('emptyStr', sk))) @ #vk.10
2: splitEqs(1)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 27 (precomputed):
    !KU( sign(<
               <$U, 
                h(<$cHash0.1, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 
                   <
                    ($V⊕
                     hkdfExpand(<$cAEAD0, 
                                 h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 'K_2e', '1'>,
                                hkdfExtract('emptyStr', sk))
                    ), 
                    (
                     hkdfExpand(<$cAEAD0, 
                                 h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 'K_2e', '2'>,
                                hkdfExtract('emptyStr', sk))⊕
                     sign(<
                           <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>), pk(~ltk)
                           >, 
                           aeadEncrypt('emptyStr',
                                       hkdfExpand(<$cAEAD0, 
                                                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy
                                                     >), 
                                                   'K_2m'>,
                                                  hkdfExtract('emptyStr', sk)),
                                       <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 
                                        pk(~ltk)>,
                                       $cAEAD0)
                          >,
                          ~ltk)
                    )
                   >, 
                   'emptyStr'>), 
                pk(~ltk.1)>, 
               aeadEncrypt('emptyStr',
                           hkdfExpand(<$cAEAD0.1, 
                                       h(<$cHash0.1, 
                                          h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 
                                          <
                                           ($V⊕
                                            hkdfExpand(<$cAEAD0, 
                                                        h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 
                                                           'g'^~yy>), 
                                                        'K_2e', '1'>,
                                                       hkdfExtract('emptyStr', sk))
                                           ), 
                                           (
                                            hkdfExpand(<$cAEAD0, 
                                                        h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 
                                                           'g'^~yy>), 
                                                        'K_2e', '2'>,
                                                       hkdfExtract('emptyStr', sk))⊕
                                            sign(<
                                                  <$V, 
                                                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy
                                                     >), 
                                                   pk(~ltk)>, 
                                                  aeadEncrypt('emptyStr',
                                                              hkdfExpand(<$cAEAD0, 
                                                                          h(<$cHash0, 
                                                                             <'SIG', 'SIG', 
                                                                              $cSUITE0, gx>, 
                                                                             'g'^~yy>), 
                                                                          'K_2m'>,
                                                                         hkdfExtract('emptyStr',
                                                                                     sk)),
                                                              <$V, 
                                                               h(<$cHash0, 
                                                                  <'SIG', 'SIG', $cSUITE0, gx>, 
                                                                  'g'^~yy>), 
                                                               pk(~ltk)>,
                                                              $cAEAD0)
                                                 >,
                                                 ~ltk)
                                           )
                                          >, 
                                          'emptyStr'>), 
                                       'K_3m'>,
                                      hkdfExtract('emptyStr', sk)),
                           <$U, 
                            h(<$cHash0.1, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 
                               <
                                ($V⊕
                                 hkdfExpand(<$cAEAD0, 
                                             h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 
                                             'K_2e', '1'>,
                                            hkdfExtract('emptyStr', sk))
                                ), 
                                (
                                 hkdfExpand(<$cAEAD0, 
                                             h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 
                                             'K_2e', '2'>,
                                            hkdfExtract('emptyStr', sk))⊕
                                 sign(<
                                       <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 
                                        pk(~ltk)>, 
                                       aeadEncrypt('emptyStr',
                                                   hkdfExpand(<$cAEAD0, 
                                                               h(<$cHash0, 
                                                                  <'SIG', 'SIG', $cSUITE0, gx>, 
                                                                  'g'^~yy>), 
                                                               'K_2m'>,
                                                              hkdfExtract('emptyStr', sk)),
                                                   <$V, 
                                                    h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 
                                                       'g'^~yy>), 
                                                    pk(~ltk)>,
                                                   $cAEAD0)
                                      >,
                                      ~ltk)
                                )
                               >, 
                               'emptyStr'>), 
                            pk(~ltk.1)>,
                           $cAEAD0.1)
              >,
              ~ltk.1)
    ) @ #vk.14
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !PK_SIG( $U, pkU ) ▶₂ #i
1: !KU( ($V⊕      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))     )) @ #vk.3
2: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)     )) @ #vk.4
3: splitEqs(0)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 5 (precomputed): !PK_SIG( $U, pkU ) ▶₂ #i
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !PK_SIG( $V, pk(x) ) ▶₁ #i
1: !PK_SIG( $U, pkU ) ▶₂ #i
2: StI1_SIG_SIG( $U.1, ~ltk.1, $V.1, ~xx.1, m1, ~tid.1 ) ▶₀ #i2
3: !PK_SIG( $V.1, pk(x.1) ) ▶₁ #i2
4: !PK_SIG( $U.1, pkU.1 ) ▶₂ #i2
5: !KU( ($V⊕      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))     )) @ #vk.3
6: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), pk(x)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), pk(x)>,                        $cAEAD0)           >,           x)     )) @ #vk.4
7: splitEqs(0)
8: splitEqs(1)
9: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))     )) @ #vk.8
10: !KU( (      hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<<$V.1, h(<$cHash0.1, m1, gy.1>), pk(x.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V.1, h(<$cHash0.1, m1, gy.1>), pk(x.1)>, $cAEAD0.1)           >,           x.1)     )) @ #vk.9

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 4 (precomputed): !PK_SIG( $V, pk(x) ) ▶₁ #i
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ($V⊕      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))     )) @ #vk.3
1: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)     )) @ #vk.4
2: splitEqs(0)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 9 (directly):
    !KU( ($V⊕
          hkdfExpand(<$cAEAD0, 
                      h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,
                     hkdfExtract('emptyStr', expSk))
         )
    ) @ #vk.3
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)     )) @ #vk.4
1: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                hkdfExtract('emptyStr', expSk))) @ #vk.5
2: splitEqs(0)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~ltk.1 ) @ #vk.17
1: !KU( h(<$cHash0.1,         h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>),         <         ($V⊕          hkdfExpand(<$cAEAD0,                       h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 'K_2e', '1'>,                     hkdfExtract('emptyStr', sk))         ),          (          hkdfExpand(<$cAEAD0,                       h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 'K_2e', '2'>,                     hkdfExtract('emptyStr', sk))⊕          sign(<                <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>), pk(~ltk)                >,                 aeadEncrypt('emptyStr',                            hkdfExpand(<$cAEAD0,                                         h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 'K_2m'                                       >,                                       hkdfExtract('emptyStr', sk)),                            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>), pk(~ltk)                            >,                            $cAEAD0)               >,               ~ltk)         )        >,         'emptyStr'>)) @ #vk.19
2: !KU( hkdfExpand(<$cAEAD0.1,                  h(<$cHash0.1, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                     <                     ($V⊕                      hkdfExpand(<$cAEAD0,                                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 'K_2e', '1'>,                                 hkdfExtract('emptyStr', sk))                     ),                      (                      hkdfExpand(<$cAEAD0,                                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 'K_2e', '2'>,                                 hkdfExtract('emptyStr', sk))⊕                      sign(<                            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>), pk(~ltk)                            >,                             aeadEncrypt('emptyStr',                                        hkdfExpand(<$cAEAD0,                                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>,                                                        'g'^~yy>),                                                     'K_2m'>,                                                   hkdfExtract('emptyStr', sk)),                                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                          pk(~ltk)>,                                        $cAEAD0)                           >,                           ~ltk)                     )                    >,                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract('emptyStr', sk))) @ #vk.11
3: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                 <                                 ($V⊕                                  hkdfExpand(<$cAEAD0,                                               h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                               'K_2e', '1'>,                                             hkdfExtract('emptyStr', sk))                                 ),                                  (                                  hkdfExpand(<$cAEAD0,                                               h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                               'K_2e', '2'>,                                             hkdfExtract('emptyStr', sk))⊕                                  sign(<                                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                          pk(~ltk)>,                                         aeadEncrypt('emptyStr',                                                    hkdfExpand(<$cAEAD0,                                                                 h(<$cHash0,                                                                    <'SIG', 'SIG', $cSUITE0, gx>,                                                                    'g'^~yy>),                                                                 'K_2m'>,                                                               hkdfExtract('emptyStr', sk)),                                                    <$V,                                                      h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>,                                                         'g'^~yy>),                                                      pk(~ltk)>,                                                    $cAEAD0)                                       >,                                       ~ltk)                                 )                                >,                                 'emptyStr'>),                              'K_3m'>,                            hkdfExtract('emptyStr', sk)),                 <$U,                   h(<$cHash0.1, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                      <                      ($V⊕                       hkdfExpand(<$cAEAD0,                                    h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 'K_2e', '1'                                  >,                                  hkdfExtract('emptyStr', sk))                      ),                       (                       hkdfExpand(<$cAEAD0,                                    h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 'K_2e', '2'                                  >,                                  hkdfExtract('emptyStr', sk))⊕                       sign(<                             <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>), pk(~ltk)                             >,                              aeadEncrypt('emptyStr',                                         hkdfExpand(<$cAEAD0,                                                      h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>,                                                         'g'^~yy>),                                                      'K_2m'>,                                                    hkdfExtract('emptyStr', sk)),                                         <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                           pk(~ltk)>,                                         $cAEAD0)                            >,                            ~ltk)                      )                     >,                      'emptyStr'>),                   pk(~ltk.1)>,                 $cAEAD0.1)) @ #vk.21
4: splitEqs(1)
5: !KU( pk(~ltk.1) ) @ #vk.20

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 30 (precomputed): !KU( ~ltk.1 ) @ #vk.17
  solved goal nr. 11 (directly):
    !KU( (
          hkdfExpand(<$cAEAD0, 
                      h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,
                     hkdfExtract('emptyStr', expSk))⊕
          sign(<
                <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 
                 pk(~ltk.1)>, 
                aeadEncrypt('emptyStr',
                            hkdfExpand(<$cAEAD0, 
                                        h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'
                                       >,
                                       hkdfExtract('emptyStr', expSk)),
                            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 
                             pk(~ltk.1)>,
                            $cAEAD0)
               >,
               ~ltk.1)
         )
    ) @ #vk.4
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KD( ($V⊕      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))     )) ▶₀ #vk
1: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)     )) @ #vk.4
2: splitEqs(0)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  simplified formula:
      "((#vr.23 = #i) ∨ (#i < #vr.23))"
    to
      "⊥"
  solved goal nr. 39 (simplified): (#vr.23 = #i)  ∥ (#i < #vr.23)
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KD( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)     )) ▶₀ #vk.1
1: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                hkdfExtract('emptyStr', expSk))) @ #vk.5
2: splitEqs(0)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( sign(<           <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>),             pk(~ltk.1)>,            aeadEncrypt('emptyStr',                       hkdfExpand(<$cAEAD0,                                    h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                                  hkdfExtract('emptyStr', expSk)),                       <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>),                         pk(~ltk.1)>,                       $cAEAD0)          >,          ~ltk.1)) @ #vk.7
1: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                hkdfExtract('emptyStr', expSk))) @ #vk.5
2: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                hkdfExtract('emptyStr', expSk))) @ #vk.8
3: splitEqs(0)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 18 (precomputed):
    !KU( sign(<
               <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 
                pk(~ltk.1)>, 
               aeadEncrypt('emptyStr',
                           hkdfExpand(<$cAEAD0, 
                                       h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,
                                      hkdfExtract('emptyStr', expSk)),
                           <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 
                            pk(~ltk.1)>,
                           $cAEAD0)
              >,
              ~ltk.1)
    ) @ #vk.7
  simplified formula:
      "((#vr.12 = #i) ∨ (#i < #vr.12))"
    to
      "⊥"
  solved goal nr. 31 (simplified): (#vr.12 = #i)  ∥ (#i < #vr.12)
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !PK_SIG( $V, pkV ) ▶₂ #i
1: StR2_SIG_SIG( $V.1, ~ltk.2, ~yy.1, prk_3e2m, TH_2, CIPHERTEXT_2,              sk, ~tid.1, m1, m2) ▶₀ #i2
2: !PK_SIG( $U.1, pk(x) ) ▶₁ #i2
3: !PK_SIG( $V.1, pkV.1 ) ▶₂ #i2
4: !KU( aeadEncrypt(<$U,                   sign(<                        <$U,                          h(<$cHash0.1, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                             <                             ($V⊕                              hkdfExpand(<$cAEAD0,                                           h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                           'K_2e', '1'>,                                         hkdfExtract('emptyStr', sk))                             ),                              (                              hkdfExpand(<$cAEAD0,                                           h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                           'K_2e', '2'>,                                         hkdfExtract('emptyStr', sk))⊕                              sign(<                                    <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                      pk(~ltk)>,                                     aeadEncrypt('emptyStr',                                                hkdfExpand(<$cAEAD0,                                                             h(<$cHash0,                                                                <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy                                                              >),                                                             'K_2m'>,                                                           hkdfExtract('emptyStr', sk)),                                                <$V,                                                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy                                                   >),                                                  pk(~ltk)>,                                                $cAEAD0)                                   >,                                   ~ltk)                             )                            >,                             'emptyStr'>),                          pk(~ltk.1)>,                         aeadEncrypt('emptyStr',                                    hkdfExpand(<$cAEAD0.1,                                                 h(<$cHash0.1,                                                    h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy                                                     >),                                                    <                                                    ($V⊕                                                     hkdfExpand(<$cAEAD0,                                                                  h(<$cHash0,                                                                     <'SIG', 'SIG', $cSUITE0, gx>,                                                                     'g'^~yy>),                                                                  'K_2e', '1'>,                                                                hkdfExtract('emptyStr', sk))                                                    ),                                                     (                                                     hkdfExpand(<$cAEAD0,                                                                  h(<$cHash0,                                                                     <'SIG', 'SIG', $cSUITE0, gx>,                                                                     'g'^~yy>),                                                                  'K_2e', '2'>,                                                                hkdfExtract('emptyStr', sk))⊕                                                     sign(<                                                           <$V,                                                             h(<$cHash0,                                                                <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy                                                              >),                                                             pk(~ltk)>,                                                            aeadEncrypt('emptyStr',                                                                       hkdfExpand(<$cAEAD0,                                                                                    h(<$cHash0,                                                                                       <'SIG',                                                                                        'SIG',                                                                                        $cSUITE0, gx                                                                                      >,                                                                                       'g'^~yy>),                                                                                    'K_2m'>,                                                                                  hkdfExtract('emptyStr',                                                                                              sk)),                                                                       <$V,                                                                         h(<$cHash0,                                                                            <'SIG', 'SIG', $cSUITE0,                                                                             gx>,                                                                            'g'^~yy>),                                                                         pk(~ltk)>,                                                                       $cAEAD0)                                                          >,                                                          ~ltk)                                                    )                                                   >,                                                    'emptyStr'>),                                                 'K_3m'>,                                               hkdfExtract('emptyStr', sk)),                                    <$U,                                      h(<$cHash0.1,                                         h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                         <                                         ($V⊕                                          hkdfExpand(<$cAEAD0,                                                       h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>,                                                          'g'^~yy>),                                                       'K_2e', '1'>,                                                     hkdfExtract('emptyStr', sk))                                         ),                                          (                                          hkdfExpand(<$cAEAD0,                                                       h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>,                                                          'g'^~yy>),                                                       'K_2e', '2'>,                                                     hkdfExtract('emptyStr', sk))⊕                                          sign(<                                                <$V,                                                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy                                                   >),                                                  pk(~ltk)>,                                                 aeadEncrypt('emptyStr',                                                            hkdfExpand(<$cAEAD0,                                                                         h(<$cHash0,                                                                            <'SIG', 'SIG', $cSUITE0,                                                                             gx>,                                                                            'g'^~yy>),                                                                         'K_2m'>,                                                                       hkdfExtract('emptyStr', sk)),                                                            <$V,                                                              h(<$cHash0,                                                                 <'SIG', 'SIG', $cSUITE0, gx>,                                                                 'g'^~yy>),                                                              pk(~ltk)>,                                                            $cAEAD0)                                               >,                                               ~ltk)                                         )                                        >,                                         'emptyStr'>),                                      pk(~ltk.1)>,                                    $cAEAD0.1)                       >,                       ~ltk.1)                 >,                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                 <                                 ($V⊕                                  hkdfExpand(<$cAEAD0,                                               h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                               'K_2e', '1'>,                                             hkdfExtract('emptyStr', sk))                                 ),                                  (                                  hkdfExpand(<$cAEAD0,                                               h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                               'K_2e', '2'>,                                             hkdfExtract('emptyStr', sk))⊕                                  sign(<                                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                          pk(~ltk)>,                                         aeadEncrypt('emptyStr',                                                    hkdfExpand(<$cAEAD0,                                                                 h(<$cHash0,                                                                    <'SIG', 'SIG', $cSUITE0, gx>,                                                                    'g'^~yy>),                                                                 'K_2m'>,                                                               hkdfExtract('emptyStr', sk)),                                                    <$V,                                                      h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>,                                                         'g'^~yy>),                                                      pk(~ltk)>,                                                    $cAEAD0)                                       >,                                       ~ltk)                                 )                                >,                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract('emptyStr', sk)),                 extAad3Outer, $cAEAD0.1)) @ #vk.3
5: splitEqs(2)
6: !KU( aeadEncrypt(<$U.1,                   sign(<                        <$U.1, h(<$cHash0.2, TH_2, CIPHERTEXT_2, 'emptyStr'>), pk(x)>,                         aeadEncrypt('emptyStr',                                    hkdfExpand(<$cAEAD0.2,                                                 h(<$cHash0.2, TH_2, CIPHERTEXT_2, 'emptyStr'>),                                                 'K_3m'>,                                               prk_3e2m),                                    <$U.1, h(<$cHash0.2, TH_2, CIPHERTEXT_2, 'emptyStr'>), pk(x)>,                                    $cAEAD0.2)                       >,                       x)                 >,                 hkdfExpand(<$cAEAD0.2,                              h(<$cHash0.2, TH_2, CIPHERTEXT_2, 'emptyStr'>), 'K_3ae'>,                            prk_3e2m),                 extAad3Outer.1, $cAEAD0.2)) @ #vk.4

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 5 (precomputed): !PK_SIG( $V, pkV ) ▶₂ #i
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: StR2_SIG_SIG( $V.1, ~ltk.2, ~yy.1, prk_3e2m, TH_2, CIPHERTEXT_2,              sk, ~tid.1, m1, m2) ▶₀ #i2
1: !PK_SIG( $U.1, pk(x) ) ▶₁ #i2
2: !PK_SIG( $V.1, pkV ) ▶₂ #i2
3: !KU( aeadEncrypt(<$U,                   sign(<                        <$U,                          h(<$cHash0.1, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                             <                             ($V⊕                              hkdfExpand(<$cAEAD0,                                           h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                           'K_2e', '1'>,                                         hkdfExtract('emptyStr', sk))                             ),                              (                              hkdfExpand(<$cAEAD0,                                           h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                           'K_2e', '2'>,                                         hkdfExtract('emptyStr', sk))⊕                              sign(<                                    <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                      pk(~ltk)>,                                     aeadEncrypt('emptyStr',                                                hkdfExpand(<$cAEAD0,                                                             h(<$cHash0,                                                                <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy                                                              >),                                                             'K_2m'>,                                                           hkdfExtract('emptyStr', sk)),                                                <$V,                                                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy                                                   >),                                                  pk(~ltk)>,                                                $cAEAD0)                                   >,                                   ~ltk)                             )                            >,                             'emptyStr'>),                          pk(~ltk.1)>,                         aeadEncrypt('emptyStr',                                    hkdfExpand(<$cAEAD0.1,                                                 h(<$cHash0.1,                                                    h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy                                                     >),                                                    <                                                    ($V⊕                                                     hkdfExpand(<$cAEAD0,                                                                  h(<$cHash0,                                                                     <'SIG', 'SIG', $cSUITE0, gx>,                                                                     'g'^~yy>),                                                                  'K_2e', '1'>,                                                                hkdfExtract('emptyStr', sk))                                                    ),                                                     (                                                     hkdfExpand(<$cAEAD0,                                                                  h(<$cHash0,                                                                     <'SIG', 'SIG', $cSUITE0, gx>,                                                                     'g'^~yy>),                                                                  'K_2e', '2'>,                                                                hkdfExtract('emptyStr', sk))⊕                                                     sign(<                                                           <$V,                                                             h(<$cHash0,                                                                <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy                                                              >),                                                             pk(~ltk)>,                                                            aeadEncrypt('emptyStr',                                                                       hkdfExpand(<$cAEAD0,                                                                                    h(<$cHash0,                                                                                       <'SIG',                                                                                        'SIG',                                                                                        $cSUITE0, gx                                                                                      >,                                                                                       'g'^~yy>),                                                                                    'K_2m'>,                                                                                  hkdfExtract('emptyStr',                                                                                              sk)),                                                                       <$V,                                                                         h(<$cHash0,                                                                            <'SIG', 'SIG', $cSUITE0,                                                                             gx>,                                                                            'g'^~yy>),                                                                         pk(~ltk)>,                                                                       $cAEAD0)                                                          >,                                                          ~ltk)                                                    )                                                   >,                                                    'emptyStr'>),                                                 'K_3m'>,                                               hkdfExtract('emptyStr', sk)),                                    <$U,                                      h(<$cHash0.1,                                         h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                         <                                         ($V⊕                                          hkdfExpand(<$cAEAD0,                                                       h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>,                                                          'g'^~yy>),                                                       'K_2e', '1'>,                                                     hkdfExtract('emptyStr', sk))                                         ),                                          (                                          hkdfExpand(<$cAEAD0,                                                       h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>,                                                          'g'^~yy>),                                                       'K_2e', '2'>,                                                     hkdfExtract('emptyStr', sk))⊕                                          sign(<                                                <$V,                                                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy                                                   >),                                                  pk(~ltk)>,                                                 aeadEncrypt('emptyStr',                                                            hkdfExpand(<$cAEAD0,                                                                         h(<$cHash0,                                                                            <'SIG', 'SIG', $cSUITE0,                                                                             gx>,                                                                            'g'^~yy>),                                                                         'K_2m'>,                                                                       hkdfExtract('emptyStr', sk)),                                                            <$V,                                                              h(<$cHash0,                                                                 <'SIG', 'SIG', $cSUITE0, gx>,                                                                 'g'^~yy>),                                                              pk(~ltk)>,                                                            $cAEAD0)                                               >,                                               ~ltk)                                         )                                        >,                                         'emptyStr'>),                                      pk(~ltk.1)>,                                    $cAEAD0.1)                       >,                       ~ltk.1)                 >,                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                 <                                 ($V⊕                                  hkdfExpand(<$cAEAD0,                                               h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                               'K_2e', '1'>,                                             hkdfExtract('emptyStr', sk))                                 ),                                  (                                  hkdfExpand(<$cAEAD0,                                               h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                               'K_2e', '2'>,                                             hkdfExtract('emptyStr', sk))⊕                                  sign(<                                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                          pk(~ltk)>,                                         aeadEncrypt('emptyStr',                                                    hkdfExpand(<$cAEAD0,                                                                 h(<$cHash0,                                                                    <'SIG', 'SIG', $cSUITE0, gx>,                                                                    'g'^~yy>),                                                                 'K_2m'>,                                                               hkdfExtract('emptyStr', sk)),                                                    <$V,                                                      h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>,                                                         'g'^~yy>),                                                      pk(~ltk)>,                                                    $cAEAD0)                                       >,                                       ~ltk)                                 )                                >,                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract('emptyStr', sk)),                 extAad3Outer, $cAEAD0.1)) @ #vk.3
4: splitEqs(2)
5: !KU( aeadEncrypt(<$U.1,                   sign(<                        <$U.1, h(<$cHash0.2, TH_2, CIPHERTEXT_2, 'emptyStr'>), pk(x)>,                         aeadEncrypt('emptyStr',                                    hkdfExpand(<$cAEAD0.2,                                                 h(<$cHash0.2, TH_2, CIPHERTEXT_2, 'emptyStr'>),                                                 'K_3m'>,                                               prk_3e2m),                                    <$U.1, h(<$cHash0.2, TH_2, CIPHERTEXT_2, 'emptyStr'>), pk(x)>,                                    $cAEAD0.2)                       >,                       x)                 >,                 hkdfExpand(<$cAEAD0.2,                              h(<$cHash0.2, TH_2, CIPHERTEXT_2, 'emptyStr'>), 'K_3ae'>,                            prk_3e2m),                 extAad3Outer.1, $cAEAD0.2)) @ #vk.4

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 12 (precomputed):
    StR2_SIG_SIG( $V.1, ~ltk.2, ~yy.1, prk_3e2m, TH_2, CIPHERTEXT_2,
                  sk, ~tid.1, m1, m2
    ) ▶₀ #i2
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !PK_SIG( $U.1, pk(x) ) ▶₁ #i2
1: !PK_SIG( $V.1, pkV ) ▶₂ #i2
2: !KU( aeadEncrypt(<$U,                   sign(<                        <$U,                          h(<$cHash0.1, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                             <                             ($V⊕                              hkdfExpand(<$cAEAD0,                                           h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                           'K_2e', '1'>,                                         hkdfExtract('emptyStr', sk))                             ),                              (                              hkdfExpand(<$cAEAD0,                                           h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                           'K_2e', '2'>,                                         hkdfExtract('emptyStr', sk))⊕                              sign(<                                    <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                      pk(~ltk)>,                                     aeadEncrypt('emptyStr',                                                hkdfExpand(<$cAEAD0,                                                             h(<$cHash0,                                                                <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy                                                              >),                                                             'K_2m'>,                                                           hkdfExtract('emptyStr', sk)),                                                <$V,                                                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy                                                   >),                                                  pk(~ltk)>,                                                $cAEAD0)                                   >,                                   ~ltk)                             )                            >,                             'emptyStr'>),                          pk(~ltk.1)>,                         aeadEncrypt('emptyStr',                                    hkdfExpand(<$cAEAD0.1,                                                 h(<$cHash0.1,                                                    h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy                                                     >),                                                    <                                                    ($V⊕                                                     hkdfExpand(<$cAEAD0,                                                                  h(<$cHash0,                                                                     <'SIG', 'SIG', $cSUITE0, gx>,                                                                     'g'^~yy>),                                                                  'K_2e', '1'>,                                                                hkdfExtract('emptyStr', sk))                                                    ),                                                     (                                                     hkdfExpand(<$cAEAD0,                                                                  h(<$cHash0,                                                                     <'SIG', 'SIG', $cSUITE0, gx>,                                                                     'g'^~yy>),                                                                  'K_2e', '2'>,                                                                hkdfExtract('emptyStr', sk))⊕                                                     sign(<                                                           <$V,                                                             h(<$cHash0,                                                                <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy                                                              >),                                                             pk(~ltk)>,                                                            aeadEncrypt('emptyStr',                                                                       hkdfExpand(<$cAEAD0,                                                                                    h(<$cHash0,                                                                                       <'SIG',                                                                                        'SIG',                                                                                        $cSUITE0, gx                                                                                      >,                                                                                       'g'^~yy>),                                                                                    'K_2m'>,                                                                                  hkdfExtract('emptyStr',                                                                                              sk)),                                                                       <$V,                                                                         h(<$cHash0,                                                                            <'SIG', 'SIG', $cSUITE0,                                                                             gx>,                                                                            'g'^~yy>),                                                                         pk(~ltk)>,                                                                       $cAEAD0)                                                          >,                                                          ~ltk)                                                    )                                                   >,                                                    'emptyStr'>),                                                 'K_3m'>,                                               hkdfExtract('emptyStr', sk)),                                    <$U,                                      h(<$cHash0.1,                                         h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                         <                                         ($V⊕                                          hkdfExpand(<$cAEAD0,                                                       h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>,                                                          'g'^~yy>),                                                       'K_2e', '1'>,                                                     hkdfExtract('emptyStr', sk))                                         ),                                          (                                          hkdfExpand(<$cAEAD0,                                                       h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>,                                                          'g'^~yy>),                                                       'K_2e', '2'>,                                                     hkdfExtract('emptyStr', sk))⊕                                          sign(<                                                <$V,                                                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy                                                   >),                                                  pk(~ltk)>,                                                 aeadEncrypt('emptyStr',                                                            hkdfExpand(<$cAEAD0,                                                                         h(<$cHash0,                                                                            <'SIG', 'SIG', $cSUITE0,                                                                             gx>,                                                                            'g'^~yy>),                                                                         'K_2m'>,                                                                       hkdfExtract('emptyStr', sk)),                                                            <$V,                                                              h(<$cHash0,                                                                 <'SIG', 'SIG', $cSUITE0, gx>,                                                                 'g'^~yy>),                                                              pk(~ltk)>,                                                            $cAEAD0)                                               >,                                               ~ltk)                                         )                                        >,                                         'emptyStr'>),                                      pk(~ltk.1)>,                                    $cAEAD0.1)                       >,                       ~ltk.1)                 >,                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                 <                                 ($V⊕                                  hkdfExpand(<$cAEAD0,                                               h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                               'K_2e', '1'>,                                             hkdfExtract('emptyStr', sk))                                 ),                                  (                                  hkdfExpand(<$cAEAD0,                                               h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                               'K_2e', '2'>,                                             hkdfExtract('emptyStr', sk))⊕                                  sign(<                                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                          pk(~ltk)>,                                         aeadEncrypt('emptyStr',                                                    hkdfExpand(<$cAEAD0,                                                                 h(<$cHash0,                                                                    <'SIG', 'SIG', $cSUITE0, gx>,                                                                    'g'^~yy>),                                                                 'K_2m'>,                                                               hkdfExtract('emptyStr', sk)),                                                    <$V,                                                      h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>,                                                         'g'^~yy>),                                                      pk(~ltk)>,                                                    $cAEAD0)                                       >,                                       ~ltk)                                 )                                >,                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract('emptyStr', sk)),                 extAad3Outer, $cAEAD0.1)) @ #vk.3
3: !KU( aeadEncrypt(<$U.1,                   sign(<                        <$U.1,                          h(<$cHash0.3,                             h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.1, gx.1>, 'g'^~yy.1>),                             <                             ($V.1⊕                              hkdfExpand(<$cAEAD0.2,                                           h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.1, gx.1>, 'g'^~yy.1                                            >),                                           'K_2e', '1'>,                                         hkdfExtract('emptyStr', sk))                             ),                              (                              hkdfExpand(<$cAEAD0.2,                                           h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.1, gx.1>, 'g'^~yy.1                                            >),                                           'K_2e', '2'>,                                         hkdfExtract('emptyStr', sk))⊕                              sign(<                                    <$V.1,                                      h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.1, gx.1>, 'g'^~yy.1>),                                      pk(~ltk.2)>,                                     aeadEncrypt('emptyStr',                                                hkdfExpand(<$cAEAD0.2,                                                             h(<$cHash0.2,                                                                <'SIG', 'SIG', $cSUITE0.1, gx.1>,                                                                'g'^~yy.1>),                                                             'K_2m'>,                                                           hkdfExtract('emptyStr', sk)),                                                <$V.1,                                                  h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.1, gx.1>,                                                     'g'^~yy.1>),                                                  pk(~ltk.2)>,                                                $cAEAD0.2)                                   >,                                   ~ltk.2)                             )                            >,                             'emptyStr'>),                          pk(x)>,                         aeadEncrypt('emptyStr',                                    hkdfExpand(<$cAEAD0.3,                                                 h(<$cHash0.3,                                                    h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.1, gx.1>,                                                       'g'^~yy.1>),                                                    <                                                    ($V.1⊕                                                     hkdfExpand(<$cAEAD0.2,                                                                  h(<$cHash0.2,                                                                     <'SIG', 'SIG', $cSUITE0.1, gx.1                                                                    >,                                                                     'g'^~yy.1>),                                                                  'K_2e', '1'>,                                                                hkdfExtract('emptyStr', sk))                                                    ),                                                     (                                                     hkdfExpand(<$cAEAD0.2,                                                                  h(<$cHash0.2,                                                                     <'SIG', 'SIG', $cSUITE0.1, gx.1                                                                    >,                                                                     'g'^~yy.1>),                                                                  'K_2e', '2'>,                                                                hkdfExtract('emptyStr', sk))⊕                                                     sign(<                                                           <$V.1,                                                             h(<$cHash0.2,                                                                <'SIG', 'SIG', $cSUITE0.1, gx.1>,                                                                'g'^~yy.1>),                                                             pk(~ltk.2)>,                                                            aeadEncrypt('emptyStr',                                                                       hkdfExpand(<$cAEAD0.2,                                                                                    h(<$cHash0.2,                                                                                       <'SIG',                                                                                        'SIG',                                                                                        $cSUITE0.1,                                                                                        gx.1>,                                                                                       'g'^~yy.1>),                                                                                    'K_2m'>,                                                                                  hkdfExtract('emptyStr',                                                                                              sk)),                                                                       <$V.1,                                                                         h(<$cHash0.2,                                                                            <'SIG', 'SIG',                                                                             $cSUITE0.1, gx.1>,                                                                            'g'^~yy.1>),                                                                         pk(~ltk.2)>,                                                                       $cAEAD0.2)                                                          >,                                                          ~ltk.2)                                                    )                                                   >,                                                    'emptyStr'>),                                                 'K_3m'>,                                               hkdfExtract('emptyStr', sk)),                                    <$U.1,                                      h(<$cHash0.3,                                         h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.1, gx.1>, 'g'^~yy.1                                          >),                                         <                                         ($V.1⊕                                          hkdfExpand(<$cAEAD0.2,                                                       h(<$cHash0.2,                                                          <'SIG', 'SIG', $cSUITE0.1, gx.1>, 'g'^~yy.1                                                        >),                                                       'K_2e', '1'>,                                                     hkdfExtract('emptyStr', sk))                                         ),                                          (                                          hkdfExpand(<$cAEAD0.2,                                                       h(<$cHash0.2,                                                          <'SIG', 'SIG', $cSUITE0.1, gx.1>, 'g'^~yy.1                                                        >),                                                       'K_2e', '2'>,                                                     hkdfExtract('emptyStr', sk))⊕                                          sign(<                                                <$V.1,                                                  h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.1, gx.1>,                                                     'g'^~yy.1>),                                                  pk(~ltk.2)>,                                                 aeadEncrypt('emptyStr',                                                            hkdfExpand(<$cAEAD0.2,                                                                         h(<$cHash0.2,                                                                            <'SIG', 'SIG',                                                                             $cSUITE0.1, gx.1>,                                                                            'g'^~yy.1>),                                                                         'K_2m'>,                                                                       hkdfExtract('emptyStr', sk)),                                                            <$V.1,                                                              h(<$cHash0.2,                                                                 <'SIG', 'SIG', $cSUITE0.1, gx.1>,                                                                 'g'^~yy.1>),                                                              pk(~ltk.2)>,                                                            $cAEAD0.2)                                               >,                                               ~ltk.2)                                         )                                        >,                                         'emptyStr'>),                                      pk(x)>,                                    $cAEAD0.3)                       >,                       x)                 >,                 hkdfExpand(<$cAEAD0.3,                              h(<$cHash0.3,                                 h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.1, gx.1>, 'g'^~yy.1>),                                 <                                 ($V.1⊕                                  hkdfExpand(<$cAEAD0.2,                                               h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.1, gx.1>,                                                  'g'^~yy.1>),                                               'K_2e', '1'>,                                             hkdfExtract('emptyStr', sk))                                 ),                                  (                                  hkdfExpand(<$cAEAD0.2,                                               h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.1, gx.1>,                                                  'g'^~yy.1>),                                               'K_2e', '2'>,                                             hkdfExtract('emptyStr', sk))⊕                                  sign(<                                        <$V.1,                                          h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.1, gx.1>, 'g'^~yy.1                                           >),                                          pk(~ltk.2)>,                                         aeadEncrypt('emptyStr',                                                    hkdfExpand(<$cAEAD0.2,                                                                 h(<$cHash0.2,                                                                    <'SIG', 'SIG', $cSUITE0.1, gx.1                                                                   >,                                                                    'g'^~yy.1>),                                                                 'K_2m'>,                                                               hkdfExtract('emptyStr', sk)),                                                    <$V.1,                                                      h(<$cHash0.2,                                                         <'SIG', 'SIG', $cSUITE0.1, gx.1>, 'g'^~yy.1                                                       >),                                                      pk(~ltk.2)>,                                                    $cAEAD0.2)                                       >,                                       ~ltk.2)                                 )                                >,                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract('emptyStr', sk)),                 extAad3Outer.1, $cAEAD0.3)) @ #vk.4
4: splitEqs(2)
5: splitEqs(3)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 13 (precomputed): !PK_SIG( $U.1, pk(x) ) ▶₁ #i2
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !PK_SIG( $V, pkV ) ▶₂ #i
1: StR2_SIG_SIG( $V.1, ~ltk.2, ~yy.1, prk_3e2m, TH_2, CIPHERTEXT_2,              sk, ~tid.1, m1, m2) ▶₀ #i2
2: !PK_SIG( $U.1, pk(x) ) ▶₁ #i2
3: !PK_SIG( $V.1, pkV.1 ) ▶₂ #i2
4: !KU( aeadEncrypt(<$U,                   sign(<                        <$U,                          h(<$cHash0.1, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                             <                             ($V⊕                              hkdfExpand(<$cAEAD0,                                           h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                           'K_2e', '1'>,                                         hkdfExtract('emptyStr', sk))                             ),                              (                              hkdfExpand(<$cAEAD0,                                           h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                           'K_2e', '2'>,                                         hkdfExtract('emptyStr', sk))⊕                              sign(<                                    <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                      pk(~ltk)>,                                     aeadEncrypt('emptyStr',                                                hkdfExpand(<$cAEAD0,                                                             h(<$cHash0,                                                                <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy                                                              >),                                                             'K_2m'>,                                                           hkdfExtract('emptyStr', sk)),                                                <$V,                                                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy                                                   >),                                                  pk(~ltk)>,                                                $cAEAD0)                                   >,                                   ~ltk)                             )                            >,                             'emptyStr'>),                          pk(~ltk.1)>,                         aeadEncrypt('emptyStr',                                    hkdfExpand(<$cAEAD0.1,                                                 h(<$cHash0.1,                                                    h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy                                                     >),                                                    <                                                    ($V⊕                                                     hkdfExpand(<$cAEAD0,                                                                  h(<$cHash0,                                                                     <'SIG', 'SIG', $cSUITE0, gx>,                                                                     'g'^~yy>),                                                                  'K_2e', '1'>,                                                                hkdfExtract('emptyStr', sk))                                                    ),                                                     (                                                     hkdfExpand(<$cAEAD0,                                                                  h(<$cHash0,                                                                     <'SIG', 'SIG', $cSUITE0, gx>,                                                                     'g'^~yy>),                                                                  'K_2e', '2'>,                                                                hkdfExtract('emptyStr', sk))⊕                                                     sign(<                                                           <$V,                                                             h(<$cHash0,                                                                <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy                                                              >),                                                             pk(~ltk)>,                                                            aeadEncrypt('emptyStr',                                                                       hkdfExpand(<$cAEAD0,                                                                                    h(<$cHash0,                                                                                       <'SIG',                                                                                        'SIG',                                                                                        $cSUITE0, gx                                                                                      >,                                                                                       'g'^~yy>),                                                                                    'K_2m'>,                                                                                  hkdfExtract('emptyStr',                                                                                              sk)),                                                                       <$V,                                                                         h(<$cHash0,                                                                            <'SIG', 'SIG', $cSUITE0,                                                                             gx>,                                                                            'g'^~yy>),                                                                         pk(~ltk)>,                                                                       $cAEAD0)                                                          >,                                                          ~ltk)                                                    )                                                   >,                                                    'emptyStr'>),                                                 'K_3m'>,                                               hkdfExtract('emptyStr', sk)),                                    <$U,                                      h(<$cHash0.1,                                         h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                         <                                         ($V⊕                                          hkdfExpand(<$cAEAD0,                                                       h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>,                                                          'g'^~yy>),                                                       'K_2e', '1'>,                                                     hkdfExtract('emptyStr', sk))                                         ),                                          (                                          hkdfExpand(<$cAEAD0,                                                       h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>,                                                          'g'^~yy>),                                                       'K_2e', '2'>,                                                     hkdfExtract('emptyStr', sk))⊕                                          sign(<                                                <$V,                                                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy                                                   >),                                                  pk(~ltk)>,                                                 aeadEncrypt('emptyStr',                                                            hkdfExpand(<$cAEAD0,                                                                         h(<$cHash0,                                                                            <'SIG', 'SIG', $cSUITE0,                                                                             gx>,                                                                            'g'^~yy>),                                                                         'K_2m'>,                                                                       hkdfExtract('emptyStr', sk)),                                                            <$V,                                                              h(<$cHash0,                                                                 <'SIG', 'SIG', $cSUITE0, gx>,                                                                 'g'^~yy>),                                                              pk(~ltk)>,                                                            $cAEAD0)                                               >,                                               ~ltk)                                         )                                        >,                                         'emptyStr'>),                                      pk(~ltk.1)>,                                    $cAEAD0.1)                       >,                       ~ltk.1)                 >,                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                 <                                 ($V⊕                                  hkdfExpand(<$cAEAD0,                                               h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                               'K_2e', '1'>,                                             hkdfExtract('emptyStr', sk))                                 ),                                  (                                  hkdfExpand(<$cAEAD0,                                               h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                               'K_2e', '2'>,                                             hkdfExtract('emptyStr', sk))⊕                                  sign(<                                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                          pk(~ltk)>,                                         aeadEncrypt('emptyStr',                                                    hkdfExpand(<$cAEAD0,                                                                 h(<$cHash0,                                                                    <'SIG', 'SIG', $cSUITE0, gx>,                                                                    'g'^~yy>),                                                                 'K_2m'>,                                                               hkdfExtract('emptyStr', sk)),                                                    <$V,                                                      h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>,                                                         'g'^~yy>),                                                      pk(~ltk)>,                                                    $cAEAD0)                                       >,                                       ~ltk)                                 )                                >,                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract('emptyStr', sk)),                 extAad3Outer, $cAEAD0.1)) @ #vk.3
5: splitEqs(2)
6: !KU( aeadEncrypt(<$U.1,                   sign(<                        <$U.1, h(<$cHash0.2, TH_2, CIPHERTEXT_2, 'emptyStr'>), pk(x)>,                         aeadEncrypt('emptyStr',                                    hkdfExpand(<$cAEAD0.2,                                                 h(<$cHash0.2, TH_2, CIPHERTEXT_2, 'emptyStr'>),                                                 'K_3m'>,                                               prk_3e2m),                                    <$U.1, h(<$cHash0.2, TH_2, CIPHERTEXT_2, 'emptyStr'>), pk(x)>,                                    $cAEAD0.2)                       >,                       x)                 >,                 hkdfExpand(<$cAEAD0.2,                              h(<$cHash0.2, TH_2, CIPHERTEXT_2, 'emptyStr'>), 'K_3ae'>,                            prk_3e2m),                 extAad3Outer.1, $cAEAD0.2)) @ #vk.4

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 5 (precomputed): !PK_SIG( $V, pkV ) ▶₂ #i
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: StR2_SIG_SIG( $V.1, ~ltk.2, ~yy.1, prk_3e2m, TH_2, CIPHERTEXT_2,              sk, ~tid.1, m1, m2) ▶₀ #i2
1: !PK_SIG( $U.1, pk(x) ) ▶₁ #i2
2: !PK_SIG( $V.1, pkV ) ▶₂ #i2
3: !KU( aeadEncrypt(<$U,                   sign(<                        <$U,                          h(<$cHash0.1, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                             <                             ($V⊕                              hkdfExpand(<$cAEAD0,                                           h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                           'K_2e', '1'>,                                         hkdfExtract('emptyStr', sk))                             ),                              (                              hkdfExpand(<$cAEAD0,                                           h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                           'K_2e', '2'>,                                         hkdfExtract('emptyStr', sk))⊕                              sign(<                                    <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                      pk(~ltk)>,                                     aeadEncrypt('emptyStr',                                                hkdfExpand(<$cAEAD0,                                                             h(<$cHash0,                                                                <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy                                                              >),                                                             'K_2m'>,                                                           hkdfExtract('emptyStr', sk)),                                                <$V,                                                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy                                                   >),                                                  pk(~ltk)>,                                                $cAEAD0)                                   >,                                   ~ltk)                             )                            >,                             'emptyStr'>),                          pk(~ltk.1)>,                         aeadEncrypt('emptyStr',                                    hkdfExpand(<$cAEAD0.1,                                                 h(<$cHash0.1,                                                    h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy                                                     >),                                                    <                                                    ($V⊕                                                     hkdfExpand(<$cAEAD0,                                                                  h(<$cHash0,                                                                     <'SIG', 'SIG', $cSUITE0, gx>,                                                                     'g'^~yy>),                                                                  'K_2e', '1'>,                                                                hkdfExtract('emptyStr', sk))                                                    ),                                                     (                                                     hkdfExpand(<$cAEAD0,                                                                  h(<$cHash0,                                                                     <'SIG', 'SIG', $cSUITE0, gx>,                                                                     'g'^~yy>),                                                                  'K_2e', '2'>,                                                                hkdfExtract('emptyStr', sk))⊕                                                     sign(<                                                           <$V,                                                             h(<$cHash0,                                                                <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy                                                              >),                                                             pk(~ltk)>,                                                            aeadEncrypt('emptyStr',                                                                       hkdfExpand(<$cAEAD0,                                                                                    h(<$cHash0,                                                                                       <'SIG',                                                                                        'SIG',                                                                                        $cSUITE0, gx                                                                                      >,                                                                                       'g'^~yy>),                                                                                    'K_2m'>,                                                                                  hkdfExtract('emptyStr',                                                                                              sk)),                                                                       <$V,                                                                         h(<$cHash0,                                                                            <'SIG', 'SIG', $cSUITE0,                                                                             gx>,                                                                            'g'^~yy>),                                                                         pk(~ltk)>,                                                                       $cAEAD0)                                                          >,                                                          ~ltk)                                                    )                                                   >,                                                    'emptyStr'>),                                                 'K_3m'>,                                               hkdfExtract('emptyStr', sk)),                                    <$U,                                      h(<$cHash0.1,                                         h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                         <                                         ($V⊕                                          hkdfExpand(<$cAEAD0,                                                       h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>,                                                          'g'^~yy>),                                                       'K_2e', '1'>,                                                     hkdfExtract('emptyStr', sk))                                         ),                                          (                                          hkdfExpand(<$cAEAD0,                                                       h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>,                                                          'g'^~yy>),                                                       'K_2e', '2'>,                                                     hkdfExtract('emptyStr', sk))⊕                                          sign(<                                                <$V,                                                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy                                                   >),                                                  pk(~ltk)>,                                                 aeadEncrypt('emptyStr',                                                            hkdfExpand(<$cAEAD0,                                                                         h(<$cHash0,                                                                            <'SIG', 'SIG', $cSUITE0,                                                                             gx>,                                                                            'g'^~yy>),                                                                         'K_2m'>,                                                                       hkdfExtract('emptyStr', sk)),                                                            <$V,                                                              h(<$cHash0,                                                                 <'SIG', 'SIG', $cSUITE0, gx>,                                                                 'g'^~yy>),                                                              pk(~ltk)>,                                                            $cAEAD0)                                               >,                                               ~ltk)                                         )                                        >,                                         'emptyStr'>),                                      pk(~ltk.1)>,                                    $cAEAD0.1)                       >,                       ~ltk.1)                 >,                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                 <                                 ($V⊕                                  hkdfExpand(<$cAEAD0,                                               h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                               'K_2e', '1'>,                                             hkdfExtract('emptyStr', sk))                                 ),                                  (                                  hkdfExpand(<$cAEAD0,                                               h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                               'K_2e', '2'>,                                             hkdfExtract('emptyStr', sk))⊕                                  sign(<                                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                          pk(~ltk)>,                                         aeadEncrypt('emptyStr',                                                    hkdfExpand(<$cAEAD0,                                                                 h(<$cHash0,                                                                    <'SIG', 'SIG', $cSUITE0, gx>,                                                                    'g'^~yy>),                                                                 'K_2m'>,                                                               hkdfExtract('emptyStr', sk)),                                                    <$V,                                                      h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>,                                                         'g'^~yy>),                                                      pk(~ltk)>,                                                    $cAEAD0)                                       >,                                       ~ltk)                                 )                                >,                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract('emptyStr', sk)),                 extAad3Outer, $cAEAD0.1)) @ #vk.3
4: splitEqs(2)
5: !KU( aeadEncrypt(<$U.1,                   sign(<                        <$U.1, h(<$cHash0.2, TH_2, CIPHERTEXT_2, 'emptyStr'>), pk(x)>,                         aeadEncrypt('emptyStr',                                    hkdfExpand(<$cAEAD0.2,                                                 h(<$cHash0.2, TH_2, CIPHERTEXT_2, 'emptyStr'>),                                                 'K_3m'>,                                               prk_3e2m),                                    <$U.1, h(<$cHash0.2, TH_2, CIPHERTEXT_2, 'emptyStr'>), pk(x)>,                                    $cAEAD0.2)                       >,                       x)                 >,                 hkdfExpand(<$cAEAD0.2,                              h(<$cHash0.2, TH_2, CIPHERTEXT_2, 'emptyStr'>), 'K_3ae'>,                            prk_3e2m),                 extAad3Outer.1, $cAEAD0.2)) @ #vk.4

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 12 (precomputed):
    StR2_SIG_SIG( $V.1, ~ltk.2, ~yy.1, prk_3e2m, TH_2, CIPHERTEXT_2,
                  sk, ~tid.1, m1, m2
    ) ▶₀ #i2
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vl, 0) ~~> (#vk, 0)
1: !LTK_SIG( $V.1, ~ltk.2 ) ▶₀ #vr.3
2: !PK_SIG( $V.1, pkV ) ▶₁ #vr.3
3: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)     )) @ #vk.4
4: splitEqs(0)
5: splitEqs(1)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vl, 0) ~~> (#vk.1, 0)
1: StI1_SIG_SIG( $U.1, ~ltk.2, $V.1, ~xx.1, m1, ~tid.1 ) ▶₀ #vr.3
2: !PK_SIG( $V.1, pk(x) ) ▶₁ #vr.3
3: !PK_SIG( $U.1, pkU ) ▶₂ #vr.3
4: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                hkdfExtract('emptyStr', expSk))) @ #vk.5
5: splitEqs(0)
6: splitEqs(1)
7: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.10
8: !KU( (      hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', z))⊕      sign(<<$V.1, h(<$cHash0.1, m1, gy.1>), pk(x)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2m'>,                                   hkdfExtract('emptyStr', z)),                        <$V.1, h(<$cHash0.1, m1, gy.1>), pk(x)>, $cAEAD0.1)           >,           x)     )) @ #vk.11

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vl, 0) ~~> (#vk, 0)
1: StI1_SIG_SIG( $U.1, ~ltk.2, $V.1, ~xx.1, m1, ~tid.1 ) ▶₀ #vr.3
2: !PK_SIG( $V.1, pk(x) ) ▶₁ #vr.3
3: !PK_SIG( $U.1, pkU ) ▶₂ #vr.3
4: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)     )) @ #vk.4
5: splitEqs(0)
6: splitEqs(1)
7: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.8
8: !KU( (      hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', z))⊕      sign(<<$V.1, h(<$cHash0.1, m1, gy.1>), pk(x)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2m'>,                                   hkdfExtract('emptyStr', z)),                        <$V.1, h(<$cHash0.1, m1, gy.1>), pk(x)>, $cAEAD0.1)           >,           x)     )) @ #vk.9

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: CommitI( tid.1, u, v, t ) ▶₀ #vr.3
1: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)     )) @ #vk.4
2: splitEqs(0)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 19 (precomputed):
    CommitI( tid.1, u, v, t ) ▶₀ #vr.3
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: CommitR( tid.1, u, v, t ) ▶₀ #vr.3
1: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)     )) @ #vk.4
2: splitEqs(0)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 19 (precomputed):
    CommitR( tid.1, u, v, t ) ▶₀ #vr.3
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.4, 0) ~~> (#vk, 0)
1: StI1_SIG_SIG( $U.1, ~ltk.2, $V.1, ~xx.1, m1, ~tid.1 ) ▶₀ #vr.3
2: !PK_SIG( $V.1, pk(x) ) ▶₁ #vr.3
3: !PK_SIG( $U.1, pkU ) ▶₂ #vr.3
4: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)     )) @ #vk.4
5: splitEqs(0)
6: splitEqs(1)
7: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.8
8: !KU( (      hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', z))⊕      sign(<<$V.1, h(<$cHash0.1, m1, gy.1>), pk(x)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2m'>,                                   hkdfExtract('emptyStr', z)),                        <$V.1, h(<$cHash0.1, m1, gy.1>), pk(x)>, $cAEAD0.1)           >,           x)     )) @ #vk.9

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !PK_SIG( $U.1, pk(x) ) ▶₁ #i2
1: !PK_SIG( $V.1, pkV ) ▶₂ #i2
2: !KU( aeadEncrypt(<$U,                   sign(<                        <$U,                          h(<$cHash0.1, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                             <                             ($V⊕                              hkdfExpand(<$cAEAD0,                                           h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                           'K_2e', '1'>,                                         hkdfExtract('emptyStr', sk))                             ),                              (                              hkdfExpand(<$cAEAD0,                                           h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                           'K_2e', '2'>,                                         hkdfExtract('emptyStr', sk))⊕                              sign(<                                    <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                      pk(~ltk)>,                                     aeadEncrypt('emptyStr',                                                hkdfExpand(<$cAEAD0,                                                             h(<$cHash0,                                                                <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy                                                              >),                                                             'K_2m'>,                                                           hkdfExtract('emptyStr', sk)),                                                <$V,                                                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy                                                   >),                                                  pk(~ltk)>,                                                $cAEAD0)                                   >,                                   ~ltk)                             )                            >,                             'emptyStr'>),                          pk(~ltk.1)>,                         aeadEncrypt('emptyStr',                                    hkdfExpand(<$cAEAD0.1,                                                 h(<$cHash0.1,                                                    h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy                                                     >),                                                    <                                                    ($V⊕                                                     hkdfExpand(<$cAEAD0,                                                                  h(<$cHash0,                                                                     <'SIG', 'SIG', $cSUITE0, gx>,                                                                     'g'^~yy>),                                                                  'K_2e', '1'>,                                                                hkdfExtract('emptyStr', sk))                                                    ),                                                     (                                                     hkdfExpand(<$cAEAD0,                                                                  h(<$cHash0,                                                                     <'SIG', 'SIG', $cSUITE0, gx>,                                                                     'g'^~yy>),                                                                  'K_2e', '2'>,                                                                hkdfExtract('emptyStr', sk))⊕                                                     sign(<                                                           <$V,                                                             h(<$cHash0,                                                                <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy                                                              >),                                                             pk(~ltk)>,                                                            aeadEncrypt('emptyStr',                                                                       hkdfExpand(<$cAEAD0,                                                                                    h(<$cHash0,                                                                                       <'SIG',                                                                                        'SIG',                                                                                        $cSUITE0, gx                                                                                      >,                                                                                       'g'^~yy>),                                                                                    'K_2m'>,                                                                                  hkdfExtract('emptyStr',                                                                                              sk)),                                                                       <$V,                                                                         h(<$cHash0,                                                                            <'SIG', 'SIG', $cSUITE0,                                                                             gx>,                                                                            'g'^~yy>),                                                                         pk(~ltk)>,                                                                       $cAEAD0)                                                          >,                                                          ~ltk)                                                    )                                                   >,                                                    'emptyStr'>),                                                 'K_3m'>,                                               hkdfExtract('emptyStr', sk)),                                    <$U,                                      h(<$cHash0.1,                                         h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                         <                                         ($V⊕                                          hkdfExpand(<$cAEAD0,                                                       h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>,                                                          'g'^~yy>),                                                       'K_2e', '1'>,                                                     hkdfExtract('emptyStr', sk))                                         ),                                          (                                          hkdfExpand(<$cAEAD0,                                                       h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>,                                                          'g'^~yy>),                                                       'K_2e', '2'>,                                                     hkdfExtract('emptyStr', sk))⊕                                          sign(<                                                <$V,                                                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy                                                   >),                                                  pk(~ltk)>,                                                 aeadEncrypt('emptyStr',                                                            hkdfExpand(<$cAEAD0,                                                                         h(<$cHash0,                                                                            <'SIG', 'SIG', $cSUITE0,                                                                             gx>,                                                                            'g'^~yy>),                                                                         'K_2m'>,                                                                       hkdfExtract('emptyStr', sk)),                                                            <$V,                                                              h(<$cHash0,                                                                 <'SIG', 'SIG', $cSUITE0, gx>,                                                                 'g'^~yy>),                                                              pk(~ltk)>,                                                            $cAEAD0)                                               >,                                               ~ltk)                                         )                                        >,                                         'emptyStr'>),                                      pk(~ltk.1)>,                                    $cAEAD0.1)                       >,                       ~ltk.1)                 >,                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                 <                                 ($V⊕                                  hkdfExpand(<$cAEAD0,                                               h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                               'K_2e', '1'>,                                             hkdfExtract('emptyStr', sk))                                 ),                                  (                                  hkdfExpand(<$cAEAD0,                                               h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                               'K_2e', '2'>,                                             hkdfExtract('emptyStr', sk))⊕                                  sign(<                                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                          pk(~ltk)>,                                         aeadEncrypt('emptyStr',                                                    hkdfExpand(<$cAEAD0,                                                                 h(<$cHash0,                                                                    <'SIG', 'SIG', $cSUITE0, gx>,                                                                    'g'^~yy>),                                                                 'K_2m'>,                                                               hkdfExtract('emptyStr', sk)),                                                    <$V,                                                      h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>,                                                         'g'^~yy>),                                                      pk(~ltk)>,                                                    $cAEAD0)                                       >,                                       ~ltk)                                 )                                >,                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract('emptyStr', sk)),                 extAad3Outer, $cAEAD0.1)) @ #vk.3
3: !KU( aeadEncrypt(<$U.1,                   sign(<                        <$U.1,                          h(<$cHash0.3,                             h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.1, gx.1>, 'g'^~yy.1>),                             <                             ($V.1⊕                              hkdfExpand(<$cAEAD0.2,                                           h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.1, gx.1>, 'g'^~yy.1                                            >),                                           'K_2e', '1'>,                                         hkdfExtract('emptyStr', sk))                             ),                              (                              hkdfExpand(<$cAEAD0.2,                                           h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.1, gx.1>, 'g'^~yy.1                                            >),                                           'K_2e', '2'>,                                         hkdfExtract('emptyStr', sk))⊕                              sign(<                                    <$V.1,                                      h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.1, gx.1>, 'g'^~yy.1>),                                      pk(~ltk.2)>,                                     aeadEncrypt('emptyStr',                                                hkdfExpand(<$cAEAD0.2,                                                             h(<$cHash0.2,                                                                <'SIG', 'SIG', $cSUITE0.1, gx.1>,                                                                'g'^~yy.1>),                                                             'K_2m'>,                                                           hkdfExtract('emptyStr', sk)),                                                <$V.1,                                                  h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.1, gx.1>,                                                     'g'^~yy.1>),                                                  pk(~ltk.2)>,                                                $cAEAD0.2)                                   >,                                   ~ltk.2)                             )                            >,                             'emptyStr'>),                          pk(x)>,                         aeadEncrypt('emptyStr',                                    hkdfExpand(<$cAEAD0.3,                                                 h(<$cHash0.3,                                                    h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.1, gx.1>,                                                       'g'^~yy.1>),                                                    <                                                    ($V.1⊕                                                     hkdfExpand(<$cAEAD0.2,                                                                  h(<$cHash0.2,                                                                     <'SIG', 'SIG', $cSUITE0.1, gx.1                                                                    >,                                                                     'g'^~yy.1>),                                                                  'K_2e', '1'>,                                                                hkdfExtract('emptyStr', sk))                                                    ),                                                     (                                                     hkdfExpand(<$cAEAD0.2,                                                                  h(<$cHash0.2,                                                                     <'SIG', 'SIG', $cSUITE0.1, gx.1                                                                    >,                                                                     'g'^~yy.1>),                                                                  'K_2e', '2'>,                                                                hkdfExtract('emptyStr', sk))⊕                                                     sign(<                                                           <$V.1,                                                             h(<$cHash0.2,                                                                <'SIG', 'SIG', $cSUITE0.1, gx.1>,                                                                'g'^~yy.1>),                                                             pk(~ltk.2)>,                                                            aeadEncrypt('emptyStr',                                                                       hkdfExpand(<$cAEAD0.2,                                                                                    h(<$cHash0.2,                                                                                       <'SIG',                                                                                        'SIG',                                                                                        $cSUITE0.1,                                                                                        gx.1>,                                                                                       'g'^~yy.1>),                                                                                    'K_2m'>,                                                                                  hkdfExtract('emptyStr',                                                                                              sk)),                                                                       <$V.1,                                                                         h(<$cHash0.2,                                                                            <'SIG', 'SIG',                                                                             $cSUITE0.1, gx.1>,                                                                            'g'^~yy.1>),                                                                         pk(~ltk.2)>,                                                                       $cAEAD0.2)                                                          >,                                                          ~ltk.2)                                                    )                                                   >,                                                    'emptyStr'>),                                                 'K_3m'>,                                               hkdfExtract('emptyStr', sk)),                                    <$U.1,                                      h(<$cHash0.3,                                         h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.1, gx.1>, 'g'^~yy.1                                          >),                                         <                                         ($V.1⊕                                          hkdfExpand(<$cAEAD0.2,                                                       h(<$cHash0.2,                                                          <'SIG', 'SIG', $cSUITE0.1, gx.1>, 'g'^~yy.1                                                        >),                                                       'K_2e', '1'>,                                                     hkdfExtract('emptyStr', sk))                                         ),                                          (                                          hkdfExpand(<$cAEAD0.2,                                                       h(<$cHash0.2,                                                          <'SIG', 'SIG', $cSUITE0.1, gx.1>, 'g'^~yy.1                                                        >),                                                       'K_2e', '2'>,                                                     hkdfExtract('emptyStr', sk))⊕                                          sign(<                                                <$V.1,                                                  h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.1, gx.1>,                                                     'g'^~yy.1>),                                                  pk(~ltk.2)>,                                                 aeadEncrypt('emptyStr',                                                            hkdfExpand(<$cAEAD0.2,                                                                         h(<$cHash0.2,                                                                            <'SIG', 'SIG',                                                                             $cSUITE0.1, gx.1>,                                                                            'g'^~yy.1>),                                                                         'K_2m'>,                                                                       hkdfExtract('emptyStr', sk)),                                                            <$V.1,                                                              h(<$cHash0.2,                                                                 <'SIG', 'SIG', $cSUITE0.1, gx.1>,                                                                 'g'^~yy.1>),                                                              pk(~ltk.2)>,                                                            $cAEAD0.2)                                               >,                                               ~ltk.2)                                         )                                        >,                                         'emptyStr'>),                                      pk(x)>,                                    $cAEAD0.3)                       >,                       x)                 >,                 hkdfExpand(<$cAEAD0.3,                              h(<$cHash0.3,                                 h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.1, gx.1>, 'g'^~yy.1>),                                 <                                 ($V.1⊕                                  hkdfExpand(<$cAEAD0.2,                                               h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.1, gx.1>,                                                  'g'^~yy.1>),                                               'K_2e', '1'>,                                             hkdfExtract('emptyStr', sk))                                 ),                                  (                                  hkdfExpand(<$cAEAD0.2,                                               h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.1, gx.1>,                                                  'g'^~yy.1>),                                               'K_2e', '2'>,                                             hkdfExtract('emptyStr', sk))⊕                                  sign(<                                        <$V.1,                                          h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.1, gx.1>, 'g'^~yy.1                                           >),                                          pk(~ltk.2)>,                                         aeadEncrypt('emptyStr',                                                    hkdfExpand(<$cAEAD0.2,                                                                 h(<$cHash0.2,                                                                    <'SIG', 'SIG', $cSUITE0.1, gx.1                                                                   >,                                                                    'g'^~yy.1>),                                                                 'K_2m'>,                                                               hkdfExtract('emptyStr', sk)),                                                    <$V.1,                                                      h(<$cHash0.2,                                                         <'SIG', 'SIG', $cSUITE0.1, gx.1>, 'g'^~yy.1                                                       >),                                                      pk(~ltk.2)>,                                                    $cAEAD0.2)                                       >,                                       ~ltk.2)                                 )                                >,                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract('emptyStr', sk)),                 extAad3Outer.1, $cAEAD0.3)) @ #vk.4
4: splitEqs(2)
5: splitEqs(3)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 13 (precomputed): !PK_SIG( $U.1, pk(x) ) ▶₁ #i2
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !PK_SIG( $U, pkU ) ▶₂ #i
1: StI1_SIG_SIG( $U.1, ~ltk.2, $V.1, ~xx.1, m1, ~tid.1 ) ▶₀ #i2
2: !PK_SIG( $V.1, pk(x) ) ▶₁ #i2
3: !PK_SIG( $U.1, pkU.1 ) ▶₂ #i2
4: !KU( ($V⊕      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))     )) @ #vk.3
5: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)     )) @ #vk.4
6: splitEqs(0)
7: splitEqs(1)
8: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))     )) @ #vk.8
9: !KU( (      hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<<$V.1, h(<$cHash0.1, m1, gy.1>), pk(x)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V.1, h(<$cHash0.1, m1, gy.1>), pk(x)>, $cAEAD0.1)           >,           x)     )) @ #vk.9

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 5 (precomputed): !PK_SIG( $U, pkU ) ▶₂ #i
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: StI1_SIG_SIG( $U.1, ~ltk.2, $V.1, ~xx.1, m1, ~tid.1 ) ▶₀ #i2
1: !PK_SIG( $V.1, pk(x) ) ▶₁ #i2
2: !PK_SIG( $U.1, pkU ) ▶₂ #i2
3: !KU( ($V⊕      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))     )) @ #vk.3
4: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)     )) @ #vk.4
5: splitEqs(0)
6: splitEqs(1)
7: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))     )) @ #vk.8
8: !KU( (      hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<<$V.1, h(<$cHash0.1, m1, gy.1>), pk(x)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V.1, h(<$cHash0.1, m1, gy.1>), pk(x)>, $cAEAD0.1)           >,           x)     )) @ #vk.9

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 15 (precomputed):
    StI1_SIG_SIG( $U.1, ~ltk.2, $V.1, ~xx.1, m1, ~tid.1 ) ▶₀ #i2
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !PK_SIG( $V.1, pkV ) ▶₂ #i2
1: !KU( aeadEncrypt(<$U,                   sign(<                        <$U,                          h(<$cHash0.1, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                             <                             ($V⊕                              hkdfExpand(<$cAEAD0,                                           h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                           'K_2e', '1'>,                                         hkdfExtract('emptyStr', sk))                             ),                              (                              hkdfExpand(<$cAEAD0,                                           h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                           'K_2e', '2'>,                                         hkdfExtract('emptyStr', sk))⊕                              sign(<                                    <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                      pk(~ltk)>,                                     aeadEncrypt('emptyStr',                                                hkdfExpand(<$cAEAD0,                                                             h(<$cHash0,                                                                <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy                                                              >),                                                             'K_2m'>,                                                           hkdfExtract('emptyStr', sk)),                                                <$V,                                                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy                                                   >),                                                  pk(~ltk)>,                                                $cAEAD0)                                   >,                                   ~ltk)                             )                            >,                             'emptyStr'>),                          pk(~ltk.1)>,                         aeadEncrypt('emptyStr',                                    hkdfExpand(<$cAEAD0.1,                                                 h(<$cHash0.1,                                                    h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy                                                     >),                                                    <                                                    ($V⊕                                                     hkdfExpand(<$cAEAD0,                                                                  h(<$cHash0,                                                                     <'SIG', 'SIG', $cSUITE0, gx>,                                                                     'g'^~yy>),                                                                  'K_2e', '1'>,                                                                hkdfExtract('emptyStr', sk))                                                    ),                                                     (                                                     hkdfExpand(<$cAEAD0,                                                                  h(<$cHash0,                                                                     <'SIG', 'SIG', $cSUITE0, gx>,                                                                     'g'^~yy>),                                                                  'K_2e', '2'>,                                                                hkdfExtract('emptyStr', sk))⊕                                                     sign(<                                                           <$V,                                                             h(<$cHash0,                                                                <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy                                                              >),                                                             pk(~ltk)>,                                                            aeadEncrypt('emptyStr',                                                                       hkdfExpand(<$cAEAD0,                                                                                    h(<$cHash0,                                                                                       <'SIG',                                                                                        'SIG',                                                                                        $cSUITE0, gx                                                                                      >,                                                                                       'g'^~yy>),                                                                                    'K_2m'>,                                                                                  hkdfExtract('emptyStr',                                                                                              sk)),                                                                       <$V,                                                                         h(<$cHash0,                                                                            <'SIG', 'SIG', $cSUITE0,                                                                             gx>,                                                                            'g'^~yy>),                                                                         pk(~ltk)>,                                                                       $cAEAD0)                                                          >,                                                          ~ltk)                                                    )                                                   >,                                                    'emptyStr'>),                                                 'K_3m'>,                                               hkdfExtract('emptyStr', sk)),                                    <$U,                                      h(<$cHash0.1,                                         h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                         <                                         ($V⊕                                          hkdfExpand(<$cAEAD0,                                                       h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>,                                                          'g'^~yy>),                                                       'K_2e', '1'>,                                                     hkdfExtract('emptyStr', sk))                                         ),                                          (                                          hkdfExpand(<$cAEAD0,                                                       h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>,                                                          'g'^~yy>),                                                       'K_2e', '2'>,                                                     hkdfExtract('emptyStr', sk))⊕                                          sign(<                                                <$V,                                                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy                                                   >),                                                  pk(~ltk)>,                                                 aeadEncrypt('emptyStr',                                                            hkdfExpand(<$cAEAD0,                                                                         h(<$cHash0,                                                                            <'SIG', 'SIG', $cSUITE0,                                                                             gx>,                                                                            'g'^~yy>),                                                                         'K_2m'>,                                                                       hkdfExtract('emptyStr', sk)),                                                            <$V,                                                              h(<$cHash0,                                                                 <'SIG', 'SIG', $cSUITE0, gx>,                                                                 'g'^~yy>),                                                              pk(~ltk)>,                                                            $cAEAD0)                                               >,                                               ~ltk)                                         )                                        >,                                         'emptyStr'>),                                      pk(~ltk.1)>,                                    $cAEAD0.1)                       >,                       ~ltk.1)                 >,                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                 <                                 ($V⊕                                  hkdfExpand(<$cAEAD0,                                               h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                               'K_2e', '1'>,                                             hkdfExtract('emptyStr', sk))                                 ),                                  (                                  hkdfExpand(<$cAEAD0,                                               h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                               'K_2e', '2'>,                                             hkdfExtract('emptyStr', sk))⊕                                  sign(<                                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                          pk(~ltk)>,                                         aeadEncrypt('emptyStr',                                                    hkdfExpand(<$cAEAD0,                                                                 h(<$cHash0,                                                                    <'SIG', 'SIG', $cSUITE0, gx>,                                                                    'g'^~yy>),                                                                 'K_2m'>,                                                               hkdfExtract('emptyStr', sk)),                                                    <$V,                                                      h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>,                                                         'g'^~yy>),                                                      pk(~ltk)>,                                                    $cAEAD0)                                       >,                                       ~ltk)                                 )                                >,                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract('emptyStr', sk)),                 extAad3Outer, $cAEAD0.1)) @ #vk.3
2: !KU( aeadEncrypt(<$U.1,                   sign(<                        <$U.1,                          h(<$cHash0.3,                             h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.1, gx.1>, 'g'^~yy.1>),                             <                             ($V.1⊕                              hkdfExpand(<$cAEAD0.2,                                           h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.1, gx.1>, 'g'^~yy.1                                            >),                                           'K_2e', '1'>,                                         hkdfExtract('emptyStr', sk))                             ),                              (                              hkdfExpand(<$cAEAD0.2,                                           h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.1, gx.1>, 'g'^~yy.1                                            >),                                           'K_2e', '2'>,                                         hkdfExtract('emptyStr', sk))⊕                              sign(<                                    <$V.1,                                      h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.1, gx.1>, 'g'^~yy.1>),                                      pk(~ltk.2)>,                                     aeadEncrypt('emptyStr',                                                hkdfExpand(<$cAEAD0.2,                                                             h(<$cHash0.2,                                                                <'SIG', 'SIG', $cSUITE0.1, gx.1>,                                                                'g'^~yy.1>),                                                             'K_2m'>,                                                           hkdfExtract('emptyStr', sk)),                                                <$V.1,                                                  h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.1, gx.1>,                                                     'g'^~yy.1>),                                                  pk(~ltk.2)>,                                                $cAEAD0.2)                                   >,                                   ~ltk.2)                             )                            >,                             'emptyStr'>),                          pk(~ltk.3)>,                         aeadEncrypt('emptyStr',                                    hkdfExpand(<$cAEAD0.3,                                                 h(<$cHash0.3,                                                    h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.1, gx.1>,                                                       'g'^~yy.1>),                                                    <                                                    ($V.1⊕                                                     hkdfExpand(<$cAEAD0.2,                                                                  h(<$cHash0.2,                                                                     <'SIG', 'SIG', $cSUITE0.1, gx.1                                                                    >,                                                                     'g'^~yy.1>),                                                                  'K_2e', '1'>,                                                                hkdfExtract('emptyStr', sk))                                                    ),                                                     (                                                     hkdfExpand(<$cAEAD0.2,                                                                  h(<$cHash0.2,                                                                     <'SIG', 'SIG', $cSUITE0.1, gx.1                                                                    >,                                                                     'g'^~yy.1>),                                                                  'K_2e', '2'>,                                                                hkdfExtract('emptyStr', sk))⊕                                                     sign(<                                                           <$V.1,                                                             h(<$cHash0.2,                                                                <'SIG', 'SIG', $cSUITE0.1, gx.1>,                                                                'g'^~yy.1>),                                                             pk(~ltk.2)>,                                                            aeadEncrypt('emptyStr',                                                                       hkdfExpand(<$cAEAD0.2,                                                                                    h(<$cHash0.2,                                                                                       <'SIG',                                                                                        'SIG',                                                                                        $cSUITE0.1,                                                                                        gx.1>,                                                                                       'g'^~yy.1>),                                                                                    'K_2m'>,                                                                                  hkdfExtract('emptyStr',                                                                                              sk)),                                                                       <$V.1,                                                                         h(<$cHash0.2,                                                                            <'SIG', 'SIG',                                                                             $cSUITE0.1, gx.1>,                                                                            'g'^~yy.1>),                                                                         pk(~ltk.2)>,                                                                       $cAEAD0.2)                                                          >,                                                          ~ltk.2)                                                    )                                                   >,                                                    'emptyStr'>),                                                 'K_3m'>,                                               hkdfExtract('emptyStr', sk)),                                    <$U.1,                                      h(<$cHash0.3,                                         h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.1, gx.1>, 'g'^~yy.1                                          >),                                         <                                         ($V.1⊕                                          hkdfExpand(<$cAEAD0.2,                                                       h(<$cHash0.2,                                                          <'SIG', 'SIG', $cSUITE0.1, gx.1>, 'g'^~yy.1                                                        >),                                                       'K_2e', '1'>,                                                     hkdfExtract('emptyStr', sk))                                         ),                                          (                                          hkdfExpand(<$cAEAD0.2,                                                       h(<$cHash0.2,                                                          <'SIG', 'SIG', $cSUITE0.1, gx.1>, 'g'^~yy.1                                                        >),                                                       'K_2e', '2'>,                                                     hkdfExtract('emptyStr', sk))⊕                                          sign(<                                                <$V.1,                                                  h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.1, gx.1>,                                                     'g'^~yy.1>),                                                  pk(~ltk.2)>,                                                 aeadEncrypt('emptyStr',                                                            hkdfExpand(<$cAEAD0.2,                                                                         h(<$cHash0.2,                                                                            <'SIG', 'SIG',                                                                             $cSUITE0.1, gx.1>,                                                                            'g'^~yy.1>),                                                                         'K_2m'>,                                                                       hkdfExtract('emptyStr', sk)),                                                            <$V.1,                                                              h(<$cHash0.2,                                                                 <'SIG', 'SIG', $cSUITE0.1, gx.1>,                                                                 'g'^~yy.1>),                                                              pk(~ltk.2)>,                                                            $cAEAD0.2)                                               >,                                               ~ltk.2)                                         )                                        >,                                         'emptyStr'>),                                      pk(~ltk.3)>,                                    $cAEAD0.3)                       >,                       ~ltk.3)                 >,                 hkdfExpand(<$cAEAD0.3,                              h(<$cHash0.3,                                 h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.1, gx.1>, 'g'^~yy.1>),                                 <                                 ($V.1⊕                                  hkdfExpand(<$cAEAD0.2,                                               h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.1, gx.1>,                                                  'g'^~yy.1>),                                               'K_2e', '1'>,                                             hkdfExtract('emptyStr', sk))                                 ),                                  (                                  hkdfExpand(<$cAEAD0.2,                                               h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.1, gx.1>,                                                  'g'^~yy.1>),                                               'K_2e', '2'>,                                             hkdfExtract('emptyStr', sk))⊕                                  sign(<                                        <$V.1,                                          h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.1, gx.1>, 'g'^~yy.1                                           >),                                          pk(~ltk.2)>,                                         aeadEncrypt('emptyStr',                                                    hkdfExpand(<$cAEAD0.2,                                                                 h(<$cHash0.2,                                                                    <'SIG', 'SIG', $cSUITE0.1, gx.1                                                                   >,                                                                    'g'^~yy.1>),                                                                 'K_2m'>,                                                               hkdfExtract('emptyStr', sk)),                                                    <$V.1,                                                      h(<$cHash0.2,                                                         <'SIG', 'SIG', $cSUITE0.1, gx.1>, 'g'^~yy.1                                                       >),                                                      pk(~ltk.2)>,                                                    $cAEAD0.2)                                       >,                                       ~ltk.2)                                 )                                >,                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract('emptyStr', sk)),                 extAad3Outer.1, $cAEAD0.3)) @ #vk.4
3: splitEqs(2)
4: splitEqs(3)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 14 (precomputed): !PK_SIG( $V.1, pkV ) ▶₂ #i2
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !PK_SIG( $V.1, pk(x) ) ▶₁ #i2
1: !PK_SIG( $U.1, pkU ) ▶₂ #i2
2: !KU( ($V⊕      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))     )) @ #vk.3
3: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)     )) @ #vk.4
4: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))     )) @ #vk.8
5: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>), pk(x)            >,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>), pk(x)                        >,                        $cAEAD0.1)           >,           x)     )) @ #vk.9
6: splitEqs(0)
7: splitEqs(1)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 16 (precomputed): !PK_SIG( $V.1, pk(x) ) ▶₁ #i2
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !PK_SIG( $V, pk(x) ) ▶₁ #i
1: !PK_SIG( $U, pkU ) ▶₂ #i
2: StI1_SIG_SIG( $U.1, ~ltk.1, $V.1, ~xx.1, m1, ~tid.1 ) ▶₀ #i2
3: !PK_SIG( $V.1, pk(x.1) ) ▶₁ #i2
4: !PK_SIG( $U.1, pkU.1 ) ▶₂ #i2
5: !KU( ($V⊕      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))     )) @ #vk.3
6: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), pk(x)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), pk(x)>,                        $cAEAD0)           >,           x)     )) @ #vk.4
7: splitEqs(0)
8: splitEqs(1)
9: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))     )) @ #vk.8
10: !KU( (      hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<<$V.1, h(<$cHash0.1, m1, gy.1>), pk(x.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V.1, h(<$cHash0.1, m1, gy.1>), pk(x.1)>, $cAEAD0.1)           >,           x.1)     )) @ #vk.9

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 4 (precomputed): !PK_SIG( $V, pk(x) ) ▶₁ #i
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( aeadEncrypt(<$U,                   sign(<                        <$U,                          h(<$cHash0.1, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                             <                             ($V⊕                              hkdfExpand(<$cAEAD0,                                           h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                           'K_2e', '1'>,                                         hkdfExtract('emptyStr', sk))                             ),                              (                              hkdfExpand(<$cAEAD0,                                           h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                           'K_2e', '2'>,                                         hkdfExtract('emptyStr', sk))⊕                              sign(<                                    <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                      pk(~ltk)>,                                     aeadEncrypt('emptyStr',                                                hkdfExpand(<$cAEAD0,                                                             h(<$cHash0,                                                                <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy                                                              >),                                                             'K_2m'>,                                                           hkdfExtract('emptyStr', sk)),                                                <$V,                                                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy                                                   >),                                                  pk(~ltk)>,                                                $cAEAD0)                                   >,                                   ~ltk)                             )                            >,                             'emptyStr'>),                          pk(~ltk.1)>,                         aeadEncrypt('emptyStr',                                    hkdfExpand(<$cAEAD0.1,                                                 h(<$cHash0.1,                                                    h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy                                                     >),                                                    <                                                    ($V⊕                                                     hkdfExpand(<$cAEAD0,                                                                  h(<$cHash0,                                                                     <'SIG', 'SIG', $cSUITE0, gx>,                                                                     'g'^~yy>),                                                                  'K_2e', '1'>,                                                                hkdfExtract('emptyStr', sk))                                                    ),                                                     (                                                     hkdfExpand(<$cAEAD0,                                                                  h(<$cHash0,                                                                     <'SIG', 'SIG', $cSUITE0, gx>,                                                                     'g'^~yy>),                                                                  'K_2e', '2'>,                                                                hkdfExtract('emptyStr', sk))⊕                                                     sign(<                                                           <$V,                                                             h(<$cHash0,                                                                <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy                                                              >),                                                             pk(~ltk)>,                                                            aeadEncrypt('emptyStr',                                                                       hkdfExpand(<$cAEAD0,                                                                                    h(<$cHash0,                                                                                       <'SIG',                                                                                        'SIG',                                                                                        $cSUITE0, gx                                                                                      >,                                                                                       'g'^~yy>),                                                                                    'K_2m'>,                                                                                  hkdfExtract('emptyStr',                                                                                              sk)),                                                                       <$V,                                                                         h(<$cHash0,                                                                            <'SIG', 'SIG', $cSUITE0,                                                                             gx>,                                                                            'g'^~yy>),                                                                         pk(~ltk)>,                                                                       $cAEAD0)                                                          >,                                                          ~ltk)                                                    )                                                   >,                                                    'emptyStr'>),                                                 'K_3m'>,                                               hkdfExtract('emptyStr', sk)),                                    <$U,                                      h(<$cHash0.1,                                         h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                         <                                         ($V⊕                                          hkdfExpand(<$cAEAD0,                                                       h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>,                                                          'g'^~yy>),                                                       'K_2e', '1'>,                                                     hkdfExtract('emptyStr', sk))                                         ),                                          (                                          hkdfExpand(<$cAEAD0,                                                       h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>,                                                          'g'^~yy>),                                                       'K_2e', '2'>,                                                     hkdfExtract('emptyStr', sk))⊕                                          sign(<                                                <$V,                                                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy                                                   >),                                                  pk(~ltk)>,                                                 aeadEncrypt('emptyStr',                                                            hkdfExpand(<$cAEAD0,                                                                         h(<$cHash0,                                                                            <'SIG', 'SIG', $cSUITE0,                                                                             gx>,                                                                            'g'^~yy>),                                                                         'K_2m'>,                                                                       hkdfExtract('emptyStr', sk)),                                                            <$V,                                                              h(<$cHash0,                                                                 <'SIG', 'SIG', $cSUITE0, gx>,                                                                 'g'^~yy>),                                                              pk(~ltk)>,                                                            $cAEAD0)                                               >,                                               ~ltk)                                         )                                        >,                                         'emptyStr'>),                                      pk(~ltk.1)>,                                    $cAEAD0.1)                       >,                       ~ltk.1)                 >,                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                 <                                 ($V⊕                                  hkdfExpand(<$cAEAD0,                                               h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                               'K_2e', '1'>,                                             hkdfExtract('emptyStr', sk))                                 ),                                  (                                  hkdfExpand(<$cAEAD0,                                               h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                               'K_2e', '2'>,                                             hkdfExtract('emptyStr', sk))⊕                                  sign(<                                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                          pk(~ltk)>,                                         aeadEncrypt('emptyStr',                                                    hkdfExpand(<$cAEAD0,                                                                 h(<$cHash0,                                                                    <'SIG', 'SIG', $cSUITE0, gx>,                                                                    'g'^~yy>),                                                                 'K_2m'>,                                                               hkdfExtract('emptyStr', sk)),                                                    <$V,                                                      h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>,                                                         'g'^~yy>),                                                      pk(~ltk)>,                                                    $cAEAD0)                                       >,                                       ~ltk)                                 )                                >,                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract('emptyStr', sk)),                 extAad3Outer, $cAEAD0.1)) @ #vk.3
1: !KU( aeadEncrypt(<$U.1,                   sign(<                        <$U.1,                          h(<$cHash0.3,                             h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.1, gx.1>, 'g'^~yy.1>),                             <                             ($V.1⊕                              hkdfExpand(<$cAEAD0.2,                                           h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.1, gx.1>, 'g'^~yy.1                                            >),                                           'K_2e', '1'>,                                         hkdfExtract('emptyStr', sk))                             ),                              (                              hkdfExpand(<$cAEAD0.2,                                           h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.1, gx.1>, 'g'^~yy.1                                            >),                                           'K_2e', '2'>,                                         hkdfExtract('emptyStr', sk))⊕                              sign(<                                    <$V.1,                                      h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.1, gx.1>, 'g'^~yy.1>),                                      pk(~ltk.2)>,                                     aeadEncrypt('emptyStr',                                                hkdfExpand(<$cAEAD0.2,                                                             h(<$cHash0.2,                                                                <'SIG', 'SIG', $cSUITE0.1, gx.1>,                                                                'g'^~yy.1>),                                                             'K_2m'>,                                                           hkdfExtract('emptyStr', sk)),                                                <$V.1,                                                  h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.1, gx.1>,                                                     'g'^~yy.1>),                                                  pk(~ltk.2)>,                                                $cAEAD0.2)                                   >,                                   ~ltk.2)                             )                            >,                             'emptyStr'>),                          pk(~ltk.3)>,                         aeadEncrypt('emptyStr',                                    hkdfExpand(<$cAEAD0.3,                                                 h(<$cHash0.3,                                                    h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.1, gx.1>,                                                       'g'^~yy.1>),                                                    <                                                    ($V.1⊕                                                     hkdfExpand(<$cAEAD0.2,                                                                  h(<$cHash0.2,                                                                     <'SIG', 'SIG', $cSUITE0.1, gx.1                                                                    >,                                                                     'g'^~yy.1>),                                                                  'K_2e', '1'>,                                                                hkdfExtract('emptyStr', sk))                                                    ),                                                     (                                                     hkdfExpand(<$cAEAD0.2,                                                                  h(<$cHash0.2,                                                                     <'SIG', 'SIG', $cSUITE0.1, gx.1                                                                    >,                                                                     'g'^~yy.1>),                                                                  'K_2e', '2'>,                                                                hkdfExtract('emptyStr', sk))⊕                                                     sign(<                                                           <$V.1,                                                             h(<$cHash0.2,                                                                <'SIG', 'SIG', $cSUITE0.1, gx.1>,                                                                'g'^~yy.1>),                                                             pk(~ltk.2)>,                                                            aeadEncrypt('emptyStr',                                                                       hkdfExpand(<$cAEAD0.2,                                                                                    h(<$cHash0.2,                                                                                       <'SIG',                                                                                        'SIG',                                                                                        $cSUITE0.1,                                                                                        gx.1>,                                                                                       'g'^~yy.1>),                                                                                    'K_2m'>,                                                                                  hkdfExtract('emptyStr',                                                                                              sk)),                                                                       <$V.1,                                                                         h(<$cHash0.2,                                                                            <'SIG', 'SIG',                                                                             $cSUITE0.1, gx.1>,                                                                            'g'^~yy.1>),                                                                         pk(~ltk.2)>,                                                                       $cAEAD0.2)                                                          >,                                                          ~ltk.2)                                                    )                                                   >,                                                    'emptyStr'>),                                                 'K_3m'>,                                               hkdfExtract('emptyStr', sk)),                                    <$U.1,                                      h(<$cHash0.3,                                         h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.1, gx.1>, 'g'^~yy.1                                          >),                                         <                                         ($V.1⊕                                          hkdfExpand(<$cAEAD0.2,                                                       h(<$cHash0.2,                                                          <'SIG', 'SIG', $cSUITE0.1, gx.1>, 'g'^~yy.1                                                        >),                                                       'K_2e', '1'>,                                                     hkdfExtract('emptyStr', sk))                                         ),                                          (                                          hkdfExpand(<$cAEAD0.2,                                                       h(<$cHash0.2,                                                          <'SIG', 'SIG', $cSUITE0.1, gx.1>, 'g'^~yy.1                                                        >),                                                       'K_2e', '2'>,                                                     hkdfExtract('emptyStr', sk))⊕                                          sign(<                                                <$V.1,                                                  h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.1, gx.1>,                                                     'g'^~yy.1>),                                                  pk(~ltk.2)>,                                                 aeadEncrypt('emptyStr',                                                            hkdfExpand(<$cAEAD0.2,                                                                         h(<$cHash0.2,                                                                            <'SIG', 'SIG',                                                                             $cSUITE0.1, gx.1>,                                                                            'g'^~yy.1>),                                                                         'K_2m'>,                                                                       hkdfExtract('emptyStr', sk)),                                                            <$V.1,                                                              h(<$cHash0.2,                                                                 <'SIG', 'SIG', $cSUITE0.1, gx.1>,                                                                 'g'^~yy.1>),                                                              pk(~ltk.2)>,                                                            $cAEAD0.2)                                               >,                                               ~ltk.2)                                         )                                        >,                                         'emptyStr'>),                                      pk(~ltk.3)>,                                    $cAEAD0.3)                       >,                       ~ltk.3)                 >,                 hkdfExpand(<$cAEAD0.3,                              h(<$cHash0.3,                                 h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.1, gx.1>, 'g'^~yy.1>),                                 <                                 ($V.1⊕                                  hkdfExpand(<$cAEAD0.2,                                               h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.1, gx.1>,                                                  'g'^~yy.1>),                                               'K_2e', '1'>,                                             hkdfExtract('emptyStr', sk))                                 ),                                  (                                  hkdfExpand(<$cAEAD0.2,                                               h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.1, gx.1>,                                                  'g'^~yy.1>),                                               'K_2e', '2'>,                                             hkdfExtract('emptyStr', sk))⊕                                  sign(<                                        <$V.1,                                          h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.1, gx.1>, 'g'^~yy.1                                           >),                                          pk(~ltk.2)>,                                         aeadEncrypt('emptyStr',                                                    hkdfExpand(<$cAEAD0.2,                                                                 h(<$cHash0.2,                                                                    <'SIG', 'SIG', $cSUITE0.1, gx.1                                                                   >,                                                                    'g'^~yy.1>),                                                                 'K_2m'>,                                                               hkdfExtract('emptyStr', sk)),                                                    <$V.1,                                                      h(<$cHash0.2,                                                         <'SIG', 'SIG', $cSUITE0.1, gx.1>, 'g'^~yy.1                                                       >),                                                      pk(~ltk.2)>,                                                    $cAEAD0.2)                                       >,                                       ~ltk.2)                                 )                                >,                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract('emptyStr', sk)),                 extAad3Outer.1, $cAEAD0.3)) @ #vk.4
2: splitEqs(2)
3: splitEqs(3)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !PK_SIG( $U, pkU ) ▶₂ #i
1: StI1_SIG_SIG( $U.1, ~ltk.2, $V.1, ~xx.1, m1, ~tid.1 ) ▶₀ #i2
2: !PK_SIG( $V.1, pk(x) ) ▶₁ #i2
3: !PK_SIG( $U.1, pkU.1 ) ▶₂ #i2
4: !KU( ($V⊕      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))     )) @ #vk.3
5: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)     )) @ #vk.4
6: splitEqs(0)
7: splitEqs(1)
8: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))     )) @ #vk.8
9: !KU( (      hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<<$V.1, h(<$cHash0.1, m1, gy.1>), pk(x)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V.1, h(<$cHash0.1, m1, gy.1>), pk(x)>, $cAEAD0.1)           >,           x)     )) @ #vk.9

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 5 (precomputed): !PK_SIG( $U, pkU ) ▶₂ #i
  solved goal nr. 8 (precomputed):
    !KU( aeadEncrypt(<$U, 
                      sign(<
                            <$U, 
                             h(<$cHash0.1, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 
                                <
                                 ($V⊕
                                  hkdfExpand(<$cAEAD0, 
                                              h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 
                                              'K_2e', '1'>,
                                             hkdfExtract('emptyStr', sk))
                                 ), 
                                 (
                                  hkdfExpand(<$cAEAD0, 
                                              h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 
                                              'K_2e', '2'>,
                                             hkdfExtract('emptyStr', sk))⊕
                                  sign(<
                                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 
                                         pk(~ltk)>, 
                                        aeadEncrypt('emptyStr',
                                                    hkdfExpand(<$cAEAD0, 
                                                                h(<$cHash0, 
                                                                   <'SIG', 'SIG', $cSUITE0, gx>, 
                                                                   'g'^~yy>), 
                                                                'K_2m'>,
                                                               hkdfExtract('emptyStr', sk)),
                                                    <$V, 
                                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 
                                                        'g'^~yy>), 
                                                     pk(~ltk)>,
                                                    $cAEAD0)
                                       >,
                                       ~ltk)
                                 )
                                >, 
                                'emptyStr'>), 
                             pk(~ltk.1)>, 
                            aeadEncrypt('emptyStr',
                                        hkdfExpand(<$cAEAD0.1, 
                                                    h(<$cHash0.1, 
                                                       h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 
                                                          'g'^~yy>), 
                                                       <
                                                        ($V⊕
                                                         hkdfExpand(<$cAEAD0, 
                                                                     h(<$cHash0, 
                                                                        <'SIG', 'SIG', $cSUITE0, gx
                                                                        >, 
                                                                        'g'^~yy>), 
                                                                     'K_2e', '1'>,
                                                                    hkdfExtract('emptyStr', sk))
                                                        ), 
                                                        (
                                                         hkdfExpand(<$cAEAD0, 
                                                                     h(<$cHash0, 
                                                                        <'SIG', 'SIG', $cSUITE0, gx
                                                                        >, 
                                                                        'g'^~yy>), 
                                                                     'K_2e', '2'>,
                                                                    hkdfExtract('emptyStr', sk))⊕
                                                         sign(<
                                                               <$V, 
                                                                h(<$cHash0, 
                                                                   <'SIG', 'SIG', $cSUITE0, gx>, 
                                                                   'g'^~yy>), 
                                                                pk(~ltk)>, 
                                                               aeadEncrypt('emptyStr',
                                                                           hkdfExpand(<$cAEAD0, 
                                                                                       h(<$cHash0, 
                                                                                          <'SIG', 
                                                                                           'SIG', 
                                                                                           $cSUITE0, 
                                                                                           gx>, 
                                                                                          'g'^~yy
                                                                                         >), 
                                                                                       'K_2m'>,
                                                                                      hkdfExtract('emptyStr',
                                                                                                  sk)),
                                                                           <$V, 
                                                                            h(<$cHash0, 
                                                                               <'SIG', 'SIG', 
                                                                                $cSUITE0, gx>, 
                                                                               'g'^~yy>), 
                                                                            pk(~ltk)>,
                                                                           $cAEAD0)
                                                              >,
                                                              ~ltk)
                                                        )
                                                       >, 
                                                       'emptyStr'>), 
                                                    'K_3m'>,
                                                   hkdfExtract('emptyStr', sk)),
                                        <$U, 
                                         h(<$cHash0.1, 
                                            h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 
                                            <
                                             ($V⊕
                                              hkdfExpand(<$cAEAD0, 
                                                          h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 
                                                             'g'^~yy>), 
                                                          'K_2e', '1'>,
                                                         hkdfExtract('emptyStr', sk))
                                             ), 
                                             (
                                              hkdfExpand(<$cAEAD0, 
                                                          h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 
                                                             'g'^~yy>), 
                                                          'K_2e', '2'>,
                                                         hkdfExtract('emptyStr', sk))⊕
                                              sign(<
                                                    <$V, 
                                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 
                                                        'g'^~yy>), 
                                                     pk(~ltk)>, 
                                                    aeadEncrypt('emptyStr',
                                                                hkdfExpand(<$cAEAD0, 
                                                                            h(<$cHash0, 
                                                                               <'SIG', 'SIG', 
                                                                                $cSUITE0, gx>, 
                                                                               'g'^~yy>), 
                                                                            'K_2m'>,
                                                                           hkdfExtract('emptyStr',
                                                                                       sk)),
                                                                <$V, 
                                                                 h(<$cHash0, 
                                                                    <'SIG', 'SIG', $cSUITE0, gx>, 
                                                                    'g'^~yy>), 
                                                                 pk(~ltk)>,
                                                                $cAEAD0)
                                                   >,
                                                   ~ltk)
                                             )
                                            >, 
                                            'emptyStr'>), 
                                         pk(~ltk.1)>,
                                        $cAEAD0.1)
                           >,
                           ~ltk.1)
                     >,
                     hkdfExpand(<$cAEAD0.1, 
                                 h(<$cHash0.1, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 
                                    <
                                     ($V⊕
                                      hkdfExpand(<$cAEAD0, 
                                                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy
                                                    >), 
                                                  'K_2e', '1'>,
                                                 hkdfExtract('emptyStr', sk))
                                     ), 
                                     (
                                      hkdfExpand(<$cAEAD0, 
                                                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy
                                                    >), 
                                                  'K_2e', '2'>,
                                                 hkdfExtract('emptyStr', sk))⊕
                                      sign(<
                                            <$V, 
                                             h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 
                                             pk(~ltk)>, 
                                            aeadEncrypt('emptyStr',
                                                        hkdfExpand(<$cAEAD0, 
                                                                    h(<$cHash0, 
                                                                       <'SIG', 'SIG', $cSUITE0, gx
                                                                       >, 
                                                                       'g'^~yy>), 
                                                                    'K_2m'>,
                                                                   hkdfExtract('emptyStr', sk)),
                                                        <$V, 
                                                         h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 
                                                            'g'^~yy>), 
                                                         pk(~ltk)>,
                                                        $cAEAD0)
                                           >,
                                           ~ltk)
                                     )
                                    >, 
                                    'emptyStr'>), 
                                 'K_3ae'>,
                                hkdfExtract('emptyStr', sk)),
                     extAad3Outer, $cAEAD0.1)
    ) @ #vk.3
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: StI1_SIG_SIG( $U.1, ~ltk.2, $V.1, ~xx.1, m1, ~tid.1 ) ▶₀ #i2
1: !PK_SIG( $V.1, pk(x) ) ▶₁ #i2
2: !PK_SIG( $U.1, pkU ) ▶₂ #i2
3: !KU( ($V⊕      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))     )) @ #vk.3
4: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)     )) @ #vk.4
5: splitEqs(0)
6: splitEqs(1)
7: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))     )) @ #vk.8
8: !KU( (      hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<<$V.1, h(<$cHash0.1, m1, gy.1>), pk(x)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V.1, h(<$cHash0.1, m1, gy.1>), pk(x)>, $cAEAD0.1)           >,           x)     )) @ #vk.9

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 15 (precomputed):
    StI1_SIG_SIG( $U.1, ~ltk.2, $V.1, ~xx.1, m1, ~tid.1 ) ▶₀ #i2
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !PK_SIG( $V.1, pk(x) ) ▶₁ #i2
1: !PK_SIG( $U.1, pkU ) ▶₂ #i2
2: !KU( ($V⊕      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))     )) @ #vk.3
3: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)     )) @ #vk.4
4: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))     )) @ #vk.8
5: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>), pk(x)            >,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>), pk(x)                        >,                        $cAEAD0.1)           >,           x)     )) @ #vk.9
6: splitEqs(0)
7: splitEqs(1)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 16 (precomputed): !PK_SIG( $V.1, pk(x) ) ▶₁ #i2
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~ltk.1 ) @ #vk.11
1: !KU( h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>) ) @ #vk.13
2: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                hkdfExtract('emptyStr', expSk))) @ #vk.6
3: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                hkdfExtract('emptyStr', expSk))) @ #vk.9
4: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0,                              h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                            hkdfExtract('emptyStr', expSk)),                 <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>),                   pk(~ltk.1)>,                 $cAEAD0)) @ #vk.15
5: splitEqs(0)
6: !KU( pk(~ltk.1) ) @ #vk.14

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 22 (precomputed): !KU( ~ltk.1 ) @ #vk.11
  simplified formula:
      "((#vr.17 = #i) ∨ (#i < #vr.17))"
    to
      "⊥"
  solved goal nr. 31 (simplified): (#vr.17 = #i)  ∥ (#i < #vr.17)
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( sign(<           <$U,             h(<$cHash0.1, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                <                ($V⊕                 hkdfExpand(<$cAEAD0,                              h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 'K_2e', '1'>,                            hkdfExtract('emptyStr', sk))                ),                 (                 hkdfExpand(<$cAEAD0,                              h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 'K_2e', '2'>,                            hkdfExtract('emptyStr', sk))⊕                 sign(<                       <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>), pk(~ltk)                       >,                        aeadEncrypt('emptyStr',                                   hkdfExpand(<$cAEAD0,                                                h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                                'K_2m'>,                                              hkdfExtract('emptyStr', sk)),                                   <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                     pk(~ltk)>,                                   $cAEAD0)                      >,                      ~ltk)                )               >,                'emptyStr'>),             pk(~ltk.1)>,            aeadEncrypt('emptyStr',                       hkdfExpand(<$cAEAD0.1,                                    h(<$cHash0.1,                                       h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                       <                                       ($V⊕                                        hkdfExpand(<$cAEAD0,                                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>,                                                        'g'^~yy>),                                                     'K_2e', '1'>,                                                   hkdfExtract('emptyStr', sk))                                       ),                                        (                                        hkdfExpand(<$cAEAD0,                                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>,                                                        'g'^~yy>),                                                     'K_2e', '2'>,                                                   hkdfExtract('emptyStr', sk))⊕                                        sign(<                                              <$V,                                                h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                                pk(~ltk)>,                                               aeadEncrypt('emptyStr',                                                          hkdfExpand(<$cAEAD0,                                                                       h(<$cHash0,                                                                          <'SIG', 'SIG', $cSUITE0, gx                                                                         >,                                                                          'g'^~yy>),                                                                       'K_2m'>,                                                                     hkdfExtract('emptyStr', sk)),                                                          <$V,                                                            h(<$cHash0,                                                               <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy                                                             >),                                                            pk(~ltk)>,                                                          $cAEAD0)                                             >,                                             ~ltk)                                       )                                      >,                                       'emptyStr'>),                                    'K_3m'>,                                  hkdfExtract('emptyStr', sk)),                       <$U,                         h(<$cHash0.1, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                            <                            ($V⊕                             hkdfExpand(<$cAEAD0,                                          h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                          'K_2e', '1'>,                                        hkdfExtract('emptyStr', sk))                            ),                             (                             hkdfExpand(<$cAEAD0,                                          h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                          'K_2e', '2'>,                                        hkdfExtract('emptyStr', sk))⊕                             sign(<                                   <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                     pk(~ltk)>,                                    aeadEncrypt('emptyStr',                                               hkdfExpand(<$cAEAD0,                                                            h(<$cHash0,                                                               <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy                                                             >),                                                            'K_2m'>,                                                          hkdfExtract('emptyStr', sk)),                                               <$V,                                                 h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy                                                  >),                                                 pk(~ltk)>,                                               $cAEAD0)                                  >,                                  ~ltk)                            )                           >,                            'emptyStr'>),                         pk(~ltk.1)>,                       $cAEAD0.1)          >,          ~ltk.1)) @ #vk.21
1: !KU( aeadEncrypt(<$U.1,                   sign(<                        <$U.1,                          h(<$cHash0.3,                             h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.1, gx.1>, 'g'^~yy.1>),                             <                             ($V.1⊕                              hkdfExpand(<$cAEAD0.2,                                           h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.1, gx.1>, 'g'^~yy.1                                            >),                                           'K_2e', '1'>,                                         hkdfExtract('emptyStr', sk))                             ),                              (                              hkdfExpand(<$cAEAD0.2,                                           h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.1, gx.1>, 'g'^~yy.1                                            >),                                           'K_2e', '2'>,                                         hkdfExtract('emptyStr', sk))⊕                              sign(<                                    <$V.1,                                      h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.1, gx.1>, 'g'^~yy.1>),                                      pk(~ltk.2)>,                                     aeadEncrypt('emptyStr',                                                hkdfExpand(<$cAEAD0.2,                                                             h(<$cHash0.2,                                                                <'SIG', 'SIG', $cSUITE0.1, gx.1>,                                                                'g'^~yy.1>),                                                             'K_2m'>,                                                           hkdfExtract('emptyStr', sk)),                                                <$V.1,                                                  h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.1, gx.1>,                                                     'g'^~yy.1>),                                                  pk(~ltk.2)>,                                                $cAEAD0.2)                                   >,                                   ~ltk.2)                             )                            >,                             'emptyStr'>),                          pk(~ltk.3)>,                         aeadEncrypt('emptyStr',                                    hkdfExpand(<$cAEAD0.3,                                                 h(<$cHash0.3,                                                    h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.1, gx.1>,                                                       'g'^~yy.1>),                                                    <                                                    ($V.1⊕                                                     hkdfExpand(<$cAEAD0.2,                                                                  h(<$cHash0.2,                                                                     <'SIG', 'SIG', $cSUITE0.1, gx.1                                                                    >,                                                                     'g'^~yy.1>),                                                                  'K_2e', '1'>,                                                                hkdfExtract('emptyStr', sk))                                                    ),                                                     (                                                     hkdfExpand(<$cAEAD0.2,                                                                  h(<$cHash0.2,                                                                     <'SIG', 'SIG', $cSUITE0.1, gx.1                                                                    >,                                                                     'g'^~yy.1>),                                                                  'K_2e', '2'>,                                                                hkdfExtract('emptyStr', sk))⊕                                                     sign(<                                                           <$V.1,                                                             h(<$cHash0.2,                                                                <'SIG', 'SIG', $cSUITE0.1, gx.1>,                                                                'g'^~yy.1>),                                                             pk(~ltk.2)>,                                                            aeadEncrypt('emptyStr',                                                                       hkdfExpand(<$cAEAD0.2,                                                                                    h(<$cHash0.2,                                                                                       <'SIG',                                                                                        'SIG',                                                                                        $cSUITE0.1,                                                                                        gx.1>,                                                                                       'g'^~yy.1>),                                                                                    'K_2m'>,                                                                                  hkdfExtract('emptyStr',                                                                                              sk)),                                                                       <$V.1,                                                                         h(<$cHash0.2,                                                                            <'SIG', 'SIG',                                                                             $cSUITE0.1, gx.1>,                                                                            'g'^~yy.1>),                                                                         pk(~ltk.2)>,                                                                       $cAEAD0.2)                                                          >,                                                          ~ltk.2)                                                    )                                                   >,                                                    'emptyStr'>),                                                 'K_3m'>,                                               hkdfExtract('emptyStr', sk)),                                    <$U.1,                                      h(<$cHash0.3,                                         h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.1, gx.1>, 'g'^~yy.1                                          >),                                         <                                         ($V.1⊕                                          hkdfExpand(<$cAEAD0.2,                                                       h(<$cHash0.2,                                                          <'SIG', 'SIG', $cSUITE0.1, gx.1>, 'g'^~yy.1                                                        >),                                                       'K_2e', '1'>,                                                     hkdfExtract('emptyStr', sk))                                         ),                                          (                                          hkdfExpand(<$cAEAD0.2,                                                       h(<$cHash0.2,                                                          <'SIG', 'SIG', $cSUITE0.1, gx.1>, 'g'^~yy.1                                                        >),                                                       'K_2e', '2'>,                                                     hkdfExtract('emptyStr', sk))⊕                                          sign(<                                                <$V.1,                                                  h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.1, gx.1>,                                                     'g'^~yy.1>),                                                  pk(~ltk.2)>,                                                 aeadEncrypt('emptyStr',                                                            hkdfExpand(<$cAEAD0.2,                                                                         h(<$cHash0.2,                                                                            <'SIG', 'SIG',                                                                             $cSUITE0.1, gx.1>,                                                                            'g'^~yy.1>),                                                                         'K_2m'>,                                                                       hkdfExtract('emptyStr', sk)),                                                            <$V.1,                                                              h(<$cHash0.2,                                                                 <'SIG', 'SIG', $cSUITE0.1, gx.1>,                                                                 'g'^~yy.1>),                                                              pk(~ltk.2)>,                                                            $cAEAD0.2)                                               >,                                               ~ltk.2)                                         )                                        >,                                         'emptyStr'>),                                      pk(~ltk.3)>,                                    $cAEAD0.3)                       >,                       ~ltk.3)                 >,                 hkdfExpand(<$cAEAD0.3,                              h(<$cHash0.3,                                 h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.1, gx.1>, 'g'^~yy.1>),                                 <                                 ($V.1⊕                                  hkdfExpand(<$cAEAD0.2,                                               h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.1, gx.1>,                                                  'g'^~yy.1>),                                               'K_2e', '1'>,                                             hkdfExtract('emptyStr', sk))                                 ),                                  (                                  hkdfExpand(<$cAEAD0.2,                                               h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.1, gx.1>,                                                  'g'^~yy.1>),                                               'K_2e', '2'>,                                             hkdfExtract('emptyStr', sk))⊕                                  sign(<                                        <$V.1,                                          h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.1, gx.1>, 'g'^~yy.1                                           >),                                          pk(~ltk.2)>,                                         aeadEncrypt('emptyStr',                                                    hkdfExpand(<$cAEAD0.2,                                                                 h(<$cHash0.2,                                                                    <'SIG', 'SIG', $cSUITE0.1, gx.1                                                                   >,                                                                    'g'^~yy.1>),                                                                 'K_2m'>,                                                               hkdfExtract('emptyStr', sk)),                                                    <$V.1,                                                      h(<$cHash0.2,                                                         <'SIG', 'SIG', $cSUITE0.1, gx.1>, 'g'^~yy.1                                                       >),                                                      pk(~ltk.2)>,                                                    $cAEAD0.2)                                       >,                                       ~ltk.2)                                 )                                >,                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract('emptyStr', sk)),                 extAad3Outer.1, $cAEAD0.3)) @ #vk.4
2: !KU( hkdfExpand(<$cAEAD0.1,                  h(<$cHash0.1, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                     <                     ($V⊕                      hkdfExpand(<$cAEAD0,                                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 'K_2e', '1'>,                                 hkdfExtract('emptyStr', sk))                     ),                      (                      hkdfExpand(<$cAEAD0,                                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 'K_2e', '2'>,                                 hkdfExtract('emptyStr', sk))⊕                      sign(<                            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>), pk(~ltk)                            >,                             aeadEncrypt('emptyStr',                                        hkdfExpand(<$cAEAD0,                                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>,                                                        'g'^~yy>),                                                     'K_2m'>,                                                   hkdfExtract('emptyStr', sk)),                                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                          pk(~ltk)>,                                        $cAEAD0)                           >,                           ~ltk)                     )                    >,                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract('emptyStr', sk))) @ #vk.17
3: splitEqs(2)
4: splitEqs(3)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 48 (precomputed):
    !KU( sign(<
               <$U, 
                h(<$cHash0.1, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 
                   <
                    ($V⊕
                     hkdfExpand(<$cAEAD0, 
                                 h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 'K_2e', '1'>,
                                hkdfExtract('emptyStr', sk))
                    ), 
                    (
                     hkdfExpand(<$cAEAD0, 
                                 h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 'K_2e', '2'>,
                                hkdfExtract('emptyStr', sk))⊕
                     sign(<
                           <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>), pk(~ltk)
                           >, 
                           aeadEncrypt('emptyStr',
                                       hkdfExpand(<$cAEAD0, 
                                                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy
                                                     >), 
                                                   'K_2m'>,
                                                  hkdfExtract('emptyStr', sk)),
                                       <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 
                                        pk(~ltk)>,
                                       $cAEAD0)
                          >,
                          ~ltk)
                    )
                   >, 
                   'emptyStr'>), 
                pk(~ltk.1)>, 
               aeadEncrypt('emptyStr',
                           hkdfExpand(<$cAEAD0.1, 
                                       h(<$cHash0.1, 
                                          h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 
                                          <
                                           ($V⊕
                                            hkdfExpand(<$cAEAD0, 
                                                        h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 
                                                           'g'^~yy>), 
                                                        'K_2e', '1'>,
                                                       hkdfExtract('emptyStr', sk))
                                           ), 
                                           (
                                            hkdfExpand(<$cAEAD0, 
                                                        h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 
                                                           'g'^~yy>), 
                                                        'K_2e', '2'>,
                                                       hkdfExtract('emptyStr', sk))⊕
                                            sign(<
                                                  <$V, 
                                                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy
                                                     >), 
                                                   pk(~ltk)>, 
                                                  aeadEncrypt('emptyStr',
                                                              hkdfExpand(<$cAEAD0, 
                                                                          h(<$cHash0, 
                                                                             <'SIG', 'SIG', 
                                                                              $cSUITE0, gx>, 
                                                                             'g'^~yy>), 
                                                                          'K_2m'>,
                                                                         hkdfExtract('emptyStr',
                                                                                     sk)),
                                                              <$V, 
                                                               h(<$cHash0, 
                                                                  <'SIG', 'SIG', $cSUITE0, gx>, 
                                                                  'g'^~yy>), 
                                                               pk(~ltk)>,
                                                              $cAEAD0)
                                                 >,
                                                 ~ltk)
                                           )
                                          >, 
                                          'emptyStr'>), 
                                       'K_3m'>,
                                      hkdfExtract('emptyStr', sk)),
                           <$U, 
                            h(<$cHash0.1, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 
                               <
                                ($V⊕
                                 hkdfExpand(<$cAEAD0, 
                                             h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 
                                             'K_2e', '1'>,
                                            hkdfExtract('emptyStr', sk))
                                ), 
                                (
                                 hkdfExpand(<$cAEAD0, 
                                             h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 
                                             'K_2e', '2'>,
                                            hkdfExtract('emptyStr', sk))⊕
                                 sign(<
                                       <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 
                                        pk(~ltk)>, 
                                       aeadEncrypt('emptyStr',
                                                   hkdfExpand(<$cAEAD0, 
                                                               h(<$cHash0, 
                                                                  <'SIG', 'SIG', $cSUITE0, gx>, 
                                                                  'g'^~yy>), 
                                                               'K_2m'>,
                                                              hkdfExtract('emptyStr', sk)),
                                                   <$V, 
                                                    h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 
                                                       'g'^~yy>), 
                                                    pk(~ltk)>,
                                                   $cAEAD0)
                                      >,
                                      ~ltk)
                                )
                               >, 
                               'emptyStr'>), 
                            pk(~ltk.1)>,
                           $cAEAD0.1)
              >,
              ~ltk.1)
    ) @ #vk.21
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: splitEqs(3)
1: !KU( aeadEncrypt(<$U.1,                   sign(<                        <$U.1,                          h(<$cHash0.2,                             h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^x>, 'g'^~yy.1>),                             <                             ($V.1⊕                              hkdfExpand(<$cAEAD0.1,                                           h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^x>, 'g'^~yy.1                                            >),                                           'K_2e', '1'>,                                         hkdfExtract('emptyStr', 'g'^(~xx*~yy)))                             ),                              (                              hkdfExpand(<$cAEAD0.1,                                           h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^x>, 'g'^~yy.1                                            >),                                           'K_2e', '2'>,                                         hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕                              sign(<                                    <$V.1,                                      h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^x>, 'g'^~yy.1>),                                      pk(~ltk.2)>,                                     aeadEncrypt('emptyStr',                                                hkdfExpand(<$cAEAD0.1,                                                             h(<$cHash0.1,                                                                <'SIG', 'SIG', $cSUITE0.1, 'g'^x>,                                                                'g'^~yy.1>),                                                             'K_2m'>,                                                           hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                                                <$V.1,                                                  h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^x>,                                                     'g'^~yy.1>),                                                  pk(~ltk.2)>,                                                $cAEAD0.1)                                   >,                                   ~ltk.2)                             )                            >,                             'emptyStr'>),                          pk(~ltk.3)>,                         aeadEncrypt('emptyStr',                                    hkdfExpand(<$cAEAD0.2,                                                 h(<$cHash0.2,                                                    h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^x>,                                                       'g'^~yy.1>),                                                    <                                                    ($V.1⊕                                                     hkdfExpand(<$cAEAD0.1,                                                                  h(<$cHash0.1,                                                                     <'SIG', 'SIG', $cSUITE0.1, 'g'^x                                                                    >,                                                                     'g'^~yy.1>),                                                                  'K_2e', '1'>,                                                                hkdfExtract('emptyStr',                                                                            'g'^(~xx*~yy)))                                                    ),                                                     (                                                     hkdfExpand(<$cAEAD0.1,                                                                  h(<$cHash0.1,                                                                     <'SIG', 'SIG', $cSUITE0.1, 'g'^x                                                                    >,                                                                     'g'^~yy.1>),                                                                  'K_2e', '2'>,                                                                hkdfExtract('emptyStr',                                                                            'g'^(~xx*~yy)))⊕                                                     sign(<                                                           <$V.1,                                                             h(<$cHash0.1,                                                                <'SIG', 'SIG', $cSUITE0.1, 'g'^x>,                                                                'g'^~yy.1>),                                                             pk(~ltk.2)>,                                                            aeadEncrypt('emptyStr',                                                                       hkdfExpand(<$cAEAD0.1,                                                                                    h(<$cHash0.1,                                                                                       <'SIG',                                                                                        'SIG',                                                                                        $cSUITE0.1,                                                                                        'g'^x>,                                                                                       'g'^~yy.1>),                                                                                    'K_2m'>,                                                                                  hkdfExtract('emptyStr',                                                                                              'g'^(                                                                                                   ~xx*                                                                                                   ~yy                                                                                                  ))),                                                                       <$V.1,                                                                         h(<$cHash0.1,                                                                            <'SIG', 'SIG',                                                                             $cSUITE0.1, 'g'^x>,                                                                            'g'^~yy.1>),                                                                         pk(~ltk.2)>,                                                                       $cAEAD0.1)                                                          >,                                                          ~ltk.2)                                                    )                                                   >,                                                    'emptyStr'>),                                                 'K_3m'>,                                               hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                                    <$U.1,                                      h(<$cHash0.2,                                         h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^x>, 'g'^~yy.1                                          >),                                         <                                         ($V.1⊕                                          hkdfExpand(<$cAEAD0.1,                                                       h(<$cHash0.1,                                                          <'SIG', 'SIG', $cSUITE0.1, 'g'^x>,                                                          'g'^~yy.1>),                                                       'K_2e', '1'>,                                                     hkdfExtract('emptyStr', 'g'^(~xx*~yy)))                                         ),                                          (                                          hkdfExpand(<$cAEAD0.1,                                                       h(<$cHash0.1,                                                          <'SIG', 'SIG', $cSUITE0.1, 'g'^x>,                                                          'g'^~yy.1>),                                                       'K_2e', '2'>,                                                     hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕                                          sign(<                                                <$V.1,                                                  h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^x>,                                                     'g'^~yy.1>),                                                  pk(~ltk.2)>,                                                 aeadEncrypt('emptyStr',                                                            hkdfExpand(<$cAEAD0.1,                                                                         h(<$cHash0.1,                                                                            <'SIG', 'SIG',                                                                             $cSUITE0.1, 'g'^x>,                                                                            'g'^~yy.1>),                                                                         'K_2m'>,                                                                       hkdfExtract('emptyStr',                                                                                   'g'^(~xx*~yy))),                                                            <$V.1,                                                              h(<$cHash0.1,                                                                 <'SIG', 'SIG', $cSUITE0.1, 'g'^x>,                                                                 'g'^~yy.1>),                                                              pk(~ltk.2)>,                                                            $cAEAD0.1)                                               >,                                               ~ltk.2)                                         )                                        >,                                         'emptyStr'>),                                      pk(~ltk.3)>,                                    $cAEAD0.2)                       >,                       ~ltk.3)                 >,                 hkdfExpand(<$cAEAD0.2,                              h(<$cHash0.2,                                 h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^x>, 'g'^~yy.1>),                                 <                                 ($V.1⊕                                  hkdfExpand(<$cAEAD0.1,                                               h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^x>,                                                  'g'^~yy.1>),                                               'K_2e', '1'>,                                             hkdfExtract('emptyStr', 'g'^(~xx*~yy)))                                 ),                                  (                                  hkdfExpand(<$cAEAD0.1,                                               h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^x>,                                                  'g'^~yy.1>),                                               'K_2e', '2'>,                                             hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕                                  sign(<                                        <$V.1,                                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^x>, 'g'^~yy.1                                           >),                                          pk(~ltk.2)>,                                         aeadEncrypt('emptyStr',                                                    hkdfExpand(<$cAEAD0.1,                                                                 h(<$cHash0.1,                                                                    <'SIG', 'SIG', $cSUITE0.1, 'g'^x                                                                   >,                                                                    'g'^~yy.1>),                                                                 'K_2m'>,                                                               hkdfExtract('emptyStr',                                                                           'g'^(~xx*~yy))),                                                    <$V.1,                                                      h(<$cHash0.1,                                                         <'SIG', 'SIG', $cSUITE0.1, 'g'^x>, 'g'^~yy.1                                                       >),                                                      pk(~ltk.2)>,                                                    $cAEAD0.1)                                       >,                                       ~ltk.2)                                 )                                >,                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                 extAad3Outer, $cAEAD0.2)) @ #vk.4
2: !KU( 'g'^x ) @ #vk.15
3: !KU( 'g'^~yy ) @ #vk.17
4: !KU( ($V⊕      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))     )) @ #vk.19
5: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                   '2'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      sign(<            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'                                   >,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk)>,                        $cAEAD0)           >,           ~ltk)     )) @ #vk.20
6: !KU( 'g'^~xx ) @ #vk.12

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 39 (directly): splitEqs(3)
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vl, 0) ~~> (#vk.1, 0)
1: !LTK_SIG( $V.1, ~ltk.2 ) ▶₀ #vr.3
2: !PK_SIG( $V.1, pkV ) ▶₁ #vr.3
3: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                hkdfExtract('emptyStr', expSk))) @ #vk.5
4: splitEqs(0)
5: splitEqs(1)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.4, 0) ~~> (#vk.1, 0)
1: StI1_SIG_SIG( $U.1, ~ltk.2, $V.1, ~xx.1, m1, ~tid.1 ) ▶₀ #vr.3
2: !PK_SIG( $V.1, pk(x) ) ▶₁ #vr.3
3: !PK_SIG( $U.1, pkU ) ▶₂ #vr.3
4: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                hkdfExtract('emptyStr', expSk))) @ #vk.5
5: splitEqs(0)
6: splitEqs(1)
7: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.10
8: !KU( (      hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', z))⊕      sign(<<$V.1, h(<$cHash0.1, m1, gy.1>), pk(x)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2m'>,                                   hkdfExtract('emptyStr', z)),                        <$V.1, h(<$cHash0.1, m1, gy.1>), pk(x)>, $cAEAD0.1)           >,           x)     )) @ #vk.11

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: CommitR( tid.1, u, v, t ) ▶₀ #vr.3
1: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                hkdfExtract('emptyStr', expSk))) @ #vk.5
2: splitEqs(0)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 21 (precomputed):
    CommitR( tid.1, u, v, t ) ▶₀ #vr.3
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: CommitI( tid.1, u, v, t ) ▶₀ #vr.3
1: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                hkdfExtract('emptyStr', expSk))) @ #vk.5
2: splitEqs(0)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 21 (precomputed):
    CommitI( tid.1, u, v, t ) ▶₀ #vr.3
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.5, 0) ~~> (#vk.1, 0)
1: StI1_SIG_SIG( $U.1, ~ltk.2, $V.1, ~xx.1, m1, ~tid.1 ) ▶₀ #vr.3
2: !PK_SIG( $V.1, pk(x) ) ▶₁ #vr.3
3: !PK_SIG( $U.1, pkU ) ▶₂ #vr.3
4: !KU( sign(<           <$U.1,             h(<$cHash0.1, h(<$cHash0.1, m1, gy.1>),                <                ($V.1⊕                 hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2e', '1'>,                            hkdfExtract('emptyStr', z))                ),                 (                 hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2e', '2'>,                            hkdfExtract('emptyStr', z))⊕                 sign(<<$V.1, h(<$cHash0.1, m1, gy.1>), pk(x)>,                        aeadEncrypt('emptyStr',                                   hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2m'>,                                              hkdfExtract('emptyStr', z)),                                   <$V.1, h(<$cHash0.1, m1, gy.1>), pk(x)>, $cAEAD0.1)                      >,                      x)                )               >,                'emptyStr'>),             pkU>,            aeadEncrypt('emptyStr',                       hkdfExpand(<$cAEAD0.1,                                    h(<$cHash0.1, h(<$cHash0.1, m1, gy.1>),                                       <                                       ($V.1⊕                                        hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2e', '1'                                                   >,                                                   hkdfExtract('emptyStr', z))                                       ),                                        (                                        hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2e', '2'                                                   >,                                                   hkdfExtract('emptyStr', z))⊕                                        sign(<<$V.1, h(<$cHash0.1, m1, gy.1>), pk(x)>,                                               aeadEncrypt('emptyStr',                                                          hkdfExpand(<$cAEAD0.1,                                                                       h(<$cHash0.1, m1, gy.1>),                                                                       'K_2m'>,                                                                     hkdfExtract('emptyStr', z)),                                                          <$V.1, h(<$cHash0.1, m1, gy.1>), pk(x)>,                                                          $cAEAD0.1)                                             >,                                             x)                                       )                                      >,                                       'emptyStr'>),                                    'K_3m'>,                                  hkdfExtract('emptyStr', z)),                       <$U.1,                         h(<$cHash0.1, h(<$cHash0.1, m1, gy.1>),                            <                            ($V.1⊕                             hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2e', '1'>,                                        hkdfExtract('emptyStr', z))                            ),                             (                             hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2e', '2'>,                                        hkdfExtract('emptyStr', z))⊕                             sign(<<$V.1, h(<$cHash0.1, m1, gy.1>), pk(x)>,                                    aeadEncrypt('emptyStr',                                               hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>),                                                            'K_2m'>,                                                          hkdfExtract('emptyStr', z)),                                               <$V.1, h(<$cHash0.1, m1, gy.1>), pk(x)>, $cAEAD0.1)                                  >,                                  x)                            )                           >,                            'emptyStr'>),                         pkU>,                       $cAEAD0.1)          >,          ~ltk.2)) @ #vk.16
5: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                hkdfExtract('emptyStr', expSk))) @ #vk.5
6: splitEqs(0)
7: splitEqs(1)
8: !KU( h(<$cHash0.1, h(<$cHash0.1, m1, gy.1>),         <         ($V.1⊕          hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2e', '1'>,                     hkdfExtract('emptyStr', z))         ),          (          hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2e', '2'>,                     hkdfExtract('emptyStr', z))⊕          sign(<<$V.1, h(<$cHash0.1, m1, gy.1>), pk(x)>,                 aeadEncrypt('emptyStr',                            hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2m'>,                                       hkdfExtract('emptyStr', z)),                            <$V.1, h(<$cHash0.1, m1, gy.1>), pk(x)>, $cAEAD0.1)               >,               x)         )        >,         'emptyStr'>)) @ #vk.13
9: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.10
10: !KU( (      hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', z))⊕      sign(<<$V.1, h(<$cHash0.1, m1, gy.1>), pk(x)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2m'>,                                   hkdfExtract('emptyStr', z)),                        <$V.1, h(<$cHash0.1, m1, gy.1>), pk(x)>, $cAEAD0.1)           >,           x)     )) @ #vk.11

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.5, 0) ~~> (#vk.1, 0)
1: StI1_SIG_SIG( $U.1, ~ltk.2, $V.1, ~xx.1, m1, ~tid.1 ) ▶₀ #vr.3
2: !PK_SIG( $V.1, pk(x) ) ▶₁ #vr.3
3: !PK_SIG( $U.1, pkU ) ▶₂ #vr.3
4: !KU( sign(<           <$U.1,             h(<$cHash0.1, h(<$cHash0.1, m1, gy.1>),                <                ($V.1⊕                 hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2e', '1'>,                            hkdfExtract('emptyStr', z))                ),                 (                 hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2e', '2'>,                            hkdfExtract('emptyStr', z))⊕                 sign(<<$V.1, h(<$cHash0.1, m1, gy.1>), pk(x)>,                        aeadEncrypt('emptyStr',                                   hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2m'>,                                              hkdfExtract('emptyStr', z)),                                   <$V.1, h(<$cHash0.1, m1, gy.1>), pk(x)>, $cAEAD0.1)                      >,                      x)                )               >,                'emptyStr'>),             pkU>,            aeadEncrypt('emptyStr',                       hkdfExpand(<$cAEAD0.1,                                    h(<$cHash0.1, h(<$cHash0.1, m1, gy.1>),                                       <                                       ($V.1⊕                                        hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2e', '1'                                                   >,                                                   hkdfExtract('emptyStr', z))                                       ),                                        (                                        hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2e', '2'                                                   >,                                                   hkdfExtract('emptyStr', z))⊕                                        sign(<<$V.1, h(<$cHash0.1, m1, gy.1>), pk(x)>,                                               aeadEncrypt('emptyStr',                                                          hkdfExpand(<$cAEAD0.1,                                                                       h(<$cHash0.1, m1, gy.1>),                                                                       'K_2m'>,                                                                     hkdfExtract('emptyStr', z)),                                                          <$V.1, h(<$cHash0.1, m1, gy.1>), pk(x)>,                                                          $cAEAD0.1)                                             >,                                             x)                                       )                                      >,                                       'emptyStr'>),                                    'K_3m'>,                                  hkdfExtract('emptyStr', z)),                       <$U.1,                         h(<$cHash0.1, h(<$cHash0.1, m1, gy.1>),                            <                            ($V.1⊕                             hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2e', '1'>,                                        hkdfExtract('emptyStr', z))                            ),                             (                             hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2e', '2'>,                                        hkdfExtract('emptyStr', z))⊕                             sign(<<$V.1, h(<$cHash0.1, m1, gy.1>), pk(x)>,                                    aeadEncrypt('emptyStr',                                               hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>),                                                            'K_2m'>,                                                          hkdfExtract('emptyStr', z)),                                               <$V.1, h(<$cHash0.1, m1, gy.1>), pk(x)>, $cAEAD0.1)                                  >,                                  x)                            )                           >,                            'emptyStr'>),                         pkU>,                       $cAEAD0.1)          >,          ~ltk.2)) @ #vk.15
5: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                hkdfExtract('emptyStr', expSk))) @ #vk.5
6: splitEqs(0)
7: splitEqs(1)
8: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.10
9: !KU( (      hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', z))⊕      sign(<<$V.1, h(<$cHash0.1, m1, gy.1>), pk(x)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2m'>,                                   hkdfExtract('emptyStr', z)),                        <$V.1, h(<$cHash0.1, m1, gy.1>), pk(x)>, $cAEAD0.1)           >,           x)     )) @ #vk.11

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.4, 0) ~~> (#vk.1, 0)
1: !LTK_SIG( $V.1, ~ltk.2 ) ▶₀ #vr.3
2: !PK_SIG( $V.1, pkV ) ▶₁ #vr.3
3: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                hkdfExtract('emptyStr', expSk))) @ #vk.5
4: splitEqs(0)
5: splitEqs(1)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( 'g'^(~xx*~yy*inv(~yy.1)) ) @ #vk.15
1: !KU( aeadEncrypt(<$U.1,                   sign(<                        <$U.1,                          h(<$cHash0.2,                             h(<$cHash0.1,                                <'SIG', 'SIG', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1))>, 'g'^~yy.1>),                             <                             ($V.1⊕                              hkdfExpand(<$cAEAD0.1,                                           h(<$cHash0.1,                                              <'SIG', 'SIG', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1))>,                                              'g'^~yy.1>),                                           'K_2e', '1'>,                                         hkdfExtract('emptyStr', 'g'^(~xx*~yy)))                             ),                              (                              hkdfExpand(<$cAEAD0.1,                                           h(<$cHash0.1,                                              <'SIG', 'SIG', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1))>,                                              'g'^~yy.1>),                                           'K_2e', '2'>,                                         hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕                              sign(<                                    <$V.1,                                      h(<$cHash0.1,                                         <'SIG', 'SIG', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1))>,                                         'g'^~yy.1>),                                      pk(~ltk.2)>,                                     aeadEncrypt('emptyStr',                                                hkdfExpand(<$cAEAD0.1,                                                             h(<$cHash0.1,                                                                <'SIG', 'SIG', $cSUITE0.1,                                                                 'g'^(~xx*~yy*inv(~yy.1))>,                                                                'g'^~yy.1>),                                                             'K_2m'>,                                                           hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                                                <$V.1,                                                  h(<$cHash0.1,                                                     <'SIG', 'SIG', $cSUITE0.1,                                                      'g'^(~xx*~yy*inv(~yy.1))>,                                                     'g'^~yy.1>),                                                  pk(~ltk.2)>,                                                $cAEAD0.1)                                   >,                                   ~ltk.2)                             )                            >,                             'emptyStr'>),                          pk(~ltk.3)>,                         aeadEncrypt('emptyStr',                                    hkdfExpand(<$cAEAD0.2,                                                 h(<$cHash0.2,                                                    h(<$cHash0.1,                                                       <'SIG', 'SIG', $cSUITE0.1,                                                        'g'^(~xx*~yy*inv(~yy.1))>,                                                       'g'^~yy.1>),                                                    <                                                    ($V.1⊕                                                     hkdfExpand(<$cAEAD0.1,                                                                  h(<$cHash0.1,                                                                     <'SIG', 'SIG', $cSUITE0.1,                                                                      'g'^(~xx*~yy*inv(~yy.1))>,                                                                     'g'^~yy.1>),                                                                  'K_2e', '1'>,                                                                hkdfExtract('emptyStr',                                                                            'g'^(~xx*~yy)))                                                    ),                                                     (                                                     hkdfExpand(<$cAEAD0.1,                                                                  h(<$cHash0.1,                                                                     <'SIG', 'SIG', $cSUITE0.1,                                                                      'g'^(~xx*~yy*inv(~yy.1))>,                                                                     'g'^~yy.1>),                                                                  'K_2e', '2'>,                                                                hkdfExtract('emptyStr',                                                                            'g'^(~xx*~yy)))⊕                                                     sign(<                                                           <$V.1,                                                             h(<$cHash0.1,                                                                <'SIG', 'SIG', $cSUITE0.1,                                                                 'g'^(~xx*~yy*inv(~yy.1))>,                                                                'g'^~yy.1>),                                                             pk(~ltk.2)>,                                                            aeadEncrypt('emptyStr',                                                                       hkdfExpand(<$cAEAD0.1,                                                                                    h(<$cHash0.1,                                                                                       <'SIG',                                                                                        'SIG',                                                                                        $cSUITE0.1,                                                                                        'g'^(~xx*~yy*                                                                                            inv(~yy.1)                                                                                           )                                                                                      >,                                                                                       'g'^~yy.1>),                                                                                    'K_2m'>,                                                                                  hkdfExtract('emptyStr',                                                                                              'g'^(                                                                                                   ~xx*                                                                                                   ~yy                                                                                                  ))),                                                                       <$V.1,                                                                         h(<$cHash0.1,                                                                            <'SIG', 'SIG',                                                                             $cSUITE0.1,                                                                             'g'^(~xx*~yy*inv(~yy.1))                                                                           >,                                                                            'g'^~yy.1>),                                                                         pk(~ltk.2)>,                                                                       $cAEAD0.1)                                                          >,                                                          ~ltk.2)                                                    )                                                   >,                                                    'emptyStr'>),                                                 'K_3m'>,                                               hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                                    <$U.1,                                      h(<$cHash0.2,                                         h(<$cHash0.1,                                            <'SIG', 'SIG', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1))>,                                            'g'^~yy.1>),                                         <                                         ($V.1⊕                                          hkdfExpand(<$cAEAD0.1,                                                       h(<$cHash0.1,                                                          <'SIG', 'SIG', $cSUITE0.1,                                                           'g'^(~xx*~yy*inv(~yy.1))>,                                                          'g'^~yy.1>),                                                       'K_2e', '1'>,                                                     hkdfExtract('emptyStr', 'g'^(~xx*~yy)))                                         ),                                          (                                          hkdfExpand(<$cAEAD0.1,                                                       h(<$cHash0.1,                                                          <'SIG', 'SIG', $cSUITE0.1,                                                           'g'^(~xx*~yy*inv(~yy.1))>,                                                          'g'^~yy.1>),                                                       'K_2e', '2'>,                                                     hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕                                          sign(<                                                <$V.1,                                                  h(<$cHash0.1,                                                     <'SIG', 'SIG', $cSUITE0.1,                                                      'g'^(~xx*~yy*inv(~yy.1))>,                                                     'g'^~yy.1>),                                                  pk(~ltk.2)>,                                                 aeadEncrypt('emptyStr',                                                            hkdfExpand(<$cAEAD0.1,                                                                         h(<$cHash0.1,                                                                            <'SIG', 'SIG',                                                                             $cSUITE0.1,                                                                             'g'^(~xx*~yy*inv(~yy.1))                                                                           >,                                                                            'g'^~yy.1>),                                                                         'K_2m'>,                                                                       hkdfExtract('emptyStr',                                                                                   'g'^(~xx*~yy))),                                                            <$V.1,                                                              h(<$cHash0.1,                                                                 <'SIG', 'SIG', $cSUITE0.1,                                                                  'g'^(~xx*~yy*inv(~yy.1))>,                                                                 'g'^~yy.1>),                                                              pk(~ltk.2)>,                                                            $cAEAD0.1)                                               >,                                               ~ltk.2)                                         )                                        >,                                         'emptyStr'>),                                      pk(~ltk.3)>,                                    $cAEAD0.2)                       >,                       ~ltk.3)                 >,                 hkdfExpand(<$cAEAD0.2,                              h(<$cHash0.2,                                 h(<$cHash0.1,                                    <'SIG', 'SIG', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1))>, 'g'^~yy.1                                  >),                                 <                                 ($V.1⊕                                  hkdfExpand(<$cAEAD0.1,                                               h(<$cHash0.1,                                                  <'SIG', 'SIG', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1))                                                 >,                                                  'g'^~yy.1>),                                               'K_2e', '1'>,                                             hkdfExtract('emptyStr', 'g'^(~xx*~yy)))                                 ),                                  (                                  hkdfExpand(<$cAEAD0.1,                                               h(<$cHash0.1,                                                  <'SIG', 'SIG', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1))                                                 >,                                                  'g'^~yy.1>),                                               'K_2e', '2'>,                                             hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕                                  sign(<                                        <$V.1,                                          h(<$cHash0.1,                                             <'SIG', 'SIG', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1))>,                                             'g'^~yy.1>),                                          pk(~ltk.2)>,                                         aeadEncrypt('emptyStr',                                                    hkdfExpand(<$cAEAD0.1,                                                                 h(<$cHash0.1,                                                                    <'SIG', 'SIG', $cSUITE0.1,                                                                     'g'^(~xx*~yy*inv(~yy.1))>,                                                                    'g'^~yy.1>),                                                                 'K_2m'>,                                                               hkdfExtract('emptyStr',                                                                           'g'^(~xx*~yy))),                                                    <$V.1,                                                      h(<$cHash0.1,                                                         <'SIG', 'SIG', $cSUITE0.1,                                                          'g'^(~xx*~yy*inv(~yy.1))>,                                                         'g'^~yy.1>),                                                      pk(~ltk.2)>,                                                    $cAEAD0.1)                                       >,                                       ~ltk.2)                                 )                                >,                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                 extAad3Outer, $cAEAD0.2)) @ #vk.4
2: !KU( 'g'^~yy ) @ #vk.17
3: !KU( ($V⊕      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))     )) @ #vk.19
4: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                   '2'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      sign(<            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'                                   >,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk)>,                        $cAEAD0)           >,           ~ltk)     )) @ #vk.20
5: !KU( 'g'^~xx ) @ #vk.12

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 53 (precomputed):
    !KU( 'g'^(~xx*~yy*inv(~yy.1)) ) @ #vk.15
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.5, 0) ~~> (#vk.1, 0)
1: !LTK_SIG( $V.1, ~ltk.2 ) ▶₀ #vr.3
2: !PK_SIG( $V.1, pkV ) ▶₁ #vr.3
3: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                hkdfExtract('emptyStr', expSk))) @ #vk.5
4: splitEqs(0)
5: splitEqs(1)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.5, 0) ~~> (#vk.1, 0)
1: !LTK_SIG( $V.1, ~ltk.2 ) ▶₀ #vr.3
2: !PK_SIG( $V.1, pkV ) ▶₁ #vr.3
3: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                hkdfExtract('emptyStr', expSk))) @ #vk.5
4: splitEqs(0)
5: splitEqs(1)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  simplified formula:
      "((#vr.3 = #i) ∨ (#i < #vr.3))"
    to
      "⊥"
  solved goal nr. 36 (simplified): (#vr.3 = #i)  ∥ (#i < #vr.3)
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.6, 0) ~~> (#vk.1, 0)
1: !LTK_SIG( $V.1, ~ltk.2 ) ▶₀ #vr.3
2: !PK_SIG( $V.1, pkV ) ▶₁ #vr.3
3: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                hkdfExtract('emptyStr', expSk))) @ #vk.5
4: splitEqs(0)
5: splitEqs(1)
6: !KU( ($V.1⊕z.1) ) @ #vk.13

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.6, 0) ~~> (#vk.1, 0)
1: !LTK_SIG( $V.1, ~ltk.2 ) ▶₀ #vr.3
2: !PK_SIG( $V.1, pkV ) ▶₁ #vr.3
3: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                hkdfExtract('emptyStr', expSk))) @ #vk.5
4: !KU( (z.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, gx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.13
5: splitEqs(0)
6: splitEqs(1)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.6, 0) ~~> (#vk.1, 0)
1: !LTK_SIG( $V.1, ~ltk.2 ) ▶₀ #vr.3
2: !PK_SIG( $V.1, pkV ) ▶₁ #vr.3
3: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                hkdfExtract('emptyStr', expSk))) @ #vk.5
4: splitEqs(0)
5: splitEqs(1)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.6, 0) ~~> (#vk.1, 0)
1: !LTK_SIG( $V.1, ~ltk.2 ) ▶₀ #vr.3
2: !PK_SIG( $V.1, pkV ) ▶₁ #vr.3
3: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                hkdfExtract('emptyStr', expSk))) @ #vk.5
4: !KU( (z.1⊕      sign(<            <$V.1, h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, gx>, 'g'^~yy>), pkV            >,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, gx>, 'g'^~yy>), 'K_2m'                                   >,                                   hkdfExtract('emptyStr', z)),                        <$V.1, h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, gx>, 'g'^~yy>), pkV                        >,                        $cAEAD0.1)           >,           ~ltk.2)     )) @ #vk.13
5: splitEqs(0)
6: splitEqs(1)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.6, 0) ~~> (#vk.1, 0)
1: !LTK_SIG( $V.1, ~ltk.2 ) ▶₀ #vr.3
2: !PK_SIG( $V.1, pkV ) ▶₁ #vr.3
3: !KU( sign(<           <$V.1, h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, gx>, 'g'^~yy>), pkV           >,            aeadEncrypt('emptyStr',                       hkdfExpand(<$cAEAD0.1,                                    h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, gx>, 'g'^~yy>), 'K_2m'>,                                  hkdfExtract('emptyStr', z)),                       <$V.1, h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, gx>, 'g'^~yy>), pkV                       >,                       $cAEAD0.1)          >,          ~ltk.2)) @ #vk.13
4: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                hkdfExtract('emptyStr', expSk))) @ #vk.5
5: splitEqs(0)
6: splitEqs(1)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.6, 0) ~~> (#vk.1, 0)
1: !LTK_SIG( $V.1, ~ltk.2 ) ▶₀ #vr.3
2: !PK_SIG( $V.1, pkV ) ▶₁ #vr.3
3: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                hkdfExtract('emptyStr', expSk))) @ #vk.5
4: !KU( (z.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, gx>, 'g'^~yy>), 'K_2e',                   '2'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.13
5: splitEqs(0)
6: splitEqs(1)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.6, 0) ~~> (#vk.1, 0)
1: !LTK_SIG( $V.1, ~ltk.2 ) ▶₀ #vr.3
2: !PK_SIG( $V.1, pkV ) ▶₁ #vr.3
3: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                hkdfExtract('emptyStr', expSk))) @ #vk.5
4: !KU( hkdfExpand(<$cAEAD0.1,                  h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, gx>, 'g'^~yy>), 'K_2e',                  '2'>,                hkdfExtract('emptyStr', z))) @ #vk.13
5: splitEqs(0)
6: splitEqs(1)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !LTK_SIG( $V.1, ~ltk.2 ) ▶₀ #vr.3
1: !PK_SIG( $V.1, pkV ) ▶₁ #vr.3
2: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                  '1'>,                hkdfExtract('emptyStr', 'g'^(~xx*~yy)))) @ #vk.5
3: !KU( (      sign(<            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'                                   >,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)⊕      sign(<            <$V.1, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pkV>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'                                   >,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V.1, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pkV>,                        $cAEAD0)           >,           ~ltk.2)     )) @ #vk.13
4: !KU( 'g'^~yy ) @ #vk.4
5: !KU( 'g'^~xx ) @ #vk.12

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 21 (precomputed): !LTK_SIG( $V.1, ~ltk.2 ) ▶₀ #vr.3
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !PK_SIG( $V.1, pkV ) ▶₁ #vr.3
1: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                  '1'>,                hkdfExtract('emptyStr', 'g'^(~xx*~yy)))) @ #vk.5
2: !KU( (      sign(<            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'                                   >,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)⊕      sign(<            <$V.1, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pkV>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'                                   >,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V.1, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pkV>,                        $cAEAD0)           >,           ~ltk.2)     )) @ #vk.13
3: !KU( 'g'^~yy ) @ #vk.4
4: !KU( 'g'^~xx ) @ #vk.12

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 22 (precomputed): !PK_SIG( $V.1, pkV ) ▶₁ #vr.3
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                  '1'>,                hkdfExtract('emptyStr', 'g'^(~xx*~yy)))) @ #vk.5
1: !KU( (      sign(<            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'                                   >,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)⊕      sign(<            <$V.1, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.2)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'                                   >,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V.1, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.2)>,                        $cAEAD0)           >,           ~ltk.2)     )) @ #vk.13
2: !KU( 'g'^~yy ) @ #vk.4
3: !KU( 'g'^~xx ) @ #vk.12

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 16 (precomputed):
    !KU( hkdfExpand(<$cAEAD0, 
                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e', 
                     '1'>,
                    hkdfExtract('emptyStr', 'g'^(~xx*~yy)))
    ) @ #vk.5
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.23
1: !KU( ~yy ) @ #vk.24
2: !KU( ~yy.1 ) @ #vk.26
3: !KU( aeadEncrypt(<$U.1,                   sign(<                        <$U.1,                          h(<$cHash0.2,                             h(<$cHash0.1,                                <'SIG', 'SIG', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1))>, 'g'^~yy.1>),                             <                             ($V.1⊕                              hkdfExpand(<$cAEAD0.1,                                           h(<$cHash0.1,                                              <'SIG', 'SIG', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1))>,                                              'g'^~yy.1>),                                           'K_2e', '1'>,                                         hkdfExtract('emptyStr', 'g'^(~xx*~yy)))                             ),                              (                              hkdfExpand(<$cAEAD0.1,                                           h(<$cHash0.1,                                              <'SIG', 'SIG', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1))>,                                              'g'^~yy.1>),                                           'K_2e', '2'>,                                         hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕                              sign(<                                    <$V.1,                                      h(<$cHash0.1,                                         <'SIG', 'SIG', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1))>,                                         'g'^~yy.1>),                                      pk(~ltk.2)>,                                     aeadEncrypt('emptyStr',                                                hkdfExpand(<$cAEAD0.1,                                                             h(<$cHash0.1,                                                                <'SIG', 'SIG', $cSUITE0.1,                                                                 'g'^(~xx*~yy*inv(~yy.1))>,                                                                'g'^~yy.1>),                                                             'K_2m'>,                                                           hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                                                <$V.1,                                                  h(<$cHash0.1,                                                     <'SIG', 'SIG', $cSUITE0.1,                                                      'g'^(~xx*~yy*inv(~yy.1))>,                                                     'g'^~yy.1>),                                                  pk(~ltk.2)>,                                                $cAEAD0.1)                                   >,                                   ~ltk.2)                             )                            >,                             'emptyStr'>),                          pk(~ltk.3)>,                         aeadEncrypt('emptyStr',                                    hkdfExpand(<$cAEAD0.2,                                                 h(<$cHash0.2,                                                    h(<$cHash0.1,                                                       <'SIG', 'SIG', $cSUITE0.1,                                                        'g'^(~xx*~yy*inv(~yy.1))>,                                                       'g'^~yy.1>),                                                    <                                                    ($V.1⊕                                                     hkdfExpand(<$cAEAD0.1,                                                                  h(<$cHash0.1,                                                                     <'SIG', 'SIG', $cSUITE0.1,                                                                      'g'^(~xx*~yy*inv(~yy.1))>,                                                                     'g'^~yy.1>),                                                                  'K_2e', '1'>,                                                                hkdfExtract('emptyStr',                                                                            'g'^(~xx*~yy)))                                                    ),                                                     (                                                     hkdfExpand(<$cAEAD0.1,                                                                  h(<$cHash0.1,                                                                     <'SIG', 'SIG', $cSUITE0.1,                                                                      'g'^(~xx*~yy*inv(~yy.1))>,                                                                     'g'^~yy.1>),                                                                  'K_2e', '2'>,                                                                hkdfExtract('emptyStr',                                                                            'g'^(~xx*~yy)))⊕                                                     sign(<                                                           <$V.1,                                                             h(<$cHash0.1,                                                                <'SIG', 'SIG', $cSUITE0.1,                                                                 'g'^(~xx*~yy*inv(~yy.1))>,                                                                'g'^~yy.1>),                                                             pk(~ltk.2)>,                                                            aeadEncrypt('emptyStr',                                                                       hkdfExpand(<$cAEAD0.1,                                                                                    h(<$cHash0.1,                                                                                       <'SIG',                                                                                        'SIG',                                                                                        $cSUITE0.1,                                                                                        'g'^(~xx*~yy*                                                                                            inv(~yy.1)                                                                                           )                                                                                      >,                                                                                       'g'^~yy.1>),                                                                                    'K_2m'>,                                                                                  hkdfExtract('emptyStr',                                                                                              'g'^(                                                                                                   ~xx*                                                                                                   ~yy                                                                                                  ))),                                                                       <$V.1,                                                                         h(<$cHash0.1,                                                                            <'SIG', 'SIG',                                                                             $cSUITE0.1,                                                                             'g'^(~xx*~yy*inv(~yy.1))                                                                           >,                                                                            'g'^~yy.1>),                                                                         pk(~ltk.2)>,                                                                       $cAEAD0.1)                                                          >,                                                          ~ltk.2)                                                    )                                                   >,                                                    'emptyStr'>),                                                 'K_3m'>,                                               hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                                    <$U.1,                                      h(<$cHash0.2,                                         h(<$cHash0.1,                                            <'SIG', 'SIG', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1))>,                                            'g'^~yy.1>),                                         <                                         ($V.1⊕                                          hkdfExpand(<$cAEAD0.1,                                                       h(<$cHash0.1,                                                          <'SIG', 'SIG', $cSUITE0.1,                                                           'g'^(~xx*~yy*inv(~yy.1))>,                                                          'g'^~yy.1>),                                                       'K_2e', '1'>,                                                     hkdfExtract('emptyStr', 'g'^(~xx*~yy)))                                         ),                                          (                                          hkdfExpand(<$cAEAD0.1,                                                       h(<$cHash0.1,                                                          <'SIG', 'SIG', $cSUITE0.1,                                                           'g'^(~xx*~yy*inv(~yy.1))>,                                                          'g'^~yy.1>),                                                       'K_2e', '2'>,                                                     hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕                                          sign(<                                                <$V.1,                                                  h(<$cHash0.1,                                                     <'SIG', 'SIG', $cSUITE0.1,                                                      'g'^(~xx*~yy*inv(~yy.1))>,                                                     'g'^~yy.1>),                                                  pk(~ltk.2)>,                                                 aeadEncrypt('emptyStr',                                                            hkdfExpand(<$cAEAD0.1,                                                                         h(<$cHash0.1,                                                                            <'SIG', 'SIG',                                                                             $cSUITE0.1,                                                                             'g'^(~xx*~yy*inv(~yy.1))                                                                           >,                                                                            'g'^~yy.1>),                                                                         'K_2m'>,                                                                       hkdfExtract('emptyStr',                                                                                   'g'^(~xx*~yy))),                                                            <$V.1,                                                              h(<$cHash0.1,                                                                 <'SIG', 'SIG', $cSUITE0.1,                                                                  'g'^(~xx*~yy*inv(~yy.1))>,                                                                 'g'^~yy.1>),                                                              pk(~ltk.2)>,                                                            $cAEAD0.1)                                               >,                                               ~ltk.2)                                         )                                        >,                                         'emptyStr'>),                                      pk(~ltk.3)>,                                    $cAEAD0.2)                       >,                       ~ltk.3)                 >,                 hkdfExpand(<$cAEAD0.2,                              h(<$cHash0.2,                                 h(<$cHash0.1,                                    <'SIG', 'SIG', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1))>, 'g'^~yy.1                                  >),                                 <                                 ($V.1⊕                                  hkdfExpand(<$cAEAD0.1,                                               h(<$cHash0.1,                                                  <'SIG', 'SIG', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1))                                                 >,                                                  'g'^~yy.1>),                                               'K_2e', '1'>,                                             hkdfExtract('emptyStr', 'g'^(~xx*~yy)))                                 ),                                  (                                  hkdfExpand(<$cAEAD0.1,                                               h(<$cHash0.1,                                                  <'SIG', 'SIG', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1))                                                 >,                                                  'g'^~yy.1>),                                               'K_2e', '2'>,                                             hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕                                  sign(<                                        <$V.1,                                          h(<$cHash0.1,                                             <'SIG', 'SIG', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1))>,                                             'g'^~yy.1>),                                          pk(~ltk.2)>,                                         aeadEncrypt('emptyStr',                                                    hkdfExpand(<$cAEAD0.1,                                                                 h(<$cHash0.1,                                                                    <'SIG', 'SIG', $cSUITE0.1,                                                                     'g'^(~xx*~yy*inv(~yy.1))>,                                                                    'g'^~yy.1>),                                                                 'K_2m'>,                                                               hkdfExtract('emptyStr',                                                                           'g'^(~xx*~yy))),                                                    <$V.1,                                                      h(<$cHash0.1,                                                         <'SIG', 'SIG', $cSUITE0.1,                                                          'g'^(~xx*~yy*inv(~yy.1))>,                                                         'g'^~yy.1>),                                                      pk(~ltk.2)>,                                                    $cAEAD0.1)                                       >,                                       ~ltk.2)                                 )                                >,                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                 extAad3Outer, $cAEAD0.2)) @ #vk.5
4: !KU( 'g'^~yy ) @ #vk.17
5: !KU( ($V⊕      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))     )) @ #vk.19
6: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                   '2'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      sign(<            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'                                   >,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk)>,                        $cAEAD0)           >,           ~ltk)     )) @ #vk.20
7: !KU( 'g'^~xx ) @ #vk.13

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 57 (precomputed): !KU( ~xx ) @ #vk.23
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.22
1: !KU( ~yy.1 ) @ #vk.24
2: !KU( aeadEncrypt(<$U.1,                   sign(<                        <$U.1,                          h(<$cHash0.2,                             h(<$cHash0.1,                                <'SIG', 'SIG', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1))>, 'g'^~yy.1>),                             <                             ($V.1⊕                              hkdfExpand(<$cAEAD0.1,                                           h(<$cHash0.1,                                              <'SIG', 'SIG', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1))>,                                              'g'^~yy.1>),                                           'K_2e', '1'>,                                         hkdfExtract('emptyStr', 'g'^(~xx*~yy)))                             ),                              (                              hkdfExpand(<$cAEAD0.1,                                           h(<$cHash0.1,                                              <'SIG', 'SIG', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1))>,                                              'g'^~yy.1>),                                           'K_2e', '2'>,                                         hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕                              sign(<                                    <$V.1,                                      h(<$cHash0.1,                                         <'SIG', 'SIG', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1))>,                                         'g'^~yy.1>),                                      pk(~ltk.2)>,                                     aeadEncrypt('emptyStr',                                                hkdfExpand(<$cAEAD0.1,                                                             h(<$cHash0.1,                                                                <'SIG', 'SIG', $cSUITE0.1,                                                                 'g'^(~xx*~yy*inv(~yy.1))>,                                                                'g'^~yy.1>),                                                             'K_2m'>,                                                           hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                                                <$V.1,                                                  h(<$cHash0.1,                                                     <'SIG', 'SIG', $cSUITE0.1,                                                      'g'^(~xx*~yy*inv(~yy.1))>,                                                     'g'^~yy.1>),                                                  pk(~ltk.2)>,                                                $cAEAD0.1)                                   >,                                   ~ltk.2)                             )                            >,                             'emptyStr'>),                          pk(~ltk.3)>,                         aeadEncrypt('emptyStr',                                    hkdfExpand(<$cAEAD0.2,                                                 h(<$cHash0.2,                                                    h(<$cHash0.1,                                                       <'SIG', 'SIG', $cSUITE0.1,                                                        'g'^(~xx*~yy*inv(~yy.1))>,                                                       'g'^~yy.1>),                                                    <                                                    ($V.1⊕                                                     hkdfExpand(<$cAEAD0.1,                                                                  h(<$cHash0.1,                                                                     <'SIG', 'SIG', $cSUITE0.1,                                                                      'g'^(~xx*~yy*inv(~yy.1))>,                                                                     'g'^~yy.1>),                                                                  'K_2e', '1'>,                                                                hkdfExtract('emptyStr',                                                                            'g'^(~xx*~yy)))                                                    ),                                                     (                                                     hkdfExpand(<$cAEAD0.1,                                                                  h(<$cHash0.1,                                                                     <'SIG', 'SIG', $cSUITE0.1,                                                                      'g'^(~xx*~yy*inv(~yy.1))>,                                                                     'g'^~yy.1>),                                                                  'K_2e', '2'>,                                                                hkdfExtract('emptyStr',                                                                            'g'^(~xx*~yy)))⊕                                                     sign(<                                                           <$V.1,                                                             h(<$cHash0.1,                                                                <'SIG', 'SIG', $cSUITE0.1,                                                                 'g'^(~xx*~yy*inv(~yy.1))>,                                                                'g'^~yy.1>),                                                             pk(~ltk.2)>,                                                            aeadEncrypt('emptyStr',                                                                       hkdfExpand(<$cAEAD0.1,                                                                                    h(<$cHash0.1,                                                                                       <'SIG',                                                                                        'SIG',                                                                                        $cSUITE0.1,                                                                                        'g'^(~xx*~yy*                                                                                            inv(~yy.1)                                                                                           )                                                                                      >,                                                                                       'g'^~yy.1>),                                                                                    'K_2m'>,                                                                                  hkdfExtract('emptyStr',                                                                                              'g'^(                                                                                                   ~xx*                                                                                                   ~yy                                                                                                  ))),                                                                       <$V.1,                                                                         h(<$cHash0.1,                                                                            <'SIG', 'SIG',                                                                             $cSUITE0.1,                                                                             'g'^(~xx*~yy*inv(~yy.1))                                                                           >,                                                                            'g'^~yy.1>),                                                                         pk(~ltk.2)>,                                                                       $cAEAD0.1)                                                          >,                                                          ~ltk.2)                                                    )                                                   >,                                                    'emptyStr'>),                                                 'K_3m'>,                                               hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                                    <$U.1,                                      h(<$cHash0.2,                                         h(<$cHash0.1,                                            <'SIG', 'SIG', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1))>,                                            'g'^~yy.1>),                                         <                                         ($V.1⊕                                          hkdfExpand(<$cAEAD0.1,                                                       h(<$cHash0.1,                                                          <'SIG', 'SIG', $cSUITE0.1,                                                           'g'^(~xx*~yy*inv(~yy.1))>,                                                          'g'^~yy.1>),                                                       'K_2e', '1'>,                                                     hkdfExtract('emptyStr', 'g'^(~xx*~yy)))                                         ),                                          (                                          hkdfExpand(<$cAEAD0.1,                                                       h(<$cHash0.1,                                                          <'SIG', 'SIG', $cSUITE0.1,                                                           'g'^(~xx*~yy*inv(~yy.1))>,                                                          'g'^~yy.1>),                                                       'K_2e', '2'>,                                                     hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕                                          sign(<                                                <$V.1,                                                  h(<$cHash0.1,                                                     <'SIG', 'SIG', $cSUITE0.1,                                                      'g'^(~xx*~yy*inv(~yy.1))>,                                                     'g'^~yy.1>),                                                  pk(~ltk.2)>,                                                 aeadEncrypt('emptyStr',                                                            hkdfExpand(<$cAEAD0.1,                                                                         h(<$cHash0.1,                                                                            <'SIG', 'SIG',                                                                             $cSUITE0.1,                                                                             'g'^(~xx*~yy*inv(~yy.1))                                                                           >,                                                                            'g'^~yy.1>),                                                                         'K_2m'>,                                                                       hkdfExtract('emptyStr',                                                                                   'g'^(~xx*~yy))),                                                            <$V.1,                                                              h(<$cHash0.1,                                                                 <'SIG', 'SIG', $cSUITE0.1,                                                                  'g'^(~xx*~yy*inv(~yy.1))>,                                                                 'g'^~yy.1>),                                                              pk(~ltk.2)>,                                                            $cAEAD0.1)                                               >,                                               ~ltk.2)                                         )                                        >,                                         'emptyStr'>),                                      pk(~ltk.3)>,                                    $cAEAD0.2)                       >,                       ~ltk.3)                 >,                 hkdfExpand(<$cAEAD0.2,                              h(<$cHash0.2,                                 h(<$cHash0.1,                                    <'SIG', 'SIG', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1))>, 'g'^~yy.1                                  >),                                 <                                 ($V.1⊕                                  hkdfExpand(<$cAEAD0.1,                                               h(<$cHash0.1,                                                  <'SIG', 'SIG', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1))                                                 >,                                                  'g'^~yy.1>),                                               'K_2e', '1'>,                                             hkdfExtract('emptyStr', 'g'^(~xx*~yy)))                                 ),                                  (                                  hkdfExpand(<$cAEAD0.1,                                               h(<$cHash0.1,                                                  <'SIG', 'SIG', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1))                                                 >,                                                  'g'^~yy.1>),                                               'K_2e', '2'>,                                             hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕                                  sign(<                                        <$V.1,                                          h(<$cHash0.1,                                             <'SIG', 'SIG', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1))>,                                             'g'^~yy.1>),                                          pk(~ltk.2)>,                                         aeadEncrypt('emptyStr',                                                    hkdfExpand(<$cAEAD0.1,                                                                 h(<$cHash0.1,                                                                    <'SIG', 'SIG', $cSUITE0.1,                                                                     'g'^(~xx*~yy*inv(~yy.1))>,                                                                    'g'^~yy.1>),                                                                 'K_2m'>,                                                               hkdfExtract('emptyStr',                                                                           'g'^(~xx*~yy))),                                                    <$V.1,                                                      h(<$cHash0.1,                                                         <'SIG', 'SIG', $cSUITE0.1,                                                          'g'^(~xx*~yy*inv(~yy.1))>,                                                         'g'^~yy.1>),                                                      pk(~ltk.2)>,                                                    $cAEAD0.1)                                       >,                                       ~ltk.2)                                 )                                >,                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                 extAad3Outer, $cAEAD0.2)) @ #vk.5
3: !KU( 'g'^~yy ) @ #vk.17
4: !KU( ($V⊕      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))     )) @ #vk.19
5: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                   '2'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      sign(<            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'                                   >,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk)>,                        $cAEAD0)           >,           ~ltk)     )) @ #vk.20
6: !KU( 'g'^~xx ) @ #vk.13

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 62 (precomputed): !KU( ~xx ) @ #vk.22
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~yy ) @ #vk.22
1: !KU( ~yy.1 ) @ #vk.24
2: !KU( aeadEncrypt(<$U.1,                   sign(<                        <$U.1,                          h(<$cHash0.2,                             h(<$cHash0.1,                                <'SIG', 'SIG', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1))>, 'g'^~yy.1>),                             <                             ($V.1⊕                              hkdfExpand(<$cAEAD0.1,                                           h(<$cHash0.1,                                              <'SIG', 'SIG', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1))>,                                              'g'^~yy.1>),                                           'K_2e', '1'>,                                         hkdfExtract('emptyStr', 'g'^(~xx*~yy)))                             ),                              (                              hkdfExpand(<$cAEAD0.1,                                           h(<$cHash0.1,                                              <'SIG', 'SIG', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1))>,                                              'g'^~yy.1>),                                           'K_2e', '2'>,                                         hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕                              sign(<                                    <$V.1,                                      h(<$cHash0.1,                                         <'SIG', 'SIG', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1))>,                                         'g'^~yy.1>),                                      pk(~ltk.2)>,                                     aeadEncrypt('emptyStr',                                                hkdfExpand(<$cAEAD0.1,                                                             h(<$cHash0.1,                                                                <'SIG', 'SIG', $cSUITE0.1,                                                                 'g'^(~xx*~yy*inv(~yy.1))>,                                                                'g'^~yy.1>),                                                             'K_2m'>,                                                           hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                                                <$V.1,                                                  h(<$cHash0.1,                                                     <'SIG', 'SIG', $cSUITE0.1,                                                      'g'^(~xx*~yy*inv(~yy.1))>,                                                     'g'^~yy.1>),                                                  pk(~ltk.2)>,                                                $cAEAD0.1)                                   >,                                   ~ltk.2)                             )                            >,                             'emptyStr'>),                          pk(~ltk.3)>,                         aeadEncrypt('emptyStr',                                    hkdfExpand(<$cAEAD0.2,                                                 h(<$cHash0.2,                                                    h(<$cHash0.1,                                                       <'SIG', 'SIG', $cSUITE0.1,                                                        'g'^(~xx*~yy*inv(~yy.1))>,                                                       'g'^~yy.1>),                                                    <                                                    ($V.1⊕                                                     hkdfExpand(<$cAEAD0.1,                                                                  h(<$cHash0.1,                                                                     <'SIG', 'SIG', $cSUITE0.1,                                                                      'g'^(~xx*~yy*inv(~yy.1))>,                                                                     'g'^~yy.1>),                                                                  'K_2e', '1'>,                                                                hkdfExtract('emptyStr',                                                                            'g'^(~xx*~yy)))                                                    ),                                                     (                                                     hkdfExpand(<$cAEAD0.1,                                                                  h(<$cHash0.1,                                                                     <'SIG', 'SIG', $cSUITE0.1,                                                                      'g'^(~xx*~yy*inv(~yy.1))>,                                                                     'g'^~yy.1>),                                                                  'K_2e', '2'>,                                                                hkdfExtract('emptyStr',                                                                            'g'^(~xx*~yy)))⊕                                                     sign(<                                                           <$V.1,                                                             h(<$cHash0.1,                                                                <'SIG', 'SIG', $cSUITE0.1,                                                                 'g'^(~xx*~yy*inv(~yy.1))>,                                                                'g'^~yy.1>),                                                             pk(~ltk.2)>,                                                            aeadEncrypt('emptyStr',                                                                       hkdfExpand(<$cAEAD0.1,                                                                                    h(<$cHash0.1,                                                                                       <'SIG',                                                                                        'SIG',                                                                                        $cSUITE0.1,                                                                                        'g'^(~xx*~yy*                                                                                            inv(~yy.1)                                                                                           )                                                                                      >,                                                                                       'g'^~yy.1>),                                                                                    'K_2m'>,                                                                                  hkdfExtract('emptyStr',                                                                                              'g'^(                                                                                                   ~xx*                                                                                                   ~yy                                                                                                  ))),                                                                       <$V.1,                                                                         h(<$cHash0.1,                                                                            <'SIG', 'SIG',                                                                             $cSUITE0.1,                                                                             'g'^(~xx*~yy*inv(~yy.1))                                                                           >,                                                                            'g'^~yy.1>),                                                                         pk(~ltk.2)>,                                                                       $cAEAD0.1)                                                          >,                                                          ~ltk.2)                                                    )                                                   >,                                                    'emptyStr'>),                                                 'K_3m'>,                                               hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                                    <$U.1,                                      h(<$cHash0.2,                                         h(<$cHash0.1,                                            <'SIG', 'SIG', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1))>,                                            'g'^~yy.1>),                                         <                                         ($V.1⊕                                          hkdfExpand(<$cAEAD0.1,                                                       h(<$cHash0.1,                                                          <'SIG', 'SIG', $cSUITE0.1,                                                           'g'^(~xx*~yy*inv(~yy.1))>,                                                          'g'^~yy.1>),                                                       'K_2e', '1'>,                                                     hkdfExtract('emptyStr', 'g'^(~xx*~yy)))                                         ),                                          (                                          hkdfExpand(<$cAEAD0.1,                                                       h(<$cHash0.1,                                                          <'SIG', 'SIG', $cSUITE0.1,                                                           'g'^(~xx*~yy*inv(~yy.1))>,                                                          'g'^~yy.1>),                                                       'K_2e', '2'>,                                                     hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕                                          sign(<                                                <$V.1,                                                  h(<$cHash0.1,                                                     <'SIG', 'SIG', $cSUITE0.1,                                                      'g'^(~xx*~yy*inv(~yy.1))>,                                                     'g'^~yy.1>),                                                  pk(~ltk.2)>,                                                 aeadEncrypt('emptyStr',                                                            hkdfExpand(<$cAEAD0.1,                                                                         h(<$cHash0.1,                                                                            <'SIG', 'SIG',                                                                             $cSUITE0.1,                                                                             'g'^(~xx*~yy*inv(~yy.1))                                                                           >,                                                                            'g'^~yy.1>),                                                                         'K_2m'>,                                                                       hkdfExtract('emptyStr',                                                                                   'g'^(~xx*~yy))),                                                            <$V.1,                                                              h(<$cHash0.1,                                                                 <'SIG', 'SIG', $cSUITE0.1,                                                                  'g'^(~xx*~yy*inv(~yy.1))>,                                                                 'g'^~yy.1>),                                                              pk(~ltk.2)>,                                                            $cAEAD0.1)                                               >,                                               ~ltk.2)                                         )                                        >,                                         'emptyStr'>),                                      pk(~ltk.3)>,                                    $cAEAD0.2)                       >,                       ~ltk.3)                 >,                 hkdfExpand(<$cAEAD0.2,                              h(<$cHash0.2,                                 h(<$cHash0.1,                                    <'SIG', 'SIG', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1))>, 'g'^~yy.1                                  >),                                 <                                 ($V.1⊕                                  hkdfExpand(<$cAEAD0.1,                                               h(<$cHash0.1,                                                  <'SIG', 'SIG', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1))                                                 >,                                                  'g'^~yy.1>),                                               'K_2e', '1'>,                                             hkdfExtract('emptyStr', 'g'^(~xx*~yy)))                                 ),                                  (                                  hkdfExpand(<$cAEAD0.1,                                               h(<$cHash0.1,                                                  <'SIG', 'SIG', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1))                                                 >,                                                  'g'^~yy.1>),                                               'K_2e', '2'>,                                             hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕                                  sign(<                                        <$V.1,                                          h(<$cHash0.1,                                             <'SIG', 'SIG', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1))>,                                             'g'^~yy.1>),                                          pk(~ltk.2)>,                                         aeadEncrypt('emptyStr',                                                    hkdfExpand(<$cAEAD0.1,                                                                 h(<$cHash0.1,                                                                    <'SIG', 'SIG', $cSUITE0.1,                                                                     'g'^(~xx*~yy*inv(~yy.1))>,                                                                    'g'^~yy.1>),                                                                 'K_2m'>,                                                               hkdfExtract('emptyStr',                                                                           'g'^(~xx*~yy))),                                                    <$V.1,                                                      h(<$cHash0.1,                                                         <'SIG', 'SIG', $cSUITE0.1,                                                          'g'^(~xx*~yy*inv(~yy.1))>,                                                         'g'^~yy.1>),                                                      pk(~ltk.2)>,                                                    $cAEAD0.1)                                       >,                                       ~ltk.2)                                 )                                >,                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                 extAad3Outer, $cAEAD0.2)) @ #vk.5
3: !KU( 'g'^~yy ) @ #vk.17
4: !KU( ($V⊕      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))     )) @ #vk.19
5: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                   '2'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      sign(<            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'                                   >,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk)>,                        $cAEAD0)           >,           ~ltk)     )) @ #vk.20
6: !KU( 'g'^~xx ) @ #vk.13

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 56 (precomputed): !KU( ~yy ) @ #vk.22
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( hkdfExtract('emptyStr', 'g'^(~xx*~yy)) ) @ #vk.15
1: !KU( h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>)) @ #vk.18
2: !KU( (      sign(<            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'                                   >,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)⊕      sign(<            <$V.1, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.2)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'                                   >,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V.1, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.2)>,                        $cAEAD0)           >,           ~ltk.2)     )) @ #vk.13
3: !KU( 'g'^~yy ) @ #vk.5
4: !KU( 'g'^~xx ) @ #vk.12

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 44 (precomputed):
    !KU( hkdfExtract('emptyStr', 'g'^(~xx*~yy)) ) @ #vk.15
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( (      sign(<            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'                                   >,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)⊕      sign(<            <$V.1, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.2)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'                                   >,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V.1, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.2)>,                        $cAEAD0)           >,           ~ltk.2)     )) @ #vk.13
1: !KU( 'g'^~yy ) @ #vk.5
2: !KU( 'g'^~xx ) @ #vk.12

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 35 (directly):
    !KU( (
          sign(<
                <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 
                 pk(~ltk.1)>, 
                aeadEncrypt('emptyStr',
                            hkdfExpand(<$cAEAD0, 
                                        h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 
                                        'K_2m'>,
                                       hkdfExtract('emptyStr', 'g'^(~xx*~yy))),
                            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 
                             pk(~ltk.1)>,
                            $cAEAD0)
               >,
               ~ltk.1)⊕
          sign(<
                <$V.1, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 
                 pk(~ltk.2)>, 
                aeadEncrypt('emptyStr',
                            hkdfExpand(<$cAEAD0, 
                                        h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 
                                        'K_2m'>,
                                       hkdfExtract('emptyStr', 'g'^(~xx*~yy))),
                            <$V.1, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 
                             pk(~ltk.2)>,
                            $cAEAD0)
               >,
               ~ltk.2)
         )
    ) @ #vk.13
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~ltk.1 ) @ #vk.24
1: !KU( h(<$cHash0.1,         h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>),         <         ($V⊕          hkdfExpand(<$cAEAD0,                       h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 'K_2e', '1'>,                     hkdfExtract('emptyStr', sk))         ),          (          hkdfExpand(<$cAEAD0,                       h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 'K_2e', '2'>,                     hkdfExtract('emptyStr', sk))⊕          sign(<                <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>), pk(~ltk)                >,                 aeadEncrypt('emptyStr',                            hkdfExpand(<$cAEAD0,                                         h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 'K_2m'                                       >,                                       hkdfExtract('emptyStr', sk)),                            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>), pk(~ltk)                            >,                            $cAEAD0)               >,               ~ltk)         )        >,         'emptyStr'>)) @ #vk.26
2: !KU( aeadEncrypt(<$U.1,                   sign(<                        <$U.1,                          h(<$cHash0.3,                             h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.1, gx.1>, 'g'^~yy.1>),                             <                             ($V.1⊕                              hkdfExpand(<$cAEAD0.2,                                           h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.1, gx.1>, 'g'^~yy.1                                            >),                                           'K_2e', '1'>,                                         hkdfExtract('emptyStr', sk))                             ),                              (                              hkdfExpand(<$cAEAD0.2,                                           h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.1, gx.1>, 'g'^~yy.1                                            >),                                           'K_2e', '2'>,                                         hkdfExtract('emptyStr', sk))⊕                              sign(<                                    <$V.1,                                      h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.1, gx.1>, 'g'^~yy.1>),                                      pk(~ltk.2)>,                                     aeadEncrypt('emptyStr',                                                hkdfExpand(<$cAEAD0.2,                                                             h(<$cHash0.2,                                                                <'SIG', 'SIG', $cSUITE0.1, gx.1>,                                                                'g'^~yy.1>),                                                             'K_2m'>,                                                           hkdfExtract('emptyStr', sk)),                                                <$V.1,                                                  h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.1, gx.1>,                                                     'g'^~yy.1>),                                                  pk(~ltk.2)>,                                                $cAEAD0.2)                                   >,                                   ~ltk.2)                             )                            >,                             'emptyStr'>),                          pk(~ltk.3)>,                         aeadEncrypt('emptyStr',                                    hkdfExpand(<$cAEAD0.3,                                                 h(<$cHash0.3,                                                    h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.1, gx.1>,                                                       'g'^~yy.1>),                                                    <                                                    ($V.1⊕                                                     hkdfExpand(<$cAEAD0.2,                                                                  h(<$cHash0.2,                                                                     <'SIG', 'SIG', $cSUITE0.1, gx.1                                                                    >,                                                                     'g'^~yy.1>),                                                                  'K_2e', '1'>,                                                                hkdfExtract('emptyStr', sk))                                                    ),                                                     (                                                     hkdfExpand(<$cAEAD0.2,                                                                  h(<$cHash0.2,                                                                     <'SIG', 'SIG', $cSUITE0.1, gx.1                                                                    >,                                                                     'g'^~yy.1>),                                                                  'K_2e', '2'>,                                                                hkdfExtract('emptyStr', sk))⊕                                                     sign(<                                                           <$V.1,                                                             h(<$cHash0.2,                                                                <'SIG', 'SIG', $cSUITE0.1, gx.1>,                                                                'g'^~yy.1>),                                                             pk(~ltk.2)>,                                                            aeadEncrypt('emptyStr',                                                                       hkdfExpand(<$cAEAD0.2,                                                                                    h(<$cHash0.2,                                                                                       <'SIG',                                                                                        'SIG',                                                                                        $cSUITE0.1,                                                                                        gx.1>,                                                                                       'g'^~yy.1>),                                                                                    'K_2m'>,                                                                                  hkdfExtract('emptyStr',                                                                                              sk)),                                                                       <$V.1,                                                                         h(<$cHash0.2,                                                                            <'SIG', 'SIG',                                                                             $cSUITE0.1, gx.1>,                                                                            'g'^~yy.1>),                                                                         pk(~ltk.2)>,                                                                       $cAEAD0.2)                                                          >,                                                          ~ltk.2)                                                    )                                                   >,                                                    'emptyStr'>),                                                 'K_3m'>,                                               hkdfExtract('emptyStr', sk)),                                    <$U.1,                                      h(<$cHash0.3,                                         h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.1, gx.1>, 'g'^~yy.1                                          >),                                         <                                         ($V.1⊕                                          hkdfExpand(<$cAEAD0.2,                                                       h(<$cHash0.2,                                                          <'SIG', 'SIG', $cSUITE0.1, gx.1>, 'g'^~yy.1                                                        >),                                                       'K_2e', '1'>,                                                     hkdfExtract('emptyStr', sk))                                         ),                                          (                                          hkdfExpand(<$cAEAD0.2,                                                       h(<$cHash0.2,                                                          <'SIG', 'SIG', $cSUITE0.1, gx.1>, 'g'^~yy.1                                                        >),                                                       'K_2e', '2'>,                                                     hkdfExtract('emptyStr', sk))⊕                                          sign(<                                                <$V.1,                                                  h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.1, gx.1>,                                                     'g'^~yy.1>),                                                  pk(~ltk.2)>,                                                 aeadEncrypt('emptyStr',                                                            hkdfExpand(<$cAEAD0.2,                                                                         h(<$cHash0.2,                                                                            <'SIG', 'SIG',                                                                             $cSUITE0.1, gx.1>,                                                                            'g'^~yy.1>),                                                                         'K_2m'>,                                                                       hkdfExtract('emptyStr', sk)),                                                            <$V.1,                                                              h(<$cHash0.2,                                                                 <'SIG', 'SIG', $cSUITE0.1, gx.1>,                                                                 'g'^~yy.1>),                                                              pk(~ltk.2)>,                                                            $cAEAD0.2)                                               >,                                               ~ltk.2)                                         )                                        >,                                         'emptyStr'>),                                      pk(~ltk.3)>,                                    $cAEAD0.3)                       >,                       ~ltk.3)                 >,                 hkdfExpand(<$cAEAD0.3,                              h(<$cHash0.3,                                 h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.1, gx.1>, 'g'^~yy.1>),                                 <                                 ($V.1⊕                                  hkdfExpand(<$cAEAD0.2,                                               h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.1, gx.1>,                                                  'g'^~yy.1>),                                               'K_2e', '1'>,                                             hkdfExtract('emptyStr', sk))                                 ),                                  (                                  hkdfExpand(<$cAEAD0.2,                                               h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.1, gx.1>,                                                  'g'^~yy.1>),                                               'K_2e', '2'>,                                             hkdfExtract('emptyStr', sk))⊕                                  sign(<                                        <$V.1,                                          h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.1, gx.1>, 'g'^~yy.1                                           >),                                          pk(~ltk.2)>,                                         aeadEncrypt('emptyStr',                                                    hkdfExpand(<$cAEAD0.2,                                                                 h(<$cHash0.2,                                                                    <'SIG', 'SIG', $cSUITE0.1, gx.1                                                                   >,                                                                    'g'^~yy.1>),                                                                 'K_2m'>,                                                               hkdfExtract('emptyStr', sk)),                                                    <$V.1,                                                      h(<$cHash0.2,                                                         <'SIG', 'SIG', $cSUITE0.1, gx.1>, 'g'^~yy.1                                                       >),                                                      pk(~ltk.2)>,                                                    $cAEAD0.2)                                       >,                                       ~ltk.2)                                 )                                >,                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract('emptyStr', sk)),                 extAad3Outer.1, $cAEAD0.3)) @ #vk.5
3: !KU( hkdfExpand(<$cAEAD0.1,                  h(<$cHash0.1, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                     <                     ($V⊕                      hkdfExpand(<$cAEAD0,                                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 'K_2e', '1'>,                                 hkdfExtract('emptyStr', sk))                     ),                      (                      hkdfExpand(<$cAEAD0,                                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 'K_2e', '2'>,                                 hkdfExtract('emptyStr', sk))⊕                      sign(<                            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>), pk(~ltk)                            >,                             aeadEncrypt('emptyStr',                                        hkdfExpand(<$cAEAD0,                                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>,                                                        'g'^~yy>),                                                     'K_2m'>,                                                   hkdfExtract('emptyStr', sk)),                                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                          pk(~ltk)>,                                        $cAEAD0)                           >,                           ~ltk)                     )                    >,                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract('emptyStr', sk))) @ #vk.18
4: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                 <                                 ($V⊕                                  hkdfExpand(<$cAEAD0,                                               h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                               'K_2e', '1'>,                                             hkdfExtract('emptyStr', sk))                                 ),                                  (                                  hkdfExpand(<$cAEAD0,                                               h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                               'K_2e', '2'>,                                             hkdfExtract('emptyStr', sk))⊕                                  sign(<                                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                          pk(~ltk)>,                                         aeadEncrypt('emptyStr',                                                    hkdfExpand(<$cAEAD0,                                                                 h(<$cHash0,                                                                    <'SIG', 'SIG', $cSUITE0, gx>,                                                                    'g'^~yy>),                                                                 'K_2m'>,                                                               hkdfExtract('emptyStr', sk)),                                                    <$V,                                                      h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>,                                                         'g'^~yy>),                                                      pk(~ltk)>,                                                    $cAEAD0)                                       >,                                       ~ltk)                                 )                                >,                                 'emptyStr'>),                              'K_3m'>,                            hkdfExtract('emptyStr', sk)),                 <$U,                   h(<$cHash0.1, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                      <                      ($V⊕                       hkdfExpand(<$cAEAD0,                                    h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 'K_2e', '1'                                  >,                                  hkdfExtract('emptyStr', sk))                      ),                       (                       hkdfExpand(<$cAEAD0,                                    h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 'K_2e', '2'                                  >,                                  hkdfExtract('emptyStr', sk))⊕                       sign(<                             <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>), pk(~ltk)                             >,                              aeadEncrypt('emptyStr',                                         hkdfExpand(<$cAEAD0,                                                      h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>,                                                         'g'^~yy>),                                                      'K_2m'>,                                                    hkdfExtract('emptyStr', sk)),                                         <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                           pk(~ltk)>,                                         $cAEAD0)                            >,                            ~ltk)                      )                     >,                      'emptyStr'>),                   pk(~ltk.1)>,                 $cAEAD0.1)) @ #vk.28
5: splitEqs(2)
6: splitEqs(3)
7: !KU( pk(~ltk.1) ) @ #vk.27

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 51 (precomputed): !KU( ~ltk.1 ) @ #vk.24
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.5, 0) ~~> (#vk, 0)
1: StI1_SIG_SIG( $U.1, ~ltk.2, $V.1, ~xx.1, m1, ~tid.1 ) ▶₀ #vr.3
2: !PK_SIG( $V.1, pk(x) ) ▶₁ #vr.3
3: !PK_SIG( $U.1, pkU ) ▶₂ #vr.3
4: !KU( sign(<           <$U.1,             h(<$cHash0.1, h(<$cHash0.1, m1, gy.1>),                <                ($V.1⊕                 hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2e', '1'>,                            hkdfExtract('emptyStr', z))                ),                 (                 hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2e', '2'>,                            hkdfExtract('emptyStr', z))⊕                 sign(<<$V.1, h(<$cHash0.1, m1, gy.1>), pk(x)>,                        aeadEncrypt('emptyStr',                                   hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2m'>,                                              hkdfExtract('emptyStr', z)),                                   <$V.1, h(<$cHash0.1, m1, gy.1>), pk(x)>, $cAEAD0.1)                      >,                      x)                )               >,                'emptyStr'>),             pkU>,            aeadEncrypt('emptyStr',                       hkdfExpand(<$cAEAD0.1,                                    h(<$cHash0.1, h(<$cHash0.1, m1, gy.1>),                                       <                                       ($V.1⊕                                        hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2e', '1'                                                   >,                                                   hkdfExtract('emptyStr', z))                                       ),                                        (                                        hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2e', '2'                                                   >,                                                   hkdfExtract('emptyStr', z))⊕                                        sign(<<$V.1, h(<$cHash0.1, m1, gy.1>), pk(x)>,                                               aeadEncrypt('emptyStr',                                                          hkdfExpand(<$cAEAD0.1,                                                                       h(<$cHash0.1, m1, gy.1>),                                                                       'K_2m'>,                                                                     hkdfExtract('emptyStr', z)),                                                          <$V.1, h(<$cHash0.1, m1, gy.1>), pk(x)>,                                                          $cAEAD0.1)                                             >,                                             x)                                       )                                      >,                                       'emptyStr'>),                                    'K_3m'>,                                  hkdfExtract('emptyStr', z)),                       <$U.1,                         h(<$cHash0.1, h(<$cHash0.1, m1, gy.1>),                            <                            ($V.1⊕                             hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2e', '1'>,                                        hkdfExtract('emptyStr', z))                            ),                             (                             hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2e', '2'>,                                        hkdfExtract('emptyStr', z))⊕                             sign(<<$V.1, h(<$cHash0.1, m1, gy.1>), pk(x)>,                                    aeadEncrypt('emptyStr',                                               hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>),                                                            'K_2m'>,                                                          hkdfExtract('emptyStr', z)),                                               <$V.1, h(<$cHash0.1, m1, gy.1>), pk(x)>, $cAEAD0.1)                                  >,                                  x)                            )                           >,                            'emptyStr'>),                         pkU>,                       $cAEAD0.1)          >,          ~ltk.2)) @ #vk.13
5: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)     )) @ #vk.4
6: splitEqs(0)
7: splitEqs(1)
8: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.8
9: !KU( (      hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', z))⊕      sign(<<$V.1, h(<$cHash0.1, m1, gy.1>), pk(x)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2m'>,                                   hkdfExtract('emptyStr', z)),                        <$V.1, h(<$cHash0.1, m1, gy.1>), pk(x)>, $cAEAD0.1)           >,           x)     )) @ #vk.9

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.5, 0) ~~> (#vk, 0)
1: StI1_SIG_SIG( $U.1, ~ltk.2, $V.1, ~xx.1, m1, ~tid.1 ) ▶₀ #vr.3
2: !PK_SIG( $V.1, pk(x) ) ▶₁ #vr.3
3: !PK_SIG( $U.1, pkU ) ▶₂ #vr.3
4: !KU( sign(<           <$U.1,             h(<$cHash0.1, h(<$cHash0.1, m1, gy.1>),                <                ($V.1⊕                 hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2e', '1'>,                            hkdfExtract('emptyStr', z))                ),                 (                 hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2e', '2'>,                            hkdfExtract('emptyStr', z))⊕                 sign(<<$V.1, h(<$cHash0.1, m1, gy.1>), pk(x)>,                        aeadEncrypt('emptyStr',                                   hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2m'>,                                              hkdfExtract('emptyStr', z)),                                   <$V.1, h(<$cHash0.1, m1, gy.1>), pk(x)>, $cAEAD0.1)                      >,                      x)                )               >,                'emptyStr'>),             pkU>,            aeadEncrypt('emptyStr',                       hkdfExpand(<$cAEAD0.1,                                    h(<$cHash0.1, h(<$cHash0.1, m1, gy.1>),                                       <                                       ($V.1⊕                                        hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2e', '1'                                                   >,                                                   hkdfExtract('emptyStr', z))                                       ),                                        (                                        hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2e', '2'                                                   >,                                                   hkdfExtract('emptyStr', z))⊕                                        sign(<<$V.1, h(<$cHash0.1, m1, gy.1>), pk(x)>,                                               aeadEncrypt('emptyStr',                                                          hkdfExpand(<$cAEAD0.1,                                                                       h(<$cHash0.1, m1, gy.1>),                                                                       'K_2m'>,                                                                     hkdfExtract('emptyStr', z)),                                                          <$V.1, h(<$cHash0.1, m1, gy.1>), pk(x)>,                                                          $cAEAD0.1)                                             >,                                             x)                                       )                                      >,                                       'emptyStr'>),                                    'K_3m'>,                                  hkdfExtract('emptyStr', z)),                       <$U.1,                         h(<$cHash0.1, h(<$cHash0.1, m1, gy.1>),                            <                            ($V.1⊕                             hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2e', '1'>,                                        hkdfExtract('emptyStr', z))                            ),                             (                             hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2e', '2'>,                                        hkdfExtract('emptyStr', z))⊕                             sign(<<$V.1, h(<$cHash0.1, m1, gy.1>), pk(x)>,                                    aeadEncrypt('emptyStr',                                               hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>),                                                            'K_2m'>,                                                          hkdfExtract('emptyStr', z)),                                               <$V.1, h(<$cHash0.1, m1, gy.1>), pk(x)>, $cAEAD0.1)                                  >,                                  x)                            )                           >,                            'emptyStr'>),                         pkU>,                       $cAEAD0.1)          >,          ~ltk.2)) @ #vk.14
5: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)     )) @ #vk.4
6: splitEqs(0)
7: splitEqs(1)
8: !KU( h(<$cHash0.1, h(<$cHash0.1, m1, gy.1>),         <         ($V.1⊕          hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2e', '1'>,                     hkdfExtract('emptyStr', z))         ),          (          hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2e', '2'>,                     hkdfExtract('emptyStr', z))⊕          sign(<<$V.1, h(<$cHash0.1, m1, gy.1>), pk(x)>,                 aeadEncrypt('emptyStr',                            hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2m'>,                                       hkdfExtract('emptyStr', z)),                            <$V.1, h(<$cHash0.1, m1, gy.1>), pk(x)>, $cAEAD0.1)               >,               x)         )        >,         'emptyStr'>)) @ #vk.11
9: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.8
10: !KU( (      hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', z))⊕      sign(<<$V.1, h(<$cHash0.1, m1, gy.1>), pk(x)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2m'>,                                   hkdfExtract('emptyStr', z)),                        <$V.1, h(<$cHash0.1, m1, gy.1>), pk(x)>, $cAEAD0.1)           >,           x)     )) @ #vk.9

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  simplified formula:
      "((#vr.30 = #i) ∨ (#i < #vr.30))"
    to
      "⊥"
  solved goal nr. 60 (simplified): (#vr.30 = #i)  ∥ (#i < #vr.30)
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.4, 0) ~~> (#vk, 0)
1: !LTK_SIG( $V.1, ~ltk.2 ) ▶₀ #vr.3
2: !PK_SIG( $V.1, pkV ) ▶₁ #vr.3
3: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)     )) @ #vk.4
4: splitEqs(0)
5: splitEqs(1)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.5, 0) ~~> (#vk, 0)
1: !LTK_SIG( $V.1, ~ltk.2 ) ▶₀ #vr.3
2: !PK_SIG( $V.1, pkV ) ▶₁ #vr.3
3: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)     )) @ #vk.4
4: splitEqs(0)
5: splitEqs(1)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.5, 0) ~~> (#vk, 0)
1: !LTK_SIG( $V.1, ~ltk.2 ) ▶₀ #vr.3
2: !PK_SIG( $V.1, pkV ) ▶₁ #vr.3
3: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)     )) @ #vk.4
4: splitEqs(0)
5: splitEqs(1)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  simplified formula:
      "((#vr.3 = #i) ∨ (#i < #vr.3))"
    to
      "⊥"
  solved goal nr. 34 (simplified): (#vr.3 = #i)  ∥ (#i < #vr.3)
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !PK_SIG( $V.1, pkV ) ▶₂ #i2
1: !KU( aeadEncrypt(<$U,                   sign(<                        <$U,                          h(<$cHash0.1, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                             <                             ($V⊕                              hkdfExpand(<$cAEAD0,                                           h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                           'K_2e', '1'>,                                         hkdfExtract('emptyStr', sk))                             ),                              (                              hkdfExpand(<$cAEAD0,                                           h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                           'K_2e', '2'>,                                         hkdfExtract('emptyStr', sk))⊕                              sign(<                                    <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                      pk(~ltk)>,                                     aeadEncrypt('emptyStr',                                                hkdfExpand(<$cAEAD0,                                                             h(<$cHash0,                                                                <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy                                                              >),                                                             'K_2m'>,                                                           hkdfExtract('emptyStr', sk)),                                                <$V,                                                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy                                                   >),                                                  pk(~ltk)>,                                                $cAEAD0)                                   >,                                   ~ltk)                             )                            >,                             'emptyStr'>),                          pk(~ltk.1)>,                         aeadEncrypt('emptyStr',                                    hkdfExpand(<$cAEAD0.1,                                                 h(<$cHash0.1,                                                    h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy                                                     >),                                                    <                                                    ($V⊕                                                     hkdfExpand(<$cAEAD0,                                                                  h(<$cHash0,                                                                     <'SIG', 'SIG', $cSUITE0, gx>,                                                                     'g'^~yy>),                                                                  'K_2e', '1'>,                                                                hkdfExtract('emptyStr', sk))                                                    ),                                                     (                                                     hkdfExpand(<$cAEAD0,                                                                  h(<$cHash0,                                                                     <'SIG', 'SIG', $cSUITE0, gx>,                                                                     'g'^~yy>),                                                                  'K_2e', '2'>,                                                                hkdfExtract('emptyStr', sk))⊕                                                     sign(<                                                           <$V,                                                             h(<$cHash0,                                                                <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy                                                              >),                                                             pk(~ltk)>,                                                            aeadEncrypt('emptyStr',                                                                       hkdfExpand(<$cAEAD0,                                                                                    h(<$cHash0,                                                                                       <'SIG',                                                                                        'SIG',                                                                                        $cSUITE0, gx                                                                                      >,                                                                                       'g'^~yy>),                                                                                    'K_2m'>,                                                                                  hkdfExtract('emptyStr',                                                                                              sk)),                                                                       <$V,                                                                         h(<$cHash0,                                                                            <'SIG', 'SIG', $cSUITE0,                                                                             gx>,                                                                            'g'^~yy>),                                                                         pk(~ltk)>,                                                                       $cAEAD0)                                                          >,                                                          ~ltk)                                                    )                                                   >,                                                    'emptyStr'>),                                                 'K_3m'>,                                               hkdfExtract('emptyStr', sk)),                                    <$U,                                      h(<$cHash0.1,                                         h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                         <                                         ($V⊕                                          hkdfExpand(<$cAEAD0,                                                       h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>,                                                          'g'^~yy>),                                                       'K_2e', '1'>,                                                     hkdfExtract('emptyStr', sk))                                         ),                                          (                                          hkdfExpand(<$cAEAD0,                                                       h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>,                                                          'g'^~yy>),                                                       'K_2e', '2'>,                                                     hkdfExtract('emptyStr', sk))⊕                                          sign(<                                                <$V,                                                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy                                                   >),                                                  pk(~ltk)>,                                                 aeadEncrypt('emptyStr',                                                            hkdfExpand(<$cAEAD0,                                                                         h(<$cHash0,                                                                            <'SIG', 'SIG', $cSUITE0,                                                                             gx>,                                                                            'g'^~yy>),                                                                         'K_2m'>,                                                                       hkdfExtract('emptyStr', sk)),                                                            <$V,                                                              h(<$cHash0,                                                                 <'SIG', 'SIG', $cSUITE0, gx>,                                                                 'g'^~yy>),                                                              pk(~ltk)>,                                                            $cAEAD0)                                               >,                                               ~ltk)                                         )                                        >,                                         'emptyStr'>),                                      pk(~ltk.1)>,                                    $cAEAD0.1)                       >,                       ~ltk.1)                 >,                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                 <                                 ($V⊕                                  hkdfExpand(<$cAEAD0,                                               h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                               'K_2e', '1'>,                                             hkdfExtract('emptyStr', sk))                                 ),                                  (                                  hkdfExpand(<$cAEAD0,                                               h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                               'K_2e', '2'>,                                             hkdfExtract('emptyStr', sk))⊕                                  sign(<                                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                          pk(~ltk)>,                                         aeadEncrypt('emptyStr',                                                    hkdfExpand(<$cAEAD0,                                                                 h(<$cHash0,                                                                    <'SIG', 'SIG', $cSUITE0, gx>,                                                                    'g'^~yy>),                                                                 'K_2m'>,                                                               hkdfExtract('emptyStr', sk)),                                                    <$V,                                                      h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>,                                                         'g'^~yy>),                                                      pk(~ltk)>,                                                    $cAEAD0)                                       >,                                       ~ltk)                                 )                                >,                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract('emptyStr', sk)),                 extAad3Outer, $cAEAD0.1)) @ #vk.3
2: !KU( aeadEncrypt(<$U.1,                   sign(<                        <$U.1,                          h(<$cHash0.3,                             h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.1, gx.1>, 'g'^~yy.1>),                             <                             ($V.1⊕                              hkdfExpand(<$cAEAD0.2,                                           h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.1, gx.1>, 'g'^~yy.1                                            >),                                           'K_2e', '1'>,                                         hkdfExtract('emptyStr', sk))                             ),                              (                              hkdfExpand(<$cAEAD0.2,                                           h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.1, gx.1>, 'g'^~yy.1                                            >),                                           'K_2e', '2'>,                                         hkdfExtract('emptyStr', sk))⊕                              sign(<                                    <$V.1,                                      h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.1, gx.1>, 'g'^~yy.1>),                                      pk(~ltk.2)>,                                     aeadEncrypt('emptyStr',                                                hkdfExpand(<$cAEAD0.2,                                                             h(<$cHash0.2,                                                                <'SIG', 'SIG', $cSUITE0.1, gx.1>,                                                                'g'^~yy.1>),                                                             'K_2m'>,                                                           hkdfExtract('emptyStr', sk)),                                                <$V.1,                                                  h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.1, gx.1>,                                                     'g'^~yy.1>),                                                  pk(~ltk.2)>,                                                $cAEAD0.2)                                   >,                                   ~ltk.2)                             )                            >,                             'emptyStr'>),                          pk(~ltk.3)>,                         aeadEncrypt('emptyStr',                                    hkdfExpand(<$cAEAD0.3,                                                 h(<$cHash0.3,                                                    h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.1, gx.1>,                                                       'g'^~yy.1>),                                                    <                                                    ($V.1⊕                                                     hkdfExpand(<$cAEAD0.2,                                                                  h(<$cHash0.2,                                                                     <'SIG', 'SIG', $cSUITE0.1, gx.1                                                                    >,                                                                     'g'^~yy.1>),                                                                  'K_2e', '1'>,                                                                hkdfExtract('emptyStr', sk))                                                    ),                                                     (                                                     hkdfExpand(<$cAEAD0.2,                                                                  h(<$cHash0.2,                                                                     <'SIG', 'SIG', $cSUITE0.1, gx.1                                                                    >,                                                                     'g'^~yy.1>),                                                                  'K_2e', '2'>,                                                                hkdfExtract('emptyStr', sk))⊕                                                     sign(<                                                           <$V.1,                                                             h(<$cHash0.2,                                                                <'SIG', 'SIG', $cSUITE0.1, gx.1>,                                                                'g'^~yy.1>),                                                             pk(~ltk.2)>,                                                            aeadEncrypt('emptyStr',                                                                       hkdfExpand(<$cAEAD0.2,                                                                                    h(<$cHash0.2,                                                                                       <'SIG',                                                                                        'SIG',                                                                                        $cSUITE0.1,                                                                                        gx.1>,                                                                                       'g'^~yy.1>),                                                                                    'K_2m'>,                                                                                  hkdfExtract('emptyStr',                                                                                              sk)),                                                                       <$V.1,                                                                         h(<$cHash0.2,                                                                            <'SIG', 'SIG',                                                                             $cSUITE0.1, gx.1>,                                                                            'g'^~yy.1>),                                                                         pk(~ltk.2)>,                                                                       $cAEAD0.2)                                                          >,                                                          ~ltk.2)                                                    )                                                   >,                                                    'emptyStr'>),                                                 'K_3m'>,                                               hkdfExtract('emptyStr', sk)),                                    <$U.1,                                      h(<$cHash0.3,                                         h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.1, gx.1>, 'g'^~yy.1                                          >),                                         <                                         ($V.1⊕                                          hkdfExpand(<$cAEAD0.2,                                                       h(<$cHash0.2,                                                          <'SIG', 'SIG', $cSUITE0.1, gx.1>, 'g'^~yy.1                                                        >),                                                       'K_2e', '1'>,                                                     hkdfExtract('emptyStr', sk))                                         ),                                          (                                          hkdfExpand(<$cAEAD0.2,                                                       h(<$cHash0.2,                                                          <'SIG', 'SIG', $cSUITE0.1, gx.1>, 'g'^~yy.1                                                        >),                                                       'K_2e', '2'>,                                                     hkdfExtract('emptyStr', sk))⊕                                          sign(<                                                <$V.1,                                                  h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.1, gx.1>,                                                     'g'^~yy.1>),                                                  pk(~ltk.2)>,                                                 aeadEncrypt('emptyStr',                                                            hkdfExpand(<$cAEAD0.2,                                                                         h(<$cHash0.2,                                                                            <'SIG', 'SIG',                                                                             $cSUITE0.1, gx.1>,                                                                            'g'^~yy.1>),                                                                         'K_2m'>,                                                                       hkdfExtract('emptyStr', sk)),                                                            <$V.1,                                                              h(<$cHash0.2,                                                                 <'SIG', 'SIG', $cSUITE0.1, gx.1>,                                                                 'g'^~yy.1>),                                                              pk(~ltk.2)>,                                                            $cAEAD0.2)                                               >,                                               ~ltk.2)                                         )                                        >,                                         'emptyStr'>),                                      pk(~ltk.3)>,                                    $cAEAD0.3)                       >,                       ~ltk.3)                 >,                 hkdfExpand(<$cAEAD0.3,                              h(<$cHash0.3,                                 h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.1, gx.1>, 'g'^~yy.1>),                                 <                                 ($V.1⊕                                  hkdfExpand(<$cAEAD0.2,                                               h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.1, gx.1>,                                                  'g'^~yy.1>),                                               'K_2e', '1'>,                                             hkdfExtract('emptyStr', sk))                                 ),                                  (                                  hkdfExpand(<$cAEAD0.2,                                               h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.1, gx.1>,                                                  'g'^~yy.1>),                                               'K_2e', '2'>,                                             hkdfExtract('emptyStr', sk))⊕                                  sign(<                                        <$V.1,                                          h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.1, gx.1>, 'g'^~yy.1                                           >),                                          pk(~ltk.2)>,                                         aeadEncrypt('emptyStr',                                                    hkdfExpand(<$cAEAD0.2,                                                                 h(<$cHash0.2,                                                                    <'SIG', 'SIG', $cSUITE0.1, gx.1                                                                   >,                                                                    'g'^~yy.1>),                                                                 'K_2m'>,                                                               hkdfExtract('emptyStr', sk)),                                                    <$V.1,                                                      h(<$cHash0.2,                                                         <'SIG', 'SIG', $cSUITE0.1, gx.1>, 'g'^~yy.1                                                       >),                                                      pk(~ltk.2)>,                                                    $cAEAD0.2)                                       >,                                       ~ltk.2)                                 )                                >,                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract('emptyStr', sk)),                 extAad3Outer.1, $cAEAD0.3)) @ #vk.4
3: splitEqs(2)
4: splitEqs(3)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 14 (precomputed): !PK_SIG( $V.1, pkV ) ▶₂ #i2
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.6, 0) ~~> (#vk, 0)
1: !LTK_SIG( $V.1, ~ltk.2 ) ▶₀ #vr.3
2: !PK_SIG( $V.1, pkV ) ▶₁ #vr.3
3: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)     )) @ #vk.4
4: splitEqs(0)
5: splitEqs(1)
6: !KU( ($V.1⊕z.1) ) @ #vk.11

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.6, 0) ~~> (#vk, 0)
1: !LTK_SIG( $V.1, ~ltk.2 ) ▶₀ #vr.3
2: !PK_SIG( $V.1, pkV ) ▶₁ #vr.3
3: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)     )) @ #vk.4
4: !KU( (z.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, gx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.11
5: splitEqs(0)
6: splitEqs(1)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.6, 0) ~~> (#vk, 0)
1: !LTK_SIG( $V.1, ~ltk.2 ) ▶₀ #vr.3
2: !PK_SIG( $V.1, pkV ) ▶₁ #vr.3
3: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)     )) @ #vk.4
4: splitEqs(0)
5: splitEqs(1)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !LTK_SIG( $V, ~ltk.2 ) ▶₀ #vr.3
1: !PK_SIG( $V, pkV ) ▶₁ #vr.3
2: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)     )) @ #vk.4
3: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, gx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.11
4: splitEqs(0)
5: splitEqs(1)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 19 (precomputed): !LTK_SIG( $V, ~ltk.2 ) ▶₀ #vr.3
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( aeadEncrypt(<$U,                   sign(<                        <$U,                          h(<$cHash0.1, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                             <                             ($V⊕                              hkdfExpand(<$cAEAD0,                                           h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                           'K_2e', '1'>,                                         hkdfExtract('emptyStr', sk))                             ),                              (                              hkdfExpand(<$cAEAD0,                                           h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                           'K_2e', '2'>,                                         hkdfExtract('emptyStr', sk))⊕                              sign(<                                    <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                      pk(~ltk)>,                                     aeadEncrypt('emptyStr',                                                hkdfExpand(<$cAEAD0,                                                             h(<$cHash0,                                                                <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy                                                              >),                                                             'K_2m'>,                                                           hkdfExtract('emptyStr', sk)),                                                <$V,                                                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy                                                   >),                                                  pk(~ltk)>,                                                $cAEAD0)                                   >,                                   ~ltk)                             )                            >,                             'emptyStr'>),                          pk(~ltk.1)>,                         aeadEncrypt('emptyStr',                                    hkdfExpand(<$cAEAD0.1,                                                 h(<$cHash0.1,                                                    h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy                                                     >),                                                    <                                                    ($V⊕                                                     hkdfExpand(<$cAEAD0,                                                                  h(<$cHash0,                                                                     <'SIG', 'SIG', $cSUITE0, gx>,                                                                     'g'^~yy>),                                                                  'K_2e', '1'>,                                                                hkdfExtract('emptyStr', sk))                                                    ),                                                     (                                                     hkdfExpand(<$cAEAD0,                                                                  h(<$cHash0,                                                                     <'SIG', 'SIG', $cSUITE0, gx>,                                                                     'g'^~yy>),                                                                  'K_2e', '2'>,                                                                hkdfExtract('emptyStr', sk))⊕                                                     sign(<                                                           <$V,                                                             h(<$cHash0,                                                                <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy                                                              >),                                                             pk(~ltk)>,                                                            aeadEncrypt('emptyStr',                                                                       hkdfExpand(<$cAEAD0,                                                                                    h(<$cHash0,                                                                                       <'SIG',                                                                                        'SIG',                                                                                        $cSUITE0, gx                                                                                      >,                                                                                       'g'^~yy>),                                                                                    'K_2m'>,                                                                                  hkdfExtract('emptyStr',                                                                                              sk)),                                                                       <$V,                                                                         h(<$cHash0,                                                                            <'SIG', 'SIG', $cSUITE0,                                                                             gx>,                                                                            'g'^~yy>),                                                                         pk(~ltk)>,                                                                       $cAEAD0)                                                          >,                                                          ~ltk)                                                    )                                                   >,                                                    'emptyStr'>),                                                 'K_3m'>,                                               hkdfExtract('emptyStr', sk)),                                    <$U,                                      h(<$cHash0.1,                                         h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                         <                                         ($V⊕                                          hkdfExpand(<$cAEAD0,                                                       h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>,                                                          'g'^~yy>),                                                       'K_2e', '1'>,                                                     hkdfExtract('emptyStr', sk))                                         ),                                          (                                          hkdfExpand(<$cAEAD0,                                                       h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>,                                                          'g'^~yy>),                                                       'K_2e', '2'>,                                                     hkdfExtract('emptyStr', sk))⊕                                          sign(<                                                <$V,                                                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy                                                   >),                                                  pk(~ltk)>,                                                 aeadEncrypt('emptyStr',                                                            hkdfExpand(<$cAEAD0,                                                                         h(<$cHash0,                                                                            <'SIG', 'SIG', $cSUITE0,                                                                             gx>,                                                                            'g'^~yy>),                                                                         'K_2m'>,                                                                       hkdfExtract('emptyStr', sk)),                                                            <$V,                                                              h(<$cHash0,                                                                 <'SIG', 'SIG', $cSUITE0, gx>,                                                                 'g'^~yy>),                                                              pk(~ltk)>,                                                            $cAEAD0)                                               >,                                               ~ltk)                                         )                                        >,                                         'emptyStr'>),                                      pk(~ltk.1)>,                                    $cAEAD0.1)                       >,                       ~ltk.1)                 >,                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                 <                                 ($V⊕                                  hkdfExpand(<$cAEAD0,                                               h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                               'K_2e', '1'>,                                             hkdfExtract('emptyStr', sk))                                 ),                                  (                                  hkdfExpand(<$cAEAD0,                                               h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                               'K_2e', '2'>,                                             hkdfExtract('emptyStr', sk))⊕                                  sign(<                                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                          pk(~ltk)>,                                         aeadEncrypt('emptyStr',                                                    hkdfExpand(<$cAEAD0,                                                                 h(<$cHash0,                                                                    <'SIG', 'SIG', $cSUITE0, gx>,                                                                    'g'^~yy>),                                                                 'K_2m'>,                                                               hkdfExtract('emptyStr', sk)),                                                    <$V,                                                      h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>,                                                         'g'^~yy>),                                                      pk(~ltk)>,                                                    $cAEAD0)                                       >,                                       ~ltk)                                 )                                >,                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract('emptyStr', sk)),                 extAad3Outer, $cAEAD0.1)) @ #vk.3
1: !KU( aeadEncrypt(<$U.1,                   sign(<                        <$U.1,                          h(<$cHash0.3,                             h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.1, gx.1>, 'g'^~yy.1>),                             <                             ($V.1⊕                              hkdfExpand(<$cAEAD0.2,                                           h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.1, gx.1>, 'g'^~yy.1                                            >),                                           'K_2e', '1'>,                                         hkdfExtract('emptyStr', sk))                             ),                              (                              hkdfExpand(<$cAEAD0.2,                                           h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.1, gx.1>, 'g'^~yy.1                                            >),                                           'K_2e', '2'>,                                         hkdfExtract('emptyStr', sk))⊕                              sign(<                                    <$V.1,                                      h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.1, gx.1>, 'g'^~yy.1>),                                      pk(~ltk.2)>,                                     aeadEncrypt('emptyStr',                                                hkdfExpand(<$cAEAD0.2,                                                             h(<$cHash0.2,                                                                <'SIG', 'SIG', $cSUITE0.1, gx.1>,                                                                'g'^~yy.1>),                                                             'K_2m'>,                                                           hkdfExtract('emptyStr', sk)),                                                <$V.1,                                                  h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.1, gx.1>,                                                     'g'^~yy.1>),                                                  pk(~ltk.2)>,                                                $cAEAD0.2)                                   >,                                   ~ltk.2)                             )                            >,                             'emptyStr'>),                          pk(~ltk.3)>,                         aeadEncrypt('emptyStr',                                    hkdfExpand(<$cAEAD0.3,                                                 h(<$cHash0.3,                                                    h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.1, gx.1>,                                                       'g'^~yy.1>),                                                    <                                                    ($V.1⊕                                                     hkdfExpand(<$cAEAD0.2,                                                                  h(<$cHash0.2,                                                                     <'SIG', 'SIG', $cSUITE0.1, gx.1                                                                    >,                                                                     'g'^~yy.1>),                                                                  'K_2e', '1'>,                                                                hkdfExtract('emptyStr', sk))                                                    ),                                                     (                                                     hkdfExpand(<$cAEAD0.2,                                                                  h(<$cHash0.2,                                                                     <'SIG', 'SIG', $cSUITE0.1, gx.1                                                                    >,                                                                     'g'^~yy.1>),                                                                  'K_2e', '2'>,                                                                hkdfExtract('emptyStr', sk))⊕                                                     sign(<                                                           <$V.1,                                                             h(<$cHash0.2,                                                                <'SIG', 'SIG', $cSUITE0.1, gx.1>,                                                                'g'^~yy.1>),                                                             pk(~ltk.2)>,                                                            aeadEncrypt('emptyStr',                                                                       hkdfExpand(<$cAEAD0.2,                                                                                    h(<$cHash0.2,                                                                                       <'SIG',                                                                                        'SIG',                                                                                        $cSUITE0.1,                                                                                        gx.1>,                                                                                       'g'^~yy.1>),                                                                                    'K_2m'>,                                                                                  hkdfExtract('emptyStr',                                                                                              sk)),                                                                       <$V.1,                                                                         h(<$cHash0.2,                                                                            <'SIG', 'SIG',                                                                             $cSUITE0.1, gx.1>,                                                                            'g'^~yy.1>),                                                                         pk(~ltk.2)>,                                                                       $cAEAD0.2)                                                          >,                                                          ~ltk.2)                                                    )                                                   >,                                                    'emptyStr'>),                                                 'K_3m'>,                                               hkdfExtract('emptyStr', sk)),                                    <$U.1,                                      h(<$cHash0.3,                                         h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.1, gx.1>, 'g'^~yy.1                                          >),                                         <                                         ($V.1⊕                                          hkdfExpand(<$cAEAD0.2,                                                       h(<$cHash0.2,                                                          <'SIG', 'SIG', $cSUITE0.1, gx.1>, 'g'^~yy.1                                                        >),                                                       'K_2e', '1'>,                                                     hkdfExtract('emptyStr', sk))                                         ),                                          (                                          hkdfExpand(<$cAEAD0.2,                                                       h(<$cHash0.2,                                                          <'SIG', 'SIG', $cSUITE0.1, gx.1>, 'g'^~yy.1                                                        >),                                                       'K_2e', '2'>,                                                     hkdfExtract('emptyStr', sk))⊕                                          sign(<                                                <$V.1,                                                  h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.1, gx.1>,                                                     'g'^~yy.1>),                                                  pk(~ltk.2)>,                                                 aeadEncrypt('emptyStr',                                                            hkdfExpand(<$cAEAD0.2,                                                                         h(<$cHash0.2,                                                                            <'SIG', 'SIG',                                                                             $cSUITE0.1, gx.1>,                                                                            'g'^~yy.1>),                                                                         'K_2m'>,                                                                       hkdfExtract('emptyStr', sk)),                                                            <$V.1,                                                              h(<$cHash0.2,                                                                 <'SIG', 'SIG', $cSUITE0.1, gx.1>,                                                                 'g'^~yy.1>),                                                              pk(~ltk.2)>,                                                            $cAEAD0.2)                                               >,                                               ~ltk.2)                                         )                                        >,                                         'emptyStr'>),                                      pk(~ltk.3)>,                                    $cAEAD0.3)                       >,                       ~ltk.3)                 >,                 hkdfExpand(<$cAEAD0.3,                              h(<$cHash0.3,                                 h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.1, gx.1>, 'g'^~yy.1>),                                 <                                 ($V.1⊕                                  hkdfExpand(<$cAEAD0.2,                                               h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.1, gx.1>,                                                  'g'^~yy.1>),                                               'K_2e', '1'>,                                             hkdfExtract('emptyStr', sk))                                 ),                                  (                                  hkdfExpand(<$cAEAD0.2,                                               h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.1, gx.1>,                                                  'g'^~yy.1>),                                               'K_2e', '2'>,                                             hkdfExtract('emptyStr', sk))⊕                                  sign(<                                        <$V.1,                                          h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.1, gx.1>, 'g'^~yy.1                                           >),                                          pk(~ltk.2)>,                                         aeadEncrypt('emptyStr',                                                    hkdfExpand(<$cAEAD0.2,                                                                 h(<$cHash0.2,                                                                    <'SIG', 'SIG', $cSUITE0.1, gx.1                                                                   >,                                                                    'g'^~yy.1>),                                                                 'K_2m'>,                                                               hkdfExtract('emptyStr', sk)),                                                    <$V.1,                                                      h(<$cHash0.2,                                                         <'SIG', 'SIG', $cSUITE0.1, gx.1>, 'g'^~yy.1                                                       >),                                                      pk(~ltk.2)>,                                                    $cAEAD0.2)                                       >,                                       ~ltk.2)                                 )                                >,                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract('emptyStr', sk)),                 extAad3Outer.1, $cAEAD0.3)) @ #vk.4
2: splitEqs(2)
3: splitEqs(3)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 8 (precomputed):
    !KU( aeadEncrypt(<$U, 
                      sign(<
                            <$U, 
                             h(<$cHash0.1, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 
                                <
                                 ($V⊕
                                  hkdfExpand(<$cAEAD0, 
                                              h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 
                                              'K_2e', '1'>,
                                             hkdfExtract('emptyStr', sk))
                                 ), 
                                 (
                                  hkdfExpand(<$cAEAD0, 
                                              h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 
                                              'K_2e', '2'>,
                                             hkdfExtract('emptyStr', sk))⊕
                                  sign(<
                                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 
                                         pk(~ltk)>, 
                                        aeadEncrypt('emptyStr',
                                                    hkdfExpand(<$cAEAD0, 
                                                                h(<$cHash0, 
                                                                   <'SIG', 'SIG', $cSUITE0, gx>, 
                                                                   'g'^~yy>), 
                                                                'K_2m'>,
                                                               hkdfExtract('emptyStr', sk)),
                                                    <$V, 
                                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 
                                                        'g'^~yy>), 
                                                     pk(~ltk)>,
                                                    $cAEAD0)
                                       >,
                                       ~ltk)
                                 )
                                >, 
                                'emptyStr'>), 
                             pk(~ltk.1)>, 
                            aeadEncrypt('emptyStr',
                                        hkdfExpand(<$cAEAD0.1, 
                                                    h(<$cHash0.1, 
                                                       h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 
                                                          'g'^~yy>), 
                                                       <
                                                        ($V⊕
                                                         hkdfExpand(<$cAEAD0, 
                                                                     h(<$cHash0, 
                                                                        <'SIG', 'SIG', $cSUITE0, gx
                                                                        >, 
                                                                        'g'^~yy>), 
                                                                     'K_2e', '1'>,
                                                                    hkdfExtract('emptyStr', sk))
                                                        ), 
                                                        (
                                                         hkdfExpand(<$cAEAD0, 
                                                                     h(<$cHash0, 
                                                                        <'SIG', 'SIG', $cSUITE0, gx
                                                                        >, 
                                                                        'g'^~yy>), 
                                                                     'K_2e', '2'>,
                                                                    hkdfExtract('emptyStr', sk))⊕
                                                         sign(<
                                                               <$V, 
                                                                h(<$cHash0, 
                                                                   <'SIG', 'SIG', $cSUITE0, gx>, 
                                                                   'g'^~yy>), 
                                                                pk(~ltk)>, 
                                                               aeadEncrypt('emptyStr',
                                                                           hkdfExpand(<$cAEAD0, 
                                                                                       h(<$cHash0, 
                                                                                          <'SIG', 
                                                                                           'SIG', 
                                                                                           $cSUITE0, 
                                                                                           gx>, 
                                                                                          'g'^~yy
                                                                                         >), 
                                                                                       'K_2m'>,
                                                                                      hkdfExtract('emptyStr',
                                                                                                  sk)),
                                                                           <$V, 
                                                                            h(<$cHash0, 
                                                                               <'SIG', 'SIG', 
                                                                                $cSUITE0, gx>, 
                                                                               'g'^~yy>), 
                                                                            pk(~ltk)>,
                                                                           $cAEAD0)
                                                              >,
                                                              ~ltk)
                                                        )
                                                       >, 
                                                       'emptyStr'>), 
                                                    'K_3m'>,
                                                   hkdfExtract('emptyStr', sk)),
                                        <$U, 
                                         h(<$cHash0.1, 
                                            h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 
                                            <
                                             ($V⊕
                                              hkdfExpand(<$cAEAD0, 
                                                          h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 
                                                             'g'^~yy>), 
                                                          'K_2e', '1'>,
                                                         hkdfExtract('emptyStr', sk))
                                             ), 
                                             (
                                              hkdfExpand(<$cAEAD0, 
                                                          h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 
                                                             'g'^~yy>), 
                                                          'K_2e', '2'>,
                                                         hkdfExtract('emptyStr', sk))⊕
                                              sign(<
                                                    <$V, 
                                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 
                                                        'g'^~yy>), 
                                                     pk(~ltk)>, 
                                                    aeadEncrypt('emptyStr',
                                                                hkdfExpand(<$cAEAD0, 
                                                                            h(<$cHash0, 
                                                                               <'SIG', 'SIG', 
                                                                                $cSUITE0, gx>, 
                                                                               'g'^~yy>), 
                                                                            'K_2m'>,
                                                                           hkdfExtract('emptyStr',
                                                                                       sk)),
                                                                <$V, 
                                                                 h(<$cHash0, 
                                                                    <'SIG', 'SIG', $cSUITE0, gx>, 
                                                                    'g'^~yy>), 
                                                                 pk(~ltk)>,
                                                                $cAEAD0)
                                                   >,
                                                   ~ltk)
                                             )
                                            >, 
                                            'emptyStr'>), 
                                         pk(~ltk.1)>,
                                        $cAEAD0.1)
                           >,
                           ~ltk.1)
                     >,
                     hkdfExpand(<$cAEAD0.1, 
                                 h(<$cHash0.1, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 
                                    <
                                     ($V⊕
                                      hkdfExpand(<$cAEAD0, 
                                                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy
                                                    >), 
                                                  'K_2e', '1'>,
                                                 hkdfExtract('emptyStr', sk))
                                     ), 
                                     (
                                      hkdfExpand(<$cAEAD0, 
                                                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy
                                                    >), 
                                                  'K_2e', '2'>,
                                                 hkdfExtract('emptyStr', sk))⊕
                                      sign(<
                                            <$V, 
                                             h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 
                                             pk(~ltk)>, 
                                            aeadEncrypt('emptyStr',
                                                        hkdfExpand(<$cAEAD0, 
                                                                    h(<$cHash0, 
                                                                       <'SIG', 'SIG', $cSUITE0, gx
                                                                       >, 
                                                                       'g'^~yy>), 
                                                                    'K_2m'>,
                                                                   hkdfExtract('emptyStr', sk)),
                                                        <$V, 
                                                         h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 
                                                            'g'^~yy>), 
                                                         pk(~ltk)>,
                                                        $cAEAD0)
                                           >,
                                           ~ltk)
                                     )
                                    >, 
                                    'emptyStr'>), 
                                 'K_3ae'>,
                                hkdfExtract('emptyStr', sk)),
                     extAad3Outer, $cAEAD0.1)
    ) @ #vk.3
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !PK_SIG( $V, pkV ) ▶₁ #vr.3
1: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)     )) @ #vk.4
2: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, gx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.11
3: splitEqs(0)
4: splitEqs(1)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 20 (precomputed): !PK_SIG( $V, pkV ) ▶₁ #vr.3
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)     )) @ #vk.4
1: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, gx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.11
2: splitEqs(0)
3: splitEqs(1)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 11 (directly):
    !KU( (
          hkdfExpand(<$cAEAD0, 
                      h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,
                     hkdfExtract('emptyStr', expSk))⊕
          sign(<
                <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 
                 pk(~ltk.1)>, 
                aeadEncrypt('emptyStr',
                            hkdfExpand(<$cAEAD0, 
                                        h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'
                                       >,
                                       hkdfExtract('emptyStr', expSk)),
                            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 
                             pk(~ltk.1)>,
                            $cAEAD0)
               >,
               ~ltk.1)
         )
    ) @ #vk.4
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KD( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)     )) ▶₀ #vk.1
1: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, gx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.11
2: splitEqs(0)
3: splitEqs(1)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( sign(<           <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>),             pk(~ltk.1)>,            aeadEncrypt('emptyStr',                       hkdfExpand(<$cAEAD0,                                    h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                                  hkdfExtract('emptyStr', expSk)),                       <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>),                         pk(~ltk.1)>,                       $cAEAD0)          >,          ~ltk.1)) @ #vk.12
1: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, gx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.11
2: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                hkdfExtract('emptyStr', expSk))) @ #vk.13
3: splitEqs(0)
4: splitEqs(1)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 39 (precomputed):
    !KU( sign(<
               <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 
                pk(~ltk.1)>, 
               aeadEncrypt('emptyStr',
                           hkdfExpand(<$cAEAD0, 
                                       h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,
                                      hkdfExtract('emptyStr', expSk)),
                           <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 
                            pk(~ltk.1)>,
                           $cAEAD0)
              >,
              ~ltk.1)
    ) @ #vk.12
  simplified formula:
      "((#vr.17 = #i) ∨ (#i < #vr.17))"
    to
      "⊥"
  solved goal nr. 52 (simplified): (#vr.17 = #i)  ∥ (#i < #vr.17)
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( sign(<           <$U,             h(<$cHash0.1, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                <                ($V⊕                 hkdfExpand(<$cAEAD0,                              h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 'K_2e', '1'>,                            hkdfExtract('emptyStr', sk))                ),                 (                 hkdfExpand(<$cAEAD0,                              h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 'K_2e', '2'>,                            hkdfExtract('emptyStr', sk))⊕                 sign(<                       <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>), pk(~ltk)                       >,                        aeadEncrypt('emptyStr',                                   hkdfExpand(<$cAEAD0,                                                h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                                'K_2m'>,                                              hkdfExtract('emptyStr', sk)),                                   <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                     pk(~ltk)>,                                   $cAEAD0)                      >,                      ~ltk)                )               >,                'emptyStr'>),             pk(~ltk.1)>,            aeadEncrypt('emptyStr',                       hkdfExpand(<$cAEAD0.1,                                    h(<$cHash0.1,                                       h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                       <                                       ($V⊕                                        hkdfExpand(<$cAEAD0,                                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>,                                                        'g'^~yy>),                                                     'K_2e', '1'>,                                                   hkdfExtract('emptyStr', sk))                                       ),                                        (                                        hkdfExpand(<$cAEAD0,                                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>,                                                        'g'^~yy>),                                                     'K_2e', '2'>,                                                   hkdfExtract('emptyStr', sk))⊕                                        sign(<                                              <$V,                                                h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                                pk(~ltk)>,                                               aeadEncrypt('emptyStr',                                                          hkdfExpand(<$cAEAD0,                                                                       h(<$cHash0,                                                                          <'SIG', 'SIG', $cSUITE0, gx                                                                         >,                                                                          'g'^~yy>),                                                                       'K_2m'>,                                                                     hkdfExtract('emptyStr', sk)),                                                          <$V,                                                            h(<$cHash0,                                                               <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy                                                             >),                                                            pk(~ltk)>,                                                          $cAEAD0)                                             >,                                             ~ltk)                                       )                                      >,                                       'emptyStr'>),                                    'K_3m'>,                                  hkdfExtract('emptyStr', sk)),                       <$U,                         h(<$cHash0.1, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                            <                            ($V⊕                             hkdfExpand(<$cAEAD0,                                          h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                          'K_2e', '1'>,                                        hkdfExtract('emptyStr', sk))                            ),                             (                             hkdfExpand(<$cAEAD0,                                          h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                          'K_2e', '2'>,                                        hkdfExtract('emptyStr', sk))⊕                             sign(<                                   <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                     pk(~ltk)>,                                    aeadEncrypt('emptyStr',                                               hkdfExpand(<$cAEAD0,                                                            h(<$cHash0,                                                               <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy                                                             >),                                                            'K_2m'>,                                                          hkdfExtract('emptyStr', sk)),                                               <$V,                                                 h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy                                                  >),                                                 pk(~ltk)>,                                               $cAEAD0)                                  >,                                  ~ltk)                            )                           >,                            'emptyStr'>),                         pk(~ltk.1)>,                       $cAEAD0.1)          >,          ~ltk.1)) @ #vk.21
1: !KU( aeadEncrypt(<$U.1,                   sign(<                        <$U.1,                          h(<$cHash0.3,                             h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.1, gx.1>, 'g'^~yy.1>),                             <                             ($V.1⊕                              hkdfExpand(<$cAEAD0.2,                                           h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.1, gx.1>, 'g'^~yy.1                                            >),                                           'K_2e', '1'>,                                         hkdfExtract('emptyStr', sk))                             ),                              (                              hkdfExpand(<$cAEAD0.2,                                           h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.1, gx.1>, 'g'^~yy.1                                            >),                                           'K_2e', '2'>,                                         hkdfExtract('emptyStr', sk))⊕                              sign(<                                    <$V.1,                                      h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.1, gx.1>, 'g'^~yy.1>),                                      pk(~ltk.2)>,                                     aeadEncrypt('emptyStr',                                                hkdfExpand(<$cAEAD0.2,                                                             h(<$cHash0.2,                                                                <'SIG', 'SIG', $cSUITE0.1, gx.1>,                                                                'g'^~yy.1>),                                                             'K_2m'>,                                                           hkdfExtract('emptyStr', sk)),                                                <$V.1,                                                  h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.1, gx.1>,                                                     'g'^~yy.1>),                                                  pk(~ltk.2)>,                                                $cAEAD0.2)                                   >,                                   ~ltk.2)                             )                            >,                             'emptyStr'>),                          pk(~ltk.3)>,                         aeadEncrypt('emptyStr',                                    hkdfExpand(<$cAEAD0.3,                                                 h(<$cHash0.3,                                                    h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.1, gx.1>,                                                       'g'^~yy.1>),                                                    <                                                    ($V.1⊕                                                     hkdfExpand(<$cAEAD0.2,                                                                  h(<$cHash0.2,                                                                     <'SIG', 'SIG', $cSUITE0.1, gx.1                                                                    >,                                                                     'g'^~yy.1>),                                                                  'K_2e', '1'>,                                                                hkdfExtract('emptyStr', sk))                                                    ),                                                     (                                                     hkdfExpand(<$cAEAD0.2,                                                                  h(<$cHash0.2,                                                                     <'SIG', 'SIG', $cSUITE0.1, gx.1                                                                    >,                                                                     'g'^~yy.1>),                                                                  'K_2e', '2'>,                                                                hkdfExtract('emptyStr', sk))⊕                                                     sign(<                                                           <$V.1,                                                             h(<$cHash0.2,                                                                <'SIG', 'SIG', $cSUITE0.1, gx.1>,                                                                'g'^~yy.1>),                                                             pk(~ltk.2)>,                                                            aeadEncrypt('emptyStr',                                                                       hkdfExpand(<$cAEAD0.2,                                                                                    h(<$cHash0.2,                                                                                       <'SIG',                                                                                        'SIG',                                                                                        $cSUITE0.1,                                                                                        gx.1>,                                                                                       'g'^~yy.1>),                                                                                    'K_2m'>,                                                                                  hkdfExtract('emptyStr',                                                                                              sk)),                                                                       <$V.1,                                                                         h(<$cHash0.2,                                                                            <'SIG', 'SIG',                                                                             $cSUITE0.1, gx.1>,                                                                            'g'^~yy.1>),                                                                         pk(~ltk.2)>,                                                                       $cAEAD0.2)                                                          >,                                                          ~ltk.2)                                                    )                                                   >,                                                    'emptyStr'>),                                                 'K_3m'>,                                               hkdfExtract('emptyStr', sk)),                                    <$U.1,                                      h(<$cHash0.3,                                         h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.1, gx.1>, 'g'^~yy.1                                          >),                                         <                                         ($V.1⊕                                          hkdfExpand(<$cAEAD0.2,                                                       h(<$cHash0.2,                                                          <'SIG', 'SIG', $cSUITE0.1, gx.1>, 'g'^~yy.1                                                        >),                                                       'K_2e', '1'>,                                                     hkdfExtract('emptyStr', sk))                                         ),                                          (                                          hkdfExpand(<$cAEAD0.2,                                                       h(<$cHash0.2,                                                          <'SIG', 'SIG', $cSUITE0.1, gx.1>, 'g'^~yy.1                                                        >),                                                       'K_2e', '2'>,                                                     hkdfExtract('emptyStr', sk))⊕                                          sign(<                                                <$V.1,                                                  h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.1, gx.1>,                                                     'g'^~yy.1>),                                                  pk(~ltk.2)>,                                                 aeadEncrypt('emptyStr',                                                            hkdfExpand(<$cAEAD0.2,                                                                         h(<$cHash0.2,                                                                            <'SIG', 'SIG',                                                                             $cSUITE0.1, gx.1>,                                                                            'g'^~yy.1>),                                                                         'K_2m'>,                                                                       hkdfExtract('emptyStr', sk)),                                                            <$V.1,                                                              h(<$cHash0.2,                                                                 <'SIG', 'SIG', $cSUITE0.1, gx.1>,                                                                 'g'^~yy.1>),                                                              pk(~ltk.2)>,                                                            $cAEAD0.2)                                               >,                                               ~ltk.2)                                         )                                        >,                                         'emptyStr'>),                                      pk(~ltk.3)>,                                    $cAEAD0.3)                       >,                       ~ltk.3)                 >,                 hkdfExpand(<$cAEAD0.3,                              h(<$cHash0.3,                                 h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.1, gx.1>, 'g'^~yy.1>),                                 <                                 ($V.1⊕                                  hkdfExpand(<$cAEAD0.2,                                               h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.1, gx.1>,                                                  'g'^~yy.1>),                                               'K_2e', '1'>,                                             hkdfExtract('emptyStr', sk))                                 ),                                  (                                  hkdfExpand(<$cAEAD0.2,                                               h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.1, gx.1>,                                                  'g'^~yy.1>),                                               'K_2e', '2'>,                                             hkdfExtract('emptyStr', sk))⊕                                  sign(<                                        <$V.1,                                          h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.1, gx.1>, 'g'^~yy.1                                           >),                                          pk(~ltk.2)>,                                         aeadEncrypt('emptyStr',                                                    hkdfExpand(<$cAEAD0.2,                                                                 h(<$cHash0.2,                                                                    <'SIG', 'SIG', $cSUITE0.1, gx.1                                                                   >,                                                                    'g'^~yy.1>),                                                                 'K_2m'>,                                                               hkdfExtract('emptyStr', sk)),                                                    <$V.1,                                                      h(<$cHash0.2,                                                         <'SIG', 'SIG', $cSUITE0.1, gx.1>, 'g'^~yy.1                                                       >),                                                      pk(~ltk.2)>,                                                    $cAEAD0.2)                                       >,                                       ~ltk.2)                                 )                                >,                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract('emptyStr', sk)),                 extAad3Outer.1, $cAEAD0.3)) @ #vk.4
2: !KU( hkdfExpand(<$cAEAD0.1,                  h(<$cHash0.1, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                     <                     ($V⊕                      hkdfExpand(<$cAEAD0,                                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 'K_2e', '1'>,                                 hkdfExtract('emptyStr', sk))                     ),                      (                      hkdfExpand(<$cAEAD0,                                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 'K_2e', '2'>,                                 hkdfExtract('emptyStr', sk))⊕                      sign(<                            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>), pk(~ltk)                            >,                             aeadEncrypt('emptyStr',                                        hkdfExpand(<$cAEAD0,                                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>,                                                        'g'^~yy>),                                                     'K_2m'>,                                                   hkdfExtract('emptyStr', sk)),                                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                          pk(~ltk)>,                                        $cAEAD0)                           >,                           ~ltk)                     )                    >,                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract('emptyStr', sk))) @ #vk.17
3: splitEqs(2)
4: splitEqs(3)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 48 (precomputed):
    !KU( sign(<
               <$U, 
                h(<$cHash0.1, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 
                   <
                    ($V⊕
                     hkdfExpand(<$cAEAD0, 
                                 h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 'K_2e', '1'>,
                                hkdfExtract('emptyStr', sk))
                    ), 
                    (
                     hkdfExpand(<$cAEAD0, 
                                 h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 'K_2e', '2'>,
                                hkdfExtract('emptyStr', sk))⊕
                     sign(<
                           <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>), pk(~ltk)
                           >, 
                           aeadEncrypt('emptyStr',
                                       hkdfExpand(<$cAEAD0, 
                                                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy
                                                     >), 
                                                   'K_2m'>,
                                                  hkdfExtract('emptyStr', sk)),
                                       <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 
                                        pk(~ltk)>,
                                       $cAEAD0)
                          >,
                          ~ltk)
                    )
                   >, 
                   'emptyStr'>), 
                pk(~ltk.1)>, 
               aeadEncrypt('emptyStr',
                           hkdfExpand(<$cAEAD0.1, 
                                       h(<$cHash0.1, 
                                          h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 
                                          <
                                           ($V⊕
                                            hkdfExpand(<$cAEAD0, 
                                                        h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 
                                                           'g'^~yy>), 
                                                        'K_2e', '1'>,
                                                       hkdfExtract('emptyStr', sk))
                                           ), 
                                           (
                                            hkdfExpand(<$cAEAD0, 
                                                        h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 
                                                           'g'^~yy>), 
                                                        'K_2e', '2'>,
                                                       hkdfExtract('emptyStr', sk))⊕
                                            sign(<
                                                  <$V, 
                                                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy
                                                     >), 
                                                   pk(~ltk)>, 
                                                  aeadEncrypt('emptyStr',
                                                              hkdfExpand(<$cAEAD0, 
                                                                          h(<$cHash0, 
                                                                             <'SIG', 'SIG', 
                                                                              $cSUITE0, gx>, 
                                                                             'g'^~yy>), 
                                                                          'K_2m'>,
                                                                         hkdfExtract('emptyStr',
                                                                                     sk)),
                                                              <$V, 
                                                               h(<$cHash0, 
                                                                  <'SIG', 'SIG', $cSUITE0, gx>, 
                                                                  'g'^~yy>), 
                                                               pk(~ltk)>,
                                                              $cAEAD0)
                                                 >,
                                                 ~ltk)
                                           )
                                          >, 
                                          'emptyStr'>), 
                                       'K_3m'>,
                                      hkdfExtract('emptyStr', sk)),
                           <$U, 
                            h(<$cHash0.1, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 
                               <
                                ($V⊕
                                 hkdfExpand(<$cAEAD0, 
                                             h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 
                                             'K_2e', '1'>,
                                            hkdfExtract('emptyStr', sk))
                                ), 
                                (
                                 hkdfExpand(<$cAEAD0, 
                                             h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 
                                             'K_2e', '2'>,
                                            hkdfExtract('emptyStr', sk))⊕
                                 sign(<
                                       <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 
                                        pk(~ltk)>, 
                                       aeadEncrypt('emptyStr',
                                                   hkdfExpand(<$cAEAD0, 
                                                               h(<$cHash0, 
                                                                  <'SIG', 'SIG', $cSUITE0, gx>, 
                                                                  'g'^~yy>), 
                                                               'K_2m'>,
                                                              hkdfExtract('emptyStr', sk)),
                                                   <$V, 
                                                    h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 
                                                       'g'^~yy>), 
                                                    pk(~ltk)>,
                                                   $cAEAD0)
                                      >,
                                      ~ltk)
                                )
                               >, 
                               'emptyStr'>), 
                            pk(~ltk.1)>,
                           $cAEAD0.1)
              >,
              ~ltk.1)
    ) @ #vk.21
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~ltk.1 ) @ #vk.15
1: !KU( h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>) ) @ #vk.19
2: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, gx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.12
3: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                hkdfExtract('emptyStr', expSk))) @ #vk.13
4: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0,                              h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                            hkdfExtract('emptyStr', expSk)),                 <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>),                   pk(~ltk.1)>,                 $cAEAD0)) @ #vk.21
5: splitEqs(0)
6: splitEqs(1)
7: !KU( pk(~ltk.1) ) @ #vk.20

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 43 (precomputed): !KU( ~ltk.1 ) @ #vk.15
  simplified formula:
      "((#vr.23 = #i) ∨ (#i < #vr.23))"
    to
      "⊥"
  solved goal nr. 52 (simplified): (#vr.23 = #i)  ∥ (#i < #vr.23)
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: splitEqs(3)
1: !KU( aeadEncrypt(<$U.1,                   sign(<                        <$U.1,                          h(<$cHash0.2,                             h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^x>, 'g'^~yy.1>),                             <                             ($V.1⊕                              hkdfExpand(<$cAEAD0.1,                                           h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^x>, 'g'^~yy.1                                            >),                                           'K_2e', '1'>,                                         hkdfExtract('emptyStr', 'g'^(~xx*~yy)))                             ),                              (                              hkdfExpand(<$cAEAD0.1,                                           h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^x>, 'g'^~yy.1                                            >),                                           'K_2e', '2'>,                                         hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕                              sign(<                                    <$V.1,                                      h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^x>, 'g'^~yy.1>),                                      pk(~ltk.2)>,                                     aeadEncrypt('emptyStr',                                                hkdfExpand(<$cAEAD0.1,                                                             h(<$cHash0.1,                                                                <'SIG', 'SIG', $cSUITE0.1, 'g'^x>,                                                                'g'^~yy.1>),                                                             'K_2m'>,                                                           hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                                                <$V.1,                                                  h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^x>,                                                     'g'^~yy.1>),                                                  pk(~ltk.2)>,                                                $cAEAD0.1)                                   >,                                   ~ltk.2)                             )                            >,                             'emptyStr'>),                          pk(~ltk.3)>,                         aeadEncrypt('emptyStr',                                    hkdfExpand(<$cAEAD0.2,                                                 h(<$cHash0.2,                                                    h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^x>,                                                       'g'^~yy.1>),                                                    <                                                    ($V.1⊕                                                     hkdfExpand(<$cAEAD0.1,                                                                  h(<$cHash0.1,                                                                     <'SIG', 'SIG', $cSUITE0.1, 'g'^x                                                                    >,                                                                     'g'^~yy.1>),                                                                  'K_2e', '1'>,                                                                hkdfExtract('emptyStr',                                                                            'g'^(~xx*~yy)))                                                    ),                                                     (                                                     hkdfExpand(<$cAEAD0.1,                                                                  h(<$cHash0.1,                                                                     <'SIG', 'SIG', $cSUITE0.1, 'g'^x                                                                    >,                                                                     'g'^~yy.1>),                                                                  'K_2e', '2'>,                                                                hkdfExtract('emptyStr',                                                                            'g'^(~xx*~yy)))⊕                                                     sign(<                                                           <$V.1,                                                             h(<$cHash0.1,                                                                <'SIG', 'SIG', $cSUITE0.1, 'g'^x>,                                                                'g'^~yy.1>),                                                             pk(~ltk.2)>,                                                            aeadEncrypt('emptyStr',                                                                       hkdfExpand(<$cAEAD0.1,                                                                                    h(<$cHash0.1,                                                                                       <'SIG',                                                                                        'SIG',                                                                                        $cSUITE0.1,                                                                                        'g'^x>,                                                                                       'g'^~yy.1>),                                                                                    'K_2m'>,                                                                                  hkdfExtract('emptyStr',                                                                                              'g'^(                                                                                                   ~xx*                                                                                                   ~yy                                                                                                  ))),                                                                       <$V.1,                                                                         h(<$cHash0.1,                                                                            <'SIG', 'SIG',                                                                             $cSUITE0.1, 'g'^x>,                                                                            'g'^~yy.1>),                                                                         pk(~ltk.2)>,                                                                       $cAEAD0.1)                                                          >,                                                          ~ltk.2)                                                    )                                                   >,                                                    'emptyStr'>),                                                 'K_3m'>,                                               hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                                    <$U.1,                                      h(<$cHash0.2,                                         h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^x>, 'g'^~yy.1                                          >),                                         <                                         ($V.1⊕                                          hkdfExpand(<$cAEAD0.1,                                                       h(<$cHash0.1,                                                          <'SIG', 'SIG', $cSUITE0.1, 'g'^x>,                                                          'g'^~yy.1>),                                                       'K_2e', '1'>,                                                     hkdfExtract('emptyStr', 'g'^(~xx*~yy)))                                         ),                                          (                                          hkdfExpand(<$cAEAD0.1,                                                       h(<$cHash0.1,                                                          <'SIG', 'SIG', $cSUITE0.1, 'g'^x>,                                                          'g'^~yy.1>),                                                       'K_2e', '2'>,                                                     hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕                                          sign(<                                                <$V.1,                                                  h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^x>,                                                     'g'^~yy.1>),                                                  pk(~ltk.2)>,                                                 aeadEncrypt('emptyStr',                                                            hkdfExpand(<$cAEAD0.1,                                                                         h(<$cHash0.1,                                                                            <'SIG', 'SIG',                                                                             $cSUITE0.1, 'g'^x>,                                                                            'g'^~yy.1>),                                                                         'K_2m'>,                                                                       hkdfExtract('emptyStr',                                                                                   'g'^(~xx*~yy))),                                                            <$V.1,                                                              h(<$cHash0.1,                                                                 <'SIG', 'SIG', $cSUITE0.1, 'g'^x>,                                                                 'g'^~yy.1>),                                                              pk(~ltk.2)>,                                                            $cAEAD0.1)                                               >,                                               ~ltk.2)                                         )                                        >,                                         'emptyStr'>),                                      pk(~ltk.3)>,                                    $cAEAD0.2)                       >,                       ~ltk.3)                 >,                 hkdfExpand(<$cAEAD0.2,                              h(<$cHash0.2,                                 h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^x>, 'g'^~yy.1>),                                 <                                 ($V.1⊕                                  hkdfExpand(<$cAEAD0.1,                                               h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^x>,                                                  'g'^~yy.1>),                                               'K_2e', '1'>,                                             hkdfExtract('emptyStr', 'g'^(~xx*~yy)))                                 ),                                  (                                  hkdfExpand(<$cAEAD0.1,                                               h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^x>,                                                  'g'^~yy.1>),                                               'K_2e', '2'>,                                             hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕                                  sign(<                                        <$V.1,                                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^x>, 'g'^~yy.1                                           >),                                          pk(~ltk.2)>,                                         aeadEncrypt('emptyStr',                                                    hkdfExpand(<$cAEAD0.1,                                                                 h(<$cHash0.1,                                                                    <'SIG', 'SIG', $cSUITE0.1, 'g'^x                                                                   >,                                                                    'g'^~yy.1>),                                                                 'K_2m'>,                                                               hkdfExtract('emptyStr',                                                                           'g'^(~xx*~yy))),                                                    <$V.1,                                                      h(<$cHash0.1,                                                         <'SIG', 'SIG', $cSUITE0.1, 'g'^x>, 'g'^~yy.1                                                       >),                                                      pk(~ltk.2)>,                                                    $cAEAD0.1)                                       >,                                       ~ltk.2)                                 )                                >,                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                 extAad3Outer, $cAEAD0.2)) @ #vk.4
2: !KU( 'g'^x ) @ #vk.15
3: !KU( 'g'^~yy ) @ #vk.17
4: !KU( ($V⊕      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))     )) @ #vk.19
5: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                   '2'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      sign(<            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'                                   >,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk)>,                        $cAEAD0)           >,           ~ltk)     )) @ #vk.20
6: !KU( 'g'^~xx ) @ #vk.12

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 39 (directly): splitEqs(3)
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( 'g'^(~xx*~yy*inv(~yy.1)) ) @ #vk.15
1: !KU( aeadEncrypt(<$U.1,                   sign(<                        <$U.1,                          h(<$cHash0.2,                             h(<$cHash0.1,                                <'SIG', 'SIG', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1))>, 'g'^~yy.1>),                             <                             ($V.1⊕                              hkdfExpand(<$cAEAD0.1,                                           h(<$cHash0.1,                                              <'SIG', 'SIG', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1))>,                                              'g'^~yy.1>),                                           'K_2e', '1'>,                                         hkdfExtract('emptyStr', 'g'^(~xx*~yy)))                             ),                              (                              hkdfExpand(<$cAEAD0.1,                                           h(<$cHash0.1,                                              <'SIG', 'SIG', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1))>,                                              'g'^~yy.1>),                                           'K_2e', '2'>,                                         hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕                              sign(<                                    <$V.1,                                      h(<$cHash0.1,                                         <'SIG', 'SIG', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1))>,                                         'g'^~yy.1>),                                      pk(~ltk.2)>,                                     aeadEncrypt('emptyStr',                                                hkdfExpand(<$cAEAD0.1,                                                             h(<$cHash0.1,                                                                <'SIG', 'SIG', $cSUITE0.1,                                                                 'g'^(~xx*~yy*inv(~yy.1))>,                                                                'g'^~yy.1>),                                                             'K_2m'>,                                                           hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                                                <$V.1,                                                  h(<$cHash0.1,                                                     <'SIG', 'SIG', $cSUITE0.1,                                                      'g'^(~xx*~yy*inv(~yy.1))>,                                                     'g'^~yy.1>),                                                  pk(~ltk.2)>,                                                $cAEAD0.1)                                   >,                                   ~ltk.2)                             )                            >,                             'emptyStr'>),                          pk(~ltk.3)>,                         aeadEncrypt('emptyStr',                                    hkdfExpand(<$cAEAD0.2,                                                 h(<$cHash0.2,                                                    h(<$cHash0.1,                                                       <'SIG', 'SIG', $cSUITE0.1,                                                        'g'^(~xx*~yy*inv(~yy.1))>,                                                       'g'^~yy.1>),                                                    <                                                    ($V.1⊕                                                     hkdfExpand(<$cAEAD0.1,                                                                  h(<$cHash0.1,                                                                     <'SIG', 'SIG', $cSUITE0.1,                                                                      'g'^(~xx*~yy*inv(~yy.1))>,                                                                     'g'^~yy.1>),                                                                  'K_2e', '1'>,                                                                hkdfExtract('emptyStr',                                                                            'g'^(~xx*~yy)))                                                    ),                                                     (                                                     hkdfExpand(<$cAEAD0.1,                                                                  h(<$cHash0.1,                                                                     <'SIG', 'SIG', $cSUITE0.1,                                                                      'g'^(~xx*~yy*inv(~yy.1))>,                                                                     'g'^~yy.1>),                                                                  'K_2e', '2'>,                                                                hkdfExtract('emptyStr',                                                                            'g'^(~xx*~yy)))⊕                                                     sign(<                                                           <$V.1,                                                             h(<$cHash0.1,                                                                <'SIG', 'SIG', $cSUITE0.1,                                                                 'g'^(~xx*~yy*inv(~yy.1))>,                                                                'g'^~yy.1>),                                                             pk(~ltk.2)>,                                                            aeadEncrypt('emptyStr',                                                                       hkdfExpand(<$cAEAD0.1,                                                                                    h(<$cHash0.1,                                                                                       <'SIG',                                                                                        'SIG',                                                                                        $cSUITE0.1,                                                                                        'g'^(~xx*~yy*                                                                                            inv(~yy.1)                                                                                           )                                                                                      >,                                                                                       'g'^~yy.1>),                                                                                    'K_2m'>,                                                                                  hkdfExtract('emptyStr',                                                                                              'g'^(                                                                                                   ~xx*                                                                                                   ~yy                                                                                                  ))),                                                                       <$V.1,                                                                         h(<$cHash0.1,                                                                            <'SIG', 'SIG',                                                                             $cSUITE0.1,                                                                             'g'^(~xx*~yy*inv(~yy.1))                                                                           >,                                                                            'g'^~yy.1>),                                                                         pk(~ltk.2)>,                                                                       $cAEAD0.1)                                                          >,                                                          ~ltk.2)                                                    )                                                   >,                                                    'emptyStr'>),                                                 'K_3m'>,                                               hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                                    <$U.1,                                      h(<$cHash0.2,                                         h(<$cHash0.1,                                            <'SIG', 'SIG', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1))>,                                            'g'^~yy.1>),                                         <                                         ($V.1⊕                                          hkdfExpand(<$cAEAD0.1,                                                       h(<$cHash0.1,                                                          <'SIG', 'SIG', $cSUITE0.1,                                                           'g'^(~xx*~yy*inv(~yy.1))>,                                                          'g'^~yy.1>),                                                       'K_2e', '1'>,                                                     hkdfExtract('emptyStr', 'g'^(~xx*~yy)))                                         ),                                          (                                          hkdfExpand(<$cAEAD0.1,                                                       h(<$cHash0.1,                                                          <'SIG', 'SIG', $cSUITE0.1,                                                           'g'^(~xx*~yy*inv(~yy.1))>,                                                          'g'^~yy.1>),                                                       'K_2e', '2'>,                                                     hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕                                          sign(<                                                <$V.1,                                                  h(<$cHash0.1,                                                     <'SIG', 'SIG', $cSUITE0.1,                                                      'g'^(~xx*~yy*inv(~yy.1))>,                                                     'g'^~yy.1>),                                                  pk(~ltk.2)>,                                                 aeadEncrypt('emptyStr',                                                            hkdfExpand(<$cAEAD0.1,                                                                         h(<$cHash0.1,                                                                            <'SIG', 'SIG',                                                                             $cSUITE0.1,                                                                             'g'^(~xx*~yy*inv(~yy.1))                                                                           >,                                                                            'g'^~yy.1>),                                                                         'K_2m'>,                                                                       hkdfExtract('emptyStr',                                                                                   'g'^(~xx*~yy))),                                                            <$V.1,                                                              h(<$cHash0.1,                                                                 <'SIG', 'SIG', $cSUITE0.1,                                                                  'g'^(~xx*~yy*inv(~yy.1))>,                                                                 'g'^~yy.1>),                                                              pk(~ltk.2)>,                                                            $cAEAD0.1)                                               >,                                               ~ltk.2)                                         )                                        >,                                         'emptyStr'>),                                      pk(~ltk.3)>,                                    $cAEAD0.2)                       >,                       ~ltk.3)                 >,                 hkdfExpand(<$cAEAD0.2,                              h(<$cHash0.2,                                 h(<$cHash0.1,                                    <'SIG', 'SIG', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1))>, 'g'^~yy.1                                  >),                                 <                                 ($V.1⊕                                  hkdfExpand(<$cAEAD0.1,                                               h(<$cHash0.1,                                                  <'SIG', 'SIG', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1))                                                 >,                                                  'g'^~yy.1>),                                               'K_2e', '1'>,                                             hkdfExtract('emptyStr', 'g'^(~xx*~yy)))                                 ),                                  (                                  hkdfExpand(<$cAEAD0.1,                                               h(<$cHash0.1,                                                  <'SIG', 'SIG', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1))                                                 >,                                                  'g'^~yy.1>),                                               'K_2e', '2'>,                                             hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕                                  sign(<                                        <$V.1,                                          h(<$cHash0.1,                                             <'SIG', 'SIG', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1))>,                                             'g'^~yy.1>),                                          pk(~ltk.2)>,                                         aeadEncrypt('emptyStr',                                                    hkdfExpand(<$cAEAD0.1,                                                                 h(<$cHash0.1,                                                                    <'SIG', 'SIG', $cSUITE0.1,                                                                     'g'^(~xx*~yy*inv(~yy.1))>,                                                                    'g'^~yy.1>),                                                                 'K_2m'>,                                                               hkdfExtract('emptyStr',                                                                           'g'^(~xx*~yy))),                                                    <$V.1,                                                      h(<$cHash0.1,                                                         <'SIG', 'SIG', $cSUITE0.1,                                                          'g'^(~xx*~yy*inv(~yy.1))>,                                                         'g'^~yy.1>),                                                      pk(~ltk.2)>,                                                    $cAEAD0.1)                                       >,                                       ~ltk.2)                                 )                                >,                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                 extAad3Outer, $cAEAD0.2)) @ #vk.4
2: !KU( 'g'^~yy ) @ #vk.17
3: !KU( ($V⊕      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))     )) @ #vk.19
4: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                   '2'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      sign(<            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'                                   >,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk)>,                        $cAEAD0)           >,           ~ltk)     )) @ #vk.20
5: !KU( 'g'^~xx ) @ #vk.12

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 53 (precomputed):
    !KU( 'g'^(~xx*~yy*inv(~yy.1)) ) @ #vk.15
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vl.1, 0) ~~> (#vk.1, 0)
1: !LTK_SIG( $V.1, ~ltk.2 ) ▶₀ #vr.7
2: !PK_SIG( $V.1, pkV ) ▶₁ #vr.7
3: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, gx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.13
4: splitEqs(0)
5: splitEqs(1)
6: splitEqs(6)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vl.1, 0) ~~> (#vk.1, 0)
1: StI1_SIG_SIG( $U.1, ~ltk.2, $V.1, ~xx.1, m1, ~tid.2 ) ▶₀ #vr.7
2: !PK_SIG( $V.1, pk(x) ) ▶₁ #vr.7
3: !PK_SIG( $U.1, pkU ) ▶₂ #vr.7
4: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, gx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.11
5: splitEqs(0)
6: splitEqs(1)
7: splitEqs(6)
8: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.1>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', z.1))     )) @ #vk.15
9: !KU( (      hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.1>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', z.1))⊕      sign(<<$V.1, h(<$cHash0.2, m1, gy.1>), pk(x)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.1>), 'K_2m'>,                                   hkdfExtract('emptyStr', z.1)),                        <$V.1, h(<$cHash0.2, m1, gy.1>), pk(x)>, $cAEAD0.2)           >,           x)     )) @ #vk.16

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: CommitR( tid.2, u, v, t ) ▶₀ #vr.7
1: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, gx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.11
2: splitEqs(0)
3: splitEqs(1)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 42 (precomputed):
    CommitR( tid.2, u, v, t ) ▶₀ #vr.7
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: CommitI( tid.2, u, v, t ) ▶₀ #vr.7
1: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, gx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.11
2: splitEqs(0)
3: splitEqs(1)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 42 (precomputed):
    CommitI( tid.2, u, v, t ) ▶₀ #vr.7
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !LTK_SIG( $V.1, ~ltk.2 ) ▶₀ #vr.3
1: !PK_SIG( $V.1, pkV ) ▶₁ #vr.3
2: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                   '2'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      sign(<            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'                                   >,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)     )) @ #vk.4
3: !KU( ($V⊕$V.1) ) @ #vk.11
4: !KU( 'g'^~yy ) @ #vk.3
5: !KU( 'g'^~xx ) @ #vk.10

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 19 (precomputed): !LTK_SIG( $V.1, ~ltk.2 ) ▶₀ #vr.3
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !PK_SIG( $V.1, pkV ) ▶₁ #vr.3
1: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                   '2'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      sign(<            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'                                   >,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)     )) @ #vk.4
2: !KU( ($V⊕$V.1) ) @ #vk.11
3: !KU( 'g'^~yy ) @ #vk.3
4: !KU( 'g'^~xx ) @ #vk.10

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 20 (precomputed): !PK_SIG( $V.1, pkV ) ▶₁ #vr.3
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~yy ) @ #vk.22
1: !KU( ~yy.1 ) @ #vk.24
2: !KU( aeadEncrypt(<$U.1,                   sign(<                        <$U.1,                          h(<$cHash0.2,                             h(<$cHash0.1,                                <'SIG', 'SIG', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1))>, 'g'^~yy.1>),                             <                             ($V.1⊕                              hkdfExpand(<$cAEAD0.1,                                           h(<$cHash0.1,                                              <'SIG', 'SIG', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1))>,                                              'g'^~yy.1>),                                           'K_2e', '1'>,                                         hkdfExtract('emptyStr', 'g'^(~xx*~yy)))                             ),                              (                              hkdfExpand(<$cAEAD0.1,                                           h(<$cHash0.1,                                              <'SIG', 'SIG', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1))>,                                              'g'^~yy.1>),                                           'K_2e', '2'>,                                         hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕                              sign(<                                    <$V.1,                                      h(<$cHash0.1,                                         <'SIG', 'SIG', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1))>,                                         'g'^~yy.1>),                                      pk(~ltk.2)>,                                     aeadEncrypt('emptyStr',                                                hkdfExpand(<$cAEAD0.1,                                                             h(<$cHash0.1,                                                                <'SIG', 'SIG', $cSUITE0.1,                                                                 'g'^(~xx*~yy*inv(~yy.1))>,                                                                'g'^~yy.1>),                                                             'K_2m'>,                                                           hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                                                <$V.1,                                                  h(<$cHash0.1,                                                     <'SIG', 'SIG', $cSUITE0.1,                                                      'g'^(~xx*~yy*inv(~yy.1))>,                                                     'g'^~yy.1>),                                                  pk(~ltk.2)>,                                                $cAEAD0.1)                                   >,                                   ~ltk.2)                             )                            >,                             'emptyStr'>),                          pk(~ltk.3)>,                         aeadEncrypt('emptyStr',                                    hkdfExpand(<$cAEAD0.2,                                                 h(<$cHash0.2,                                                    h(<$cHash0.1,                                                       <'SIG', 'SIG', $cSUITE0.1,                                                        'g'^(~xx*~yy*inv(~yy.1))>,                                                       'g'^~yy.1>),                                                    <                                                    ($V.1⊕                                                     hkdfExpand(<$cAEAD0.1,                                                                  h(<$cHash0.1,                                                                     <'SIG', 'SIG', $cSUITE0.1,                                                                      'g'^(~xx*~yy*inv(~yy.1))>,                                                                     'g'^~yy.1>),                                                                  'K_2e', '1'>,                                                                hkdfExtract('emptyStr',                                                                            'g'^(~xx*~yy)))                                                    ),                                                     (                                                     hkdfExpand(<$cAEAD0.1,                                                                  h(<$cHash0.1,                                                                     <'SIG', 'SIG', $cSUITE0.1,                                                                      'g'^(~xx*~yy*inv(~yy.1))>,                                                                     'g'^~yy.1>),                                                                  'K_2e', '2'>,                                                                hkdfExtract('emptyStr',                                                                            'g'^(~xx*~yy)))⊕                                                     sign(<                                                           <$V.1,                                                             h(<$cHash0.1,                                                                <'SIG', 'SIG', $cSUITE0.1,                                                                 'g'^(~xx*~yy*inv(~yy.1))>,                                                                'g'^~yy.1>),                                                             pk(~ltk.2)>,                                                            aeadEncrypt('emptyStr',                                                                       hkdfExpand(<$cAEAD0.1,                                                                                    h(<$cHash0.1,                                                                                       <'SIG',                                                                                        'SIG',                                                                                        $cSUITE0.1,                                                                                        'g'^(~xx*~yy*                                                                                            inv(~yy.1)                                                                                           )                                                                                      >,                                                                                       'g'^~yy.1>),                                                                                    'K_2m'>,                                                                                  hkdfExtract('emptyStr',                                                                                              'g'^(                                                                                                   ~xx*                                                                                                   ~yy                                                                                                  ))),                                                                       <$V.1,                                                                         h(<$cHash0.1,                                                                            <'SIG', 'SIG',                                                                             $cSUITE0.1,                                                                             'g'^(~xx*~yy*inv(~yy.1))                                                                           >,                                                                            'g'^~yy.1>),                                                                         pk(~ltk.2)>,                                                                       $cAEAD0.1)                                                          >,                                                          ~ltk.2)                                                    )                                                   >,                                                    'emptyStr'>),                                                 'K_3m'>,                                               hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                                    <$U.1,                                      h(<$cHash0.2,                                         h(<$cHash0.1,                                            <'SIG', 'SIG', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1))>,                                            'g'^~yy.1>),                                         <                                         ($V.1⊕                                          hkdfExpand(<$cAEAD0.1,                                                       h(<$cHash0.1,                                                          <'SIG', 'SIG', $cSUITE0.1,                                                           'g'^(~xx*~yy*inv(~yy.1))>,                                                          'g'^~yy.1>),                                                       'K_2e', '1'>,                                                     hkdfExtract('emptyStr', 'g'^(~xx*~yy)))                                         ),                                          (                                          hkdfExpand(<$cAEAD0.1,                                                       h(<$cHash0.1,                                                          <'SIG', 'SIG', $cSUITE0.1,                                                           'g'^(~xx*~yy*inv(~yy.1))>,                                                          'g'^~yy.1>),                                                       'K_2e', '2'>,                                                     hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕                                          sign(<                                                <$V.1,                                                  h(<$cHash0.1,                                                     <'SIG', 'SIG', $cSUITE0.1,                                                      'g'^(~xx*~yy*inv(~yy.1))>,                                                     'g'^~yy.1>),                                                  pk(~ltk.2)>,                                                 aeadEncrypt('emptyStr',                                                            hkdfExpand(<$cAEAD0.1,                                                                         h(<$cHash0.1,                                                                            <'SIG', 'SIG',                                                                             $cSUITE0.1,                                                                             'g'^(~xx*~yy*inv(~yy.1))                                                                           >,                                                                            'g'^~yy.1>),                                                                         'K_2m'>,                                                                       hkdfExtract('emptyStr',                                                                                   'g'^(~xx*~yy))),                                                            <$V.1,                                                              h(<$cHash0.1,                                                                 <'SIG', 'SIG', $cSUITE0.1,                                                                  'g'^(~xx*~yy*inv(~yy.1))>,                                                                 'g'^~yy.1>),                                                              pk(~ltk.2)>,                                                            $cAEAD0.1)                                               >,                                               ~ltk.2)                                         )                                        >,                                         'emptyStr'>),                                      pk(~ltk.3)>,                                    $cAEAD0.2)                       >,                       ~ltk.3)                 >,                 hkdfExpand(<$cAEAD0.2,                              h(<$cHash0.2,                                 h(<$cHash0.1,                                    <'SIG', 'SIG', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1))>, 'g'^~yy.1                                  >),                                 <                                 ($V.1⊕                                  hkdfExpand(<$cAEAD0.1,                                               h(<$cHash0.1,                                                  <'SIG', 'SIG', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1))                                                 >,                                                  'g'^~yy.1>),                                               'K_2e', '1'>,                                             hkdfExtract('emptyStr', 'g'^(~xx*~yy)))                                 ),                                  (                                  hkdfExpand(<$cAEAD0.1,                                               h(<$cHash0.1,                                                  <'SIG', 'SIG', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1))                                                 >,                                                  'g'^~yy.1>),                                               'K_2e', '2'>,                                             hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕                                  sign(<                                        <$V.1,                                          h(<$cHash0.1,                                             <'SIG', 'SIG', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1))>,                                             'g'^~yy.1>),                                          pk(~ltk.2)>,                                         aeadEncrypt('emptyStr',                                                    hkdfExpand(<$cAEAD0.1,                                                                 h(<$cHash0.1,                                                                    <'SIG', 'SIG', $cSUITE0.1,                                                                     'g'^(~xx*~yy*inv(~yy.1))>,                                                                    'g'^~yy.1>),                                                                 'K_2m'>,                                                               hkdfExtract('emptyStr',                                                                           'g'^(~xx*~yy))),                                                    <$V.1,                                                      h(<$cHash0.1,                                                         <'SIG', 'SIG', $cSUITE0.1,                                                          'g'^(~xx*~yy*inv(~yy.1))>,                                                         'g'^~yy.1>),                                                      pk(~ltk.2)>,                                                    $cAEAD0.1)                                       >,                                       ~ltk.2)                                 )                                >,                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                 extAad3Outer, $cAEAD0.2)) @ #vk.5
3: !KU( 'g'^~yy ) @ #vk.17
4: !KU( ($V⊕      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))     )) @ #vk.19
5: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                   '2'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      sign(<            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'                                   >,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk)>,                        $cAEAD0)           >,           ~ltk)     )) @ #vk.20
6: !KU( 'g'^~xx ) @ #vk.13

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 56 (precomputed): !KU( ~yy ) @ #vk.22
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.22
1: !KU( ~yy.1 ) @ #vk.24
2: !KU( aeadEncrypt(<$U.1,                   sign(<                        <$U.1,                          h(<$cHash0.2,                             h(<$cHash0.1,                                <'SIG', 'SIG', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1))>, 'g'^~yy.1>),                             <                             ($V.1⊕                              hkdfExpand(<$cAEAD0.1,                                           h(<$cHash0.1,                                              <'SIG', 'SIG', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1))>,                                              'g'^~yy.1>),                                           'K_2e', '1'>,                                         hkdfExtract('emptyStr', 'g'^(~xx*~yy)))                             ),                              (                              hkdfExpand(<$cAEAD0.1,                                           h(<$cHash0.1,                                              <'SIG', 'SIG', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1))>,                                              'g'^~yy.1>),                                           'K_2e', '2'>,                                         hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕                              sign(<                                    <$V.1,                                      h(<$cHash0.1,                                         <'SIG', 'SIG', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1))>,                                         'g'^~yy.1>),                                      pk(~ltk.2)>,                                     aeadEncrypt('emptyStr',                                                hkdfExpand(<$cAEAD0.1,                                                             h(<$cHash0.1,                                                                <'SIG', 'SIG', $cSUITE0.1,                                                                 'g'^(~xx*~yy*inv(~yy.1))>,                                                                'g'^~yy.1>),                                                             'K_2m'>,                                                           hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                                                <$V.1,                                                  h(<$cHash0.1,                                                     <'SIG', 'SIG', $cSUITE0.1,                                                      'g'^(~xx*~yy*inv(~yy.1))>,                                                     'g'^~yy.1>),                                                  pk(~ltk.2)>,                                                $cAEAD0.1)                                   >,                                   ~ltk.2)                             )                            >,                             'emptyStr'>),                          pk(~ltk.3)>,                         aeadEncrypt('emptyStr',                                    hkdfExpand(<$cAEAD0.2,                                                 h(<$cHash0.2,                                                    h(<$cHash0.1,                                                       <'SIG', 'SIG', $cSUITE0.1,                                                        'g'^(~xx*~yy*inv(~yy.1))>,                                                       'g'^~yy.1>),                                                    <                                                    ($V.1⊕                                                     hkdfExpand(<$cAEAD0.1,                                                                  h(<$cHash0.1,                                                                     <'SIG', 'SIG', $cSUITE0.1,                                                                      'g'^(~xx*~yy*inv(~yy.1))>,                                                                     'g'^~yy.1>),                                                                  'K_2e', '1'>,                                                                hkdfExtract('emptyStr',                                                                            'g'^(~xx*~yy)))                                                    ),                                                     (                                                     hkdfExpand(<$cAEAD0.1,                                                                  h(<$cHash0.1,                                                                     <'SIG', 'SIG', $cSUITE0.1,                                                                      'g'^(~xx*~yy*inv(~yy.1))>,                                                                     'g'^~yy.1>),                                                                  'K_2e', '2'>,                                                                hkdfExtract('emptyStr',                                                                            'g'^(~xx*~yy)))⊕                                                     sign(<                                                           <$V.1,                                                             h(<$cHash0.1,                                                                <'SIG', 'SIG', $cSUITE0.1,                                                                 'g'^(~xx*~yy*inv(~yy.1))>,                                                                'g'^~yy.1>),                                                             pk(~ltk.2)>,                                                            aeadEncrypt('emptyStr',                                                                       hkdfExpand(<$cAEAD0.1,                                                                                    h(<$cHash0.1,                                                                                       <'SIG',                                                                                        'SIG',                                                                                        $cSUITE0.1,                                                                                        'g'^(~xx*~yy*                                                                                            inv(~yy.1)                                                                                           )                                                                                      >,                                                                                       'g'^~yy.1>),                                                                                    'K_2m'>,                                                                                  hkdfExtract('emptyStr',                                                                                              'g'^(                                                                                                   ~xx*                                                                                                   ~yy                                                                                                  ))),                                                                       <$V.1,                                                                         h(<$cHash0.1,                                                                            <'SIG', 'SIG',                                                                             $cSUITE0.1,                                                                             'g'^(~xx*~yy*inv(~yy.1))                                                                           >,                                                                            'g'^~yy.1>),                                                                         pk(~ltk.2)>,                                                                       $cAEAD0.1)                                                          >,                                                          ~ltk.2)                                                    )                                                   >,                                                    'emptyStr'>),                                                 'K_3m'>,                                               hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                                    <$U.1,                                      h(<$cHash0.2,                                         h(<$cHash0.1,                                            <'SIG', 'SIG', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1))>,                                            'g'^~yy.1>),                                         <                                         ($V.1⊕                                          hkdfExpand(<$cAEAD0.1,                                                       h(<$cHash0.1,                                                          <'SIG', 'SIG', $cSUITE0.1,                                                           'g'^(~xx*~yy*inv(~yy.1))>,                                                          'g'^~yy.1>),                                                       'K_2e', '1'>,                                                     hkdfExtract('emptyStr', 'g'^(~xx*~yy)))                                         ),                                          (                                          hkdfExpand(<$cAEAD0.1,                                                       h(<$cHash0.1,                                                          <'SIG', 'SIG', $cSUITE0.1,                                                           'g'^(~xx*~yy*inv(~yy.1))>,                                                          'g'^~yy.1>),                                                       'K_2e', '2'>,                                                     hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕                                          sign(<                                                <$V.1,                                                  h(<$cHash0.1,                                                     <'SIG', 'SIG', $cSUITE0.1,                                                      'g'^(~xx*~yy*inv(~yy.1))>,                                                     'g'^~yy.1>),                                                  pk(~ltk.2)>,                                                 aeadEncrypt('emptyStr',                                                            hkdfExpand(<$cAEAD0.1,                                                                         h(<$cHash0.1,                                                                            <'SIG', 'SIG',                                                                             $cSUITE0.1,                                                                             'g'^(~xx*~yy*inv(~yy.1))                                                                           >,                                                                            'g'^~yy.1>),                                                                         'K_2m'>,                                                                       hkdfExtract('emptyStr',                                                                                   'g'^(~xx*~yy))),                                                            <$V.1,                                                              h(<$cHash0.1,                                                                 <'SIG', 'SIG', $cSUITE0.1,                                                                  'g'^(~xx*~yy*inv(~yy.1))>,                                                                 'g'^~yy.1>),                                                              pk(~ltk.2)>,                                                            $cAEAD0.1)                                               >,                                               ~ltk.2)                                         )                                        >,                                         'emptyStr'>),                                      pk(~ltk.3)>,                                    $cAEAD0.2)                       >,                       ~ltk.3)                 >,                 hkdfExpand(<$cAEAD0.2,                              h(<$cHash0.2,                                 h(<$cHash0.1,                                    <'SIG', 'SIG', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1))>, 'g'^~yy.1                                  >),                                 <                                 ($V.1⊕                                  hkdfExpand(<$cAEAD0.1,                                               h(<$cHash0.1,                                                  <'SIG', 'SIG', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1))                                                 >,                                                  'g'^~yy.1>),                                               'K_2e', '1'>,                                             hkdfExtract('emptyStr', 'g'^(~xx*~yy)))                                 ),                                  (                                  hkdfExpand(<$cAEAD0.1,                                               h(<$cHash0.1,                                                  <'SIG', 'SIG', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1))                                                 >,                                                  'g'^~yy.1>),                                               'K_2e', '2'>,                                             hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕                                  sign(<                                        <$V.1,                                          h(<$cHash0.1,                                             <'SIG', 'SIG', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1))>,                                             'g'^~yy.1>),                                          pk(~ltk.2)>,                                         aeadEncrypt('emptyStr',                                                    hkdfExpand(<$cAEAD0.1,                                                                 h(<$cHash0.1,                                                                    <'SIG', 'SIG', $cSUITE0.1,                                                                     'g'^(~xx*~yy*inv(~yy.1))>,                                                                    'g'^~yy.1>),                                                                 'K_2m'>,                                                               hkdfExtract('emptyStr',                                                                           'g'^(~xx*~yy))),                                                    <$V.1,                                                      h(<$cHash0.1,                                                         <'SIG', 'SIG', $cSUITE0.1,                                                          'g'^(~xx*~yy*inv(~yy.1))>,                                                         'g'^~yy.1>),                                                      pk(~ltk.2)>,                                                    $cAEAD0.1)                                       >,                                       ~ltk.2)                                 )                                >,                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                 extAad3Outer, $cAEAD0.2)) @ #vk.5
3: !KU( 'g'^~yy ) @ #vk.17
4: !KU( ($V⊕      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))     )) @ #vk.19
5: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                   '2'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      sign(<            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'                                   >,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk)>,                        $cAEAD0)           >,           ~ltk)     )) @ #vk.20
6: !KU( 'g'^~xx ) @ #vk.13

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 62 (precomputed): !KU( ~xx ) @ #vk.22
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.23
1: !KU( ~yy ) @ #vk.24
2: !KU( ~yy.1 ) @ #vk.26
3: !KU( aeadEncrypt(<$U.1,                   sign(<                        <$U.1,                          h(<$cHash0.2,                             h(<$cHash0.1,                                <'SIG', 'SIG', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1))>, 'g'^~yy.1>),                             <                             ($V.1⊕                              hkdfExpand(<$cAEAD0.1,                                           h(<$cHash0.1,                                              <'SIG', 'SIG', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1))>,                                              'g'^~yy.1>),                                           'K_2e', '1'>,                                         hkdfExtract('emptyStr', 'g'^(~xx*~yy)))                             ),                              (                              hkdfExpand(<$cAEAD0.1,                                           h(<$cHash0.1,                                              <'SIG', 'SIG', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1))>,                                              'g'^~yy.1>),                                           'K_2e', '2'>,                                         hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕                              sign(<                                    <$V.1,                                      h(<$cHash0.1,                                         <'SIG', 'SIG', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1))>,                                         'g'^~yy.1>),                                      pk(~ltk.2)>,                                     aeadEncrypt('emptyStr',                                                hkdfExpand(<$cAEAD0.1,                                                             h(<$cHash0.1,                                                                <'SIG', 'SIG', $cSUITE0.1,                                                                 'g'^(~xx*~yy*inv(~yy.1))>,                                                                'g'^~yy.1>),                                                             'K_2m'>,                                                           hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                                                <$V.1,                                                  h(<$cHash0.1,                                                     <'SIG', 'SIG', $cSUITE0.1,                                                      'g'^(~xx*~yy*inv(~yy.1))>,                                                     'g'^~yy.1>),                                                  pk(~ltk.2)>,                                                $cAEAD0.1)                                   >,                                   ~ltk.2)                             )                            >,                             'emptyStr'>),                          pk(~ltk.3)>,                         aeadEncrypt('emptyStr',                                    hkdfExpand(<$cAEAD0.2,                                                 h(<$cHash0.2,                                                    h(<$cHash0.1,                                                       <'SIG', 'SIG', $cSUITE0.1,                                                        'g'^(~xx*~yy*inv(~yy.1))>,                                                       'g'^~yy.1>),                                                    <                                                    ($V.1⊕                                                     hkdfExpand(<$cAEAD0.1,                                                                  h(<$cHash0.1,                                                                     <'SIG', 'SIG', $cSUITE0.1,                                                                      'g'^(~xx*~yy*inv(~yy.1))>,                                                                     'g'^~yy.1>),                                                                  'K_2e', '1'>,                                                                hkdfExtract('emptyStr',                                                                            'g'^(~xx*~yy)))                                                    ),                                                     (                                                     hkdfExpand(<$cAEAD0.1,                                                                  h(<$cHash0.1,                                                                     <'SIG', 'SIG', $cSUITE0.1,                                                                      'g'^(~xx*~yy*inv(~yy.1))>,                                                                     'g'^~yy.1>),                                                                  'K_2e', '2'>,                                                                hkdfExtract('emptyStr',                                                                            'g'^(~xx*~yy)))⊕                                                     sign(<                                                           <$V.1,                                                             h(<$cHash0.1,                                                                <'SIG', 'SIG', $cSUITE0.1,                                                                 'g'^(~xx*~yy*inv(~yy.1))>,                                                                'g'^~yy.1>),                                                             pk(~ltk.2)>,                                                            aeadEncrypt('emptyStr',                                                                       hkdfExpand(<$cAEAD0.1,                                                                                    h(<$cHash0.1,                                                                                       <'SIG',                                                                                        'SIG',                                                                                        $cSUITE0.1,                                                                                        'g'^(~xx*~yy*                                                                                            inv(~yy.1)                                                                                           )                                                                                      >,                                                                                       'g'^~yy.1>),                                                                                    'K_2m'>,                                                                                  hkdfExtract('emptyStr',                                                                                              'g'^(                                                                                                   ~xx*                                                                                                   ~yy                                                                                                  ))),                                                                       <$V.1,                                                                         h(<$cHash0.1,                                                                            <'SIG', 'SIG',                                                                             $cSUITE0.1,                                                                             'g'^(~xx*~yy*inv(~yy.1))                                                                           >,                                                                            'g'^~yy.1>),                                                                         pk(~ltk.2)>,                                                                       $cAEAD0.1)                                                          >,                                                          ~ltk.2)                                                    )                                                   >,                                                    'emptyStr'>),                                                 'K_3m'>,                                               hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                                    <$U.1,                                      h(<$cHash0.2,                                         h(<$cHash0.1,                                            <'SIG', 'SIG', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1))>,                                            'g'^~yy.1>),                                         <                                         ($V.1⊕                                          hkdfExpand(<$cAEAD0.1,                                                       h(<$cHash0.1,                                                          <'SIG', 'SIG', $cSUITE0.1,                                                           'g'^(~xx*~yy*inv(~yy.1))>,                                                          'g'^~yy.1>),                                                       'K_2e', '1'>,                                                     hkdfExtract('emptyStr', 'g'^(~xx*~yy)))                                         ),                                          (                                          hkdfExpand(<$cAEAD0.1,                                                       h(<$cHash0.1,                                                          <'SIG', 'SIG', $cSUITE0.1,                                                           'g'^(~xx*~yy*inv(~yy.1))>,                                                          'g'^~yy.1>),                                                       'K_2e', '2'>,                                                     hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕                                          sign(<                                                <$V.1,                                                  h(<$cHash0.1,                                                     <'SIG', 'SIG', $cSUITE0.1,                                                      'g'^(~xx*~yy*inv(~yy.1))>,                                                     'g'^~yy.1>),                                                  pk(~ltk.2)>,                                                 aeadEncrypt('emptyStr',                                                            hkdfExpand(<$cAEAD0.1,                                                                         h(<$cHash0.1,                                                                            <'SIG', 'SIG',                                                                             $cSUITE0.1,                                                                             'g'^(~xx*~yy*inv(~yy.1))                                                                           >,                                                                            'g'^~yy.1>),                                                                         'K_2m'>,                                                                       hkdfExtract('emptyStr',                                                                                   'g'^(~xx*~yy))),                                                            <$V.1,                                                              h(<$cHash0.1,                                                                 <'SIG', 'SIG', $cSUITE0.1,                                                                  'g'^(~xx*~yy*inv(~yy.1))>,                                                                 'g'^~yy.1>),                                                              pk(~ltk.2)>,                                                            $cAEAD0.1)                                               >,                                               ~ltk.2)                                         )                                        >,                                         'emptyStr'>),                                      pk(~ltk.3)>,                                    $cAEAD0.2)                       >,                       ~ltk.3)                 >,                 hkdfExpand(<$cAEAD0.2,                              h(<$cHash0.2,                                 h(<$cHash0.1,                                    <'SIG', 'SIG', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1))>, 'g'^~yy.1                                  >),                                 <                                 ($V.1⊕                                  hkdfExpand(<$cAEAD0.1,                                               h(<$cHash0.1,                                                  <'SIG', 'SIG', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1))                                                 >,                                                  'g'^~yy.1>),                                               'K_2e', '1'>,                                             hkdfExtract('emptyStr', 'g'^(~xx*~yy)))                                 ),                                  (                                  hkdfExpand(<$cAEAD0.1,                                               h(<$cHash0.1,                                                  <'SIG', 'SIG', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1))                                                 >,                                                  'g'^~yy.1>),                                               'K_2e', '2'>,                                             hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕                                  sign(<                                        <$V.1,                                          h(<$cHash0.1,                                             <'SIG', 'SIG', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1))>,                                             'g'^~yy.1>),                                          pk(~ltk.2)>,                                         aeadEncrypt('emptyStr',                                                    hkdfExpand(<$cAEAD0.1,                                                                 h(<$cHash0.1,                                                                    <'SIG', 'SIG', $cSUITE0.1,                                                                     'g'^(~xx*~yy*inv(~yy.1))>,                                                                    'g'^~yy.1>),                                                                 'K_2m'>,                                                               hkdfExtract('emptyStr',                                                                           'g'^(~xx*~yy))),                                                    <$V.1,                                                      h(<$cHash0.1,                                                         <'SIG', 'SIG', $cSUITE0.1,                                                          'g'^(~xx*~yy*inv(~yy.1))>,                                                         'g'^~yy.1>),                                                      pk(~ltk.2)>,                                                    $cAEAD0.1)                                       >,                                       ~ltk.2)                                 )                                >,                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                 extAad3Outer, $cAEAD0.2)) @ #vk.5
4: !KU( 'g'^~yy ) @ #vk.17
5: !KU( ($V⊕      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))     )) @ #vk.19
6: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                   '2'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      sign(<            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'                                   >,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk)>,                        $cAEAD0)           >,           ~ltk)     )) @ #vk.20
7: !KU( 'g'^~xx ) @ #vk.13

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 57 (precomputed): !KU( ~xx ) @ #vk.23
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                   '2'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      sign(<            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'                                   >,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)     )) @ #vk.4
1: !KU( ($V⊕$V.1) ) @ #vk.11
2: !KU( 'g'^~yy ) @ #vk.3
3: !KU( 'g'^~xx ) @ #vk.10

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 11 (directly):
    !KU( (
          hkdfExpand(<$cAEAD0, 
                      h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e', 
                      '2'>,
                     hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕
          sign(<
                <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 
                 pk(~ltk.1)>, 
                aeadEncrypt('emptyStr',
                            hkdfExpand(<$cAEAD0, 
                                        h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 
                                        'K_2m'>,
                                       hkdfExtract('emptyStr', 'g'^(~xx*~yy))),
                            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 
                             pk(~ltk.1)>,
                            $cAEAD0)
               >,
               ~ltk.1)
         )
    ) @ #vk.4
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( sign(<           <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),             pk(~ltk.1)>,            aeadEncrypt('emptyStr',                       hkdfExpand(<$cAEAD0,                                    h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'                                  >,                                  hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                       <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                         pk(~ltk.1)>,                       $cAEAD0)          >,          ~ltk.1)) @ #vk.12
1: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                  '2'>,                hkdfExtract('emptyStr', 'g'^(~xx*~yy)))) @ #vk.13
2: !KU( ($V⊕$V.1) ) @ #vk.11
3: !KU( 'g'^~yy ) @ #vk.4
4: !KU( 'g'^~xx ) @ #vk.10

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 40 (precomputed):
    !KU( sign(<
               <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 
                pk(~ltk.1)>, 
               aeadEncrypt('emptyStr',
                           hkdfExpand(<$cAEAD0, 
                                       h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 
                                       'K_2m'>,
                                      hkdfExtract('emptyStr', 'g'^(~xx*~yy))),
                           <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 
                            pk(~ltk.1)>,
                           $cAEAD0)
              >,
              ~ltk.1)
    ) @ #vk.12
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KD( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                   '2'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      sign(<            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'                                   >,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)     )) ▶₀ #vk.1
1: !KU( ($V⊕$V.1) ) @ #vk.11
2: !KU( 'g'^~yy ) @ #vk.4
3: !KU( 'g'^~xx ) @ #vk.10

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  simplified formula:
      "((#vr.15 = #i) ∨ (#i < #vr.15))"
    to
      "⊥"
  solved goal nr. 52 (simplified): (#vr.15 = #i)  ∥ (#i < #vr.15)
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~ltk.1 ) @ #vk.24
1: !KU( h(<$cHash0.1,         h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>),         <         ($V⊕          hkdfExpand(<$cAEAD0,                       h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 'K_2e', '1'>,                     hkdfExtract('emptyStr', sk))         ),          (          hkdfExpand(<$cAEAD0,                       h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 'K_2e', '2'>,                     hkdfExtract('emptyStr', sk))⊕          sign(<                <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>), pk(~ltk)                >,                 aeadEncrypt('emptyStr',                            hkdfExpand(<$cAEAD0,                                         h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 'K_2m'                                       >,                                       hkdfExtract('emptyStr', sk)),                            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>), pk(~ltk)                            >,                            $cAEAD0)               >,               ~ltk)         )        >,         'emptyStr'>)) @ #vk.26
2: !KU( aeadEncrypt(<$U.1,                   sign(<                        <$U.1,                          h(<$cHash0.3,                             h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.1, gx.1>, 'g'^~yy.1>),                             <                             ($V.1⊕                              hkdfExpand(<$cAEAD0.2,                                           h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.1, gx.1>, 'g'^~yy.1                                            >),                                           'K_2e', '1'>,                                         hkdfExtract('emptyStr', sk))                             ),                              (                              hkdfExpand(<$cAEAD0.2,                                           h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.1, gx.1>, 'g'^~yy.1                                            >),                                           'K_2e', '2'>,                                         hkdfExtract('emptyStr', sk))⊕                              sign(<                                    <$V.1,                                      h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.1, gx.1>, 'g'^~yy.1>),                                      pk(~ltk.2)>,                                     aeadEncrypt('emptyStr',                                                hkdfExpand(<$cAEAD0.2,                                                             h(<$cHash0.2,                                                                <'SIG', 'SIG', $cSUITE0.1, gx.1>,                                                                'g'^~yy.1>),                                                             'K_2m'>,                                                           hkdfExtract('emptyStr', sk)),                                                <$V.1,                                                  h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.1, gx.1>,                                                     'g'^~yy.1>),                                                  pk(~ltk.2)>,                                                $cAEAD0.2)                                   >,                                   ~ltk.2)                             )                            >,                             'emptyStr'>),                          pk(~ltk.3)>,                         aeadEncrypt('emptyStr',                                    hkdfExpand(<$cAEAD0.3,                                                 h(<$cHash0.3,                                                    h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.1, gx.1>,                                                       'g'^~yy.1>),                                                    <                                                    ($V.1⊕                                                     hkdfExpand(<$cAEAD0.2,                                                                  h(<$cHash0.2,                                                                     <'SIG', 'SIG', $cSUITE0.1, gx.1                                                                    >,                                                                     'g'^~yy.1>),                                                                  'K_2e', '1'>,                                                                hkdfExtract('emptyStr', sk))                                                    ),                                                     (                                                     hkdfExpand(<$cAEAD0.2,                                                                  h(<$cHash0.2,                                                                     <'SIG', 'SIG', $cSUITE0.1, gx.1                                                                    >,                                                                     'g'^~yy.1>),                                                                  'K_2e', '2'>,                                                                hkdfExtract('emptyStr', sk))⊕                                                     sign(<                                                           <$V.1,                                                             h(<$cHash0.2,                                                                <'SIG', 'SIG', $cSUITE0.1, gx.1>,                                                                'g'^~yy.1>),                                                             pk(~ltk.2)>,                                                            aeadEncrypt('emptyStr',                                                                       hkdfExpand(<$cAEAD0.2,                                                                                    h(<$cHash0.2,                                                                                       <'SIG',                                                                                        'SIG',                                                                                        $cSUITE0.1,                                                                                        gx.1>,                                                                                       'g'^~yy.1>),                                                                                    'K_2m'>,                                                                                  hkdfExtract('emptyStr',                                                                                              sk)),                                                                       <$V.1,                                                                         h(<$cHash0.2,                                                                            <'SIG', 'SIG',                                                                             $cSUITE0.1, gx.1>,                                                                            'g'^~yy.1>),                                                                         pk(~ltk.2)>,                                                                       $cAEAD0.2)                                                          >,                                                          ~ltk.2)                                                    )                                                   >,                                                    'emptyStr'>),                                                 'K_3m'>,                                               hkdfExtract('emptyStr', sk)),                                    <$U.1,                                      h(<$cHash0.3,                                         h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.1, gx.1>, 'g'^~yy.1                                          >),                                         <                                         ($V.1⊕                                          hkdfExpand(<$cAEAD0.2,                                                       h(<$cHash0.2,                                                          <'SIG', 'SIG', $cSUITE0.1, gx.1>, 'g'^~yy.1                                                        >),                                                       'K_2e', '1'>,                                                     hkdfExtract('emptyStr', sk))                                         ),                                          (                                          hkdfExpand(<$cAEAD0.2,                                                       h(<$cHash0.2,                                                          <'SIG', 'SIG', $cSUITE0.1, gx.1>, 'g'^~yy.1                                                        >),                                                       'K_2e', '2'>,                                                     hkdfExtract('emptyStr', sk))⊕                                          sign(<                                                <$V.1,                                                  h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.1, gx.1>,                                                     'g'^~yy.1>),                                                  pk(~ltk.2)>,                                                 aeadEncrypt('emptyStr',                                                            hkdfExpand(<$cAEAD0.2,                                                                         h(<$cHash0.2,                                                                            <'SIG', 'SIG',                                                                             $cSUITE0.1, gx.1>,                                                                            'g'^~yy.1>),                                                                         'K_2m'>,                                                                       hkdfExtract('emptyStr', sk)),                                                            <$V.1,                                                              h(<$cHash0.2,                                                                 <'SIG', 'SIG', $cSUITE0.1, gx.1>,                                                                 'g'^~yy.1>),                                                              pk(~ltk.2)>,                                                            $cAEAD0.2)                                               >,                                               ~ltk.2)                                         )                                        >,                                         'emptyStr'>),                                      pk(~ltk.3)>,                                    $cAEAD0.3)                       >,                       ~ltk.3)                 >,                 hkdfExpand(<$cAEAD0.3,                              h(<$cHash0.3,                                 h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.1, gx.1>, 'g'^~yy.1>),                                 <                                 ($V.1⊕                                  hkdfExpand(<$cAEAD0.2,                                               h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.1, gx.1>,                                                  'g'^~yy.1>),                                               'K_2e', '1'>,                                             hkdfExtract('emptyStr', sk))                                 ),                                  (                                  hkdfExpand(<$cAEAD0.2,                                               h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.1, gx.1>,                                                  'g'^~yy.1>),                                               'K_2e', '2'>,                                             hkdfExtract('emptyStr', sk))⊕                                  sign(<                                        <$V.1,                                          h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.1, gx.1>, 'g'^~yy.1                                           >),                                          pk(~ltk.2)>,                                         aeadEncrypt('emptyStr',                                                    hkdfExpand(<$cAEAD0.2,                                                                 h(<$cHash0.2,                                                                    <'SIG', 'SIG', $cSUITE0.1, gx.1                                                                   >,                                                                    'g'^~yy.1>),                                                                 'K_2m'>,                                                               hkdfExtract('emptyStr', sk)),                                                    <$V.1,                                                      h(<$cHash0.2,                                                         <'SIG', 'SIG', $cSUITE0.1, gx.1>, 'g'^~yy.1                                                       >),                                                      pk(~ltk.2)>,                                                    $cAEAD0.2)                                       >,                                       ~ltk.2)                                 )                                >,                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract('emptyStr', sk)),                 extAad3Outer.1, $cAEAD0.3)) @ #vk.5
3: !KU( hkdfExpand(<$cAEAD0.1,                  h(<$cHash0.1, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                     <                     ($V⊕                      hkdfExpand(<$cAEAD0,                                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 'K_2e', '1'>,                                 hkdfExtract('emptyStr', sk))                     ),                      (                      hkdfExpand(<$cAEAD0,                                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 'K_2e', '2'>,                                 hkdfExtract('emptyStr', sk))⊕                      sign(<                            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>), pk(~ltk)                            >,                             aeadEncrypt('emptyStr',                                        hkdfExpand(<$cAEAD0,                                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>,                                                        'g'^~yy>),                                                     'K_2m'>,                                                   hkdfExtract('emptyStr', sk)),                                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                          pk(~ltk)>,                                        $cAEAD0)                           >,                           ~ltk)                     )                    >,                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract('emptyStr', sk))) @ #vk.18
4: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                 <                                 ($V⊕                                  hkdfExpand(<$cAEAD0,                                               h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                               'K_2e', '1'>,                                             hkdfExtract('emptyStr', sk))                                 ),                                  (                                  hkdfExpand(<$cAEAD0,                                               h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                               'K_2e', '2'>,                                             hkdfExtract('emptyStr', sk))⊕                                  sign(<                                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                          pk(~ltk)>,                                         aeadEncrypt('emptyStr',                                                    hkdfExpand(<$cAEAD0,                                                                 h(<$cHash0,                                                                    <'SIG', 'SIG', $cSUITE0, gx>,                                                                    'g'^~yy>),                                                                 'K_2m'>,                                                               hkdfExtract('emptyStr', sk)),                                                    <$V,                                                      h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>,                                                         'g'^~yy>),                                                      pk(~ltk)>,                                                    $cAEAD0)                                       >,                                       ~ltk)                                 )                                >,                                 'emptyStr'>),                              'K_3m'>,                            hkdfExtract('emptyStr', sk)),                 <$U,                   h(<$cHash0.1, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                      <                      ($V⊕                       hkdfExpand(<$cAEAD0,                                    h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 'K_2e', '1'                                  >,                                  hkdfExtract('emptyStr', sk))                      ),                       (                       hkdfExpand(<$cAEAD0,                                    h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 'K_2e', '2'                                  >,                                  hkdfExtract('emptyStr', sk))⊕                       sign(<                             <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>), pk(~ltk)                             >,                              aeadEncrypt('emptyStr',                                         hkdfExpand(<$cAEAD0,                                                      h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>,                                                         'g'^~yy>),                                                      'K_2m'>,                                                    hkdfExtract('emptyStr', sk)),                                         <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>),                                           pk(~ltk)>,                                         $cAEAD0)                            >,                            ~ltk)                      )                     >,                      'emptyStr'>),                   pk(~ltk.1)>,                 $cAEAD0.1)) @ #vk.28
5: splitEqs(2)
6: splitEqs(3)
7: !KU( pk(~ltk.1) ) @ #vk.27

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 51 (precomputed): !KU( ~ltk.1 ) @ #vk.24
  simplified formula:
      "((#vr.30 = #i) ∨ (#i < #vr.30))"
    to
      "⊥"
  solved goal nr. 60 (simplified): (#vr.30 = #i)  ∥ (#i < #vr.30)
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~ltk.1 ) @ #vk.15
1: !KU( h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>)) @ #vk.19
2: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                  '2'>,                hkdfExtract('emptyStr', 'g'^(~xx*~yy)))) @ #vk.13
3: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0,                              h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'>,                            hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                 <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                   pk(~ltk.1)>,                 $cAEAD0)) @ #vk.21
4: !KU( ($V⊕$V.1) ) @ #vk.12
5: !KU( 'g'^~yy ) @ #vk.5
6: !KU( 'g'^~xx ) @ #vk.11
7: !KU( pk(~ltk.1) ) @ #vk.20

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 44 (precomputed): !KU( ~ltk.1 ) @ #vk.15
  simplified formula:
      "((#vr.23 = #i) ∨ (#i < #vr.23))"
    to
      "⊥"
  solved goal nr. 53 (simplified): (#vr.23 = #i)  ∥ (#i < #vr.23)
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vl.1, 0) ~~> (#vk.1, 0)
1: !LTK_SIG( $V.2, ~ltk.3 ) ▶₀ #vr.8
2: !PK_SIG( $V.2, pkV ) ▶₁ #vr.8
3: splitEqs(6)
4: !KU( ($V⊕$V.1) ) @ #vk.13
5: !KU( 'g'^~yy ) @ #vk.4
6: !KU( 'g'^~xx ) @ #vk.12

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vl.1, 0) ~~> (#vk.1, 0)
1: StI1_SIG_SIG( $U.1, ~ltk.3, $V.2, ~xx.1, m1, ~tid.2 ) ▶₀ #vr.8
2: !PK_SIG( $V.2, pk(x) ) ▶₁ #vr.8
3: !PK_SIG( $U.1, pkU ) ▶₂ #vr.8
4: splitEqs(6)
5: !KU( ($V.2⊕      hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.15
6: !KU( (      hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', z))⊕      sign(<<$V.2, h(<$cHash0.1, m1, gy>), pk(x)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy>), 'K_2m'>,                                   hkdfExtract('emptyStr', z)),                        <$V.2, h(<$cHash0.1, m1, gy>), pk(x)>, $cAEAD0.1)           >,           x)     )) @ #vk.16
7: !KU( ($V⊕$V.1) ) @ #vk.11
8: !KU( 'g'^~yy ) @ #vk.4
9: !KU( 'g'^~xx ) @ #vk.10

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: CommitI( tid.2, u, v, t ) ▶₀ #vr.8
1: !KU( ($V⊕$V.1) ) @ #vk.11
2: !KU( 'g'^~yy ) @ #vk.4
3: !KU( 'g'^~xx ) @ #vk.10

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 43 (precomputed):
    CommitI( tid.2, u, v, t ) ▶₀ #vr.8
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: CommitR( tid.2, u, v, t ) ▶₀ #vr.8
1: !KU( ($V⊕$V.1) ) @ #vk.11
2: !KU( 'g'^~yy ) @ #vk.4
3: !KU( 'g'^~xx ) @ #vk.10

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 43 (precomputed):
    CommitR( tid.2, u, v, t ) ▶₀ #vr.8
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.9, 0) ~~> (#vk.1, 0)
1: !LTK_SIG( $V.2, ~ltk.3 ) ▶₀ #vr.8
2: !PK_SIG( $V.2, pkV ) ▶₁ #vr.8
3: splitEqs(6)
4: !KU( ($V⊕$V.1) ) @ #vk.13
5: !KU( 'g'^~yy ) @ #vk.4
6: !KU( 'g'^~xx ) @ #vk.12

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.6, 0) ~~> (#vk, 0)
1: !LTK_SIG( $V.1, ~ltk.2 ) ▶₀ #vr.3
2: !PK_SIG( $V.1, pkV ) ▶₁ #vr.3
3: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)     )) @ #vk.4
4: !KU( (z.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, gx>, 'g'^~yy>), 'K_2e',                   '2'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.11
5: splitEqs(0)
6: splitEqs(1)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.6, 0) ~~> (#vk, 0)
1: !LTK_SIG( $V.1, ~ltk.2 ) ▶₀ #vr.3
2: !PK_SIG( $V.1, pkV ) ▶₁ #vr.3
3: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)     )) @ #vk.4
4: !KU( (z.1⊕      sign(<            <$V.1, h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, gx>, 'g'^~yy>), pkV            >,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, gx>, 'g'^~yy>), 'K_2m'                                   >,                                   hkdfExtract('emptyStr', z)),                        <$V.1, h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, gx>, 'g'^~yy>), pkV                        >,                        $cAEAD0.1)           >,           ~ltk.2)     )) @ #vk.11
5: splitEqs(0)
6: splitEqs(1)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.9, 0) ~~> (#vk.1, 0)
1: StI1_SIG_SIG( $U.1, ~ltk.3, $V.2, ~xx.1, m1, ~tid.2 ) ▶₀ #vr.8
2: !PK_SIG( $V.2, pk(x) ) ▶₁ #vr.8
3: !PK_SIG( $U.1, pkU ) ▶₂ #vr.8
4: splitEqs(6)
5: !KU( ($V.2⊕      hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.15
6: !KU( (      hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', z))⊕      sign(<<$V.2, h(<$cHash0.1, m1, gy>), pk(x)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy>), 'K_2m'>,                                   hkdfExtract('emptyStr', z)),                        <$V.2, h(<$cHash0.1, m1, gy>), pk(x)>, $cAEAD0.1)           >,           x)     )) @ #vk.16
7: !KU( ($V⊕$V.1) ) @ #vk.11
8: !KU( 'g'^~yy ) @ #vk.4
9: !KU( 'g'^~xx ) @ #vk.10

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.6, 0) ~~> (#vk, 0)
1: !LTK_SIG( $V.1, ~ltk.2 ) ▶₀ #vr.3
2: !PK_SIG( $V.1, pkV ) ▶₁ #vr.3
3: !KU( sign(<           <$V.1, h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, gx>, 'g'^~yy>), pkV           >,            aeadEncrypt('emptyStr',                       hkdfExpand(<$cAEAD0.1,                                    h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, gx>, 'g'^~yy>), 'K_2m'>,                                  hkdfExtract('emptyStr', z)),                       <$V.1, h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, gx>, 'g'^~yy>), pkV                       >,                       $cAEAD0.1)          >,          ~ltk.2)) @ #vk.11
4: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)     )) @ #vk.4
5: splitEqs(0)
6: splitEqs(1)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.6, 0) ~~> (#vk, 0)
1: !LTK_SIG( $V.1, ~ltk.2 ) ▶₀ #vr.3
2: !PK_SIG( $V.1, pkV ) ▶₁ #vr.3
3: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)     )) @ #vk.4
4: !KU( hkdfExpand(<$cAEAD0.1,                  h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, gx>, 'g'^~yy>), 'K_2e',                  '2'>,                hkdfExtract('emptyStr', z))) @ #vk.11
5: splitEqs(0)
6: splitEqs(1)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !PK_SIG( $U.1, pkU ) ▶₂ #i2
1: !KU( ($V⊕      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))     )) @ #vk.3
2: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)     )) @ #vk.4
3: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))     )) @ #vk.8
4: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.9
5: splitEqs(0)
6: splitEqs(1)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 17 (precomputed): !PK_SIG( $U.1, pkU ) ▶₂ #i2
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ($V⊕      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))     )) @ #vk.3
1: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)     )) @ #vk.4
2: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))     )) @ #vk.8
3: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.9
4: splitEqs(0)
5: splitEqs(1)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 9 (directly):
    !KU( ($V⊕
          hkdfExpand(<$cAEAD0, 
                      h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,
                     hkdfExtract('emptyStr', expSk))
         )
    ) @ #vk.3
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KD( ($V⊕      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))     )) ▶₀ #vk
1: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)     )) @ #vk.4
2: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))     )) @ #vk.8
3: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.9
4: splitEqs(0)
5: splitEqs(1)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)     )) @ #vk.4
1: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))     )) @ #vk.8
2: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.9
3: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                hkdfExtract('emptyStr', expSk))) @ #vk.10
4: splitEqs(0)
5: splitEqs(1)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 11 (directly):
    !KU( (
          hkdfExpand(<$cAEAD0, 
                      h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,
                     hkdfExtract('emptyStr', expSk))⊕
          sign(<
                <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 
                 pk(~ltk.1)>, 
                aeadEncrypt('emptyStr',
                            hkdfExpand(<$cAEAD0, 
                                        h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'
                                       >,
                                       hkdfExtract('emptyStr', expSk)),
                            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 
                             pk(~ltk.1)>,
                            $cAEAD0)
               >,
               ~ltk.1)
         )
    ) @ #vk.4
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KD( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)     )) ▶₀ #vk.1
1: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))     )) @ #vk.8
2: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.9
3: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                hkdfExtract('emptyStr', expSk))) @ #vk.10
4: splitEqs(0)
5: splitEqs(1)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( sign(<           <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>),             pk(~ltk.1)>,            aeadEncrypt('emptyStr',                       hkdfExpand(<$cAEAD0,                                    h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                                  hkdfExtract('emptyStr', expSk)),                       <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>),                         pk(~ltk.1)>,                       $cAEAD0)          >,          ~ltk.1)) @ #vk.12
1: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))     )) @ #vk.8
2: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.9
3: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                hkdfExtract('emptyStr', expSk))) @ #vk.10
4: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                hkdfExtract('emptyStr', expSk))) @ #vk.13
5: splitEqs(0)
6: splitEqs(1)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 34 (precomputed):
    !KU( sign(<
               <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 
                pk(~ltk.1)>, 
               aeadEncrypt('emptyStr',
                           hkdfExpand(<$cAEAD0, 
                                       h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,
                                      hkdfExtract('emptyStr', expSk)),
                           <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 
                            pk(~ltk.1)>,
                           $cAEAD0)
              >,
              ~ltk.1)
    ) @ #vk.12
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~ltk.1 ) @ #vk.16
1: !KU( h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>) ) @ #vk.18
2: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))     )) @ #vk.9
3: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.10
4: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                hkdfExtract('emptyStr', expSk))) @ #vk.11
5: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                hkdfExtract('emptyStr', expSk))) @ #vk.14
6: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0,                              h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                            hkdfExtract('emptyStr', expSk)),                 <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>),                   pk(~ltk.1)>,                 $cAEAD0)) @ #vk.20
7: splitEqs(0)
8: splitEqs(1)
9: !KU( pk(~ltk.1) ) @ #vk.19

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 38 (precomputed): !KU( ~ltk.1 ) @ #vk.16
  simplified formula:
      "((#vr.22 = #i) ∨ (#i < #vr.22))"
    to
      "⊥"
  solved goal nr. 47 (simplified): (#vr.22 = #i)  ∥ (#i < #vr.22)
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: splitEqs(1)
1: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, 'g'^x>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))     )) @ #vk.9
2: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, 'g'^x>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, 'g'^x>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, 'g'^x>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, 'g'^x>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.10
3: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                  '1'>,                hkdfExtract('emptyStr', 'g'^(~xx*~yy)))) @ #vk.11
4: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                  '2'>,                hkdfExtract('emptyStr', 'g'^(~xx*~yy)))) @ #vk.13
5: !KU( 'g'^x ) @ #vk.7
6: !KU( 'g'^~xx ) @ #vk.19
7: !KU( 'g'^~yy ) @ #vk.5

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 14 (directly): splitEqs(1)
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( 'g'^(~xx*~yy*inv(~xx.1)) ) @ #vk.7
1: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                      'g'^(~xx*~yy*inv(~xx.1))>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))     )) @ #vk.9
2: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                      'g'^(~xx*~yy*inv(~xx.1))>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                 'g'^(~xx*~yy*inv(~xx.1))>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                                        'g'^(~xx*~yy*inv(~xx.1))>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                             'g'^(~xx*~yy*inv(~xx.1))>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.10
3: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                  '1'>,                hkdfExtract('emptyStr', 'g'^(~xx*~yy)))) @ #vk.11
4: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                  '2'>,                hkdfExtract('emptyStr', 'g'^(~xx*~yy)))) @ #vk.13
5: !KU( 'g'^~xx ) @ #vk.19
6: !KU( 'g'^~yy ) @ #vk.5

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 47 (precomputed):
    !KU( 'g'^(~xx*~yy*inv(~xx.1)) ) @ #vk.7
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~yy ) @ #vk.21
1: !KU( ~xx.1 ) @ #vk.23
2: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                      'g'^(~xx*~yy*inv(~xx.1))>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))     )) @ #vk.9
3: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                      'g'^(~xx*~yy*inv(~xx.1))>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                 'g'^(~xx*~yy*inv(~xx.1))>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                                        'g'^(~xx*~yy*inv(~xx.1))>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                             'g'^(~xx*~yy*inv(~xx.1))>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.10
4: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                  '1'>,                hkdfExtract('emptyStr', 'g'^(~xx*~yy)))) @ #vk.11
5: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                  '2'>,                hkdfExtract('emptyStr', 'g'^(~xx*~yy)))) @ #vk.13
6: !KU( 'g'^~xx ) @ #vk.19
7: !KU( 'g'^~yy ) @ #vk.6

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 50 (precomputed): !KU( ~yy ) @ #vk.21
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.21
1: !KU( ~xx.1 ) @ #vk.23
2: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                      'g'^(~xx*~yy*inv(~xx.1))>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))     )) @ #vk.9
3: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                      'g'^(~xx*~yy*inv(~xx.1))>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                 'g'^(~xx*~yy*inv(~xx.1))>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                                        'g'^(~xx*~yy*inv(~xx.1))>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                             'g'^(~xx*~yy*inv(~xx.1))>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.10
4: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                  '1'>,                hkdfExtract('emptyStr', 'g'^(~xx*~yy)))) @ #vk.11
5: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                  '2'>,                hkdfExtract('emptyStr', 'g'^(~xx*~yy)))) @ #vk.13
6: !KU( 'g'^~xx ) @ #vk.19
7: !KU( 'g'^~yy ) @ #vk.6

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 56 (precomputed): !KU( ~xx ) @ #vk.21
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.22
1: !KU( ~yy ) @ #vk.23
2: !KU( ~xx.1 ) @ #vk.25
3: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                      'g'^(~xx*~yy*inv(~xx.1))>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))     )) @ #vk.9
4: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                      'g'^(~xx*~yy*inv(~xx.1))>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                 'g'^(~xx*~yy*inv(~xx.1))>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                                        'g'^(~xx*~yy*inv(~xx.1))>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                             'g'^(~xx*~yy*inv(~xx.1))>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.10
5: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                  '1'>,                hkdfExtract('emptyStr', 'g'^(~xx*~yy)))) @ #vk.11
6: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                  '2'>,                hkdfExtract('emptyStr', 'g'^(~xx*~yy)))) @ #vk.13
7: !KU( 'g'^~xx ) @ #vk.19
8: !KU( 'g'^~yy ) @ #vk.6

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 51 (precomputed): !KU( ~xx ) @ #vk.22
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vl, 0) ~~> (#vk.1, 0)
1: !LTK_SIG( $V.2, ~ltk.4 ) ▶₀ #vr.6
2: !PK_SIG( $V.2, pkV ) ▶₁ #vr.6
3: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))     )) @ #vk.8
4: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.9
5: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                hkdfExtract('emptyStr', expSk))) @ #vk.10
6: splitEqs(0)
7: splitEqs(1)
8: splitEqs(2)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vl, 0) ~~> (#vk.1, 0)
1: StI1_SIG_SIG( $U.2, ~ltk.4, $V.2, ~xx.2, m1, ~tid.2 ) ▶₀ #vr.6
2: !PK_SIG( $V.2, pk(x) ) ▶₁ #vr.6
3: !PK_SIG( $U.2, pkU ) ▶₂ #vr.6
4: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))     )) @ #vk.8
5: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.9
6: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                hkdfExtract('emptyStr', expSk))) @ #vk.10
7: splitEqs(0)
8: splitEqs(1)
9: splitEqs(2)
10: !KU( ($V.2⊕      hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.2>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.15
11: !KU( (      hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.2>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', z))⊕      sign(<<$V.2, h(<$cHash0.2, m1, gy.2>), pk(x)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.2>), 'K_2m'>,                                   hkdfExtract('emptyStr', z)),                        <$V.2, h(<$cHash0.2, m1, gy.2>), pk(x)>, $cAEAD0.2)           >,           x)     )) @ #vk.16

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: CommitI( tid.2, u, v, t ) ▶₀ #vr.6
1: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))     )) @ #vk.8
2: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.9
3: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                hkdfExtract('emptyStr', expSk))) @ #vk.10
4: splitEqs(0)
5: splitEqs(1)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 37 (precomputed):
    CommitI( tid.2, u, v, t ) ▶₀ #vr.6
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: CommitR( tid.2, u, v, t ) ▶₀ #vr.6
1: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))     )) @ #vk.8
2: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.9
3: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                hkdfExtract('emptyStr', expSk))) @ #vk.10
4: splitEqs(0)
5: splitEqs(1)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 37 (precomputed):
    CommitR( tid.2, u, v, t ) ▶₀ #vr.6
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.7, 0) ~~> (#vk.1, 0)
1: StI1_SIG_SIG( $U.2, ~ltk.4, $V.2, ~xx.2, m1, ~tid.2 ) ▶₀ #vr.6
2: !PK_SIG( $V.2, pk(x) ) ▶₁ #vr.6
3: !PK_SIG( $U.2, pkU ) ▶₂ #vr.6
4: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))     )) @ #vk.8
5: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.9
6: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                hkdfExtract('emptyStr', expSk))) @ #vk.10
7: splitEqs(0)
8: splitEqs(1)
9: splitEqs(2)
10: !KU( ($V.2⊕      hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.2>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.15
11: !KU( (      hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.2>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', z))⊕      sign(<<$V.2, h(<$cHash0.2, m1, gy.2>), pk(x)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.2>), 'K_2m'>,                                   hkdfExtract('emptyStr', z)),                        <$V.2, h(<$cHash0.2, m1, gy.2>), pk(x)>, $cAEAD0.2)           >,           x)     )) @ #vk.16

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.8, 0) ~~> (#vk.1, 0)
1: StI1_SIG_SIG( $U.2, ~ltk.4, $V.2, ~xx.2, m1, ~tid.2 ) ▶₀ #vr.6
2: !PK_SIG( $V.2, pk(x) ) ▶₁ #vr.6
3: !PK_SIG( $U.2, pkU ) ▶₂ #vr.6
4: !KU( sign(<           <$U.2,             h(<$cHash0.2, h(<$cHash0.2, m1, gy.2>),                <                ($V.2⊕                 hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.2>), 'K_2e', '1'>,                            hkdfExtract('emptyStr', z))                ),                 (                 hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.2>), 'K_2e', '2'>,                            hkdfExtract('emptyStr', z))⊕                 sign(<<$V.2, h(<$cHash0.2, m1, gy.2>), pk(x)>,                        aeadEncrypt('emptyStr',                                   hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.2>), 'K_2m'>,                                              hkdfExtract('emptyStr', z)),                                   <$V.2, h(<$cHash0.2, m1, gy.2>), pk(x)>, $cAEAD0.2)                      >,                      x)                )               >,                'emptyStr'>),             pkU>,            aeadEncrypt('emptyStr',                       hkdfExpand(<$cAEAD0.2,                                    h(<$cHash0.2, h(<$cHash0.2, m1, gy.2>),                                       <                                       ($V.2⊕                                        hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.2>), 'K_2e', '1'                                                   >,                                                   hkdfExtract('emptyStr', z))                                       ),                                        (                                        hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.2>), 'K_2e', '2'                                                   >,                                                   hkdfExtract('emptyStr', z))⊕                                        sign(<<$V.2, h(<$cHash0.2, m1, gy.2>), pk(x)>,                                               aeadEncrypt('emptyStr',                                                          hkdfExpand(<$cAEAD0.2,                                                                       h(<$cHash0.2, m1, gy.2>),                                                                       'K_2m'>,                                                                     hkdfExtract('emptyStr', z)),                                                          <$V.2, h(<$cHash0.2, m1, gy.2>), pk(x)>,                                                          $cAEAD0.2)                                             >,                                             x)                                       )                                      >,                                       'emptyStr'>),                                    'K_3m'>,                                  hkdfExtract('emptyStr', z)),                       <$U.2,                         h(<$cHash0.2, h(<$cHash0.2, m1, gy.2>),                            <                            ($V.2⊕                             hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.2>), 'K_2e', '1'>,                                        hkdfExtract('emptyStr', z))                            ),                             (                             hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.2>), 'K_2e', '2'>,                                        hkdfExtract('emptyStr', z))⊕                             sign(<<$V.2, h(<$cHash0.2, m1, gy.2>), pk(x)>,                                    aeadEncrypt('emptyStr',                                               hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.2>),                                                            'K_2m'>,                                                          hkdfExtract('emptyStr', z)),                                               <$V.2, h(<$cHash0.2, m1, gy.2>), pk(x)>, $cAEAD0.2)                                  >,                                  x)                            )                           >,                            'emptyStr'>),                         pkU>,                       $cAEAD0.2)          >,          ~ltk.4)) @ #vk.20
5: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))     )) @ #vk.8
6: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.9
7: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                hkdfExtract('emptyStr', expSk))) @ #vk.10
8: splitEqs(0)
9: splitEqs(1)
10: splitEqs(2)
11: !KU( ($V.2⊕      hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.2>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.15
12: !KU( (      hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.2>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', z))⊕      sign(<<$V.2, h(<$cHash0.2, m1, gy.2>), pk(x)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.2>), 'K_2m'>,                                   hkdfExtract('emptyStr', z)),                        <$V.2, h(<$cHash0.2, m1, gy.2>), pk(x)>, $cAEAD0.2)           >,           x)     )) @ #vk.16

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.8, 0) ~~> (#vk.1, 0)
1: StI1_SIG_SIG( $U.2, ~ltk.4, $V.2, ~xx.2, m1, ~tid.2 ) ▶₀ #vr.6
2: !PK_SIG( $V.2, pk(x) ) ▶₁ #vr.6
3: !PK_SIG( $U.2, pkU ) ▶₂ #vr.6
4: !KU( sign(<           <$U.2,             h(<$cHash0.2, h(<$cHash0.2, m1, gy.2>),                <                ($V.2⊕                 hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.2>), 'K_2e', '1'>,                            hkdfExtract('emptyStr', z))                ),                 (                 hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.2>), 'K_2e', '2'>,                            hkdfExtract('emptyStr', z))⊕                 sign(<<$V.2, h(<$cHash0.2, m1, gy.2>), pk(x)>,                        aeadEncrypt('emptyStr',                                   hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.2>), 'K_2m'>,                                              hkdfExtract('emptyStr', z)),                                   <$V.2, h(<$cHash0.2, m1, gy.2>), pk(x)>, $cAEAD0.2)                      >,                      x)                )               >,                'emptyStr'>),             pkU>,            aeadEncrypt('emptyStr',                       hkdfExpand(<$cAEAD0.2,                                    h(<$cHash0.2, h(<$cHash0.2, m1, gy.2>),                                       <                                       ($V.2⊕                                        hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.2>), 'K_2e', '1'                                                   >,                                                   hkdfExtract('emptyStr', z))                                       ),                                        (                                        hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.2>), 'K_2e', '2'                                                   >,                                                   hkdfExtract('emptyStr', z))⊕                                        sign(<<$V.2, h(<$cHash0.2, m1, gy.2>), pk(x)>,                                               aeadEncrypt('emptyStr',                                                          hkdfExpand(<$cAEAD0.2,                                                                       h(<$cHash0.2, m1, gy.2>),                                                                       'K_2m'>,                                                                     hkdfExtract('emptyStr', z)),                                                          <$V.2, h(<$cHash0.2, m1, gy.2>), pk(x)>,                                                          $cAEAD0.2)                                             >,                                             x)                                       )                                      >,                                       'emptyStr'>),                                    'K_3m'>,                                  hkdfExtract('emptyStr', z)),                       <$U.2,                         h(<$cHash0.2, h(<$cHash0.2, m1, gy.2>),                            <                            ($V.2⊕                             hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.2>), 'K_2e', '1'>,                                        hkdfExtract('emptyStr', z))                            ),                             (                             hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.2>), 'K_2e', '2'>,                                        hkdfExtract('emptyStr', z))⊕                             sign(<<$V.2, h(<$cHash0.2, m1, gy.2>), pk(x)>,                                    aeadEncrypt('emptyStr',                                               hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.2>),                                                            'K_2m'>,                                                          hkdfExtract('emptyStr', z)),                                               <$V.2, h(<$cHash0.2, m1, gy.2>), pk(x)>, $cAEAD0.2)                                  >,                                  x)                            )                           >,                            'emptyStr'>),                         pkU>,                       $cAEAD0.2)          >,          ~ltk.4)) @ #vk.21
5: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))     )) @ #vk.8
6: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.9
7: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                hkdfExtract('emptyStr', expSk))) @ #vk.10
8: splitEqs(0)
9: splitEqs(1)
10: splitEqs(2)
11: !KU( h(<$cHash0.2, h(<$cHash0.2, m1, gy.2>),         <         ($V.2⊕          hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.2>), 'K_2e', '1'>,                     hkdfExtract('emptyStr', z))         ),          (          hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.2>), 'K_2e', '2'>,                     hkdfExtract('emptyStr', z))⊕          sign(<<$V.2, h(<$cHash0.2, m1, gy.2>), pk(x)>,                 aeadEncrypt('emptyStr',                            hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.2>), 'K_2m'>,                                       hkdfExtract('emptyStr', z)),                            <$V.2, h(<$cHash0.2, m1, gy.2>), pk(x)>, $cAEAD0.2)               >,               x)         )        >,         'emptyStr'>)) @ #vk.18
12: !KU( ($V.2⊕      hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.2>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.15
13: !KU( (      hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.2>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', z))⊕      sign(<<$V.2, h(<$cHash0.2, m1, gy.2>), pk(x)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.2>), 'K_2m'>,                                   hkdfExtract('emptyStr', z)),                        <$V.2, h(<$cHash0.2, m1, gy.2>), pk(x)>, $cAEAD0.2)           >,           x)     )) @ #vk.16

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.7, 0) ~~> (#vk.1, 0)
1: !LTK_SIG( $V.2, ~ltk.4 ) ▶₀ #vr.6
2: !PK_SIG( $V.2, pkV ) ▶₁ #vr.6
3: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))     )) @ #vk.8
4: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.9
5: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                hkdfExtract('emptyStr', expSk))) @ #vk.10
6: splitEqs(0)
7: splitEqs(1)
8: splitEqs(2)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.8, 0) ~~> (#vk.1, 0)
1: !LTK_SIG( $V.2, ~ltk.4 ) ▶₀ #vr.6
2: !PK_SIG( $V.2, pkV ) ▶₁ #vr.6
3: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))     )) @ #vk.8
4: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.9
5: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                hkdfExtract('emptyStr', expSk))) @ #vk.10
6: splitEqs(0)
7: splitEqs(1)
8: splitEqs(2)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.8, 0) ~~> (#vk.1, 0)
1: !LTK_SIG( $V.2, ~ltk.4 ) ▶₀ #vr.6
2: !PK_SIG( $V.2, pkV ) ▶₁ #vr.6
3: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))     )) @ #vk.8
4: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.9
5: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                hkdfExtract('emptyStr', expSk))) @ #vk.10
6: splitEqs(0)
7: splitEqs(1)
8: splitEqs(2)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.9, 0) ~~> (#vk.1, 0)
1: !LTK_SIG( $V.2, ~ltk.4 ) ▶₀ #vr.6
2: !PK_SIG( $V.2, pkV ) ▶₁ #vr.6
3: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))     )) @ #vk.8
4: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.9
5: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                hkdfExtract('emptyStr', expSk))) @ #vk.10
6: !KU( (z.1⊕      hkdfExpand(<$cAEAD0.2,                   h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.2, gx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.18
7: splitEqs(0)
8: splitEqs(1)
9: splitEqs(2)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.9, 0) ~~> (#vk.1, 0)
1: !LTK_SIG( $V.2, ~ltk.4 ) ▶₀ #vr.6
2: !PK_SIG( $V.2, pkV ) ▶₁ #vr.6
3: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))     )) @ #vk.8
4: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.9
5: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                hkdfExtract('emptyStr', expSk))) @ #vk.10
6: splitEqs(0)
7: splitEqs(1)
8: splitEqs(2)
9: !KU( (z.1⊕$V.2) ) @ #vk.18

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.9, 0) ~~> (#vk.1, 0)
1: !LTK_SIG( $V.2, ~ltk.4 ) ▶₀ #vr.6
2: !PK_SIG( $V.2, pkV ) ▶₁ #vr.6
3: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))     )) @ #vk.8
4: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.9
5: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                hkdfExtract('emptyStr', expSk))) @ #vk.10
6: splitEqs(0)
7: splitEqs(1)
8: splitEqs(2)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.9, 0) ~~> (#vk.1, 0)
1: !LTK_SIG( $V.2, ~ltk.4 ) ▶₀ #vr.6
2: !PK_SIG( $V.2, pkV ) ▶₁ #vr.6
3: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))     )) @ #vk.8
4: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.9
5: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                hkdfExtract('emptyStr', expSk))) @ #vk.10
6: !KU( (z.1⊕      hkdfExpand(<$cAEAD0.2,                   h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.2, gx>, 'g'^~yy>), 'K_2e',                   '2'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.18
7: splitEqs(0)
8: splitEqs(1)
9: splitEqs(2)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.9, 0) ~~> (#vk.1, 0)
1: !LTK_SIG( $V.2, ~ltk.4 ) ▶₀ #vr.6
2: !PK_SIG( $V.2, pkV ) ▶₁ #vr.6
3: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))     )) @ #vk.8
4: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.9
5: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                hkdfExtract('emptyStr', expSk))) @ #vk.10
6: !KU( (z.1⊕      sign(<            <$V.2, h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.2, gx>, 'g'^~yy>), pkV            >,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.2,                                     h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.2, gx>, 'g'^~yy>), 'K_2m'                                   >,                                   hkdfExtract('emptyStr', z)),                        <$V.2, h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.2, gx>, 'g'^~yy>), pkV                        >,                        $cAEAD0.2)           >,           ~ltk.4)     )) @ #vk.18
7: splitEqs(0)
8: splitEqs(1)
9: splitEqs(2)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.9, 0) ~~> (#vk.1, 0)
1: !LTK_SIG( $V.2, ~ltk.4 ) ▶₀ #vr.6
2: !PK_SIG( $V.2, pkV ) ▶₁ #vr.6
3: !KU( sign(<           <$V.2, h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.2, gx>, 'g'^~yy>), pkV           >,            aeadEncrypt('emptyStr',                       hkdfExpand(<$cAEAD0.2,                                    h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.2, gx>, 'g'^~yy>), 'K_2m'>,                                  hkdfExtract('emptyStr', z)),                       <$V.2, h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.2, gx>, 'g'^~yy>), pkV                       >,                       $cAEAD0.2)          >,          ~ltk.4)) @ #vk.18
4: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))     )) @ #vk.8
5: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.9
6: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                hkdfExtract('emptyStr', expSk))) @ #vk.10
7: splitEqs(0)
8: splitEqs(1)
9: splitEqs(2)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !LTK_SIG( $V, ~ltk.1 ) ▶₀ #vr.6
1: !PK_SIG( $V, pk(~ltk.1) ) ▶₁ #vr.6
2: splitEqs(1)
3: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, 'g'^x>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))     )) @ #vk.8
4: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, 'g'^x>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, 'g'^x>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, 'g'^x>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, 'g'^x>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.9
5: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                  '1'>,                hkdfExtract('emptyStr', 'g'^(~xx*~yy)))) @ #vk.10
6: !KU( 'g'^x ) @ #vk.6
7: !KU( 'g'^~yy ) @ #vk.4
8: !KU( 'g'^~xx ) @ #vk.17

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 37 (precomputed): !LTK_SIG( $V, ~ltk.1 ) ▶₀ #vr.6
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.9, 0) ~~> (#vk.1, 0)
1: !LTK_SIG( $V.2, ~ltk.4 ) ▶₀ #vr.6
2: !PK_SIG( $V.2, pkV ) ▶₁ #vr.6
3: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))     )) @ #vk.8
4: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.9
5: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                hkdfExtract('emptyStr', expSk))) @ #vk.10
6: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.2, gx>, 'g'^~yy>), 'K_2e',                  '2'>,                hkdfExtract('emptyStr', z))) @ #vk.18
7: splitEqs(0)
8: splitEqs(1)
9: splitEqs(2)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !PK_SIG( $V, pk(~ltk.1) ) ▶₁ #vr.6
1: splitEqs(1)
2: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, 'g'^x>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))     )) @ #vk.8
3: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, 'g'^x>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, 'g'^x>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, 'g'^x>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, 'g'^x>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.9
4: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                  '1'>,                hkdfExtract('emptyStr', 'g'^(~xx*~yy)))) @ #vk.10
5: !KU( 'g'^x ) @ #vk.6
6: !KU( 'g'^~yy ) @ #vk.4
7: !KU( 'g'^~xx ) @ #vk.17

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 38 (precomputed):
    !PK_SIG( $V, pk(~ltk.1) ) ▶₁ #vr.6
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !LTK_SIG( $V.2, ~ltk.4 ) ▶₀ #vr.6
1: !PK_SIG( $V.2, pkV ) ▶₁ #vr.6
2: splitEqs(1)
3: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, 'g'^x>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))     )) @ #vk.8
4: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, 'g'^x>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, 'g'^x>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, 'g'^x>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, 'g'^x>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.9
5: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                  '1'>,                hkdfExtract('emptyStr', 'g'^(~xx*~yy)))) @ #vk.10
6: !KU( (      sign(<            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'                                   >,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)⊕      sign(<            <$V.2, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pkV>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'                                   >,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V.2, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pkV>,                        $cAEAD0)           >,           ~ltk.4)     )) @ #vk.18
7: !KU( 'g'^x ) @ #vk.6
8: !KU( 'g'^~yy ) @ #vk.4
9: !KU( 'g'^~xx ) @ #vk.17

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 37 (precomputed): !LTK_SIG( $V.2, ~ltk.4 ) ▶₀ #vr.6
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vl, 0) ~~> (#vk, 0)
1: StI1_SIG_SIG( $U.2, ~ltk.4, $V.2, ~xx.2, m1, ~tid.2 ) ▶₀ #vr.6
2: !PK_SIG( $V.2, pk(x) ) ▶₁ #vr.6
3: !PK_SIG( $U.2, pkU ) ▶₂ #vr.6
4: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)     )) @ #vk.4
5: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))     )) @ #vk.8
6: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.9
7: splitEqs(0)
8: splitEqs(1)
9: splitEqs(2)
10: !KU( ($V.2⊕      hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.2>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.13
11: !KU( (      hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.2>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', z))⊕      sign(<<$V.2, h(<$cHash0.2, m1, gy.2>), pk(x)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.2>), 'K_2m'>,                                   hkdfExtract('emptyStr', z)),                        <$V.2, h(<$cHash0.2, m1, gy.2>), pk(x)>, $cAEAD0.2)           >,           x)     )) @ #vk.14

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vl, 0) ~~> (#vk, 0)
1: !LTK_SIG( $V.2, ~ltk.4 ) ▶₀ #vr.6
2: !PK_SIG( $V.2, pkV ) ▶₁ #vr.6
3: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)     )) @ #vk.4
4: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))     )) @ #vk.8
5: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.9
6: splitEqs(0)
7: splitEqs(1)
8: splitEqs(2)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: CommitR( tid.2, u, v, t ) ▶₀ #vr.6
1: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)     )) @ #vk.4
2: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))     )) @ #vk.8
3: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.9
4: splitEqs(0)
5: splitEqs(1)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 35 (precomputed):
    CommitR( tid.2, u, v, t ) ▶₀ #vr.6
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: CommitI( tid.2, u, v, t ) ▶₀ #vr.6
1: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)     )) @ #vk.4
2: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))     )) @ #vk.8
3: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.9
4: splitEqs(0)
5: splitEqs(1)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 35 (precomputed):
    CommitI( tid.2, u, v, t ) ▶₀ #vr.6
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.7, 0) ~~> (#vk, 0)
1: StI1_SIG_SIG( $U.2, ~ltk.4, $V.2, ~xx.2, m1, ~tid.2 ) ▶₀ #vr.6
2: !PK_SIG( $V.2, pk(x) ) ▶₁ #vr.6
3: !PK_SIG( $U.2, pkU ) ▶₂ #vr.6
4: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)     )) @ #vk.4
5: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))     )) @ #vk.8
6: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.9
7: splitEqs(0)
8: splitEqs(1)
9: splitEqs(2)
10: !KU( ($V.2⊕      hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.2>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.13
11: !KU( (      hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.2>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', z))⊕      sign(<<$V.2, h(<$cHash0.2, m1, gy.2>), pk(x)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.2>), 'K_2m'>,                                   hkdfExtract('emptyStr', z)),                        <$V.2, h(<$cHash0.2, m1, gy.2>), pk(x)>, $cAEAD0.2)           >,           x)     )) @ #vk.14

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.8, 0) ~~> (#vk, 0)
1: StI1_SIG_SIG( $U.2, ~ltk.4, $V.2, ~xx.2, m1, ~tid.2 ) ▶₀ #vr.6
2: !PK_SIG( $V.2, pk(x) ) ▶₁ #vr.6
3: !PK_SIG( $U.2, pkU ) ▶₂ #vr.6
4: !KU( sign(<           <$U.2,             h(<$cHash0.2, h(<$cHash0.2, m1, gy.2>),                <                ($V.2⊕                 hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.2>), 'K_2e', '1'>,                            hkdfExtract('emptyStr', z))                ),                 (                 hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.2>), 'K_2e', '2'>,                            hkdfExtract('emptyStr', z))⊕                 sign(<<$V.2, h(<$cHash0.2, m1, gy.2>), pk(x)>,                        aeadEncrypt('emptyStr',                                   hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.2>), 'K_2m'>,                                              hkdfExtract('emptyStr', z)),                                   <$V.2, h(<$cHash0.2, m1, gy.2>), pk(x)>, $cAEAD0.2)                      >,                      x)                )               >,                'emptyStr'>),             pkU>,            aeadEncrypt('emptyStr',                       hkdfExpand(<$cAEAD0.2,                                    h(<$cHash0.2, h(<$cHash0.2, m1, gy.2>),                                       <                                       ($V.2⊕                                        hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.2>), 'K_2e', '1'                                                   >,                                                   hkdfExtract('emptyStr', z))                                       ),                                        (                                        hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.2>), 'K_2e', '2'                                                   >,                                                   hkdfExtract('emptyStr', z))⊕                                        sign(<<$V.2, h(<$cHash0.2, m1, gy.2>), pk(x)>,                                               aeadEncrypt('emptyStr',                                                          hkdfExpand(<$cAEAD0.2,                                                                       h(<$cHash0.2, m1, gy.2>),                                                                       'K_2m'>,                                                                     hkdfExtract('emptyStr', z)),                                                          <$V.2, h(<$cHash0.2, m1, gy.2>), pk(x)>,                                                          $cAEAD0.2)                                             >,                                             x)                                       )                                      >,                                       'emptyStr'>),                                    'K_3m'>,                                  hkdfExtract('emptyStr', z)),                       <$U.2,                         h(<$cHash0.2, h(<$cHash0.2, m1, gy.2>),                            <                            ($V.2⊕                             hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.2>), 'K_2e', '1'>,                                        hkdfExtract('emptyStr', z))                            ),                             (                             hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.2>), 'K_2e', '2'>,                                        hkdfExtract('emptyStr', z))⊕                             sign(<<$V.2, h(<$cHash0.2, m1, gy.2>), pk(x)>,                                    aeadEncrypt('emptyStr',                                               hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.2>),                                                            'K_2m'>,                                                          hkdfExtract('emptyStr', z)),                                               <$V.2, h(<$cHash0.2, m1, gy.2>), pk(x)>, $cAEAD0.2)                                  >,                                  x)                            )                           >,                            'emptyStr'>),                         pkU>,                       $cAEAD0.2)          >,          ~ltk.4)) @ #vk.18
5: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)     )) @ #vk.4
6: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))     )) @ #vk.8
7: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.9
8: splitEqs(0)
9: splitEqs(1)
10: splitEqs(2)
11: !KU( ($V.2⊕      hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.2>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.13
12: !KU( (      hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.2>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', z))⊕      sign(<<$V.2, h(<$cHash0.2, m1, gy.2>), pk(x)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.2>), 'K_2m'>,                                   hkdfExtract('emptyStr', z)),                        <$V.2, h(<$cHash0.2, m1, gy.2>), pk(x)>, $cAEAD0.2)           >,           x)     )) @ #vk.14

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.8, 0) ~~> (#vk, 0)
1: StI1_SIG_SIG( $U.2, ~ltk.4, $V.2, ~xx.2, m1, ~tid.2 ) ▶₀ #vr.6
2: !PK_SIG( $V.2, pk(x) ) ▶₁ #vr.6
3: !PK_SIG( $U.2, pkU ) ▶₂ #vr.6
4: !KU( sign(<           <$U.2,             h(<$cHash0.2, h(<$cHash0.2, m1, gy.2>),                <                ($V.2⊕                 hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.2>), 'K_2e', '1'>,                            hkdfExtract('emptyStr', z))                ),                 (                 hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.2>), 'K_2e', '2'>,                            hkdfExtract('emptyStr', z))⊕                 sign(<<$V.2, h(<$cHash0.2, m1, gy.2>), pk(x)>,                        aeadEncrypt('emptyStr',                                   hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.2>), 'K_2m'>,                                              hkdfExtract('emptyStr', z)),                                   <$V.2, h(<$cHash0.2, m1, gy.2>), pk(x)>, $cAEAD0.2)                      >,                      x)                )               >,                'emptyStr'>),             pkU>,            aeadEncrypt('emptyStr',                       hkdfExpand(<$cAEAD0.2,                                    h(<$cHash0.2, h(<$cHash0.2, m1, gy.2>),                                       <                                       ($V.2⊕                                        hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.2>), 'K_2e', '1'                                                   >,                                                   hkdfExtract('emptyStr', z))                                       ),                                        (                                        hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.2>), 'K_2e', '2'                                                   >,                                                   hkdfExtract('emptyStr', z))⊕                                        sign(<<$V.2, h(<$cHash0.2, m1, gy.2>), pk(x)>,                                               aeadEncrypt('emptyStr',                                                          hkdfExpand(<$cAEAD0.2,                                                                       h(<$cHash0.2, m1, gy.2>),                                                                       'K_2m'>,                                                                     hkdfExtract('emptyStr', z)),                                                          <$V.2, h(<$cHash0.2, m1, gy.2>), pk(x)>,                                                          $cAEAD0.2)                                             >,                                             x)                                       )                                      >,                                       'emptyStr'>),                                    'K_3m'>,                                  hkdfExtract('emptyStr', z)),                       <$U.2,                         h(<$cHash0.2, h(<$cHash0.2, m1, gy.2>),                            <                            ($V.2⊕                             hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.2>), 'K_2e', '1'>,                                        hkdfExtract('emptyStr', z))                            ),                             (                             hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.2>), 'K_2e', '2'>,                                        hkdfExtract('emptyStr', z))⊕                             sign(<<$V.2, h(<$cHash0.2, m1, gy.2>), pk(x)>,                                    aeadEncrypt('emptyStr',                                               hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.2>),                                                            'K_2m'>,                                                          hkdfExtract('emptyStr', z)),                                               <$V.2, h(<$cHash0.2, m1, gy.2>), pk(x)>, $cAEAD0.2)                                  >,                                  x)                            )                           >,                            'emptyStr'>),                         pkU>,                       $cAEAD0.2)          >,          ~ltk.4)) @ #vk.19
5: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)     )) @ #vk.4
6: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))     )) @ #vk.8
7: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.9
8: splitEqs(0)
9: splitEqs(1)
10: splitEqs(2)
11: !KU( h(<$cHash0.2, h(<$cHash0.2, m1, gy.2>),         <         ($V.2⊕          hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.2>), 'K_2e', '1'>,                     hkdfExtract('emptyStr', z))         ),          (          hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.2>), 'K_2e', '2'>,                     hkdfExtract('emptyStr', z))⊕          sign(<<$V.2, h(<$cHash0.2, m1, gy.2>), pk(x)>,                 aeadEncrypt('emptyStr',                            hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.2>), 'K_2m'>,                                       hkdfExtract('emptyStr', z)),                            <$V.2, h(<$cHash0.2, m1, gy.2>), pk(x)>, $cAEAD0.2)               >,               x)         )        >,         'emptyStr'>)) @ #vk.16
12: !KU( ($V.2⊕      hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.2>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.13
13: !KU( (      hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.2>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', z))⊕      sign(<<$V.2, h(<$cHash0.2, m1, gy.2>), pk(x)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.2>), 'K_2m'>,                                   hkdfExtract('emptyStr', z)),                        <$V.2, h(<$cHash0.2, m1, gy.2>), pk(x)>, $cAEAD0.2)           >,           x)     )) @ #vk.14

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.7, 0) ~~> (#vk, 0)
1: !LTK_SIG( $V.2, ~ltk.4 ) ▶₀ #vr.6
2: !PK_SIG( $V.2, pkV ) ▶₁ #vr.6
3: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)     )) @ #vk.4
4: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))     )) @ #vk.8
5: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.9
6: splitEqs(0)
7: splitEqs(1)
8: splitEqs(2)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.8, 0) ~~> (#vk, 0)
1: !LTK_SIG( $V.2, ~ltk.4 ) ▶₀ #vr.6
2: !PK_SIG( $V.2, pkV ) ▶₁ #vr.6
3: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)     )) @ #vk.4
4: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))     )) @ #vk.8
5: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.9
6: splitEqs(0)
7: splitEqs(1)
8: splitEqs(2)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.8, 0) ~~> (#vk, 0)
1: !LTK_SIG( $V.2, ~ltk.4 ) ▶₀ #vr.6
2: !PK_SIG( $V.2, pkV ) ▶₁ #vr.6
3: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)     )) @ #vk.4
4: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))     )) @ #vk.8
5: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.9
6: splitEqs(0)
7: splitEqs(1)
8: splitEqs(2)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.9, 0) ~~> (#vk, 0)
1: !LTK_SIG( $V.2, ~ltk.4 ) ▶₀ #vr.6
2: !PK_SIG( $V.2, pkV ) ▶₁ #vr.6
3: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)     )) @ #vk.4
4: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))     )) @ #vk.8
5: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.9
6: splitEqs(0)
7: splitEqs(1)
8: splitEqs(2)
9: !KU( (z.1⊕$V.2) ) @ #vk.16

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.9, 0) ~~> (#vk, 0)
1: !LTK_SIG( $V.2, ~ltk.4 ) ▶₀ #vr.6
2: !PK_SIG( $V.2, pkV ) ▶₁ #vr.6
3: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)     )) @ #vk.4
4: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))     )) @ #vk.8
5: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.9
6: !KU( (z.1⊕      hkdfExpand(<$cAEAD0.2,                   h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.2, gx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.16
7: splitEqs(0)
8: splitEqs(1)
9: splitEqs(2)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !LTK_SIG( $V, ~ltk.4 ) ▶₀ #vr.6
1: !PK_SIG( $V, pkV ) ▶₁ #vr.6
2: splitEqs(1)
3: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                   '2'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      sign(<            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'                                   >,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)     )) @ #vk.4
4: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, 'g'^x>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))     )) @ #vk.8
5: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, 'g'^x>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, 'g'^x>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, 'g'^x>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, 'g'^x>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.9
6: !KU( 'g'^x ) @ #vk.6
7: !KU( 'g'^~yy ) @ #vk.3
8: !KU( 'g'^~xx ) @ #vk.15

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 35 (precomputed): !LTK_SIG( $V, ~ltk.4 ) ▶₀ #vr.6
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.9, 0) ~~> (#vk, 0)
1: !LTK_SIG( $V.2, ~ltk.4 ) ▶₀ #vr.6
2: !PK_SIG( $V.2, pkV ) ▶₁ #vr.6
3: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)     )) @ #vk.4
4: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))     )) @ #vk.8
5: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.9
6: splitEqs(0)
7: splitEqs(1)
8: splitEqs(2)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !PK_SIG( $V, pkV ) ▶₁ #vr.6
1: splitEqs(1)
2: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                   '2'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      sign(<            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'                                   >,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)     )) @ #vk.4
3: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, 'g'^x>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))     )) @ #vk.8
4: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, 'g'^x>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, 'g'^x>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, 'g'^x>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, 'g'^x>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.9
5: !KU( 'g'^x ) @ #vk.6
6: !KU( 'g'^~yy ) @ #vk.3
7: !KU( 'g'^~xx ) @ #vk.15

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 36 (precomputed): !PK_SIG( $V, pkV ) ▶₁ #vr.6
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !LTK_SIG( $V, ~ltk.4 ) ▶₀ #vr.6
1: !PK_SIG( $V, pkV ) ▶₁ #vr.6
2: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)     )) @ #vk.4
3: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))     )) @ #vk.8
4: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.9
5: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))⊕      hkdfExpand(<$cAEAD0.2,                   h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.2, gx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.16
6: splitEqs(0)
7: splitEqs(1)
8: splitEqs(2)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 35 (precomputed): !LTK_SIG( $V, ~ltk.4 ) ▶₀ #vr.6
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !LTK_SIG( $V.2, ~ltk.4 ) ▶₀ #vr.6
1: !PK_SIG( $V.2, pkV ) ▶₁ #vr.6
2: splitEqs(1)
3: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                   '2'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      sign(<            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'                                   >,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)     )) @ #vk.4
4: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, 'g'^x>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))     )) @ #vk.8
5: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, 'g'^x>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, 'g'^x>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, 'g'^x>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, 'g'^x>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.9
6: !KU( 'g'^x ) @ #vk.6
7: !KU( ($V⊕$V.2) ) @ #vk.16
8: !KU( 'g'^~yy ) @ #vk.3
9: !KU( 'g'^~xx ) @ #vk.15

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 35 (precomputed): !LTK_SIG( $V.2, ~ltk.4 ) ▶₀ #vr.6
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.9, 0) ~~> (#vk, 0)
1: !LTK_SIG( $V.2, ~ltk.4 ) ▶₀ #vr.6
2: !PK_SIG( $V.2, pkV ) ▶₁ #vr.6
3: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)     )) @ #vk.4
4: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))     )) @ #vk.8
5: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.9
6: !KU( (z.1⊕      sign(<            <$V.2, h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.2, gx>, 'g'^~yy>), pkV            >,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.2,                                     h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.2, gx>, 'g'^~yy>), 'K_2m'                                   >,                                   hkdfExtract('emptyStr', z)),                        <$V.2, h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.2, gx>, 'g'^~yy>), pkV                        >,                        $cAEAD0.2)           >,           ~ltk.4)     )) @ #vk.16
7: splitEqs(0)
8: splitEqs(1)
9: splitEqs(2)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.9, 0) ~~> (#vk, 0)
1: !LTK_SIG( $V.2, ~ltk.4 ) ▶₀ #vr.6
2: !PK_SIG( $V.2, pkV ) ▶₁ #vr.6
3: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)     )) @ #vk.4
4: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))     )) @ #vk.8
5: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.9
6: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.2, gx>, 'g'^~yy>), 'K_2e',                  '2'>,                hkdfExtract('emptyStr', z))) @ #vk.16
7: splitEqs(0)
8: splitEqs(1)
9: splitEqs(2)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.9, 0) ~~> (#vk, 0)
1: !LTK_SIG( $V.2, ~ltk.4 ) ▶₀ #vr.6
2: !PK_SIG( $V.2, pkV ) ▶₁ #vr.6
3: !KU( sign(<           <$V.2, h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.2, gx>, 'g'^~yy>), pkV           >,            aeadEncrypt('emptyStr',                       hkdfExpand(<$cAEAD0.2,                                    h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.2, gx>, 'g'^~yy>), 'K_2m'>,                                  hkdfExtract('emptyStr', z)),                       <$V.2, h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.2, gx>, 'g'^~yy>), pkV                       >,                       $cAEAD0.2)          >,          ~ltk.4)) @ #vk.16
4: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)     )) @ #vk.4
5: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))     )) @ #vk.8
6: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.9
7: splitEqs(0)
8: splitEqs(1)
9: splitEqs(2)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.9, 0) ~~> (#vk, 0)
1: !LTK_SIG( $V.2, ~ltk.4 ) ▶₀ #vr.6
2: !PK_SIG( $V.2, pkV ) ▶₁ #vr.6
3: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)     )) @ #vk.4
4: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))     )) @ #vk.8
5: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.9
6: !KU( (z.1⊕      hkdfExpand(<$cAEAD0.2,                   h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.2, gx>, 'g'^~yy>), 'K_2e',                   '2'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.16
7: splitEqs(0)
8: splitEqs(1)
9: splitEqs(2)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !PK_SIG( $U.1, pkU ) ▶₂ #i2
1: !KU( ($V⊕      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))     )) @ #vk.3
2: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)     )) @ #vk.4
3: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))     )) @ #vk.8
4: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.9
5: splitEqs(0)
6: splitEqs(1)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 17 (precomputed): !PK_SIG( $U.1, pkU ) ▶₂ #i2
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ($V⊕      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))     )) @ #vk.3
1: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)     )) @ #vk.4
2: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))     )) @ #vk.8
3: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.9
4: splitEqs(0)
5: splitEqs(1)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 9 (directly):
    !KU( ($V⊕
          hkdfExpand(<$cAEAD0, 
                      h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,
                     hkdfExtract('emptyStr', expSk))
         )
    ) @ #vk.3
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KD( ($V⊕      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))     )) ▶₀ #vk
1: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)     )) @ #vk.4
2: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))     )) @ #vk.8
3: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.9
4: splitEqs(0)
5: splitEqs(1)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)     )) @ #vk.4
1: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))     )) @ #vk.8
2: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.9
3: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                hkdfExtract('emptyStr', expSk))) @ #vk.10
4: splitEqs(0)
5: splitEqs(1)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 11 (directly):
    !KU( (
          hkdfExpand(<$cAEAD0, 
                      h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,
                     hkdfExtract('emptyStr', expSk))⊕
          sign(<
                <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 
                 pk(~ltk.1)>, 
                aeadEncrypt('emptyStr',
                            hkdfExpand(<$cAEAD0, 
                                        h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'
                                       >,
                                       hkdfExtract('emptyStr', expSk)),
                            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 
                             pk(~ltk.1)>,
                            $cAEAD0)
               >,
               ~ltk.1)
         )
    ) @ #vk.4
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KD( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)     )) ▶₀ #vk.1
1: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))     )) @ #vk.8
2: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.9
3: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                hkdfExtract('emptyStr', expSk))) @ #vk.10
4: splitEqs(0)
5: splitEqs(1)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( sign(<           <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>),             pk(~ltk.1)>,            aeadEncrypt('emptyStr',                       hkdfExpand(<$cAEAD0,                                    h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                                  hkdfExtract('emptyStr', expSk)),                       <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>),                         pk(~ltk.1)>,                       $cAEAD0)          >,          ~ltk.1)) @ #vk.12
1: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))     )) @ #vk.8
2: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.9
3: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                hkdfExtract('emptyStr', expSk))) @ #vk.10
4: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                hkdfExtract('emptyStr', expSk))) @ #vk.13
5: splitEqs(0)
6: splitEqs(1)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 34 (precomputed):
    !KU( sign(<
               <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 
                pk(~ltk.1)>, 
               aeadEncrypt('emptyStr',
                           hkdfExpand(<$cAEAD0, 
                                       h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,
                                      hkdfExtract('emptyStr', expSk)),
                           <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 
                            pk(~ltk.1)>,
                           $cAEAD0)
              >,
              ~ltk.1)
    ) @ #vk.12
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~ltk.1 ) @ #vk.16
1: !KU( h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>) ) @ #vk.18
2: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))     )) @ #vk.9
3: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.10
4: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                hkdfExtract('emptyStr', expSk))) @ #vk.11
5: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                hkdfExtract('emptyStr', expSk))) @ #vk.14
6: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0,                              h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                            hkdfExtract('emptyStr', expSk)),                 <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>),                   pk(~ltk.1)>,                 $cAEAD0)) @ #vk.20
7: splitEqs(0)
8: splitEqs(1)
9: !KU( pk(~ltk.1) ) @ #vk.19

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 38 (precomputed): !KU( ~ltk.1 ) @ #vk.16
  simplified formula:
      "((#vr.22 = #i) ∨ (#i < #vr.22))"
    to
      "⊥"
  solved goal nr. 47 (simplified): (#vr.22 = #i)  ∥ (#i < #vr.22)
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: splitEqs(1)
1: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, 'g'^x>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))     )) @ #vk.9
2: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, 'g'^x>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, 'g'^x>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, 'g'^x>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, 'g'^x>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.10
3: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                  '1'>,                hkdfExtract('emptyStr', 'g'^(~xx*~yy)))) @ #vk.11
4: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                  '2'>,                hkdfExtract('emptyStr', 'g'^(~xx*~yy)))) @ #vk.13
5: !KU( 'g'^x ) @ #vk.7
6: !KU( 'g'^~xx ) @ #vk.19
7: !KU( 'g'^~yy ) @ #vk.5

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 14 (directly): splitEqs(1)
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( 'g'^(~xx*~yy*inv(~xx.1)) ) @ #vk.7
1: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                      'g'^(~xx*~yy*inv(~xx.1))>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))     )) @ #vk.9
2: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                      'g'^(~xx*~yy*inv(~xx.1))>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                 'g'^(~xx*~yy*inv(~xx.1))>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                                        'g'^(~xx*~yy*inv(~xx.1))>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                             'g'^(~xx*~yy*inv(~xx.1))>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.10
3: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                  '1'>,                hkdfExtract('emptyStr', 'g'^(~xx*~yy)))) @ #vk.11
4: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                  '2'>,                hkdfExtract('emptyStr', 'g'^(~xx*~yy)))) @ #vk.13
5: !KU( 'g'^~xx ) @ #vk.19
6: !KU( 'g'^~yy ) @ #vk.5

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 47 (precomputed):
    !KU( 'g'^(~xx*~yy*inv(~xx.1)) ) @ #vk.7
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.21
1: !KU( ~xx.1 ) @ #vk.23
2: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                      'g'^(~xx*~yy*inv(~xx.1))>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))     )) @ #vk.9
3: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                      'g'^(~xx*~yy*inv(~xx.1))>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                 'g'^(~xx*~yy*inv(~xx.1))>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                                        'g'^(~xx*~yy*inv(~xx.1))>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                             'g'^(~xx*~yy*inv(~xx.1))>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.10
4: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                  '1'>,                hkdfExtract('emptyStr', 'g'^(~xx*~yy)))) @ #vk.11
5: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                  '2'>,                hkdfExtract('emptyStr', 'g'^(~xx*~yy)))) @ #vk.13
6: !KU( 'g'^~xx ) @ #vk.19
7: !KU( 'g'^~yy ) @ #vk.6

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 56 (precomputed): !KU( ~xx ) @ #vk.21
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~yy ) @ #vk.21
1: !KU( ~xx.1 ) @ #vk.23
2: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                      'g'^(~xx*~yy*inv(~xx.1))>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))     )) @ #vk.9
3: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                      'g'^(~xx*~yy*inv(~xx.1))>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                 'g'^(~xx*~yy*inv(~xx.1))>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                                        'g'^(~xx*~yy*inv(~xx.1))>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                             'g'^(~xx*~yy*inv(~xx.1))>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.10
4: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                  '1'>,                hkdfExtract('emptyStr', 'g'^(~xx*~yy)))) @ #vk.11
5: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                  '2'>,                hkdfExtract('emptyStr', 'g'^(~xx*~yy)))) @ #vk.13
6: !KU( 'g'^~xx ) @ #vk.19
7: !KU( 'g'^~yy ) @ #vk.6

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 50 (precomputed): !KU( ~yy ) @ #vk.21
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.22
1: !KU( ~yy ) @ #vk.23
2: !KU( ~xx.1 ) @ #vk.25
3: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                      'g'^(~xx*~yy*inv(~xx.1))>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))     )) @ #vk.9
4: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                      'g'^(~xx*~yy*inv(~xx.1))>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                 'g'^(~xx*~yy*inv(~xx.1))>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                                        'g'^(~xx*~yy*inv(~xx.1))>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                             'g'^(~xx*~yy*inv(~xx.1))>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.10
5: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                  '1'>,                hkdfExtract('emptyStr', 'g'^(~xx*~yy)))) @ #vk.11
6: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                  '2'>,                hkdfExtract('emptyStr', 'g'^(~xx*~yy)))) @ #vk.13
7: !KU( 'g'^~xx ) @ #vk.19
8: !KU( 'g'^~yy ) @ #vk.6

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 51 (precomputed): !KU( ~xx ) @ #vk.22
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vl, 0) ~~> (#vk.1, 0)
1: !LTK_SIG( $V.2, ~ltk.4 ) ▶₀ #vr.6
2: !PK_SIG( $V.2, pkV ) ▶₁ #vr.6
3: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))     )) @ #vk.8
4: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.9
5: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                hkdfExtract('emptyStr', expSk))) @ #vk.10
6: splitEqs(0)
7: splitEqs(1)
8: splitEqs(2)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vl, 0) ~~> (#vk.1, 0)
1: StI1_SIG_SIG( $U.2, ~ltk.4, $V.2, ~xx.2, m1, ~tid.2 ) ▶₀ #vr.6
2: !PK_SIG( $V.2, pk(x) ) ▶₁ #vr.6
3: !PK_SIG( $U.2, pkU ) ▶₂ #vr.6
4: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))     )) @ #vk.8
5: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.9
6: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                hkdfExtract('emptyStr', expSk))) @ #vk.10
7: splitEqs(0)
8: splitEqs(1)
9: splitEqs(2)
10: !KU( ($V.2⊕      hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.2>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.15
11: !KU( (      hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.2>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', z))⊕      sign(<<$V.2, h(<$cHash0.2, m1, gy.2>), pk(x)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.2>), 'K_2m'>,                                   hkdfExtract('emptyStr', z)),                        <$V.2, h(<$cHash0.2, m1, gy.2>), pk(x)>, $cAEAD0.2)           >,           x)     )) @ #vk.16

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: CommitR( tid.2, u, v, t ) ▶₀ #vr.6
1: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))     )) @ #vk.8
2: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.9
3: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                hkdfExtract('emptyStr', expSk))) @ #vk.10
4: splitEqs(0)
5: splitEqs(1)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 37 (precomputed):
    CommitR( tid.2, u, v, t ) ▶₀ #vr.6
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: CommitI( tid.2, u, v, t ) ▶₀ #vr.6
1: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))     )) @ #vk.8
2: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.9
3: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                hkdfExtract('emptyStr', expSk))) @ #vk.10
4: splitEqs(0)
5: splitEqs(1)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 37 (precomputed):
    CommitI( tid.2, u, v, t ) ▶₀ #vr.6
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.7, 0) ~~> (#vk.1, 0)
1: StI1_SIG_SIG( $U.2, ~ltk.4, $V.2, ~xx.2, m1, ~tid.2 ) ▶₀ #vr.6
2: !PK_SIG( $V.2, pk(x) ) ▶₁ #vr.6
3: !PK_SIG( $U.2, pkU ) ▶₂ #vr.6
4: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))     )) @ #vk.8
5: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.9
6: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                hkdfExtract('emptyStr', expSk))) @ #vk.10
7: splitEqs(0)
8: splitEqs(1)
9: splitEqs(2)
10: !KU( ($V.2⊕      hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.2>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.15
11: !KU( (      hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.2>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', z))⊕      sign(<<$V.2, h(<$cHash0.2, m1, gy.2>), pk(x)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.2>), 'K_2m'>,                                   hkdfExtract('emptyStr', z)),                        <$V.2, h(<$cHash0.2, m1, gy.2>), pk(x)>, $cAEAD0.2)           >,           x)     )) @ #vk.16

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.8, 0) ~~> (#vk.1, 0)
1: StI1_SIG_SIG( $U.2, ~ltk.4, $V.2, ~xx.2, m1, ~tid.2 ) ▶₀ #vr.6
2: !PK_SIG( $V.2, pk(x) ) ▶₁ #vr.6
3: !PK_SIG( $U.2, pkU ) ▶₂ #vr.6
4: !KU( sign(<           <$U.2,             h(<$cHash0.2, h(<$cHash0.2, m1, gy.2>),                <                ($V.2⊕                 hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.2>), 'K_2e', '1'>,                            hkdfExtract('emptyStr', z))                ),                 (                 hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.2>), 'K_2e', '2'>,                            hkdfExtract('emptyStr', z))⊕                 sign(<<$V.2, h(<$cHash0.2, m1, gy.2>), pk(x)>,                        aeadEncrypt('emptyStr',                                   hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.2>), 'K_2m'>,                                              hkdfExtract('emptyStr', z)),                                   <$V.2, h(<$cHash0.2, m1, gy.2>), pk(x)>, $cAEAD0.2)                      >,                      x)                )               >,                'emptyStr'>),             pkU>,            aeadEncrypt('emptyStr',                       hkdfExpand(<$cAEAD0.2,                                    h(<$cHash0.2, h(<$cHash0.2, m1, gy.2>),                                       <                                       ($V.2⊕                                        hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.2>), 'K_2e', '1'                                                   >,                                                   hkdfExtract('emptyStr', z))                                       ),                                        (                                        hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.2>), 'K_2e', '2'                                                   >,                                                   hkdfExtract('emptyStr', z))⊕                                        sign(<<$V.2, h(<$cHash0.2, m1, gy.2>), pk(x)>,                                               aeadEncrypt('emptyStr',                                                          hkdfExpand(<$cAEAD0.2,                                                                       h(<$cHash0.2, m1, gy.2>),                                                                       'K_2m'>,                                                                     hkdfExtract('emptyStr', z)),                                                          <$V.2, h(<$cHash0.2, m1, gy.2>), pk(x)>,                                                          $cAEAD0.2)                                             >,                                             x)                                       )                                      >,                                       'emptyStr'>),                                    'K_3m'>,                                  hkdfExtract('emptyStr', z)),                       <$U.2,                         h(<$cHash0.2, h(<$cHash0.2, m1, gy.2>),                            <                            ($V.2⊕                             hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.2>), 'K_2e', '1'>,                                        hkdfExtract('emptyStr', z))                            ),                             (                             hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.2>), 'K_2e', '2'>,                                        hkdfExtract('emptyStr', z))⊕                             sign(<<$V.2, h(<$cHash0.2, m1, gy.2>), pk(x)>,                                    aeadEncrypt('emptyStr',                                               hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.2>),                                                            'K_2m'>,                                                          hkdfExtract('emptyStr', z)),                                               <$V.2, h(<$cHash0.2, m1, gy.2>), pk(x)>, $cAEAD0.2)                                  >,                                  x)                            )                           >,                            'emptyStr'>),                         pkU>,                       $cAEAD0.2)          >,          ~ltk.4)) @ #vk.20
5: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))     )) @ #vk.8
6: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.9
7: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                hkdfExtract('emptyStr', expSk))) @ #vk.10
8: splitEqs(0)
9: splitEqs(1)
10: splitEqs(2)
11: !KU( ($V.2⊕      hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.2>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.15
12: !KU( (      hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.2>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', z))⊕      sign(<<$V.2, h(<$cHash0.2, m1, gy.2>), pk(x)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.2>), 'K_2m'>,                                   hkdfExtract('emptyStr', z)),                        <$V.2, h(<$cHash0.2, m1, gy.2>), pk(x)>, $cAEAD0.2)           >,           x)     )) @ #vk.16

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.8, 0) ~~> (#vk.1, 0)
1: StI1_SIG_SIG( $U.2, ~ltk.4, $V.2, ~xx.2, m1, ~tid.2 ) ▶₀ #vr.6
2: !PK_SIG( $V.2, pk(x) ) ▶₁ #vr.6
3: !PK_SIG( $U.2, pkU ) ▶₂ #vr.6
4: !KU( sign(<           <$U.2,             h(<$cHash0.2, h(<$cHash0.2, m1, gy.2>),                <                ($V.2⊕                 hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.2>), 'K_2e', '1'>,                            hkdfExtract('emptyStr', z))                ),                 (                 hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.2>), 'K_2e', '2'>,                            hkdfExtract('emptyStr', z))⊕                 sign(<<$V.2, h(<$cHash0.2, m1, gy.2>), pk(x)>,                        aeadEncrypt('emptyStr',                                   hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.2>), 'K_2m'>,                                              hkdfExtract('emptyStr', z)),                                   <$V.2, h(<$cHash0.2, m1, gy.2>), pk(x)>, $cAEAD0.2)                      >,                      x)                )               >,                'emptyStr'>),             pkU>,            aeadEncrypt('emptyStr',                       hkdfExpand(<$cAEAD0.2,                                    h(<$cHash0.2, h(<$cHash0.2, m1, gy.2>),                                       <                                       ($V.2⊕                                        hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.2>), 'K_2e', '1'                                                   >,                                                   hkdfExtract('emptyStr', z))                                       ),                                        (                                        hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.2>), 'K_2e', '2'                                                   >,                                                   hkdfExtract('emptyStr', z))⊕                                        sign(<<$V.2, h(<$cHash0.2, m1, gy.2>), pk(x)>,                                               aeadEncrypt('emptyStr',                                                          hkdfExpand(<$cAEAD0.2,                                                                       h(<$cHash0.2, m1, gy.2>),                                                                       'K_2m'>,                                                                     hkdfExtract('emptyStr', z)),                                                          <$V.2, h(<$cHash0.2, m1, gy.2>), pk(x)>,                                                          $cAEAD0.2)                                             >,                                             x)                                       )                                      >,                                       'emptyStr'>),                                    'K_3m'>,                                  hkdfExtract('emptyStr', z)),                       <$U.2,                         h(<$cHash0.2, h(<$cHash0.2, m1, gy.2>),                            <                            ($V.2⊕                             hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.2>), 'K_2e', '1'>,                                        hkdfExtract('emptyStr', z))                            ),                             (                             hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.2>), 'K_2e', '2'>,                                        hkdfExtract('emptyStr', z))⊕                             sign(<<$V.2, h(<$cHash0.2, m1, gy.2>), pk(x)>,                                    aeadEncrypt('emptyStr',                                               hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.2>),                                                            'K_2m'>,                                                          hkdfExtract('emptyStr', z)),                                               <$V.2, h(<$cHash0.2, m1, gy.2>), pk(x)>, $cAEAD0.2)                                  >,                                  x)                            )                           >,                            'emptyStr'>),                         pkU>,                       $cAEAD0.2)          >,          ~ltk.4)) @ #vk.21
5: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))     )) @ #vk.8
6: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.9
7: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                hkdfExtract('emptyStr', expSk))) @ #vk.10
8: splitEqs(0)
9: splitEqs(1)
10: splitEqs(2)
11: !KU( h(<$cHash0.2, h(<$cHash0.2, m1, gy.2>),         <         ($V.2⊕          hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.2>), 'K_2e', '1'>,                     hkdfExtract('emptyStr', z))         ),          (          hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.2>), 'K_2e', '2'>,                     hkdfExtract('emptyStr', z))⊕          sign(<<$V.2, h(<$cHash0.2, m1, gy.2>), pk(x)>,                 aeadEncrypt('emptyStr',                            hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.2>), 'K_2m'>,                                       hkdfExtract('emptyStr', z)),                            <$V.2, h(<$cHash0.2, m1, gy.2>), pk(x)>, $cAEAD0.2)               >,               x)         )        >,         'emptyStr'>)) @ #vk.18
12: !KU( ($V.2⊕      hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.2>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.15
13: !KU( (      hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.2>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', z))⊕      sign(<<$V.2, h(<$cHash0.2, m1, gy.2>), pk(x)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.2>), 'K_2m'>,                                   hkdfExtract('emptyStr', z)),                        <$V.2, h(<$cHash0.2, m1, gy.2>), pk(x)>, $cAEAD0.2)           >,           x)     )) @ #vk.16

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.7, 0) ~~> (#vk.1, 0)
1: !LTK_SIG( $V.2, ~ltk.4 ) ▶₀ #vr.6
2: !PK_SIG( $V.2, pkV ) ▶₁ #vr.6
3: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))     )) @ #vk.8
4: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.9
5: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                hkdfExtract('emptyStr', expSk))) @ #vk.10
6: splitEqs(0)
7: splitEqs(1)
8: splitEqs(2)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.8, 0) ~~> (#vk.1, 0)
1: !LTK_SIG( $V.2, ~ltk.4 ) ▶₀ #vr.6
2: !PK_SIG( $V.2, pkV ) ▶₁ #vr.6
3: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))     )) @ #vk.8
4: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.9
5: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                hkdfExtract('emptyStr', expSk))) @ #vk.10
6: splitEqs(0)
7: splitEqs(1)
8: splitEqs(2)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.8, 0) ~~> (#vk.1, 0)
1: !LTK_SIG( $V.2, ~ltk.4 ) ▶₀ #vr.6
2: !PK_SIG( $V.2, pkV ) ▶₁ #vr.6
3: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))     )) @ #vk.8
4: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.9
5: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                hkdfExtract('emptyStr', expSk))) @ #vk.10
6: splitEqs(0)
7: splitEqs(1)
8: splitEqs(2)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.9, 0) ~~> (#vk.1, 0)
1: !LTK_SIG( $V.2, ~ltk.4 ) ▶₀ #vr.6
2: !PK_SIG( $V.2, pkV ) ▶₁ #vr.6
3: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))     )) @ #vk.8
4: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.9
5: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                hkdfExtract('emptyStr', expSk))) @ #vk.10
6: splitEqs(0)
7: splitEqs(1)
8: splitEqs(2)
9: !KU( (z.1⊕$V.2) ) @ #vk.18

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.9, 0) ~~> (#vk.1, 0)
1: !LTK_SIG( $V.2, ~ltk.4 ) ▶₀ #vr.6
2: !PK_SIG( $V.2, pkV ) ▶₁ #vr.6
3: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))     )) @ #vk.8
4: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.9
5: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                hkdfExtract('emptyStr', expSk))) @ #vk.10
6: !KU( (z.1⊕      hkdfExpand(<$cAEAD0.2,                   h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.2, gx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.18
7: splitEqs(0)
8: splitEqs(1)
9: splitEqs(2)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.9, 0) ~~> (#vk.1, 0)
1: !LTK_SIG( $V.2, ~ltk.4 ) ▶₀ #vr.6
2: !PK_SIG( $V.2, pkV ) ▶₁ #vr.6
3: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))     )) @ #vk.8
4: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.9
5: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                hkdfExtract('emptyStr', expSk))) @ #vk.10
6: splitEqs(0)
7: splitEqs(1)
8: splitEqs(2)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.9, 0) ~~> (#vk.1, 0)
1: !LTK_SIG( $V.2, ~ltk.4 ) ▶₀ #vr.6
2: !PK_SIG( $V.2, pkV ) ▶₁ #vr.6
3: !KU( sign(<           <$V.2, h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.2, gx>, 'g'^~yy>), pkV           >,            aeadEncrypt('emptyStr',                       hkdfExpand(<$cAEAD0.2,                                    h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.2, gx>, 'g'^~yy>), 'K_2m'>,                                  hkdfExtract('emptyStr', z)),                       <$V.2, h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.2, gx>, 'g'^~yy>), pkV                       >,                       $cAEAD0.2)          >,          ~ltk.4)) @ #vk.18
4: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))     )) @ #vk.8
5: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.9
6: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                hkdfExtract('emptyStr', expSk))) @ #vk.10
7: splitEqs(0)
8: splitEqs(1)
9: splitEqs(2)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.9, 0) ~~> (#vk.1, 0)
1: !LTK_SIG( $V.2, ~ltk.4 ) ▶₀ #vr.6
2: !PK_SIG( $V.2, pkV ) ▶₁ #vr.6
3: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))     )) @ #vk.8
4: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.9
5: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                hkdfExtract('emptyStr', expSk))) @ #vk.10
6: !KU( (z.1⊕      sign(<            <$V.2, h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.2, gx>, 'g'^~yy>), pkV            >,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.2,                                     h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.2, gx>, 'g'^~yy>), 'K_2m'                                   >,                                   hkdfExtract('emptyStr', z)),                        <$V.2, h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.2, gx>, 'g'^~yy>), pkV                        >,                        $cAEAD0.2)           >,           ~ltk.4)     )) @ #vk.18
7: splitEqs(0)
8: splitEqs(1)
9: splitEqs(2)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !LTK_SIG( $V, ~ltk.1 ) ▶₀ #vr.6
1: !PK_SIG( $V, pk(~ltk.1) ) ▶₁ #vr.6
2: splitEqs(1)
3: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, 'g'^x>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))     )) @ #vk.8
4: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, 'g'^x>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, 'g'^x>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, 'g'^x>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, 'g'^x>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.9
5: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                  '1'>,                hkdfExtract('emptyStr', 'g'^(~xx*~yy)))) @ #vk.10
6: !KU( 'g'^x ) @ #vk.6
7: !KU( 'g'^~yy ) @ #vk.4
8: !KU( 'g'^~xx ) @ #vk.17

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 37 (precomputed): !LTK_SIG( $V, ~ltk.1 ) ▶₀ #vr.6
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.9, 0) ~~> (#vk.1, 0)
1: !LTK_SIG( $V.2, ~ltk.4 ) ▶₀ #vr.6
2: !PK_SIG( $V.2, pkV ) ▶₁ #vr.6
3: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))     )) @ #vk.8
4: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.9
5: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                hkdfExtract('emptyStr', expSk))) @ #vk.10
6: !KU( (z.1⊕      hkdfExpand(<$cAEAD0.2,                   h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.2, gx>, 'g'^~yy>), 'K_2e',                   '2'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.18
7: splitEqs(0)
8: splitEqs(1)
9: splitEqs(2)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.9, 0) ~~> (#vk.1, 0)
1: !LTK_SIG( $V.2, ~ltk.4 ) ▶₀ #vr.6
2: !PK_SIG( $V.2, pkV ) ▶₁ #vr.6
3: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))     )) @ #vk.8
4: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.9
5: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                hkdfExtract('emptyStr', expSk))) @ #vk.10
6: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.2, gx>, 'g'^~yy>), 'K_2e',                  '2'>,                hkdfExtract('emptyStr', z))) @ #vk.18
7: splitEqs(0)
8: splitEqs(1)
9: splitEqs(2)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !PK_SIG( $V, pk(~ltk.1) ) ▶₁ #vr.6
1: splitEqs(1)
2: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, 'g'^x>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))     )) @ #vk.8
3: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, 'g'^x>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, 'g'^x>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, 'g'^x>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, 'g'^x>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.9
4: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                  '1'>,                hkdfExtract('emptyStr', 'g'^(~xx*~yy)))) @ #vk.10
5: !KU( 'g'^x ) @ #vk.6
6: !KU( 'g'^~yy ) @ #vk.4
7: !KU( 'g'^~xx ) @ #vk.17

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 38 (precomputed):
    !PK_SIG( $V, pk(~ltk.1) ) ▶₁ #vr.6
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !LTK_SIG( $V.2, ~ltk.4 ) ▶₀ #vr.6
1: !PK_SIG( $V.2, pkV ) ▶₁ #vr.6
2: splitEqs(1)
3: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, 'g'^x>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))     )) @ #vk.8
4: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, 'g'^x>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, 'g'^x>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, 'g'^x>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, 'g'^x>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.9
5: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                  '1'>,                hkdfExtract('emptyStr', 'g'^(~xx*~yy)))) @ #vk.10
6: !KU( (      sign(<            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'                                   >,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)⊕      sign(<            <$V.2, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pkV>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'                                   >,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V.2, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pkV>,                        $cAEAD0)           >,           ~ltk.4)     )) @ #vk.18
7: !KU( 'g'^x ) @ #vk.6
8: !KU( 'g'^~yy ) @ #vk.4
9: !KU( 'g'^~xx ) @ #vk.17

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 37 (precomputed): !LTK_SIG( $V.2, ~ltk.4 ) ▶₀ #vr.6
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vl, 0) ~~> (#vk, 0)
1: StI1_SIG_SIG( $U.2, ~ltk.4, $V.2, ~xx.2, m1, ~tid.2 ) ▶₀ #vr.6
2: !PK_SIG( $V.2, pk(x) ) ▶₁ #vr.6
3: !PK_SIG( $U.2, pkU ) ▶₂ #vr.6
4: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)     )) @ #vk.4
5: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))     )) @ #vk.8
6: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.9
7: splitEqs(0)
8: splitEqs(1)
9: splitEqs(2)
10: !KU( ($V.2⊕      hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.2>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.13
11: !KU( (      hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.2>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', z))⊕      sign(<<$V.2, h(<$cHash0.2, m1, gy.2>), pk(x)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.2>), 'K_2m'>,                                   hkdfExtract('emptyStr', z)),                        <$V.2, h(<$cHash0.2, m1, gy.2>), pk(x)>, $cAEAD0.2)           >,           x)     )) @ #vk.14

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vl, 0) ~~> (#vk, 0)
1: !LTK_SIG( $V.2, ~ltk.4 ) ▶₀ #vr.6
2: !PK_SIG( $V.2, pkV ) ▶₁ #vr.6
3: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)     )) @ #vk.4
4: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))     )) @ #vk.8
5: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.9
6: splitEqs(0)
7: splitEqs(1)
8: splitEqs(2)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: CommitR( tid.2, u, v, t ) ▶₀ #vr.6
1: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)     )) @ #vk.4
2: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))     )) @ #vk.8
3: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.9
4: splitEqs(0)
5: splitEqs(1)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 35 (precomputed):
    CommitR( tid.2, u, v, t ) ▶₀ #vr.6
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: CommitI( tid.2, u, v, t ) ▶₀ #vr.6
1: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)     )) @ #vk.4
2: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))     )) @ #vk.8
3: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.9
4: splitEqs(0)
5: splitEqs(1)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 35 (precomputed):
    CommitI( tid.2, u, v, t ) ▶₀ #vr.6
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.7, 0) ~~> (#vk, 0)
1: StI1_SIG_SIG( $U.2, ~ltk.4, $V.2, ~xx.2, m1, ~tid.2 ) ▶₀ #vr.6
2: !PK_SIG( $V.2, pk(x) ) ▶₁ #vr.6
3: !PK_SIG( $U.2, pkU ) ▶₂ #vr.6
4: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)     )) @ #vk.4
5: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))     )) @ #vk.8
6: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.9
7: splitEqs(0)
8: splitEqs(1)
9: splitEqs(2)
10: !KU( ($V.2⊕      hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.2>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.13
11: !KU( (      hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.2>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', z))⊕      sign(<<$V.2, h(<$cHash0.2, m1, gy.2>), pk(x)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.2>), 'K_2m'>,                                   hkdfExtract('emptyStr', z)),                        <$V.2, h(<$cHash0.2, m1, gy.2>), pk(x)>, $cAEAD0.2)           >,           x)     )) @ #vk.14

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.8, 0) ~~> (#vk, 0)
1: StI1_SIG_SIG( $U.2, ~ltk.4, $V.2, ~xx.2, m1, ~tid.2 ) ▶₀ #vr.6
2: !PK_SIG( $V.2, pk(x) ) ▶₁ #vr.6
3: !PK_SIG( $U.2, pkU ) ▶₂ #vr.6
4: !KU( sign(<           <$U.2,             h(<$cHash0.2, h(<$cHash0.2, m1, gy.2>),                <                ($V.2⊕                 hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.2>), 'K_2e', '1'>,                            hkdfExtract('emptyStr', z))                ),                 (                 hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.2>), 'K_2e', '2'>,                            hkdfExtract('emptyStr', z))⊕                 sign(<<$V.2, h(<$cHash0.2, m1, gy.2>), pk(x)>,                        aeadEncrypt('emptyStr',                                   hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.2>), 'K_2m'>,                                              hkdfExtract('emptyStr', z)),                                   <$V.2, h(<$cHash0.2, m1, gy.2>), pk(x)>, $cAEAD0.2)                      >,                      x)                )               >,                'emptyStr'>),             pkU>,            aeadEncrypt('emptyStr',                       hkdfExpand(<$cAEAD0.2,                                    h(<$cHash0.2, h(<$cHash0.2, m1, gy.2>),                                       <                                       ($V.2⊕                                        hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.2>), 'K_2e', '1'                                                   >,                                                   hkdfExtract('emptyStr', z))                                       ),                                        (                                        hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.2>), 'K_2e', '2'                                                   >,                                                   hkdfExtract('emptyStr', z))⊕                                        sign(<<$V.2, h(<$cHash0.2, m1, gy.2>), pk(x)>,                                               aeadEncrypt('emptyStr',                                                          hkdfExpand(<$cAEAD0.2,                                                                       h(<$cHash0.2, m1, gy.2>),                                                                       'K_2m'>,                                                                     hkdfExtract('emptyStr', z)),                                                          <$V.2, h(<$cHash0.2, m1, gy.2>), pk(x)>,                                                          $cAEAD0.2)                                             >,                                             x)                                       )                                      >,                                       'emptyStr'>),                                    'K_3m'>,                                  hkdfExtract('emptyStr', z)),                       <$U.2,                         h(<$cHash0.2, h(<$cHash0.2, m1, gy.2>),                            <                            ($V.2⊕                             hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.2>), 'K_2e', '1'>,                                        hkdfExtract('emptyStr', z))                            ),                             (                             hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.2>), 'K_2e', '2'>,                                        hkdfExtract('emptyStr', z))⊕                             sign(<<$V.2, h(<$cHash0.2, m1, gy.2>), pk(x)>,                                    aeadEncrypt('emptyStr',                                               hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.2>),                                                            'K_2m'>,                                                          hkdfExtract('emptyStr', z)),                                               <$V.2, h(<$cHash0.2, m1, gy.2>), pk(x)>, $cAEAD0.2)                                  >,                                  x)                            )                           >,                            'emptyStr'>),                         pkU>,                       $cAEAD0.2)          >,          ~ltk.4)) @ #vk.18
5: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)     )) @ #vk.4
6: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))     )) @ #vk.8
7: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.9
8: splitEqs(0)
9: splitEqs(1)
10: splitEqs(2)
11: !KU( ($V.2⊕      hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.2>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.13
12: !KU( (      hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.2>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', z))⊕      sign(<<$V.2, h(<$cHash0.2, m1, gy.2>), pk(x)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.2>), 'K_2m'>,                                   hkdfExtract('emptyStr', z)),                        <$V.2, h(<$cHash0.2, m1, gy.2>), pk(x)>, $cAEAD0.2)           >,           x)     )) @ #vk.14

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.8, 0) ~~> (#vk, 0)
1: StI1_SIG_SIG( $U.2, ~ltk.4, $V.2, ~xx.2, m1, ~tid.2 ) ▶₀ #vr.6
2: !PK_SIG( $V.2, pk(x) ) ▶₁ #vr.6
3: !PK_SIG( $U.2, pkU ) ▶₂ #vr.6
4: !KU( sign(<           <$U.2,             h(<$cHash0.2, h(<$cHash0.2, m1, gy.2>),                <                ($V.2⊕                 hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.2>), 'K_2e', '1'>,                            hkdfExtract('emptyStr', z))                ),                 (                 hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.2>), 'K_2e', '2'>,                            hkdfExtract('emptyStr', z))⊕                 sign(<<$V.2, h(<$cHash0.2, m1, gy.2>), pk(x)>,                        aeadEncrypt('emptyStr',                                   hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.2>), 'K_2m'>,                                              hkdfExtract('emptyStr', z)),                                   <$V.2, h(<$cHash0.2, m1, gy.2>), pk(x)>, $cAEAD0.2)                      >,                      x)                )               >,                'emptyStr'>),             pkU>,            aeadEncrypt('emptyStr',                       hkdfExpand(<$cAEAD0.2,                                    h(<$cHash0.2, h(<$cHash0.2, m1, gy.2>),                                       <                                       ($V.2⊕                                        hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.2>), 'K_2e', '1'                                                   >,                                                   hkdfExtract('emptyStr', z))                                       ),                                        (                                        hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.2>), 'K_2e', '2'                                                   >,                                                   hkdfExtract('emptyStr', z))⊕                                        sign(<<$V.2, h(<$cHash0.2, m1, gy.2>), pk(x)>,                                               aeadEncrypt('emptyStr',                                                          hkdfExpand(<$cAEAD0.2,                                                                       h(<$cHash0.2, m1, gy.2>),                                                                       'K_2m'>,                                                                     hkdfExtract('emptyStr', z)),                                                          <$V.2, h(<$cHash0.2, m1, gy.2>), pk(x)>,                                                          $cAEAD0.2)                                             >,                                             x)                                       )                                      >,                                       'emptyStr'>),                                    'K_3m'>,                                  hkdfExtract('emptyStr', z)),                       <$U.2,                         h(<$cHash0.2, h(<$cHash0.2, m1, gy.2>),                            <                            ($V.2⊕                             hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.2>), 'K_2e', '1'>,                                        hkdfExtract('emptyStr', z))                            ),                             (                             hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.2>), 'K_2e', '2'>,                                        hkdfExtract('emptyStr', z))⊕                             sign(<<$V.2, h(<$cHash0.2, m1, gy.2>), pk(x)>,                                    aeadEncrypt('emptyStr',                                               hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.2>),                                                            'K_2m'>,                                                          hkdfExtract('emptyStr', z)),                                               <$V.2, h(<$cHash0.2, m1, gy.2>), pk(x)>, $cAEAD0.2)                                  >,                                  x)                            )                           >,                            'emptyStr'>),                         pkU>,                       $cAEAD0.2)          >,          ~ltk.4)) @ #vk.19
5: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)     )) @ #vk.4
6: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))     )) @ #vk.8
7: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.9
8: splitEqs(0)
9: splitEqs(1)
10: splitEqs(2)
11: !KU( h(<$cHash0.2, h(<$cHash0.2, m1, gy.2>),         <         ($V.2⊕          hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.2>), 'K_2e', '1'>,                     hkdfExtract('emptyStr', z))         ),          (          hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.2>), 'K_2e', '2'>,                     hkdfExtract('emptyStr', z))⊕          sign(<<$V.2, h(<$cHash0.2, m1, gy.2>), pk(x)>,                 aeadEncrypt('emptyStr',                            hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.2>), 'K_2m'>,                                       hkdfExtract('emptyStr', z)),                            <$V.2, h(<$cHash0.2, m1, gy.2>), pk(x)>, $cAEAD0.2)               >,               x)         )        >,         'emptyStr'>)) @ #vk.16
12: !KU( ($V.2⊕      hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.2>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.13
13: !KU( (      hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.2>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', z))⊕      sign(<<$V.2, h(<$cHash0.2, m1, gy.2>), pk(x)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.2>), 'K_2m'>,                                   hkdfExtract('emptyStr', z)),                        <$V.2, h(<$cHash0.2, m1, gy.2>), pk(x)>, $cAEAD0.2)           >,           x)     )) @ #vk.14

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.7, 0) ~~> (#vk, 0)
1: !LTK_SIG( $V.2, ~ltk.4 ) ▶₀ #vr.6
2: !PK_SIG( $V.2, pkV ) ▶₁ #vr.6
3: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)     )) @ #vk.4
4: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))     )) @ #vk.8
5: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.9
6: splitEqs(0)
7: splitEqs(1)
8: splitEqs(2)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.8, 0) ~~> (#vk, 0)
1: !LTK_SIG( $V.2, ~ltk.4 ) ▶₀ #vr.6
2: !PK_SIG( $V.2, pkV ) ▶₁ #vr.6
3: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)     )) @ #vk.4
4: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))     )) @ #vk.8
5: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.9
6: splitEqs(0)
7: splitEqs(1)
8: splitEqs(2)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.8, 0) ~~> (#vk, 0)
1: !LTK_SIG( $V.2, ~ltk.4 ) ▶₀ #vr.6
2: !PK_SIG( $V.2, pkV ) ▶₁ #vr.6
3: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)     )) @ #vk.4
4: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))     )) @ #vk.8
5: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.9
6: splitEqs(0)
7: splitEqs(1)
8: splitEqs(2)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.9, 0) ~~> (#vk, 0)
1: !LTK_SIG( $V.2, ~ltk.4 ) ▶₀ #vr.6
2: !PK_SIG( $V.2, pkV ) ▶₁ #vr.6
3: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)     )) @ #vk.4
4: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))     )) @ #vk.8
5: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.9
6: splitEqs(0)
7: splitEqs(1)
8: splitEqs(2)
9: !KU( (z.1⊕$V.2) ) @ #vk.16

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !LTK_SIG( $V, ~ltk.4 ) ▶₀ #vr.6
1: !PK_SIG( $V, pkV ) ▶₁ #vr.6
2: splitEqs(1)
3: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                   '2'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      sign(<            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'                                   >,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)     )) @ #vk.4
4: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, 'g'^x>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))     )) @ #vk.8
5: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, 'g'^x>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, 'g'^x>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, 'g'^x>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, 'g'^x>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.9
6: !KU( 'g'^x ) @ #vk.6
7: !KU( 'g'^~yy ) @ #vk.3
8: !KU( 'g'^~xx ) @ #vk.15

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 35 (precomputed): !LTK_SIG( $V, ~ltk.4 ) ▶₀ #vr.6
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.9, 0) ~~> (#vk, 0)
1: !LTK_SIG( $V.2, ~ltk.4 ) ▶₀ #vr.6
2: !PK_SIG( $V.2, pkV ) ▶₁ #vr.6
3: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)     )) @ #vk.4
4: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))     )) @ #vk.8
5: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.9
6: !KU( (z.1⊕      hkdfExpand(<$cAEAD0.2,                   h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.2, gx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.16
7: splitEqs(0)
8: splitEqs(1)
9: splitEqs(2)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.9, 0) ~~> (#vk, 0)
1: !LTK_SIG( $V.2, ~ltk.4 ) ▶₀ #vr.6
2: !PK_SIG( $V.2, pkV ) ▶₁ #vr.6
3: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)     )) @ #vk.4
4: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))     )) @ #vk.8
5: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.9
6: splitEqs(0)
7: splitEqs(1)
8: splitEqs(2)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !PK_SIG( $V, pkV ) ▶₁ #vr.6
1: splitEqs(1)
2: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                   '2'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      sign(<            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'                                   >,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)     )) @ #vk.4
3: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, 'g'^x>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))     )) @ #vk.8
4: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, 'g'^x>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, 'g'^x>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, 'g'^x>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, 'g'^x>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.9
5: !KU( 'g'^x ) @ #vk.6
6: !KU( 'g'^~yy ) @ #vk.3
7: !KU( 'g'^~xx ) @ #vk.15

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 36 (precomputed): !PK_SIG( $V, pkV ) ▶₁ #vr.6
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !LTK_SIG( $V, ~ltk.4 ) ▶₀ #vr.6
1: !PK_SIG( $V, pkV ) ▶₁ #vr.6
2: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)     )) @ #vk.4
3: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))     )) @ #vk.8
4: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.9
5: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))⊕      hkdfExpand(<$cAEAD0.2,                   h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.2, gx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.16
6: splitEqs(0)
7: splitEqs(1)
8: splitEqs(2)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 35 (precomputed): !LTK_SIG( $V, ~ltk.4 ) ▶₀ #vr.6
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: splitEqs(1)
1: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, 'g'^x>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))     )) @ #vk.8
2: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, 'g'^x>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, 'g'^x>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, 'g'^x>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, 'g'^x>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.9
3: !KU( 'g'^x ) @ #vk.6
4: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                   '2'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      sign(<            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'                                   >,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)     )) @ #vk.4
5: !KU( 'g'^~yy ) @ #vk.3
6: !KU( 'g'^~xx ) @ #vk.15

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 14 (directly): splitEqs(1)
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !LTK_SIG( $V.2, ~ltk.4 ) ▶₀ #vr.6
1: !PK_SIG( $V.2, pkV ) ▶₁ #vr.6
2: splitEqs(1)
3: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                   '2'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      sign(<            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'                                   >,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)     )) @ #vk.4
4: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, 'g'^x>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))     )) @ #vk.8
5: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, 'g'^x>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, 'g'^x>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, 'g'^x>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, 'g'^x>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.9
6: !KU( 'g'^x ) @ #vk.6
7: !KU( ($V⊕$V.2) ) @ #vk.16
8: !KU( 'g'^~yy ) @ #vk.3
9: !KU( 'g'^~xx ) @ #vk.15

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 35 (precomputed): !LTK_SIG( $V.2, ~ltk.4 ) ▶₀ #vr.6
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.9, 0) ~~> (#vk, 0)
1: !LTK_SIG( $V.2, ~ltk.4 ) ▶₀ #vr.6
2: !PK_SIG( $V.2, pkV ) ▶₁ #vr.6
3: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)     )) @ #vk.4
4: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))     )) @ #vk.8
5: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.9
6: !KU( (z.1⊕      hkdfExpand(<$cAEAD0.2,                   h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.2, gx>, 'g'^~yy>), 'K_2e',                   '2'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.16
7: splitEqs(0)
8: splitEqs(1)
9: splitEqs(2)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.9, 0) ~~> (#vk, 0)
1: !LTK_SIG( $V.2, ~ltk.4 ) ▶₀ #vr.6
2: !PK_SIG( $V.2, pkV ) ▶₁ #vr.6
3: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)     )) @ #vk.4
4: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))     )) @ #vk.8
5: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.9
6: !KU( (z.1⊕      sign(<            <$V.2, h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.2, gx>, 'g'^~yy>), pkV            >,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.2,                                     h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.2, gx>, 'g'^~yy>), 'K_2m'                                   >,                                   hkdfExtract('emptyStr', z)),                        <$V.2, h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.2, gx>, 'g'^~yy>), pkV                        >,                        $cAEAD0.2)           >,           ~ltk.4)     )) @ #vk.16
7: splitEqs(0)
8: splitEqs(1)
9: splitEqs(2)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.9, 0) ~~> (#vk, 0)
1: !LTK_SIG( $V.2, ~ltk.4 ) ▶₀ #vr.6
2: !PK_SIG( $V.2, pkV ) ▶₁ #vr.6
3: !KU( sign(<           <$V.2, h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.2, gx>, 'g'^~yy>), pkV           >,            aeadEncrypt('emptyStr',                       hkdfExpand(<$cAEAD0.2,                                    h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.2, gx>, 'g'^~yy>), 'K_2m'>,                                  hkdfExtract('emptyStr', z)),                       <$V.2, h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.2, gx>, 'g'^~yy>), pkV                       >,                       $cAEAD0.2)          >,          ~ltk.4)) @ #vk.16
4: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)     )) @ #vk.4
5: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))     )) @ #vk.8
6: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.9
7: splitEqs(0)
8: splitEqs(1)
9: splitEqs(2)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.9, 0) ~~> (#vk, 0)
1: !LTK_SIG( $V.2, ~ltk.4 ) ▶₀ #vr.6
2: !PK_SIG( $V.2, pkV ) ▶₁ #vr.6
3: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)     )) @ #vk.4
4: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))     )) @ #vk.8
5: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.9
6: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.2, gx>, 'g'^~yy>), 'K_2e',                  '2'>,                hkdfExtract('emptyStr', z))) @ #vk.16
7: splitEqs(0)
8: splitEqs(1)
9: splitEqs(2)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( sign(<           <$V.1, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),             pk(~ltk.2)>,            aeadEncrypt('emptyStr',                       hkdfExpand(<$cAEAD0,                                    h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'                                  >,                                  hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                       <$V.1, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                         pk(~ltk.2)>,                       $cAEAD0)          >,          ~ltk.2)) @ #vk.15
1: !KU( sign(<           <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),             pk(~ltk.1)>,            aeadEncrypt('emptyStr',                       hkdfExpand(<$cAEAD0,                                    h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'                                  >,                                  hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                       <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                         pk(~ltk.1)>,                       $cAEAD0)          >,          ~ltk.1)) @ #vk.16
2: !KU( 'g'^~yy ) @ #vk.6
3: !KU( 'g'^~xx ) @ #vk.13

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KD( (      sign(<            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'                                   >,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)⊕      sign(<            <$V.1, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.2)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'                                   >,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V.1, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.2)>,                        $cAEAD0)           >,           ~ltk.2)     )) ▶₀ #vk.3
1: !KU( 'g'^~yy ) @ #vk.6
2: !KU( 'g'^~xx ) @ #vk.13

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 52 (precomputed):
    !KU( sign(<
               <$V.1, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 
                pk(~ltk.2)>, 
               aeadEncrypt('emptyStr',
                           hkdfExpand(<$cAEAD0, 
                                       h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 
                                       'K_2m'>,
                                      hkdfExtract('emptyStr', 'g'^(~xx*~yy))),
                           <$V.1, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 
                            pk(~ltk.2)>,
                           $cAEAD0)
              >,
              ~ltk.2)
    ) @ #vk.15
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( sign(<           <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),             pk(~ltk.1)>,            aeadEncrypt('emptyStr',                       hkdfExpand(<$cAEAD0,                                    h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'                                  >,                                  hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                       <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                         pk(~ltk.1)>,                       $cAEAD0)          >,          ~ltk.1)) @ #vk.16
1: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                  '2'>,                hkdfExtract('emptyStr', 'g'^(~xx*~yy)))) @ #vk.17
2: !KU( 'g'^~yy ) @ #vk.7
3: !KU( 'g'^~xx ) @ #vk.14

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~ltk.2 ) @ #vk.19
1: !KU( h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>)) @ #vk.21
2: !KU( sign(<           <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),             pk(~ltk.1)>,            aeadEncrypt('emptyStr',                       hkdfExpand(<$cAEAD0,                                    h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'                                  >,                                  hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                       <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                         pk(~ltk.1)>,                       $cAEAD0)          >,          ~ltk.1)) @ #vk.17
3: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0,                              h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'>,                            hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                 <$V.1, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                   pk(~ltk.2)>,                 $cAEAD0)) @ #vk.23
4: !KU( 'g'^~yy ) @ #vk.7
5: !KU( 'g'^~xx ) @ #vk.14
6: !KU( pk(~ltk.2) ) @ #vk.22

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 56 (precomputed): !KU( ~ltk.2 ) @ #vk.19
  solved goal nr. 53 (precomputed):
    !KU( sign(<
               <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 
                pk(~ltk.1)>, 
               aeadEncrypt('emptyStr',
                           hkdfExpand(<$cAEAD0, 
                                       h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 
                                       'K_2m'>,
                                      hkdfExtract('emptyStr', 'g'^(~xx*~yy))),
                           <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 
                            pk(~ltk.1)>,
                           $cAEAD0)
              >,
              ~ltk.1)
    ) @ #vk.16
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~ltk.1 ) @ #vk.20
1: !KU( h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>)) @ #vk.22
2: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                  '2'>,                hkdfExtract('emptyStr', 'g'^(~xx*~yy)))) @ #vk.18
3: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0,                              h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'>,                            hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                 <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                   pk(~ltk.1)>,                 $cAEAD0)) @ #vk.24
4: !KU( 'g'^~yy ) @ #vk.8
5: !KU( 'g'^~xx ) @ #vk.16
6: !KU( pk(~ltk.1) ) @ #vk.23

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 66 (precomputed): !KU( ~ltk.1 ) @ #vk.20
  simplified formula:
      "((#vr.26 = #i) ∨ (#i < #vr.26))"
    to
      "⊥"
  solved goal nr. 75 (simplified): (#vr.26 = #i)  ∥ (#i < #vr.26)
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>)) @ #vk.21
1: !KU( sign(<           <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),             pk(~ltk.1)>,            aeadEncrypt('emptyStr',                       hkdfExpand(<$cAEAD0,                                    h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'                                  >,                                  hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                       <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                         pk(~ltk.1)>,                       $cAEAD0)          >,          ~ltk.1)) @ #vk.19
2: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0,                              h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'>,                            hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                 <$V.1, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                   pk(~ltk.2)>,                 $cAEAD0)) @ #vk.23
3: !KU( 'g'^~yy ) @ #vk.8
4: !KU( 'g'^~xx ) @ #vk.15
5: !KU( pk(~ltk.2) ) @ #vk.22

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 60 (precomputed):
    !KU( h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>)
    ) @ #vk.21
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( sign(<           <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),             pk(~ltk.1)>,            aeadEncrypt('emptyStr',                       hkdfExpand(<$cAEAD0,                                    h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'                                  >,                                  hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                       <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                         pk(~ltk.1)>,                       $cAEAD0)          >,          ~ltk.1)) @ #vk.21
1: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0,                              h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'>,                            hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                 <$V.1, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                   pk(~ltk.2)>,                 $cAEAD0)) @ #vk.24
2: !KU( 'g'^~yy ) @ #vk.9
3: !KU( 'g'^~xx ) @ #vk.17
4: !KU( pk(~ltk.2) ) @ #vk.23

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 53 (precomputed):
    !KU( sign(<
               <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 
                pk(~ltk.1)>, 
               aeadEncrypt('emptyStr',
                           hkdfExpand(<$cAEAD0, 
                                       h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 
                                       'K_2m'>,
                                      hkdfExtract('emptyStr', 'g'^(~xx*~yy))),
                           <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 
                            pk(~ltk.1)>,
                           $cAEAD0)
              >,
              ~ltk.1)
    ) @ #vk.21
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~ltk.1 ) @ #vk.30
1: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0,                              h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'>,                            hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                 <$V.1, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                   pk(~ltk.2)>,                 $cAEAD0)) @ #vk.27
2: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0,                              h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'>,                            hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                 <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                   pk(~ltk.1)>,                 $cAEAD0)) @ #vk.32
3: !KU( 'g'^~yy ) @ #vk.12
4: !KU( 'g'^~xx ) @ #vk.22
5: !KU( pk(~ltk.2) ) @ #vk.26
6: !KU( pk(~ltk.1) ) @ #vk.31

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 79 (precomputed): !KU( ~ltk.1 ) @ #vk.30
  simplified formula:
      "((#vr.34 = #i) ∨ (#i < #vr.34))"
    to
      "⊥"
  solved goal nr. 88 (simplified): (#vr.34 = #i)  ∥ (#i < #vr.34)
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vl.1, 0) ~~> (#vk.3, 0)
1: !LTK_SIG( $V.2, ~ltk.3 ) ▶₀ #vr.10
2: !PK_SIG( $V.2, pkV ) ▶₁ #vr.10
3: splitEqs(6)
4: !KU( 'g'^~yy ) @ #vk.6
5: !KU( 'g'^~xx ) @ #vk.15

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vl.1, 0) ~~> (#vk.3, 0)
1: StI1_SIG_SIG( $U.1, ~ltk.3, $V.2, ~xx.1, m1, ~tid.2 ) ▶₀ #vr.10
2: !PK_SIG( $V.2, pk(x) ) ▶₁ #vr.10
3: !PK_SIG( $U.1, pkU ) ▶₂ #vr.10
4: splitEqs(6)
5: !KU( ($V.2⊕      hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.18
6: !KU( (      hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', z))⊕      sign(<<$V.2, h(<$cHash0.1, m1, gy>), pk(x)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy>), 'K_2m'>,                                   hkdfExtract('emptyStr', z)),                        <$V.2, h(<$cHash0.1, m1, gy>), pk(x)>, $cAEAD0.1)           >,           x)     )) @ #vk.19
7: !KU( 'g'^~yy ) @ #vk.6
8: !KU( 'g'^~xx ) @ #vk.13

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: CommitR( tid.2, u, v, t ) ▶₀ #vr.10
1: !KU( 'g'^~yy ) @ #vk.6
2: !KU( 'g'^~xx ) @ #vk.13

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 55 (precomputed):
    CommitR( tid.2, u, v, t ) ▶₀ #vr.10
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: CommitI( tid.2, u, v, t ) ▶₀ #vr.10
1: !KU( 'g'^~yy ) @ #vk.6
2: !KU( 'g'^~xx ) @ #vk.13

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 55 (precomputed):
    CommitI( tid.2, u, v, t ) ▶₀ #vr.10
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.11, 0) ~~> (#vk.3, 0)
1: StI1_SIG_SIG( $U.1, ~ltk.3, $V.2, ~xx.1, m1, ~tid.2 ) ▶₀ #vr.10
2: !PK_SIG( $V.2, pk(x) ) ▶₁ #vr.10
3: !PK_SIG( $U.1, pkU ) ▶₂ #vr.10
4: splitEqs(6)
5: !KU( ($V.2⊕      hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.18
6: !KU( (      hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', z))⊕      sign(<<$V.2, h(<$cHash0.1, m1, gy>), pk(x)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy>), 'K_2m'>,                                   hkdfExtract('emptyStr', z)),                        <$V.2, h(<$cHash0.1, m1, gy>), pk(x)>, $cAEAD0.1)           >,           x)     )) @ #vk.19
7: !KU( 'g'^~yy ) @ #vk.6
8: !KU( 'g'^~xx ) @ #vk.13

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.12, 0) ~~> (#vk.3, 0)
1: StI1_SIG_SIG( $U.1, ~ltk.3, $V.2, ~xx.1, m1, ~tid.2 ) ▶₀ #vr.10
2: !PK_SIG( $V.2, pk(x) ) ▶₁ #vr.10
3: !PK_SIG( $U.1, pkU ) ▶₂ #vr.10
4: !KU( sign(<           <$U.1,             h(<$cHash0.1, h(<$cHash0.1, m1, gy>),                <                ($V.2⊕                 hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy>), 'K_2e', '1'>,                            hkdfExtract('emptyStr', z))                ),                 (                 hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy>), 'K_2e', '2'>,                            hkdfExtract('emptyStr', z))⊕                 sign(<<$V.2, h(<$cHash0.1, m1, gy>), pk(x)>,                        aeadEncrypt('emptyStr',                                   hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy>), 'K_2m'>,                                              hkdfExtract('emptyStr', z)),                                   <$V.2, h(<$cHash0.1, m1, gy>), pk(x)>, $cAEAD0.1)                      >,                      x)                )               >,                'emptyStr'>),             pkU>,            aeadEncrypt('emptyStr',                       hkdfExpand(<$cAEAD0.1,                                    h(<$cHash0.1, h(<$cHash0.1, m1, gy>),                                       <                                       ($V.2⊕                                        hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy>), 'K_2e', '1'>,                                                   hkdfExtract('emptyStr', z))                                       ),                                        (                                        hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy>), 'K_2e', '2'>,                                                   hkdfExtract('emptyStr', z))⊕                                        sign(<<$V.2, h(<$cHash0.1, m1, gy>), pk(x)>,                                               aeadEncrypt('emptyStr',                                                          hkdfExpand(<$cAEAD0.1,                                                                       h(<$cHash0.1, m1, gy>), 'K_2m'                                                                     >,                                                                     hkdfExtract('emptyStr', z)),                                                          <$V.2, h(<$cHash0.1, m1, gy>), pk(x)>,                                                          $cAEAD0.1)                                             >,                                             x)                                       )                                      >,                                       'emptyStr'>),                                    'K_3m'>,                                  hkdfExtract('emptyStr', z)),                       <$U.1,                         h(<$cHash0.1, h(<$cHash0.1, m1, gy>),                            <                            ($V.2⊕                             hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy>), 'K_2e', '1'>,                                        hkdfExtract('emptyStr', z))                            ),                             (                             hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy>), 'K_2e', '2'>,                                        hkdfExtract('emptyStr', z))⊕                             sign(<<$V.2, h(<$cHash0.1, m1, gy>), pk(x)>,                                    aeadEncrypt('emptyStr',                                               hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy>), 'K_2m'                                                          >,                                                          hkdfExtract('emptyStr', z)),                                               <$V.2, h(<$cHash0.1, m1, gy>), pk(x)>, $cAEAD0.1)                                  >,                                  x)                            )                           >,                            'emptyStr'>),                         pkU>,                       $cAEAD0.1)          >,          ~ltk.3)) @ #vk.23
5: splitEqs(6)
6: !KU( ($V.2⊕      hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.18
7: !KU( (      hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', z))⊕      sign(<<$V.2, h(<$cHash0.1, m1, gy>), pk(x)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy>), 'K_2m'>,                                   hkdfExtract('emptyStr', z)),                        <$V.2, h(<$cHash0.1, m1, gy>), pk(x)>, $cAEAD0.1)           >,           x)     )) @ #vk.19
8: !KU( 'g'^~yy ) @ #vk.6
9: !KU( 'g'^~xx ) @ #vk.13

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.12, 0) ~~> (#vk.3, 0)
1: StI1_SIG_SIG( $U.1, ~ltk.3, $V.2, ~xx.1, m1, ~tid.2 ) ▶₀ #vr.10
2: !PK_SIG( $V.2, pk(x) ) ▶₁ #vr.10
3: !PK_SIG( $U.1, pkU ) ▶₂ #vr.10
4: !KU( sign(<           <$U.1,             h(<$cHash0.1, h(<$cHash0.1, m1, gy>),                <                ($V.2⊕                 hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy>), 'K_2e', '1'>,                            hkdfExtract('emptyStr', z))                ),                 (                 hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy>), 'K_2e', '2'>,                            hkdfExtract('emptyStr', z))⊕                 sign(<<$V.2, h(<$cHash0.1, m1, gy>), pk(x)>,                        aeadEncrypt('emptyStr',                                   hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy>), 'K_2m'>,                                              hkdfExtract('emptyStr', z)),                                   <$V.2, h(<$cHash0.1, m1, gy>), pk(x)>, $cAEAD0.1)                      >,                      x)                )               >,                'emptyStr'>),             pkU>,            aeadEncrypt('emptyStr',                       hkdfExpand(<$cAEAD0.1,                                    h(<$cHash0.1, h(<$cHash0.1, m1, gy>),                                       <                                       ($V.2⊕                                        hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy>), 'K_2e', '1'>,                                                   hkdfExtract('emptyStr', z))                                       ),                                        (                                        hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy>), 'K_2e', '2'>,                                                   hkdfExtract('emptyStr', z))⊕                                        sign(<<$V.2, h(<$cHash0.1, m1, gy>), pk(x)>,                                               aeadEncrypt('emptyStr',                                                          hkdfExpand(<$cAEAD0.1,                                                                       h(<$cHash0.1, m1, gy>), 'K_2m'                                                                     >,                                                                     hkdfExtract('emptyStr', z)),                                                          <$V.2, h(<$cHash0.1, m1, gy>), pk(x)>,                                                          $cAEAD0.1)                                             >,                                             x)                                       )                                      >,                                       'emptyStr'>),                                    'K_3m'>,                                  hkdfExtract('emptyStr', z)),                       <$U.1,                         h(<$cHash0.1, h(<$cHash0.1, m1, gy>),                            <                            ($V.2⊕                             hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy>), 'K_2e', '1'>,                                        hkdfExtract('emptyStr', z))                            ),                             (                             hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy>), 'K_2e', '2'>,                                        hkdfExtract('emptyStr', z))⊕                             sign(<<$V.2, h(<$cHash0.1, m1, gy>), pk(x)>,                                    aeadEncrypt('emptyStr',                                               hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy>), 'K_2m'                                                          >,                                                          hkdfExtract('emptyStr', z)),                                               <$V.2, h(<$cHash0.1, m1, gy>), pk(x)>, $cAEAD0.1)                                  >,                                  x)                            )                           >,                            'emptyStr'>),                         pkU>,                       $cAEAD0.1)          >,          ~ltk.3)) @ #vk.24
5: splitEqs(6)
6: !KU( h(<$cHash0.1, h(<$cHash0.1, m1, gy>),         <         ($V.2⊕          hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy>), 'K_2e', '1'>,                     hkdfExtract('emptyStr', z))         ),          (          hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy>), 'K_2e', '2'>,                     hkdfExtract('emptyStr', z))⊕          sign(<<$V.2, h(<$cHash0.1, m1, gy>), pk(x)>,                 aeadEncrypt('emptyStr',                            hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy>), 'K_2m'>,                                       hkdfExtract('emptyStr', z)),                            <$V.2, h(<$cHash0.1, m1, gy>), pk(x)>, $cAEAD0.1)               >,               x)         )        >,         'emptyStr'>)) @ #vk.21
7: !KU( ($V.2⊕      hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.18
8: !KU( (      hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', z))⊕      sign(<<$V.2, h(<$cHash0.1, m1, gy>), pk(x)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy>), 'K_2m'>,                                   hkdfExtract('emptyStr', z)),                        <$V.2, h(<$cHash0.1, m1, gy>), pk(x)>, $cAEAD0.1)           >,           x)     )) @ #vk.19
9: !KU( 'g'^~yy ) @ #vk.6
10: !KU( 'g'^~xx ) @ #vk.13

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.11, 0) ~~> (#vk.3, 0)
1: !LTK_SIG( $V.2, ~ltk.3 ) ▶₀ #vr.10
2: !PK_SIG( $V.2, pkV ) ▶₁ #vr.10
3: splitEqs(6)
4: !KU( 'g'^~yy ) @ #vk.6
5: !KU( 'g'^~xx ) @ #vk.15

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.12, 0) ~~> (#vk.3, 0)
1: !LTK_SIG( $V.2, ~ltk.3 ) ▶₀ #vr.10
2: !PK_SIG( $V.2, pkV ) ▶₁ #vr.10
3: splitEqs(6)
4: !KU( 'g'^~yy ) @ #vk.6
5: !KU( 'g'^~xx ) @ #vk.15

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.12, 0) ~~> (#vk.3, 0)
1: !LTK_SIG( $V.2, ~ltk.3 ) ▶₀ #vr.10
2: !PK_SIG( $V.2, pkV ) ▶₁ #vr.10
3: splitEqs(6)
4: !KU( 'g'^~yy ) @ #vk.6
5: !KU( 'g'^~xx ) @ #vk.15

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.13, 0) ~~> (#vk.3, 0)
1: !LTK_SIG( $V.2, ~ltk.3 ) ▶₀ #vr.10
2: !PK_SIG( $V.2, pkV ) ▶₁ #vr.10
3: splitEqs(6)
4: !KU( (z.1⊕$V.2) ) @ #vk.20
5: !KU( 'g'^~yy ) @ #vk.6
6: !KU( 'g'^~xx ) @ #vk.15

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.13, 0) ~~> (#vk.3, 0)
1: !LTK_SIG( $V.2, ~ltk.3 ) ▶₀ #vr.10
2: !PK_SIG( $V.2, pkV ) ▶₁ #vr.10
3: !KU( (z.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, gx>, 'g'^~yy.1>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.20
4: splitEqs(6)
5: !KU( 'g'^~yy ) @ #vk.6
6: !KU( 'g'^~xx ) @ #vk.15

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.13, 0) ~~> (#vk.3, 0)
1: !LTK_SIG( $V.2, ~ltk.3 ) ▶₀ #vr.10
2: !PK_SIG( $V.2, pkV ) ▶₁ #vr.10
3: splitEqs(6)
4: !KU( 'g'^~yy ) @ #vk.6
5: !KU( 'g'^~xx ) @ #vk.15

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.13, 0) ~~> (#vk.3, 0)
1: !LTK_SIG( $V.2, ~ltk.3 ) ▶₀ #vr.10
2: !PK_SIG( $V.2, pkV ) ▶₁ #vr.10
3: !KU( (z.1⊕      sign(<            <$V.2, h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, gx>, 'g'^~yy.1>),              pkV>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, gx>, 'g'^~yy.1>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', z)),                        <$V.2, h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, gx>, 'g'^~yy.1>),                          pkV>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.20
4: splitEqs(6)
5: !KU( 'g'^~yy ) @ #vk.6
6: !KU( 'g'^~xx ) @ #vk.15

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.13, 0) ~~> (#vk.3, 0)
1: !LTK_SIG( $V.2, ~ltk.3 ) ▶₀ #vr.10
2: !PK_SIG( $V.2, pkV ) ▶₁ #vr.10
3: !KU( (z.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, gx>, 'g'^~yy.1>), 'K_2e',                   '2'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.20
4: splitEqs(6)
5: !KU( 'g'^~yy ) @ #vk.6
6: !KU( 'g'^~xx ) @ #vk.15

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.13, 0) ~~> (#vk.3, 0)
1: !LTK_SIG( $V.2, ~ltk.3 ) ▶₀ #vr.10
2: !PK_SIG( $V.2, pkV ) ▶₁ #vr.10
3: !KU( hkdfExpand(<$cAEAD0.1,                  h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, gx>, 'g'^~yy.1>), 'K_2e',                  '2'>,                hkdfExtract('emptyStr', z))) @ #vk.20
4: splitEqs(6)
5: !KU( 'g'^~yy ) @ #vk.6
6: !KU( 'g'^~xx ) @ #vk.15

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.13, 0) ~~> (#vk.3, 0)
1: !LTK_SIG( $V.2, ~ltk.3 ) ▶₀ #vr.10
2: !PK_SIG( $V.2, pkV ) ▶₁ #vr.10
3: !KU( sign(<           <$V.2, h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, gx>, 'g'^~yy.1>),             pkV>,            aeadEncrypt('emptyStr',                       hkdfExpand(<$cAEAD0.1,                                    h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, gx>, 'g'^~yy.1>), 'K_2m'                                  >,                                  hkdfExtract('emptyStr', z)),                       <$V.2, h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, gx>, 'g'^~yy.1>),                         pkV>,                       $cAEAD0.1)          >,          ~ltk.3)) @ #vk.20
4: splitEqs(6)
5: !KU( 'g'^~yy ) @ #vk.6
6: !KU( 'g'^~xx ) @ #vk.15

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>)) @ #vk.18
1: !KU( 'g'^(~xx*~yy) ) @ #vk.23
2: !KU( (      sign(<            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'                                   >,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)⊕      sign(<            <$V.1, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.2)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'                                   >,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V.1, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.2)>,                        $cAEAD0)           >,           ~ltk.2)     )) @ #vk.14
3: !KU( 'g'^~yy ) @ #vk.6
4: !KU( 'g'^~xx ) @ #vk.13

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 47 (precomputed):
    !KU( h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>)
    ) @ #vk.18
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( 'g'^(~xx*~yy) ) @ #vk.24
1: !KU( (      sign(<            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'                                   >,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)⊕      sign(<            <$V.1, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.2)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'                                   >,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V.1, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.2)>,                        $cAEAD0)           >,           ~ltk.2)     )) @ #vk.16
2: !KU( 'g'^~yy ) @ #vk.7
3: !KU( 'g'^~xx ) @ #vk.15

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 53 (precomputed): !KU( 'g'^(~xx*~yy) ) @ #vk.24
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.29
1: !KU( ~yy ) @ #vk.30
2: !KU( (      sign(<            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'                                   >,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)⊕      sign(<            <$V.1, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.2)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'                                   >,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V.1, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.2)>,                        $cAEAD0)           >,           ~ltk.2)     )) @ #vk.19
3: !KU( 'g'^~yy ) @ #vk.9
4: !KU( 'g'^~xx ) @ #vk.18

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 69 (precomputed): !KU( ~xx ) @ #vk.29
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.27
1: !KU( (      sign(<            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'                                   >,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)⊕      sign(<            <$V.1, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.2)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'                                   >,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V.1, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.2)>,                        $cAEAD0)           >,           ~ltk.2)     )) @ #vk.19
2: !KU( 'g'^~yy ) @ #vk.9
3: !KU( 'g'^~xx ) @ #vk.18

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 73 (precomputed): !KU( ~xx ) @ #vk.27
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~yy ) @ #vk.27
1: !KU( (      sign(<            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'                                   >,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)⊕      sign(<            <$V.1, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.2)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'                                   >,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V.1, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.2)>,                        $cAEAD0)           >,           ~ltk.2)     )) @ #vk.19
2: !KU( 'g'^~yy ) @ #vk.9
3: !KU( 'g'^~xx ) @ #vk.18

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 67 (precomputed): !KU( ~yy ) @ #vk.27
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.8, 0) ~~> (#vk.1, 0)
1: StI1_SIG_SIG( $U.1, ~ltk.2, $V.1, ~xx.1, m1, ~tid.2 ) ▶₀ #vr.7
2: !PK_SIG( $V.1, pk(x) ) ▶₁ #vr.7
3: !PK_SIG( $U.1, pkU ) ▶₂ #vr.7
4: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, gx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.11
5: splitEqs(0)
6: splitEqs(1)
7: splitEqs(6)
8: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.1>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', z.1))     )) @ #vk.15
9: !KU( (      hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.1>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', z.1))⊕      sign(<<$V.1, h(<$cHash0.2, m1, gy.1>), pk(x)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.1>), 'K_2m'>,                                   hkdfExtract('emptyStr', z.1)),                        <$V.1, h(<$cHash0.2, m1, gy.1>), pk(x)>, $cAEAD0.2)           >,           x)     )) @ #vk.16

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.9, 0) ~~> (#vk.1, 0)
1: StI1_SIG_SIG( $U.1, ~ltk.2, $V.1, ~xx.1, m1, ~tid.2 ) ▶₀ #vr.7
2: !PK_SIG( $V.1, pk(x) ) ▶₁ #vr.7
3: !PK_SIG( $U.1, pkU ) ▶₂ #vr.7
4: !KU( sign(<           <$U.1,             h(<$cHash0.2, h(<$cHash0.2, m1, gy.1>),                <                ($V.1⊕                 hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.1>), 'K_2e', '1'>,                            hkdfExtract('emptyStr', z.1))                ),                 (                 hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.1>), 'K_2e', '2'>,                            hkdfExtract('emptyStr', z.1))⊕                 sign(<<$V.1, h(<$cHash0.2, m1, gy.1>), pk(x)>,                        aeadEncrypt('emptyStr',                                   hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.1>), 'K_2m'>,                                              hkdfExtract('emptyStr', z.1)),                                   <$V.1, h(<$cHash0.2, m1, gy.1>), pk(x)>, $cAEAD0.2)                      >,                      x)                )               >,                'emptyStr'>),             pkU>,            aeadEncrypt('emptyStr',                       hkdfExpand(<$cAEAD0.2,                                    h(<$cHash0.2, h(<$cHash0.2, m1, gy.1>),                                       <                                       ($V.1⊕                                        hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.1>), 'K_2e', '1'                                                   >,                                                   hkdfExtract('emptyStr', z.1))                                       ),                                        (                                        hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.1>), 'K_2e', '2'                                                   >,                                                   hkdfExtract('emptyStr', z.1))⊕                                        sign(<<$V.1, h(<$cHash0.2, m1, gy.1>), pk(x)>,                                               aeadEncrypt('emptyStr',                                                          hkdfExpand(<$cAEAD0.2,                                                                       h(<$cHash0.2, m1, gy.1>),                                                                       'K_2m'>,                                                                     hkdfExtract('emptyStr', z.1)),                                                          <$V.1, h(<$cHash0.2, m1, gy.1>), pk(x)>,                                                          $cAEAD0.2)                                             >,                                             x)                                       )                                      >,                                       'emptyStr'>),                                    'K_3m'>,                                  hkdfExtract('emptyStr', z.1)),                       <$U.1,                         h(<$cHash0.2, h(<$cHash0.2, m1, gy.1>),                            <                            ($V.1⊕                             hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.1>), 'K_2e', '1'>,                                        hkdfExtract('emptyStr', z.1))                            ),                             (                             hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.1>), 'K_2e', '2'>,                                        hkdfExtract('emptyStr', z.1))⊕                             sign(<<$V.1, h(<$cHash0.2, m1, gy.1>), pk(x)>,                                    aeadEncrypt('emptyStr',                                               hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.1>),                                                            'K_2m'>,                                                          hkdfExtract('emptyStr', z.1)),                                               <$V.1, h(<$cHash0.2, m1, gy.1>), pk(x)>, $cAEAD0.2)                                  >,                                  x)                            )                           >,                            'emptyStr'>),                         pkU>,                       $cAEAD0.2)          >,          ~ltk.2)) @ #vk.20
5: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, gx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.11
6: splitEqs(0)
7: splitEqs(1)
8: splitEqs(6)
9: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.1>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', z.1))     )) @ #vk.15
10: !KU( (      hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.1>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', z.1))⊕      sign(<<$V.1, h(<$cHash0.2, m1, gy.1>), pk(x)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.1>), 'K_2m'>,                                   hkdfExtract('emptyStr', z.1)),                        <$V.1, h(<$cHash0.2, m1, gy.1>), pk(x)>, $cAEAD0.2)           >,           x)     )) @ #vk.16

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.9, 0) ~~> (#vk.1, 0)
1: StI1_SIG_SIG( $U.1, ~ltk.2, $V.1, ~xx.1, m1, ~tid.2 ) ▶₀ #vr.7
2: !PK_SIG( $V.1, pk(x) ) ▶₁ #vr.7
3: !PK_SIG( $U.1, pkU ) ▶₂ #vr.7
4: !KU( sign(<           <$U.1,             h(<$cHash0.2, h(<$cHash0.2, m1, gy.1>),                <                ($V.1⊕                 hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.1>), 'K_2e', '1'>,                            hkdfExtract('emptyStr', z.1))                ),                 (                 hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.1>), 'K_2e', '2'>,                            hkdfExtract('emptyStr', z.1))⊕                 sign(<<$V.1, h(<$cHash0.2, m1, gy.1>), pk(x)>,                        aeadEncrypt('emptyStr',                                   hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.1>), 'K_2m'>,                                              hkdfExtract('emptyStr', z.1)),                                   <$V.1, h(<$cHash0.2, m1, gy.1>), pk(x)>, $cAEAD0.2)                      >,                      x)                )               >,                'emptyStr'>),             pkU>,            aeadEncrypt('emptyStr',                       hkdfExpand(<$cAEAD0.2,                                    h(<$cHash0.2, h(<$cHash0.2, m1, gy.1>),                                       <                                       ($V.1⊕                                        hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.1>), 'K_2e', '1'                                                   >,                                                   hkdfExtract('emptyStr', z.1))                                       ),                                        (                                        hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.1>), 'K_2e', '2'                                                   >,                                                   hkdfExtract('emptyStr', z.1))⊕                                        sign(<<$V.1, h(<$cHash0.2, m1, gy.1>), pk(x)>,                                               aeadEncrypt('emptyStr',                                                          hkdfExpand(<$cAEAD0.2,                                                                       h(<$cHash0.2, m1, gy.1>),                                                                       'K_2m'>,                                                                     hkdfExtract('emptyStr', z.1)),                                                          <$V.1, h(<$cHash0.2, m1, gy.1>), pk(x)>,                                                          $cAEAD0.2)                                             >,                                             x)                                       )                                      >,                                       'emptyStr'>),                                    'K_3m'>,                                  hkdfExtract('emptyStr', z.1)),                       <$U.1,                         h(<$cHash0.2, h(<$cHash0.2, m1, gy.1>),                            <                            ($V.1⊕                             hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.1>), 'K_2e', '1'>,                                        hkdfExtract('emptyStr', z.1))                            ),                             (                             hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.1>), 'K_2e', '2'>,                                        hkdfExtract('emptyStr', z.1))⊕                             sign(<<$V.1, h(<$cHash0.2, m1, gy.1>), pk(x)>,                                    aeadEncrypt('emptyStr',                                               hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.1>),                                                            'K_2m'>,                                                          hkdfExtract('emptyStr', z.1)),                                               <$V.1, h(<$cHash0.2, m1, gy.1>), pk(x)>, $cAEAD0.2)                                  >,                                  x)                            )                           >,                            'emptyStr'>),                         pkU>,                       $cAEAD0.2)          >,          ~ltk.2)) @ #vk.21
5: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, gx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.11
6: splitEqs(0)
7: splitEqs(1)
8: splitEqs(6)
9: !KU( h(<$cHash0.2, h(<$cHash0.2, m1, gy.1>),         <         ($V.1⊕          hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.1>), 'K_2e', '1'>,                     hkdfExtract('emptyStr', z.1))         ),          (          hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.1>), 'K_2e', '2'>,                     hkdfExtract('emptyStr', z.1))⊕          sign(<<$V.1, h(<$cHash0.2, m1, gy.1>), pk(x)>,                 aeadEncrypt('emptyStr',                            hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.1>), 'K_2m'>,                                       hkdfExtract('emptyStr', z.1)),                            <$V.1, h(<$cHash0.2, m1, gy.1>), pk(x)>, $cAEAD0.2)               >,               x)         )        >,         'emptyStr'>)) @ #vk.18
10: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.1>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', z.1))     )) @ #vk.15
11: !KU( (      hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.1>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', z.1))⊕      sign(<<$V.1, h(<$cHash0.2, m1, gy.1>), pk(x)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.1>), 'K_2m'>,                                   hkdfExtract('emptyStr', z.1)),                        <$V.1, h(<$cHash0.2, m1, gy.1>), pk(x)>, $cAEAD0.2)           >,           x)     )) @ #vk.16

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.8, 0) ~~> (#vk.1, 0)
1: !LTK_SIG( $V.1, ~ltk.2 ) ▶₀ #vr.7
2: !PK_SIG( $V.1, pkV ) ▶₁ #vr.7
3: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, gx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.13
4: splitEqs(0)
5: splitEqs(1)
6: splitEqs(6)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.9, 0) ~~> (#vk.1, 0)
1: !LTK_SIG( $V.1, ~ltk.2 ) ▶₀ #vr.7
2: !PK_SIG( $V.1, pkV ) ▶₁ #vr.7
3: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, gx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.13
4: splitEqs(0)
5: splitEqs(1)
6: splitEqs(6)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.9, 0) ~~> (#vk.1, 0)
1: !LTK_SIG( $V.1, ~ltk.2 ) ▶₀ #vr.7
2: !PK_SIG( $V.1, pkV ) ▶₁ #vr.7
3: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, gx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.13
4: splitEqs(0)
5: splitEqs(1)
6: splitEqs(6)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  simplified formula:
      "((#vr.7 = #i) ∨ (#i < #vr.7))"
    to
      "⊥"
  solved goal nr. 57 (simplified): (#vr.7 = #i)  ∥ (#i < #vr.7)
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.10, 0) ~~> (#vk.1, 0)
1: !LTK_SIG( $V.1, ~ltk.2 ) ▶₀ #vr.7
2: !PK_SIG( $V.1, pkV ) ▶₁ #vr.7
3: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, gx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.13
4: !KU( (z.2⊕      hkdfExpand(<$cAEAD0.2,                   h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.2, gx.1>, 'g'^~yy.1>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', z.1))     )) @ #vk.17
5: splitEqs(0)
6: splitEqs(1)
7: splitEqs(6)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.10, 0) ~~> (#vk.1, 0)
1: !LTK_SIG( $V.1, ~ltk.2 ) ▶₀ #vr.7
2: !PK_SIG( $V.1, pkV ) ▶₁ #vr.7
3: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, gx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.13
4: splitEqs(0)
5: splitEqs(1)
6: splitEqs(6)
7: !KU( ($V.1⊕z.2) ) @ #vk.17

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.10, 0) ~~> (#vk.1, 0)
1: !LTK_SIG( $V.1, ~ltk.2 ) ▶₀ #vr.7
2: !PK_SIG( $V.1, pkV ) ▶₁ #vr.7
3: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, gx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.13
4: splitEqs(0)
5: splitEqs(1)
6: splitEqs(6)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.10, 0) ~~> (#vk.1, 0)
1: !LTK_SIG( $V.1, ~ltk.2 ) ▶₀ #vr.7
2: !PK_SIG( $V.1, pkV ) ▶₁ #vr.7
3: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, gx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.13
4: !KU( (z.2⊕      sign(<            <$V.1,              h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.2, gx.1>, 'g'^~yy.1>), pkV>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.2,                                     h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.2, gx.1>, 'g'^~yy.1>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', z.1)),                        <$V.1,                          h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.2, gx.1>, 'g'^~yy.1>), pkV>,                        $cAEAD0.2)           >,           ~ltk.2)     )) @ #vk.17
5: splitEqs(0)
6: splitEqs(1)
7: splitEqs(6)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.10, 0) ~~> (#vk.1, 0)
1: !LTK_SIG( $V.1, ~ltk.2 ) ▶₀ #vr.7
2: !PK_SIG( $V.1, pkV ) ▶₁ #vr.7
3: !KU( sign(<           <$V.1,             h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.2, gx.1>, 'g'^~yy.1>), pkV>,            aeadEncrypt('emptyStr',                       hkdfExpand(<$cAEAD0.2,                                    h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.2, gx.1>, 'g'^~yy.1>),                                    'K_2m'>,                                  hkdfExtract('emptyStr', z.1)),                       <$V.1,                         h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.2, gx.1>, 'g'^~yy.1>), pkV>,                       $cAEAD0.2)          >,          ~ltk.2)) @ #vk.17
4: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, gx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.13
5: splitEqs(0)
6: splitEqs(1)
7: splitEqs(6)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.10, 0) ~~> (#vk.1, 0)
1: !LTK_SIG( $V.1, ~ltk.2 ) ▶₀ #vr.7
2: !PK_SIG( $V.1, pkV ) ▶₁ #vr.7
3: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, gx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.13
4: !KU( (z.2⊕      hkdfExpand(<$cAEAD0.2,                   h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.2, gx.1>, 'g'^~yy.1>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', z.1))     )) @ #vk.17
5: splitEqs(0)
6: splitEqs(1)
7: splitEqs(6)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.10, 0) ~~> (#vk.1, 0)
1: !LTK_SIG( $V.1, ~ltk.2 ) ▶₀ #vr.7
2: !PK_SIG( $V.1, pkV ) ▶₁ #vr.7
3: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, gx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.13
4: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.2, gx.1>, 'g'^~yy.1>),                  'K_2e', '2'>,                hkdfExtract('emptyStr', z.1))) @ #vk.17
5: splitEqs(0)
6: splitEqs(1)
7: splitEqs(6)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !LTK_SIG( $V.1, ~ltk.2 ) ▶₀ #vr.7
1: !PK_SIG( $V.1, pkV ) ▶₁ #vr.7
2: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, gx>, 'g'^~yy.1>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.13
3: !KU( (      sign(<            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'                                   >,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)⊕      sign(<            <$V.1, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pkV>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'                                   >,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V.1, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pkV>,                        $cAEAD0)           >,           ~ltk.2)     )) @ #vk.17
4: splitEqs(1)
5: !KU( 'g'^~yy ) @ #vk.4
6: !KU( 'g'^~xx ) @ #vk.16

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 42 (precomputed): !LTK_SIG( $V.1, ~ltk.2 ) ▶₀ #vr.7
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !PK_SIG( $V.1, pkV ) ▶₁ #vr.7
1: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, gx>, 'g'^~yy.1>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.13
2: !KU( (      sign(<            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'                                   >,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)⊕      sign(<            <$V.1, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pkV>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'                                   >,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V.1, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pkV>,                        $cAEAD0)           >,           ~ltk.2)     )) @ #vk.17
3: splitEqs(1)
4: !KU( 'g'^~yy ) @ #vk.4
5: !KU( 'g'^~xx ) @ #vk.16

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 43 (precomputed): !PK_SIG( $V.1, pkV ) ▶₁ #vr.7
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, gx>, 'g'^~yy.1>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.13
1: !KU( (      sign(<            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'                                   >,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)⊕      sign(<            <$V.1, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.2)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'                                   >,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V.1, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.2)>,                        $cAEAD0)           >,           ~ltk.2)     )) @ #vk.17
2: splitEqs(1)
3: !KU( 'g'^~yy ) @ #vk.4
4: !KU( 'g'^~xx ) @ #vk.16

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 33 (directly):
    !KU( (
          hkdfExpand(<$cAEAD0, 
                      h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e', 
                      '1'>,
                     hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕
          hkdfExpand(<$cAEAD0.1, 
                      h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, gx>, 'g'^~yy.1>), 'K_2e', 
                      '1'>,
                     hkdfExtract('emptyStr', z))
         )
    ) @ #vk.13
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( (      sign(<            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'                                   >,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)⊕      sign(<            <$V.1, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.2)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'                                   >,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V.1, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.2)>,                        $cAEAD0)           >,           ~ltk.2)     )) @ #vk.17
1: !KU( hkdfExpand(<$cAEAD0.1,                  h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, gx>, 'g'^~yy.1>), 'K_2e',                  '1'>,                hkdfExtract('emptyStr', z))) @ #vk.18
2: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                  '1'>,                hkdfExtract('emptyStr', 'g'^(~xx*~yy)))) @ #vk.19
3: splitEqs(1)
4: !KU( 'g'^~yy ) @ #vk.5
5: !KU( 'g'^~xx ) @ #vk.16

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KD( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, gx>, 'g'^~yy.1>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z))     )) ▶₀ #vk.2
1: !KU( (      sign(<            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'                                   >,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)⊕      sign(<            <$V.1, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.2)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'                                   >,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V.1, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.2)>,                        $cAEAD0)           >,           ~ltk.2)     )) @ #vk.17
2: splitEqs(1)
3: !KU( 'g'^~yy ) @ #vk.5
4: !KU( 'g'^~xx ) @ #vk.16

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 56 (directly):
    !KU( (
          sign(<
                <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 
                 pk(~ltk.1)>, 
                aeadEncrypt('emptyStr',
                            hkdfExpand(<$cAEAD0, 
                                        h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 
                                        'K_2m'>,
                                       hkdfExtract('emptyStr', 'g'^(~xx*~yy))),
                            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 
                             pk(~ltk.1)>,
                            $cAEAD0)
               >,
               ~ltk.1)⊕
          sign(<
                <$V.1, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 
                 pk(~ltk.2)>, 
                aeadEncrypt('emptyStr',
                            hkdfExpand(<$cAEAD0, 
                                        h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 
                                        'K_2m'>,
                                       hkdfExtract('emptyStr', 'g'^(~xx*~yy))),
                            <$V.1, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 
                             pk(~ltk.2)>,
                            $cAEAD0)
               >,
               ~ltk.2)
         )
    ) @ #vk.17
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KD( (      sign(<            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'                                   >,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)⊕      sign(<            <$V.1, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.2)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'                                   >,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V.1, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.2)>,                        $cAEAD0)           >,           ~ltk.2)     )) ▶₀ #vk.3
1: !KU( hkdfExpand(<$cAEAD0.1,                  h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, gx>, 'g'^~yy.1>), 'K_2e',                  '1'>,                hkdfExtract('emptyStr', z))) @ #vk.18
2: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                  '1'>,                hkdfExtract('emptyStr', 'g'^(~xx*~yy)))) @ #vk.19
3: splitEqs(1)
4: !KU( 'g'^~yy ) @ #vk.6
5: !KU( 'g'^~xx ) @ #vk.17

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( sign(<           <$V.1, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),             pk(~ltk.2)>,            aeadEncrypt('emptyStr',                       hkdfExpand(<$cAEAD0,                                    h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'                                  >,                                  hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                       <$V.1, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                         pk(~ltk.2)>,                       $cAEAD0)          >,          ~ltk.2)) @ #vk.20
1: !KU( sign(<           <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),             pk(~ltk.1)>,            aeadEncrypt('emptyStr',                       hkdfExpand(<$cAEAD0,                                    h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'                                  >,                                  hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                       <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                         pk(~ltk.1)>,                       $cAEAD0)          >,          ~ltk.1)) @ #vk.21
2: !KU( hkdfExpand(<$cAEAD0.1,                  h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, gx>, 'g'^~yy.1>), 'K_2e',                  '1'>,                hkdfExtract('emptyStr', z))) @ #vk.18
3: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                  '1'>,                hkdfExtract('emptyStr', 'g'^(~xx*~yy)))) @ #vk.19
4: splitEqs(1)
5: !KU( 'g'^~yy ) @ #vk.6
6: !KU( 'g'^~xx ) @ #vk.17

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 65 (precomputed):
    !KU( sign(<
               <$V.1, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 
                pk(~ltk.2)>, 
               aeadEncrypt('emptyStr',
                           hkdfExpand(<$cAEAD0, 
                                       h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 
                                       'K_2m'>,
                                      hkdfExtract('emptyStr', 'g'^(~xx*~yy))),
                           <$V.1, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 
                            pk(~ltk.2)>,
                           $cAEAD0)
              >,
              ~ltk.2)
    ) @ #vk.20
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~ltk.2 ) @ #vk.23
1: !KU( h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>)) @ #vk.27
2: !KU( sign(<           <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),             pk(~ltk.1)>,            aeadEncrypt('emptyStr',                       hkdfExpand(<$cAEAD0,                                    h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'                                  >,                                  hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                       <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                         pk(~ltk.1)>,                       $cAEAD0)          >,          ~ltk.1)) @ #vk.21
3: !KU( hkdfExpand(<$cAEAD0.1,                  h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, gx>, 'g'^~yy.1>), 'K_2e',                  '1'>,                hkdfExtract('emptyStr', z))) @ #vk.19
4: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                  '1'>,                hkdfExtract('emptyStr', 'g'^(~xx*~yy)))) @ #vk.20
5: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0,                              h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'>,                            hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                 <$V.1, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                   pk(~ltk.2)>,                 $cAEAD0)) @ #vk.29
6: splitEqs(1)
7: !KU( 'g'^~yy ) @ #vk.7
8: !KU( 'g'^~xx ) @ #vk.18
9: !KU( pk(~ltk.2) ) @ #vk.28

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 69 (precomputed): !KU( ~ltk.2 ) @ #vk.23
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( sign(<           <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),             pk(~ltk.1)>,            aeadEncrypt('emptyStr',                       hkdfExpand(<$cAEAD0,                                    h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'                                  >,                                  hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                       <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                         pk(~ltk.1)>,                       $cAEAD0)          >,          ~ltk.1)) @ #vk.21
1: !KU( hkdfExpand(<$cAEAD0.1,                  h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, gx>, 'g'^~yy.1>), 'K_2e',                  '1'>,                hkdfExtract('emptyStr', z))) @ #vk.19
2: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                  '1'>,                hkdfExtract('emptyStr', 'g'^(~xx*~yy)))) @ #vk.20
3: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                  '2'>,                hkdfExtract('emptyStr', 'g'^(~xx*~yy)))) @ #vk.22
4: splitEqs(1)
5: !KU( 'g'^~yy ) @ #vk.7
6: !KU( 'g'^~xx ) @ #vk.18

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 66 (precomputed):
    !KU( sign(<
               <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 
                pk(~ltk.1)>, 
               aeadEncrypt('emptyStr',
                           hkdfExpand(<$cAEAD0, 
                                       h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 
                                       'K_2m'>,
                                      hkdfExtract('emptyStr', 'g'^(~xx*~yy))),
                           <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 
                            pk(~ltk.1)>,
                           $cAEAD0)
              >,
              ~ltk.1)
    ) @ #vk.21
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~ltk.1 ) @ #vk.24
1: !KU( h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>)) @ #vk.28
2: !KU( hkdfExpand(<$cAEAD0.1,                  h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, gx>, 'g'^~yy.1>), 'K_2e',                  '1'>,                hkdfExtract('emptyStr', z))) @ #vk.20
3: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                  '1'>,                hkdfExtract('emptyStr', 'g'^(~xx*~yy)))) @ #vk.21
4: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                  '2'>,                hkdfExtract('emptyStr', 'g'^(~xx*~yy)))) @ #vk.22
5: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0,                              h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'>,                            hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                 <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                   pk(~ltk.1)>,                 $cAEAD0)) @ #vk.30
6: splitEqs(1)
7: !KU( 'g'^~yy ) @ #vk.8
8: !KU( 'g'^~xx ) @ #vk.19
9: !KU( pk(~ltk.1) ) @ #vk.29

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 79 (precomputed): !KU( ~ltk.1 ) @ #vk.24
  simplified formula:
      "((#vr.32 = #i) ∨ (#i < #vr.32))"
    to
      "⊥"
  solved goal nr. 88 (simplified): (#vr.32 = #i)  ∥ (#i < #vr.32)
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>)) @ #vk.27
1: !KU( sign(<           <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),             pk(~ltk.1)>,            aeadEncrypt('emptyStr',                       hkdfExpand(<$cAEAD0,                                    h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'                                  >,                                  hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                       <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                         pk(~ltk.1)>,                       $cAEAD0)          >,          ~ltk.1)) @ #vk.22
2: !KU( hkdfExpand(<$cAEAD0.1,                  h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, gx>, 'g'^~yy.1>), 'K_2e',                  '1'>,                hkdfExtract('emptyStr', z))) @ #vk.20
3: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                  '1'>,                hkdfExtract('emptyStr', 'g'^(~xx*~yy)))) @ #vk.21
4: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0,                              h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'>,                            hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                 <$V.1, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                   pk(~ltk.2)>,                 $cAEAD0)) @ #vk.29
5: splitEqs(1)
6: !KU( 'g'^~yy ) @ #vk.8
7: !KU( 'g'^~xx ) @ #vk.19
8: !KU( pk(~ltk.2) ) @ #vk.28

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 73 (precomputed):
    !KU( h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>)
    ) @ #vk.27
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( sign(<           <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),             pk(~ltk.1)>,            aeadEncrypt('emptyStr',                       hkdfExpand(<$cAEAD0,                                    h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'                                  >,                                  hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                       <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                         pk(~ltk.1)>,                       $cAEAD0)          >,          ~ltk.1)) @ #vk.24
1: !KU( hkdfExpand(<$cAEAD0.1,                  h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, gx>, 'g'^~yy.1>), 'K_2e',                  '1'>,                hkdfExtract('emptyStr', z))) @ #vk.22
2: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                  '1'>,                hkdfExtract('emptyStr', 'g'^(~xx*~yy)))) @ #vk.23
3: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0,                              h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'>,                            hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                 <$V.1, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                   pk(~ltk.2)>,                 $cAEAD0)) @ #vk.30
4: splitEqs(1)
5: !KU( 'g'^~yy ) @ #vk.9
6: !KU( 'g'^~xx ) @ #vk.21
7: !KU( pk(~ltk.2) ) @ #vk.29

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 66 (precomputed):
    !KU( sign(<
               <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 
                pk(~ltk.1)>, 
               aeadEncrypt('emptyStr',
                           hkdfExpand(<$cAEAD0, 
                                       h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 
                                       'K_2m'>,
                                      hkdfExtract('emptyStr', 'g'^(~xx*~yy))),
                           <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 
                            pk(~ltk.1)>,
                           $cAEAD0)
              >,
              ~ltk.1)
    ) @ #vk.24
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~ltk.1 ) @ #vk.35
1: !KU( hkdfExpand(<$cAEAD0.1,                  h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, gx>, 'g'^~yy.1>), 'K_2e',                  '1'>,                hkdfExtract('emptyStr', z))) @ #vk.26
2: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                  '1'>,                hkdfExtract('emptyStr', 'g'^(~xx*~yy)))) @ #vk.27
3: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0,                              h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'>,                            hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                 <$V.1, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                   pk(~ltk.2)>,                 $cAEAD0)) @ #vk.32
4: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0,                              h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'>,                            hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                 <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                   pk(~ltk.1)>,                 $cAEAD0)) @ #vk.39
5: splitEqs(1)
6: !KU( 'g'^~yy ) @ #vk.12
7: !KU( 'g'^~xx ) @ #vk.25
8: !KU( pk(~ltk.2) ) @ #vk.31
9: !KU( pk(~ltk.1) ) @ #vk.38

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 92 (precomputed): !KU( ~ltk.1 ) @ #vk.35
  simplified formula:
      "((#vr.41 = #i) ∨ (#i < #vr.41))"
    to
      "⊥"
  solved goal nr. 101 (simplified): (#vr.41 = #i)  ∥ (#i < #vr.41)
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vl.2, 0) ~~> (#vk.3, 0)
1: !LTK_SIG( $V.2, ~ltk.3 ) ▶₀ #vr.12
2: !PK_SIG( $V.2, pkV ) ▶₁ #vr.12
3: !KU( hkdfExpand(<$cAEAD0.1,                  h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, gx>, 'g'^~yy.1>), 'K_2e',                  '1'>,                hkdfExtract('emptyStr', z))) @ #vk.20
4: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                  '1'>,                hkdfExtract('emptyStr', 'g'^(~xx*~yy)))) @ #vk.21
5: splitEqs(1)
6: splitEqs(11)
7: !KU( 'g'^~yy ) @ #vk.6
8: !KU( 'g'^~xx ) @ #vk.19

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vl.2, 0) ~~> (#vk.3, 0)
1: StI1_SIG_SIG( $U.1, ~ltk.3, $V.2, ~xx.1, m1, ~tid.3 ) ▶₀ #vr.12
2: !PK_SIG( $V.2, pk(x) ) ▶₁ #vr.12
3: !PK_SIG( $U.1, pkU ) ▶₂ #vr.12
4: !KU( hkdfExpand(<$cAEAD0.1,                  h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, gx>, 'g'^~yy.1>), 'K_2e',                  '1'>,                hkdfExtract('emptyStr', z))) @ #vk.18
5: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                  '1'>,                hkdfExtract('emptyStr', 'g'^(~xx*~yy)))) @ #vk.19
6: splitEqs(1)
7: splitEqs(11)
8: !KU( ($V.2⊕      hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', z.1))     )) @ #vk.23
9: !KU( (      hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', z.1))⊕      sign(<<$V.2, h(<$cHash0.2, m1, gy>), pk(x)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy>), 'K_2m'>,                                   hkdfExtract('emptyStr', z.1)),                        <$V.2, h(<$cHash0.2, m1, gy>), pk(x)>, $cAEAD0.2)           >,           x)     )) @ #vk.24
10: !KU( 'g'^~yy ) @ #vk.6
11: !KU( 'g'^~xx ) @ #vk.17

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: CommitI( tid.3, u, v, t ) ▶₀ #vr.12
1: !KU( hkdfExpand(<$cAEAD0.1,                  h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, gx>, 'g'^~yy.1>), 'K_2e',                  '1'>,                hkdfExtract('emptyStr', z))) @ #vk.18
2: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                  '1'>,                hkdfExtract('emptyStr', 'g'^(~xx*~yy)))) @ #vk.19
3: splitEqs(1)
4: !KU( 'g'^~yy ) @ #vk.6
5: !KU( 'g'^~xx ) @ #vk.17

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 68 (precomputed):
    CommitI( tid.3, u, v, t ) ▶₀ #vr.12
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: CommitR( tid.3, u, v, t ) ▶₀ #vr.12
1: !KU( hkdfExpand(<$cAEAD0.1,                  h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, gx>, 'g'^~yy.1>), 'K_2e',                  '1'>,                hkdfExtract('emptyStr', z))) @ #vk.18
2: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                  '1'>,                hkdfExtract('emptyStr', 'g'^(~xx*~yy)))) @ #vk.19
3: splitEqs(1)
4: !KU( 'g'^~yy ) @ #vk.6
5: !KU( 'g'^~xx ) @ #vk.17

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 68 (precomputed):
    CommitR( tid.3, u, v, t ) ▶₀ #vr.12
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.13, 0) ~~> (#vk.3, 0)
1: StI1_SIG_SIG( $U.1, ~ltk.3, $V.2, ~xx.1, m1, ~tid.3 ) ▶₀ #vr.12
2: !PK_SIG( $V.2, pk(x) ) ▶₁ #vr.12
3: !PK_SIG( $U.1, pkU ) ▶₂ #vr.12
4: !KU( hkdfExpand(<$cAEAD0.1,                  h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, gx>, 'g'^~yy.1>), 'K_2e',                  '1'>,                hkdfExtract('emptyStr', z))) @ #vk.18
5: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                  '1'>,                hkdfExtract('emptyStr', 'g'^(~xx*~yy)))) @ #vk.19
6: splitEqs(1)
7: splitEqs(11)
8: !KU( ($V.2⊕      hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', z.1))     )) @ #vk.23
9: !KU( (      hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', z.1))⊕      sign(<<$V.2, h(<$cHash0.2, m1, gy>), pk(x)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy>), 'K_2m'>,                                   hkdfExtract('emptyStr', z.1)),                        <$V.2, h(<$cHash0.2, m1, gy>), pk(x)>, $cAEAD0.2)           >,           x)     )) @ #vk.24
10: !KU( 'g'^~yy ) @ #vk.6
11: !KU( 'g'^~xx ) @ #vk.17

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.14, 0) ~~> (#vk.3, 0)
1: StI1_SIG_SIG( $U.1, ~ltk.3, $V.2, ~xx.1, m1, ~tid.3 ) ▶₀ #vr.12
2: !PK_SIG( $V.2, pk(x) ) ▶₁ #vr.12
3: !PK_SIG( $U.1, pkU ) ▶₂ #vr.12
4: !KU( sign(<           <$U.1,             h(<$cHash0.2, h(<$cHash0.2, m1, gy>),                <                ($V.2⊕                 hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy>), 'K_2e', '1'>,                            hkdfExtract('emptyStr', z.1))                ),                 (                 hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy>), 'K_2e', '2'>,                            hkdfExtract('emptyStr', z.1))⊕                 sign(<<$V.2, h(<$cHash0.2, m1, gy>), pk(x)>,                        aeadEncrypt('emptyStr',                                   hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy>), 'K_2m'>,                                              hkdfExtract('emptyStr', z.1)),                                   <$V.2, h(<$cHash0.2, m1, gy>), pk(x)>, $cAEAD0.2)                      >,                      x)                )               >,                'emptyStr'>),             pkU>,            aeadEncrypt('emptyStr',                       hkdfExpand(<$cAEAD0.2,                                    h(<$cHash0.2, h(<$cHash0.2, m1, gy>),                                       <                                       ($V.2⊕                                        hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy>), 'K_2e', '1'>,                                                   hkdfExtract('emptyStr', z.1))                                       ),                                        (                                        hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy>), 'K_2e', '2'>,                                                   hkdfExtract('emptyStr', z.1))⊕                                        sign(<<$V.2, h(<$cHash0.2, m1, gy>), pk(x)>,                                               aeadEncrypt('emptyStr',                                                          hkdfExpand(<$cAEAD0.2,                                                                       h(<$cHash0.2, m1, gy>), 'K_2m'                                                                     >,                                                                     hkdfExtract('emptyStr', z.1)),                                                          <$V.2, h(<$cHash0.2, m1, gy>), pk(x)>,                                                          $cAEAD0.2)                                             >,                                             x)                                       )                                      >,                                       'emptyStr'>),                                    'K_3m'>,                                  hkdfExtract('emptyStr', z.1)),                       <$U.1,                         h(<$cHash0.2, h(<$cHash0.2, m1, gy>),                            <                            ($V.2⊕                             hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy>), 'K_2e', '1'>,                                        hkdfExtract('emptyStr', z.1))                            ),                             (                             hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy>), 'K_2e', '2'>,                                        hkdfExtract('emptyStr', z.1))⊕                             sign(<<$V.2, h(<$cHash0.2, m1, gy>), pk(x)>,                                    aeadEncrypt('emptyStr',                                               hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy>), 'K_2m'                                                          >,                                                          hkdfExtract('emptyStr', z.1)),                                               <$V.2, h(<$cHash0.2, m1, gy>), pk(x)>, $cAEAD0.2)                                  >,                                  x)                            )                           >,                            'emptyStr'>),                         pkU>,                       $cAEAD0.2)          >,          ~ltk.3)) @ #vk.28
5: !KU( hkdfExpand(<$cAEAD0.1,                  h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, gx>, 'g'^~yy.1>), 'K_2e',                  '1'>,                hkdfExtract('emptyStr', z))) @ #vk.18
6: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                  '1'>,                hkdfExtract('emptyStr', 'g'^(~xx*~yy)))) @ #vk.19
7: splitEqs(1)
8: splitEqs(11)
9: !KU( ($V.2⊕      hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', z.1))     )) @ #vk.23
10: !KU( (      hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', z.1))⊕      sign(<<$V.2, h(<$cHash0.2, m1, gy>), pk(x)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy>), 'K_2m'>,                                   hkdfExtract('emptyStr', z.1)),                        <$V.2, h(<$cHash0.2, m1, gy>), pk(x)>, $cAEAD0.2)           >,           x)     )) @ #vk.24
11: !KU( 'g'^~yy ) @ #vk.6
12: !KU( 'g'^~xx ) @ #vk.17

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.14, 0) ~~> (#vk.3, 0)
1: StI1_SIG_SIG( $U.1, ~ltk.3, $V.2, ~xx.1, m1, ~tid.3 ) ▶₀ #vr.12
2: !PK_SIG( $V.2, pk(x) ) ▶₁ #vr.12
3: !PK_SIG( $U.1, pkU ) ▶₂ #vr.12
4: !KU( sign(<           <$U.1,             h(<$cHash0.2, h(<$cHash0.2, m1, gy>),                <                ($V.2⊕                 hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy>), 'K_2e', '1'>,                            hkdfExtract('emptyStr', z.1))                ),                 (                 hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy>), 'K_2e', '2'>,                            hkdfExtract('emptyStr', z.1))⊕                 sign(<<$V.2, h(<$cHash0.2, m1, gy>), pk(x)>,                        aeadEncrypt('emptyStr',                                   hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy>), 'K_2m'>,                                              hkdfExtract('emptyStr', z.1)),                                   <$V.2, h(<$cHash0.2, m1, gy>), pk(x)>, $cAEAD0.2)                      >,                      x)                )               >,                'emptyStr'>),             pkU>,            aeadEncrypt('emptyStr',                       hkdfExpand(<$cAEAD0.2,                                    h(<$cHash0.2, h(<$cHash0.2, m1, gy>),                                       <                                       ($V.2⊕                                        hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy>), 'K_2e', '1'>,                                                   hkdfExtract('emptyStr', z.1))                                       ),                                        (                                        hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy>), 'K_2e', '2'>,                                                   hkdfExtract('emptyStr', z.1))⊕                                        sign(<<$V.2, h(<$cHash0.2, m1, gy>), pk(x)>,                                               aeadEncrypt('emptyStr',                                                          hkdfExpand(<$cAEAD0.2,                                                                       h(<$cHash0.2, m1, gy>), 'K_2m'                                                                     >,                                                                     hkdfExtract('emptyStr', z.1)),                                                          <$V.2, h(<$cHash0.2, m1, gy>), pk(x)>,                                                          $cAEAD0.2)                                             >,                                             x)                                       )                                      >,                                       'emptyStr'>),                                    'K_3m'>,                                  hkdfExtract('emptyStr', z.1)),                       <$U.1,                         h(<$cHash0.2, h(<$cHash0.2, m1, gy>),                            <                            ($V.2⊕                             hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy>), 'K_2e', '1'>,                                        hkdfExtract('emptyStr', z.1))                            ),                             (                             hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy>), 'K_2e', '2'>,                                        hkdfExtract('emptyStr', z.1))⊕                             sign(<<$V.2, h(<$cHash0.2, m1, gy>), pk(x)>,                                    aeadEncrypt('emptyStr',                                               hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy>), 'K_2m'                                                          >,                                                          hkdfExtract('emptyStr', z.1)),                                               <$V.2, h(<$cHash0.2, m1, gy>), pk(x)>, $cAEAD0.2)                                  >,                                  x)                            )                           >,                            'emptyStr'>),                         pkU>,                       $cAEAD0.2)          >,          ~ltk.3)) @ #vk.29
5: !KU( hkdfExpand(<$cAEAD0.1,                  h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, gx>, 'g'^~yy.1>), 'K_2e',                  '1'>,                hkdfExtract('emptyStr', z))) @ #vk.18
6: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                  '1'>,                hkdfExtract('emptyStr', 'g'^(~xx*~yy)))) @ #vk.19
7: splitEqs(1)
8: splitEqs(11)
9: !KU( h(<$cHash0.2, h(<$cHash0.2, m1, gy>),         <         ($V.2⊕          hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy>), 'K_2e', '1'>,                     hkdfExtract('emptyStr', z.1))         ),          (          hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy>), 'K_2e', '2'>,                     hkdfExtract('emptyStr', z.1))⊕          sign(<<$V.2, h(<$cHash0.2, m1, gy>), pk(x)>,                 aeadEncrypt('emptyStr',                            hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy>), 'K_2m'>,                                       hkdfExtract('emptyStr', z.1)),                            <$V.2, h(<$cHash0.2, m1, gy>), pk(x)>, $cAEAD0.2)               >,               x)         )        >,         'emptyStr'>)) @ #vk.26
10: !KU( ($V.2⊕      hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', z.1))     )) @ #vk.23
11: !KU( (      hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', z.1))⊕      sign(<<$V.2, h(<$cHash0.2, m1, gy>), pk(x)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy>), 'K_2m'>,                                   hkdfExtract('emptyStr', z.1)),                        <$V.2, h(<$cHash0.2, m1, gy>), pk(x)>, $cAEAD0.2)           >,           x)     )) @ #vk.24
12: !KU( 'g'^~yy ) @ #vk.6
13: !KU( 'g'^~xx ) @ #vk.17

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.13, 0) ~~> (#vk.3, 0)
1: !LTK_SIG( $V.2, ~ltk.3 ) ▶₀ #vr.12
2: !PK_SIG( $V.2, pkV ) ▶₁ #vr.12
3: !KU( hkdfExpand(<$cAEAD0.1,                  h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, gx>, 'g'^~yy.1>), 'K_2e',                  '1'>,                hkdfExtract('emptyStr', z))) @ #vk.20
4: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                  '1'>,                hkdfExtract('emptyStr', 'g'^(~xx*~yy)))) @ #vk.21
5: splitEqs(1)
6: splitEqs(11)
7: !KU( 'g'^~yy ) @ #vk.6
8: !KU( 'g'^~xx ) @ #vk.19

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.14, 0) ~~> (#vk.3, 0)
1: !LTK_SIG( $V.2, ~ltk.3 ) ▶₀ #vr.12
2: !PK_SIG( $V.2, pkV ) ▶₁ #vr.12
3: !KU( hkdfExpand(<$cAEAD0.1,                  h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, gx>, 'g'^~yy.1>), 'K_2e',                  '1'>,                hkdfExtract('emptyStr', z))) @ #vk.20
4: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                  '1'>,                hkdfExtract('emptyStr', 'g'^(~xx*~yy)))) @ #vk.21
5: splitEqs(1)
6: splitEqs(11)
7: !KU( 'g'^~yy ) @ #vk.6
8: !KU( 'g'^~xx ) @ #vk.19

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.14, 0) ~~> (#vk.3, 0)
1: !LTK_SIG( $V.2, ~ltk.3 ) ▶₀ #vr.12
2: !PK_SIG( $V.2, pkV ) ▶₁ #vr.12
3: !KU( hkdfExpand(<$cAEAD0.1,                  h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, gx>, 'g'^~yy.1>), 'K_2e',                  '1'>,                hkdfExtract('emptyStr', z))) @ #vk.20
4: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                  '1'>,                hkdfExtract('emptyStr', 'g'^(~xx*~yy)))) @ #vk.21
5: splitEqs(1)
6: splitEqs(11)
7: !KU( 'g'^~yy ) @ #vk.6
8: !KU( 'g'^~xx ) @ #vk.19

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.15, 0) ~~> (#vk.3, 0)
1: !LTK_SIG( $V.2, ~ltk.3 ) ▶₀ #vr.12
2: !PK_SIG( $V.2, pkV ) ▶₁ #vr.12
3: !KU( hkdfExpand(<$cAEAD0.1,                  h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, gx>, 'g'^~yy.1>), 'K_2e',                  '1'>,                hkdfExtract('emptyStr', z))) @ #vk.20
4: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                  '1'>,                hkdfExtract('emptyStr', 'g'^(~xx*~yy)))) @ #vk.21
5: splitEqs(1)
6: splitEqs(11)
7: !KU( ($V.2⊕z.2) ) @ #vk.25
8: !KU( 'g'^~yy ) @ #vk.6
9: !KU( 'g'^~xx ) @ #vk.19

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.15, 0) ~~> (#vk.3, 0)
1: !LTK_SIG( $V.2, ~ltk.3 ) ▶₀ #vr.12
2: !PK_SIG( $V.2, pkV ) ▶₁ #vr.12
3: !KU( hkdfExpand(<$cAEAD0.1,                  h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, gx>, 'g'^~yy.1>), 'K_2e',                  '1'>,                hkdfExtract('emptyStr', z))) @ #vk.20
4: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                  '1'>,                hkdfExtract('emptyStr', 'g'^(~xx*~yy)))) @ #vk.21
5: !KU( (z.2⊕      hkdfExpand(<$cAEAD0.2,                   h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.2, gx.1>, 'g'^~yy.2>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', z.1))     )) @ #vk.25
6: splitEqs(1)
7: splitEqs(11)
8: !KU( 'g'^~yy ) @ #vk.6
9: !KU( 'g'^~xx ) @ #vk.19

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.15, 0) ~~> (#vk.3, 0)
1: !LTK_SIG( $V.2, ~ltk.3 ) ▶₀ #vr.12
2: !PK_SIG( $V.2, pkV ) ▶₁ #vr.12
3: !KU( hkdfExpand(<$cAEAD0.1,                  h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, gx>, 'g'^~yy.1>), 'K_2e',                  '1'>,                hkdfExtract('emptyStr', z))) @ #vk.20
4: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                  '1'>,                hkdfExtract('emptyStr', 'g'^(~xx*~yy)))) @ #vk.21
5: splitEqs(1)
6: splitEqs(11)
7: !KU( 'g'^~yy ) @ #vk.6
8: !KU( 'g'^~xx ) @ #vk.19

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.15, 0) ~~> (#vk.3, 0)
1: !LTK_SIG( $V.2, ~ltk.3 ) ▶₀ #vr.12
2: !PK_SIG( $V.2, pkV ) ▶₁ #vr.12
3: !KU( hkdfExpand(<$cAEAD0.1,                  h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, gx>, 'g'^~yy.1>), 'K_2e',                  '1'>,                hkdfExtract('emptyStr', z))) @ #vk.20
4: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                  '1'>,                hkdfExtract('emptyStr', 'g'^(~xx*~yy)))) @ #vk.21
5: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.2, gx.1>, 'g'^~yy.2>),                  'K_2e', '2'>,                hkdfExtract('emptyStr', z.1))) @ #vk.25
6: splitEqs(1)
7: splitEqs(11)
8: !KU( 'g'^~yy ) @ #vk.6
9: !KU( 'g'^~xx ) @ #vk.19

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.15, 0) ~~> (#vk.3, 0)
1: !LTK_SIG( $V.2, ~ltk.3 ) ▶₀ #vr.12
2: !PK_SIG( $V.2, pkV ) ▶₁ #vr.12
3: !KU( hkdfExpand(<$cAEAD0.1,                  h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, gx>, 'g'^~yy.1>), 'K_2e',                  '1'>,                hkdfExtract('emptyStr', z))) @ #vk.20
4: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                  '1'>,                hkdfExtract('emptyStr', 'g'^(~xx*~yy)))) @ #vk.21
5: !KU( (z.2⊕      sign(<            <$V.2,              h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.2, gx.1>, 'g'^~yy.2>), pkV>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.2,                                     h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.2, gx.1>, 'g'^~yy.2>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', z.1)),                        <$V.2,                          h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.2, gx.1>, 'g'^~yy.2>), pkV>,                        $cAEAD0.2)           >,           ~ltk.3)     )) @ #vk.25
6: splitEqs(1)
7: splitEqs(11)
8: !KU( 'g'^~yy ) @ #vk.6
9: !KU( 'g'^~xx ) @ #vk.19

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.15, 0) ~~> (#vk.3, 0)
1: !LTK_SIG( $V.2, ~ltk.3 ) ▶₀ #vr.12
2: !PK_SIG( $V.2, pkV ) ▶₁ #vr.12
3: !KU( hkdfExpand(<$cAEAD0.1,                  h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, gx>, 'g'^~yy.1>), 'K_2e',                  '1'>,                hkdfExtract('emptyStr', z))) @ #vk.20
4: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                  '1'>,                hkdfExtract('emptyStr', 'g'^(~xx*~yy)))) @ #vk.21
5: !KU( (z.2⊕      hkdfExpand(<$cAEAD0.2,                   h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.2, gx.1>, 'g'^~yy.2>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', z.1))     )) @ #vk.25
6: splitEqs(1)
7: splitEqs(11)
8: !KU( 'g'^~yy ) @ #vk.6
9: !KU( 'g'^~xx ) @ #vk.19

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.15, 0) ~~> (#vk.3, 0)
1: !LTK_SIG( $V.2, ~ltk.3 ) ▶₀ #vr.12
2: !PK_SIG( $V.2, pkV ) ▶₁ #vr.12
3: !KU( sign(<           <$V.2,             h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.2, gx.1>, 'g'^~yy.2>), pkV>,            aeadEncrypt('emptyStr',                       hkdfExpand(<$cAEAD0.2,                                    h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.2, gx.1>, 'g'^~yy.2>),                                    'K_2m'>,                                  hkdfExtract('emptyStr', z.1)),                       <$V.2,                         h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.2, gx.1>, 'g'^~yy.2>), pkV>,                       $cAEAD0.2)          >,          ~ltk.3)) @ #vk.25
4: !KU( hkdfExpand(<$cAEAD0.1,                  h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, gx>, 'g'^~yy.1>), 'K_2e',                  '1'>,                hkdfExtract('emptyStr', z))) @ #vk.20
5: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                  '1'>,                hkdfExtract('emptyStr', 'g'^(~xx*~yy)))) @ #vk.21
6: splitEqs(1)
7: splitEqs(11)
8: !KU( 'g'^~yy ) @ #vk.6
9: !KU( 'g'^~xx ) @ #vk.19

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vl.2, 0) ~~> (#vk.2, 0)
1: !LTK_SIG( $V.2, ~ltk.3 ) ▶₀ #vr.12
2: !PK_SIG( $V.2, pkV ) ▶₁ #vr.12
3: !KU( (      sign(<            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'                                   >,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)⊕      sign(<            <$V.1, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.2)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'                                   >,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V.1, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.2)>,                        $cAEAD0)           >,           ~ltk.2)     )) @ #vk.19
4: splitEqs(1)
5: splitEqs(11)
6: !KU( 'g'^~yy ) @ #vk.5
7: !KU( 'g'^~xx ) @ #vk.18

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vl.2, 0) ~~> (#vk.2, 0)
1: StI1_SIG_SIG( $U.1, ~ltk.3, $V.2, ~xx.1, m1, ~tid.3 ) ▶₀ #vr.12
2: !PK_SIG( $V.2, pk(x) ) ▶₁ #vr.12
3: !PK_SIG( $U.1, pkU ) ▶₂ #vr.12
4: !KU( (      sign(<            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'                                   >,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)⊕      sign(<            <$V.1, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.2)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'                                   >,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V.1, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.2)>,                        $cAEAD0)           >,           ~ltk.2)     )) @ #vk.17
5: splitEqs(1)
6: splitEqs(11)
7: !KU( ($V.2⊕      hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', z.1))     )) @ #vk.21
8: !KU( (      hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', z.1))⊕      sign(<<$V.2, h(<$cHash0.2, m1, gy>), pk(x)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy>), 'K_2m'>,                                   hkdfExtract('emptyStr', z.1)),                        <$V.2, h(<$cHash0.2, m1, gy>), pk(x)>, $cAEAD0.2)           >,           x)     )) @ #vk.22
9: !KU( 'g'^~yy ) @ #vk.5
10: !KU( 'g'^~xx ) @ #vk.16

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: CommitI( tid.3, u, v, t ) ▶₀ #vr.12
1: !KU( (      sign(<            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'                                   >,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)⊕      sign(<            <$V.1, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.2)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'                                   >,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V.1, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.2)>,                        $cAEAD0)           >,           ~ltk.2)     )) @ #vk.17
2: splitEqs(1)
3: !KU( 'g'^~yy ) @ #vk.5
4: !KU( 'g'^~xx ) @ #vk.16

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 66 (precomputed):
    CommitI( tid.3, u, v, t ) ▶₀ #vr.12
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: CommitR( tid.3, u, v, t ) ▶₀ #vr.12
1: !KU( (      sign(<            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'                                   >,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)⊕      sign(<            <$V.1, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.2)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'                                   >,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V.1, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.2)>,                        $cAEAD0)           >,           ~ltk.2)     )) @ #vk.17
2: splitEqs(1)
3: !KU( 'g'^~yy ) @ #vk.5
4: !KU( 'g'^~xx ) @ #vk.16

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 66 (precomputed):
    CommitR( tid.3, u, v, t ) ▶₀ #vr.12
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.13, 0) ~~> (#vk.2, 0)
1: StI1_SIG_SIG( $U.1, ~ltk.3, $V.2, ~xx.1, m1, ~tid.3 ) ▶₀ #vr.12
2: !PK_SIG( $V.2, pk(x) ) ▶₁ #vr.12
3: !PK_SIG( $U.1, pkU ) ▶₂ #vr.12
4: !KU( (      sign(<            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'                                   >,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)⊕      sign(<            <$V.1, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.2)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'                                   >,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V.1, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.2)>,                        $cAEAD0)           >,           ~ltk.2)     )) @ #vk.17
5: splitEqs(1)
6: splitEqs(11)
7: !KU( ($V.2⊕      hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', z.1))     )) @ #vk.21
8: !KU( (      hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', z.1))⊕      sign(<<$V.2, h(<$cHash0.2, m1, gy>), pk(x)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy>), 'K_2m'>,                                   hkdfExtract('emptyStr', z.1)),                        <$V.2, h(<$cHash0.2, m1, gy>), pk(x)>, $cAEAD0.2)           >,           x)     )) @ #vk.22
9: !KU( 'g'^~yy ) @ #vk.5
10: !KU( 'g'^~xx ) @ #vk.16

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.14, 0) ~~> (#vk.2, 0)
1: StI1_SIG_SIG( $U.1, ~ltk.3, $V.2, ~xx.1, m1, ~tid.3 ) ▶₀ #vr.12
2: !PK_SIG( $V.2, pk(x) ) ▶₁ #vr.12
3: !PK_SIG( $U.1, pkU ) ▶₂ #vr.12
4: !KU( sign(<           <$U.1,             h(<$cHash0.2, h(<$cHash0.2, m1, gy>),                <                ($V.2⊕                 hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy>), 'K_2e', '1'>,                            hkdfExtract('emptyStr', z.1))                ),                 (                 hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy>), 'K_2e', '2'>,                            hkdfExtract('emptyStr', z.1))⊕                 sign(<<$V.2, h(<$cHash0.2, m1, gy>), pk(x)>,                        aeadEncrypt('emptyStr',                                   hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy>), 'K_2m'>,                                              hkdfExtract('emptyStr', z.1)),                                   <$V.2, h(<$cHash0.2, m1, gy>), pk(x)>, $cAEAD0.2)                      >,                      x)                )               >,                'emptyStr'>),             pkU>,            aeadEncrypt('emptyStr',                       hkdfExpand(<$cAEAD0.2,                                    h(<$cHash0.2, h(<$cHash0.2, m1, gy>),                                       <                                       ($V.2⊕                                        hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy>), 'K_2e', '1'>,                                                   hkdfExtract('emptyStr', z.1))                                       ),                                        (                                        hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy>), 'K_2e', '2'>,                                                   hkdfExtract('emptyStr', z.1))⊕                                        sign(<<$V.2, h(<$cHash0.2, m1, gy>), pk(x)>,                                               aeadEncrypt('emptyStr',                                                          hkdfExpand(<$cAEAD0.2,                                                                       h(<$cHash0.2, m1, gy>), 'K_2m'                                                                     >,                                                                     hkdfExtract('emptyStr', z.1)),                                                          <$V.2, h(<$cHash0.2, m1, gy>), pk(x)>,                                                          $cAEAD0.2)                                             >,                                             x)                                       )                                      >,                                       'emptyStr'>),                                    'K_3m'>,                                  hkdfExtract('emptyStr', z.1)),                       <$U.1,                         h(<$cHash0.2, h(<$cHash0.2, m1, gy>),                            <                            ($V.2⊕                             hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy>), 'K_2e', '1'>,                                        hkdfExtract('emptyStr', z.1))                            ),                             (                             hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy>), 'K_2e', '2'>,                                        hkdfExtract('emptyStr', z.1))⊕                             sign(<<$V.2, h(<$cHash0.2, m1, gy>), pk(x)>,                                    aeadEncrypt('emptyStr',                                               hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy>), 'K_2m'                                                          >,                                                          hkdfExtract('emptyStr', z.1)),                                               <$V.2, h(<$cHash0.2, m1, gy>), pk(x)>, $cAEAD0.2)                                  >,                                  x)                            )                           >,                            'emptyStr'>),                         pkU>,                       $cAEAD0.2)          >,          ~ltk.3)) @ #vk.26
5: !KU( (      sign(<            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'                                   >,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)⊕      sign(<            <$V.1, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.2)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'                                   >,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V.1, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.2)>,                        $cAEAD0)           >,           ~ltk.2)     )) @ #vk.17
6: splitEqs(1)
7: splitEqs(11)
8: !KU( ($V.2⊕      hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', z.1))     )) @ #vk.21
9: !KU( (      hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', z.1))⊕      sign(<<$V.2, h(<$cHash0.2, m1, gy>), pk(x)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy>), 'K_2m'>,                                   hkdfExtract('emptyStr', z.1)),                        <$V.2, h(<$cHash0.2, m1, gy>), pk(x)>, $cAEAD0.2)           >,           x)     )) @ #vk.22
10: !KU( 'g'^~yy ) @ #vk.5
11: !KU( 'g'^~xx ) @ #vk.16

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.14, 0) ~~> (#vk.2, 0)
1: StI1_SIG_SIG( $U.1, ~ltk.3, $V.2, ~xx.1, m1, ~tid.3 ) ▶₀ #vr.12
2: !PK_SIG( $V.2, pk(x) ) ▶₁ #vr.12
3: !PK_SIG( $U.1, pkU ) ▶₂ #vr.12
4: !KU( sign(<           <$U.1,             h(<$cHash0.2, h(<$cHash0.2, m1, gy>),                <                ($V.2⊕                 hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy>), 'K_2e', '1'>,                            hkdfExtract('emptyStr', z.1))                ),                 (                 hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy>), 'K_2e', '2'>,                            hkdfExtract('emptyStr', z.1))⊕                 sign(<<$V.2, h(<$cHash0.2, m1, gy>), pk(x)>,                        aeadEncrypt('emptyStr',                                   hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy>), 'K_2m'>,                                              hkdfExtract('emptyStr', z.1)),                                   <$V.2, h(<$cHash0.2, m1, gy>), pk(x)>, $cAEAD0.2)                      >,                      x)                )               >,                'emptyStr'>),             pkU>,            aeadEncrypt('emptyStr',                       hkdfExpand(<$cAEAD0.2,                                    h(<$cHash0.2, h(<$cHash0.2, m1, gy>),                                       <                                       ($V.2⊕                                        hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy>), 'K_2e', '1'>,                                                   hkdfExtract('emptyStr', z.1))                                       ),                                        (                                        hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy>), 'K_2e', '2'>,                                                   hkdfExtract('emptyStr', z.1))⊕                                        sign(<<$V.2, h(<$cHash0.2, m1, gy>), pk(x)>,                                               aeadEncrypt('emptyStr',                                                          hkdfExpand(<$cAEAD0.2,                                                                       h(<$cHash0.2, m1, gy>), 'K_2m'                                                                     >,                                                                     hkdfExtract('emptyStr', z.1)),                                                          <$V.2, h(<$cHash0.2, m1, gy>), pk(x)>,                                                          $cAEAD0.2)                                             >,                                             x)                                       )                                      >,                                       'emptyStr'>),                                    'K_3m'>,                                  hkdfExtract('emptyStr', z.1)),                       <$U.1,                         h(<$cHash0.2, h(<$cHash0.2, m1, gy>),                            <                            ($V.2⊕                             hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy>), 'K_2e', '1'>,                                        hkdfExtract('emptyStr', z.1))                            ),                             (                             hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy>), 'K_2e', '2'>,                                        hkdfExtract('emptyStr', z.1))⊕                             sign(<<$V.2, h(<$cHash0.2, m1, gy>), pk(x)>,                                    aeadEncrypt('emptyStr',                                               hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy>), 'K_2m'                                                          >,                                                          hkdfExtract('emptyStr', z.1)),                                               <$V.2, h(<$cHash0.2, m1, gy>), pk(x)>, $cAEAD0.2)                                  >,                                  x)                            )                           >,                            'emptyStr'>),                         pkU>,                       $cAEAD0.2)          >,          ~ltk.3)) @ #vk.27
5: !KU( (      sign(<            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'                                   >,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)⊕      sign(<            <$V.1, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.2)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'                                   >,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V.1, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.2)>,                        $cAEAD0)           >,           ~ltk.2)     )) @ #vk.17
6: splitEqs(1)
7: splitEqs(11)
8: !KU( h(<$cHash0.2, h(<$cHash0.2, m1, gy>),         <         ($V.2⊕          hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy>), 'K_2e', '1'>,                     hkdfExtract('emptyStr', z.1))         ),          (          hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy>), 'K_2e', '2'>,                     hkdfExtract('emptyStr', z.1))⊕          sign(<<$V.2, h(<$cHash0.2, m1, gy>), pk(x)>,                 aeadEncrypt('emptyStr',                            hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy>), 'K_2m'>,                                       hkdfExtract('emptyStr', z.1)),                            <$V.2, h(<$cHash0.2, m1, gy>), pk(x)>, $cAEAD0.2)               >,               x)         )        >,         'emptyStr'>)) @ #vk.24
9: !KU( ($V.2⊕      hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', z.1))     )) @ #vk.21
10: !KU( (      hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', z.1))⊕      sign(<<$V.2, h(<$cHash0.2, m1, gy>), pk(x)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy>), 'K_2m'>,                                   hkdfExtract('emptyStr', z.1)),                        <$V.2, h(<$cHash0.2, m1, gy>), pk(x)>, $cAEAD0.2)           >,           x)     )) @ #vk.22
11: !KU( 'g'^~yy ) @ #vk.5
12: !KU( 'g'^~xx ) @ #vk.16

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.13, 0) ~~> (#vk.2, 0)
1: !LTK_SIG( $V.2, ~ltk.3 ) ▶₀ #vr.12
2: !PK_SIG( $V.2, pkV ) ▶₁ #vr.12
3: !KU( (      sign(<            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'                                   >,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)⊕      sign(<            <$V.1, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.2)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'                                   >,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V.1, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.2)>,                        $cAEAD0)           >,           ~ltk.2)     )) @ #vk.19
4: splitEqs(1)
5: splitEqs(11)
6: !KU( 'g'^~yy ) @ #vk.5
7: !KU( 'g'^~xx ) @ #vk.18

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.14, 0) ~~> (#vk.2, 0)
1: !LTK_SIG( $V.2, ~ltk.3 ) ▶₀ #vr.12
2: !PK_SIG( $V.2, pkV ) ▶₁ #vr.12
3: !KU( (      sign(<            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'                                   >,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)⊕      sign(<            <$V.1, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.2)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'                                   >,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V.1, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.2)>,                        $cAEAD0)           >,           ~ltk.2)     )) @ #vk.19
4: splitEqs(1)
5: splitEqs(11)
6: !KU( 'g'^~yy ) @ #vk.5
7: !KU( 'g'^~xx ) @ #vk.18

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.14, 0) ~~> (#vk.2, 0)
1: !LTK_SIG( $V.2, ~ltk.3 ) ▶₀ #vr.12
2: !PK_SIG( $V.2, pkV ) ▶₁ #vr.12
3: !KU( (      sign(<            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'                                   >,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)⊕      sign(<            <$V.1, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.2)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'                                   >,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V.1, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.2)>,                        $cAEAD0)           >,           ~ltk.2)     )) @ #vk.19
4: splitEqs(1)
5: splitEqs(11)
6: !KU( 'g'^~yy ) @ #vk.5
7: !KU( 'g'^~xx ) @ #vk.18

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.15, 0) ~~> (#vk.2, 0)
1: !LTK_SIG( $V.2, ~ltk.3 ) ▶₀ #vr.12
2: !PK_SIG( $V.2, pkV ) ▶₁ #vr.12
3: !KU( (      sign(<            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'                                   >,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)⊕      sign(<            <$V.1, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.2)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'                                   >,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V.1, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.2)>,                        $cAEAD0)           >,           ~ltk.2)     )) @ #vk.19
4: splitEqs(1)
5: splitEqs(11)
6: !KU( ($V.2⊕z.2) ) @ #vk.23
7: !KU( 'g'^~yy ) @ #vk.5
8: !KU( 'g'^~xx ) @ #vk.18

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.15, 0) ~~> (#vk.2, 0)
1: !LTK_SIG( $V.2, ~ltk.3 ) ▶₀ #vr.12
2: !PK_SIG( $V.2, pkV ) ▶₁ #vr.12
3: !KU( (      sign(<            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'                                   >,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)⊕      sign(<            <$V.1, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.2)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'                                   >,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V.1, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.2)>,                        $cAEAD0)           >,           ~ltk.2)     )) @ #vk.19
4: !KU( (z.2⊕      hkdfExpand(<$cAEAD0.2,                   h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.2, gx.1>, 'g'^~yy.2>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', z.1))     )) @ #vk.23
5: splitEqs(1)
6: splitEqs(11)
7: !KU( 'g'^~yy ) @ #vk.5
8: !KU( 'g'^~xx ) @ #vk.18

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.15, 0) ~~> (#vk.2, 0)
1: !LTK_SIG( $V.2, ~ltk.3 ) ▶₀ #vr.12
2: !PK_SIG( $V.2, pkV ) ▶₁ #vr.12
3: !KU( (      sign(<            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'                                   >,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)⊕      sign(<            <$V.1, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.2)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'                                   >,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V.1, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.2)>,                        $cAEAD0)           >,           ~ltk.2)     )) @ #vk.19
4: splitEqs(1)
5: splitEqs(11)
6: !KU( 'g'^~yy ) @ #vk.5
7: !KU( 'g'^~xx ) @ #vk.18

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( (      sign(<            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'                                   >,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)⊕      sign(<            <$V.1, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.2)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'                                   >,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V.1, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.2)>,                        $cAEAD0)           >,           ~ltk.2)     )) @ #vk.17
1: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, gx>, 'g'^~yy.1>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.18
2: splitEqs(1)
3: !KU( 'g'^~yy ) @ #vk.5
4: !KU( 'g'^~xx ) @ #vk.16

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 56 (directly):
    !KU( (
          sign(<
                <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 
                 pk(~ltk.1)>, 
                aeadEncrypt('emptyStr',
                            hkdfExpand(<$cAEAD0, 
                                        h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 
                                        'K_2m'>,
                                       hkdfExtract('emptyStr', 'g'^(~xx*~yy))),
                            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 
                             pk(~ltk.1)>,
                            $cAEAD0)
               >,
               ~ltk.1)⊕
          sign(<
                <$V.1, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 
                 pk(~ltk.2)>, 
                aeadEncrypt('emptyStr',
                            hkdfExpand(<$cAEAD0, 
                                        h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 
                                        'K_2m'>,
                                       hkdfExtract('emptyStr', 'g'^(~xx*~yy))),
                            <$V.1, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 
                             pk(~ltk.2)>,
                            $cAEAD0)
               >,
               ~ltk.2)
         )
    ) @ #vk.17
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KD( (      sign(<            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'                                   >,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)⊕      sign(<            <$V.1, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.2)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'                                   >,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V.1, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.2)>,                        $cAEAD0)           >,           ~ltk.2)     )) ▶₀ #vk.3
1: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, gx>, 'g'^~yy.1>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.18
2: splitEqs(1)
3: !KU( 'g'^~yy ) @ #vk.6
4: !KU( 'g'^~xx ) @ #vk.17

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( sign(<           <$V.1, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),             pk(~ltk.2)>,            aeadEncrypt('emptyStr',                       hkdfExpand(<$cAEAD0,                                    h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'                                  >,                                  hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                       <$V.1, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                         pk(~ltk.2)>,                       $cAEAD0)          >,          ~ltk.2)) @ #vk.19
1: !KU( sign(<           <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),             pk(~ltk.1)>,            aeadEncrypt('emptyStr',                       hkdfExpand(<$cAEAD0,                                    h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'                                  >,                                  hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                       <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                         pk(~ltk.1)>,                       $cAEAD0)          >,          ~ltk.1)) @ #vk.20
2: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, gx>, 'g'^~yy.1>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.18
3: splitEqs(1)
4: !KU( 'g'^~yy ) @ #vk.6
5: !KU( 'g'^~xx ) @ #vk.17

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 85 (precomputed):
    !KU( sign(<
               <$V.1, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 
                pk(~ltk.2)>, 
               aeadEncrypt('emptyStr',
                           hkdfExpand(<$cAEAD0, 
                                       h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 
                                       'K_2m'>,
                                      hkdfExtract('emptyStr', 'g'^(~xx*~yy))),
                           <$V.1, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 
                            pk(~ltk.2)>,
                           $cAEAD0)
              >,
              ~ltk.2)
    ) @ #vk.19
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( sign(<           <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),             pk(~ltk.1)>,            aeadEncrypt('emptyStr',                       hkdfExpand(<$cAEAD0,                                    h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'                                  >,                                  hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                       <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                         pk(~ltk.1)>,                       $cAEAD0)          >,          ~ltk.1)) @ #vk.20
1: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, gx>, 'g'^~yy.1>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.19
2: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                  '2'>,                hkdfExtract('emptyStr', 'g'^(~xx*~yy)))) @ #vk.21
3: splitEqs(1)
4: !KU( 'g'^~yy ) @ #vk.7
5: !KU( 'g'^~xx ) @ #vk.18

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 86 (precomputed):
    !KU( sign(<
               <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 
                pk(~ltk.1)>, 
               aeadEncrypt('emptyStr',
                           hkdfExpand(<$cAEAD0, 
                                       h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 
                                       'K_2m'>,
                                      hkdfExtract('emptyStr', 'g'^(~xx*~yy))),
                           <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 
                            pk(~ltk.1)>,
                           $cAEAD0)
              >,
              ~ltk.1)
    ) @ #vk.20
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~ltk.2 ) @ #vk.22
1: !KU( h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>)) @ #vk.26
2: !KU( sign(<           <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),             pk(~ltk.1)>,            aeadEncrypt('emptyStr',                       hkdfExpand(<$cAEAD0,                                    h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'                                  >,                                  hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                       <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                         pk(~ltk.1)>,                       $cAEAD0)          >,          ~ltk.1)) @ #vk.20
3: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, gx>, 'g'^~yy.1>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.19
4: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0,                              h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'>,                            hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                 <$V.1, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                   pk(~ltk.2)>,                 $cAEAD0)) @ #vk.28
5: splitEqs(1)
6: !KU( 'g'^~yy ) @ #vk.7
7: !KU( 'g'^~xx ) @ #vk.18
8: !KU( pk(~ltk.2) ) @ #vk.27

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 89 (precomputed): !KU( ~ltk.2 ) @ #vk.22
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~ltk.1 ) @ #vk.23
1: !KU( h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>)) @ #vk.27
2: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, gx>, 'g'^~yy.1>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.20
3: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                  '2'>,                hkdfExtract('emptyStr', 'g'^(~xx*~yy)))) @ #vk.21
4: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0,                              h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'>,                            hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                 <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                   pk(~ltk.1)>,                 $cAEAD0)) @ #vk.29
5: splitEqs(1)
6: !KU( 'g'^~yy ) @ #vk.8
7: !KU( 'g'^~xx ) @ #vk.19
8: !KU( pk(~ltk.1) ) @ #vk.28

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 99 (precomputed): !KU( ~ltk.1 ) @ #vk.23
  simplified formula:
      "((#vr.31 = #i) ∨ (#i < #vr.31))"
    to
      "⊥"
  solved goal nr. 108 (simplified): (#vr.31 = #i)  ∥ (#i < #vr.31)
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>)) @ #vk.26
1: !KU( sign(<           <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),             pk(~ltk.1)>,            aeadEncrypt('emptyStr',                       hkdfExpand(<$cAEAD0,                                    h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'                                  >,                                  hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                       <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                         pk(~ltk.1)>,                       $cAEAD0)          >,          ~ltk.1)) @ #vk.21
2: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, gx>, 'g'^~yy.1>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.20
3: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0,                              h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'>,                            hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                 <$V.1, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                   pk(~ltk.2)>,                 $cAEAD0)) @ #vk.28
4: splitEqs(1)
5: !KU( 'g'^~yy ) @ #vk.8
6: !KU( 'g'^~xx ) @ #vk.19
7: !KU( pk(~ltk.2) ) @ #vk.27

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 93 (precomputed):
    !KU( h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>)
    ) @ #vk.26
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( sign(<           <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),             pk(~ltk.1)>,            aeadEncrypt('emptyStr',                       hkdfExpand(<$cAEAD0,                                    h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'                                  >,                                  hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                       <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                         pk(~ltk.1)>,                       $cAEAD0)          >,          ~ltk.1)) @ #vk.23
1: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, gx>, 'g'^~yy.1>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.22
2: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0,                              h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'>,                            hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                 <$V.1, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                   pk(~ltk.2)>,                 $cAEAD0)) @ #vk.29
3: splitEqs(1)
4: !KU( 'g'^~yy ) @ #vk.9
5: !KU( 'g'^~xx ) @ #vk.21
6: !KU( pk(~ltk.2) ) @ #vk.28

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 86 (precomputed):
    !KU( sign(<
               <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 
                pk(~ltk.1)>, 
               aeadEncrypt('emptyStr',
                           hkdfExpand(<$cAEAD0, 
                                       h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 
                                       'K_2m'>,
                                      hkdfExtract('emptyStr', 'g'^(~xx*~yy))),
                           <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 
                            pk(~ltk.1)>,
                           $cAEAD0)
              >,
              ~ltk.1)
    ) @ #vk.23
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vl.2, 0) ~~> (#vk.3, 0)
1: !LTK_SIG( $V.2, ~ltk.3 ) ▶₀ #vr.14
2: !PK_SIG( $V.2, pkV ) ▶₁ #vr.14
3: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, gx>, 'g'^~yy.1>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.20
4: splitEqs(1)
5: splitEqs(16)
6: !KU( 'g'^~yy ) @ #vk.6
7: !KU( 'g'^~xx ) @ #vk.19

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vl.2, 0) ~~> (#vk.3, 0)
1: StI1_SIG_SIG( $U.1, ~ltk.3, $V.2, ~xx.1, m1, ~tid.3 ) ▶₀ #vr.14
2: !PK_SIG( $V.2, pk(x) ) ▶₁ #vr.14
3: !PK_SIG( $U.1, pkU ) ▶₂ #vr.14
4: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, gx>, 'g'^~yy.1>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.18
5: splitEqs(1)
6: splitEqs(16)
7: !KU( ($V.2⊕      hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', z.1))     )) @ #vk.22
8: !KU( (      hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', z.1))⊕      sign(<<$V.2, h(<$cHash0.2, m1, gy>), pk(x)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy>), 'K_2m'>,                                   hkdfExtract('emptyStr', z.1)),                        <$V.2, h(<$cHash0.2, m1, gy>), pk(x)>, $cAEAD0.2)           >,           x)     )) @ #vk.23
9: !KU( 'g'^~yy ) @ #vk.6
10: !KU( 'g'^~xx ) @ #vk.17

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: CommitI( tid.3, u, v, t ) ▶₀ #vr.14
1: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, gx>, 'g'^~yy.1>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.18
2: splitEqs(1)
3: !KU( 'g'^~yy ) @ #vk.6
4: !KU( 'g'^~xx ) @ #vk.17

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 88 (precomputed):
    CommitI( tid.3, u, v, t ) ▶₀ #vr.14
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: CommitR( tid.3, u, v, t ) ▶₀ #vr.14
1: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, gx>, 'g'^~yy.1>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.18
2: splitEqs(1)
3: !KU( 'g'^~yy ) @ #vk.6
4: !KU( 'g'^~xx ) @ #vk.17

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 88 (precomputed):
    CommitR( tid.3, u, v, t ) ▶₀ #vr.14
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.15, 0) ~~> (#vk.3, 0)
1: StI1_SIG_SIG( $U.1, ~ltk.3, $V.2, ~xx.1, m1, ~tid.3 ) ▶₀ #vr.14
2: !PK_SIG( $V.2, pk(x) ) ▶₁ #vr.14
3: !PK_SIG( $U.1, pkU ) ▶₂ #vr.14
4: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, gx>, 'g'^~yy.1>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.18
5: splitEqs(1)
6: splitEqs(16)
7: !KU( ($V.2⊕      hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', z.1))     )) @ #vk.22
8: !KU( (      hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', z.1))⊕      sign(<<$V.2, h(<$cHash0.2, m1, gy>), pk(x)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy>), 'K_2m'>,                                   hkdfExtract('emptyStr', z.1)),                        <$V.2, h(<$cHash0.2, m1, gy>), pk(x)>, $cAEAD0.2)           >,           x)     )) @ #vk.23
9: !KU( 'g'^~yy ) @ #vk.6
10: !KU( 'g'^~xx ) @ #vk.17

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.16, 0) ~~> (#vk.3, 0)
1: StI1_SIG_SIG( $U.1, ~ltk.3, $V.2, ~xx.1, m1, ~tid.3 ) ▶₀ #vr.14
2: !PK_SIG( $V.2, pk(x) ) ▶₁ #vr.14
3: !PK_SIG( $U.1, pkU ) ▶₂ #vr.14
4: !KU( sign(<           <$U.1,             h(<$cHash0.2, h(<$cHash0.2, m1, gy>),                <                ($V.2⊕                 hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy>), 'K_2e', '1'>,                            hkdfExtract('emptyStr', z.1))                ),                 (                 hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy>), 'K_2e', '2'>,                            hkdfExtract('emptyStr', z.1))⊕                 sign(<<$V.2, h(<$cHash0.2, m1, gy>), pk(x)>,                        aeadEncrypt('emptyStr',                                   hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy>), 'K_2m'>,                                              hkdfExtract('emptyStr', z.1)),                                   <$V.2, h(<$cHash0.2, m1, gy>), pk(x)>, $cAEAD0.2)                      >,                      x)                )               >,                'emptyStr'>),             pkU>,            aeadEncrypt('emptyStr',                       hkdfExpand(<$cAEAD0.2,                                    h(<$cHash0.2, h(<$cHash0.2, m1, gy>),                                       <                                       ($V.2⊕                                        hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy>), 'K_2e', '1'>,                                                   hkdfExtract('emptyStr', z.1))                                       ),                                        (                                        hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy>), 'K_2e', '2'>,                                                   hkdfExtract('emptyStr', z.1))⊕                                        sign(<<$V.2, h(<$cHash0.2, m1, gy>), pk(x)>,                                               aeadEncrypt('emptyStr',                                                          hkdfExpand(<$cAEAD0.2,                                                                       h(<$cHash0.2, m1, gy>), 'K_2m'                                                                     >,                                                                     hkdfExtract('emptyStr', z.1)),                                                          <$V.2, h(<$cHash0.2, m1, gy>), pk(x)>,                                                          $cAEAD0.2)                                             >,                                             x)                                       )                                      >,                                       'emptyStr'>),                                    'K_3m'>,                                  hkdfExtract('emptyStr', z.1)),                       <$U.1,                         h(<$cHash0.2, h(<$cHash0.2, m1, gy>),                            <                            ($V.2⊕                             hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy>), 'K_2e', '1'>,                                        hkdfExtract('emptyStr', z.1))                            ),                             (                             hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy>), 'K_2e', '2'>,                                        hkdfExtract('emptyStr', z.1))⊕                             sign(<<$V.2, h(<$cHash0.2, m1, gy>), pk(x)>,                                    aeadEncrypt('emptyStr',                                               hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy>), 'K_2m'                                                          >,                                                          hkdfExtract('emptyStr', z.1)),                                               <$V.2, h(<$cHash0.2, m1, gy>), pk(x)>, $cAEAD0.2)                                  >,                                  x)                            )                           >,                            'emptyStr'>),                         pkU>,                       $cAEAD0.2)          >,          ~ltk.3)) @ #vk.27
5: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, gx>, 'g'^~yy.1>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.18
6: splitEqs(1)
7: splitEqs(16)
8: !KU( ($V.2⊕      hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', z.1))     )) @ #vk.22
9: !KU( (      hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', z.1))⊕      sign(<<$V.2, h(<$cHash0.2, m1, gy>), pk(x)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy>), 'K_2m'>,                                   hkdfExtract('emptyStr', z.1)),                        <$V.2, h(<$cHash0.2, m1, gy>), pk(x)>, $cAEAD0.2)           >,           x)     )) @ #vk.23
10: !KU( 'g'^~yy ) @ #vk.6
11: !KU( 'g'^~xx ) @ #vk.17

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.16, 0) ~~> (#vk.3, 0)
1: StI1_SIG_SIG( $U.1, ~ltk.3, $V.2, ~xx.1, m1, ~tid.3 ) ▶₀ #vr.14
2: !PK_SIG( $V.2, pk(x) ) ▶₁ #vr.14
3: !PK_SIG( $U.1, pkU ) ▶₂ #vr.14
4: !KU( sign(<           <$U.1,             h(<$cHash0.2, h(<$cHash0.2, m1, gy>),                <                ($V.2⊕                 hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy>), 'K_2e', '1'>,                            hkdfExtract('emptyStr', z.1))                ),                 (                 hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy>), 'K_2e', '2'>,                            hkdfExtract('emptyStr', z.1))⊕                 sign(<<$V.2, h(<$cHash0.2, m1, gy>), pk(x)>,                        aeadEncrypt('emptyStr',                                   hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy>), 'K_2m'>,                                              hkdfExtract('emptyStr', z.1)),                                   <$V.2, h(<$cHash0.2, m1, gy>), pk(x)>, $cAEAD0.2)                      >,                      x)                )               >,                'emptyStr'>),             pkU>,            aeadEncrypt('emptyStr',                       hkdfExpand(<$cAEAD0.2,                                    h(<$cHash0.2, h(<$cHash0.2, m1, gy>),                                       <                                       ($V.2⊕                                        hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy>), 'K_2e', '1'>,                                                   hkdfExtract('emptyStr', z.1))                                       ),                                        (                                        hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy>), 'K_2e', '2'>,                                                   hkdfExtract('emptyStr', z.1))⊕                                        sign(<<$V.2, h(<$cHash0.2, m1, gy>), pk(x)>,                                               aeadEncrypt('emptyStr',                                                          hkdfExpand(<$cAEAD0.2,                                                                       h(<$cHash0.2, m1, gy>), 'K_2m'                                                                     >,                                                                     hkdfExtract('emptyStr', z.1)),                                                          <$V.2, h(<$cHash0.2, m1, gy>), pk(x)>,                                                          $cAEAD0.2)                                             >,                                             x)                                       )                                      >,                                       'emptyStr'>),                                    'K_3m'>,                                  hkdfExtract('emptyStr', z.1)),                       <$U.1,                         h(<$cHash0.2, h(<$cHash0.2, m1, gy>),                            <                            ($V.2⊕                             hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy>), 'K_2e', '1'>,                                        hkdfExtract('emptyStr', z.1))                            ),                             (                             hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy>), 'K_2e', '2'>,                                        hkdfExtract('emptyStr', z.1))⊕                             sign(<<$V.2, h(<$cHash0.2, m1, gy>), pk(x)>,                                    aeadEncrypt('emptyStr',                                               hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy>), 'K_2m'                                                          >,                                                          hkdfExtract('emptyStr', z.1)),                                               <$V.2, h(<$cHash0.2, m1, gy>), pk(x)>, $cAEAD0.2)                                  >,                                  x)                            )                           >,                            'emptyStr'>),                         pkU>,                       $cAEAD0.2)          >,          ~ltk.3)) @ #vk.28
5: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, gx>, 'g'^~yy.1>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.18
6: splitEqs(1)
7: splitEqs(16)
8: !KU( h(<$cHash0.2, h(<$cHash0.2, m1, gy>),         <         ($V.2⊕          hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy>), 'K_2e', '1'>,                     hkdfExtract('emptyStr', z.1))         ),          (          hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy>), 'K_2e', '2'>,                     hkdfExtract('emptyStr', z.1))⊕          sign(<<$V.2, h(<$cHash0.2, m1, gy>), pk(x)>,                 aeadEncrypt('emptyStr',                            hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy>), 'K_2m'>,                                       hkdfExtract('emptyStr', z.1)),                            <$V.2, h(<$cHash0.2, m1, gy>), pk(x)>, $cAEAD0.2)               >,               x)         )        >,         'emptyStr'>)) @ #vk.25
9: !KU( ($V.2⊕      hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', z.1))     )) @ #vk.22
10: !KU( (      hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', z.1))⊕      sign(<<$V.2, h(<$cHash0.2, m1, gy>), pk(x)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy>), 'K_2m'>,                                   hkdfExtract('emptyStr', z.1)),                        <$V.2, h(<$cHash0.2, m1, gy>), pk(x)>, $cAEAD0.2)           >,           x)     )) @ #vk.23
11: !KU( 'g'^~yy ) @ #vk.6
12: !KU( 'g'^~xx ) @ #vk.17

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.15, 0) ~~> (#vk.3, 0)
1: !LTK_SIG( $V.2, ~ltk.3 ) ▶₀ #vr.14
2: !PK_SIG( $V.2, pkV ) ▶₁ #vr.14
3: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, gx>, 'g'^~yy.1>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.20
4: splitEqs(1)
5: splitEqs(16)
6: !KU( 'g'^~yy ) @ #vk.6
7: !KU( 'g'^~xx ) @ #vk.19

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.16, 0) ~~> (#vk.3, 0)
1: !LTK_SIG( $V.2, ~ltk.3 ) ▶₀ #vr.14
2: !PK_SIG( $V.2, pkV ) ▶₁ #vr.14
3: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, gx>, 'g'^~yy.1>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.20
4: splitEqs(1)
5: splitEqs(16)
6: !KU( 'g'^~yy ) @ #vk.6
7: !KU( 'g'^~xx ) @ #vk.19

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.16, 0) ~~> (#vk.3, 0)
1: !LTK_SIG( $V.2, ~ltk.3 ) ▶₀ #vr.14
2: !PK_SIG( $V.2, pkV ) ▶₁ #vr.14
3: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, gx>, 'g'^~yy.1>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.20
4: splitEqs(1)
5: splitEqs(16)
6: !KU( 'g'^~yy ) @ #vk.6
7: !KU( 'g'^~xx ) @ #vk.19

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.17, 0) ~~> (#vk.3, 0)
1: !LTK_SIG( $V.2, ~ltk.3 ) ▶₀ #vr.14
2: !PK_SIG( $V.2, pkV ) ▶₁ #vr.14
3: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, gx>, 'g'^~yy.1>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.20
4: !KU( (z.2⊕      hkdfExpand(<$cAEAD0.2,                   h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.2, gx.1>, 'g'^~yy.2>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', z.1))     )) @ #vk.24
5: splitEqs(1)
6: splitEqs(16)
7: !KU( 'g'^~yy ) @ #vk.6
8: !KU( 'g'^~xx ) @ #vk.19

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.17, 0) ~~> (#vk.3, 0)
1: !LTK_SIG( $V.2, ~ltk.3 ) ▶₀ #vr.14
2: !PK_SIG( $V.2, pkV ) ▶₁ #vr.14
3: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, gx>, 'g'^~yy.1>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.20
4: splitEqs(1)
5: splitEqs(16)
6: !KU( ($V.2⊕z.2) ) @ #vk.24
7: !KU( 'g'^~yy ) @ #vk.6
8: !KU( 'g'^~xx ) @ #vk.19

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.15, 0) ~~> (#vk.2, 0)
1: !LTK_SIG( $V.2, ~ltk.3 ) ▶₀ #vr.12
2: !PK_SIG( $V.2, pkV ) ▶₁ #vr.12
3: !KU( (      sign(<            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'                                   >,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)⊕      sign(<            <$V.1, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.2)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'                                   >,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V.1, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.2)>,                        $cAEAD0)           >,           ~ltk.2)     )) @ #vk.19
4: !KU( (z.2⊕      sign(<            <$V.2,              h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.2, gx.1>, 'g'^~yy.2>), pkV>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.2,                                     h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.2, gx.1>, 'g'^~yy.2>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', z.1)),                        <$V.2,                          h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.2, gx.1>, 'g'^~yy.2>), pkV>,                        $cAEAD0.2)           >,           ~ltk.3)     )) @ #vk.23
5: splitEqs(1)
6: splitEqs(11)
7: !KU( 'g'^~yy ) @ #vk.5
8: !KU( 'g'^~xx ) @ #vk.18

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.15, 0) ~~> (#vk.2, 0)
1: !LTK_SIG( $V.2, ~ltk.3 ) ▶₀ #vr.12
2: !PK_SIG( $V.2, pkV ) ▶₁ #vr.12
3: !KU( (      sign(<            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'                                   >,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)⊕      sign(<            <$V.1, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.2)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'                                   >,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V.1, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.2)>,                        $cAEAD0)           >,           ~ltk.2)     )) @ #vk.19
4: !KU( (z.2⊕      hkdfExpand(<$cAEAD0.2,                   h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.2, gx.1>, 'g'^~yy.2>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', z.1))     )) @ #vk.23
5: splitEqs(1)
6: splitEqs(11)
7: !KU( 'g'^~yy ) @ #vk.5
8: !KU( 'g'^~xx ) @ #vk.18

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.15, 0) ~~> (#vk.2, 0)
1: !LTK_SIG( $V.2, ~ltk.3 ) ▶₀ #vr.12
2: !PK_SIG( $V.2, pkV ) ▶₁ #vr.12
3: !KU( (      sign(<            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'                                   >,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)⊕      sign(<            <$V.1, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.2)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'                                   >,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V.1, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.2)>,                        $cAEAD0)           >,           ~ltk.2)     )) @ #vk.19
4: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.2, gx.1>, 'g'^~yy.2>),                  'K_2e', '2'>,                hkdfExtract('emptyStr', z.1))) @ #vk.23
5: splitEqs(1)
6: splitEqs(11)
7: !KU( 'g'^~yy ) @ #vk.5
8: !KU( 'g'^~xx ) @ #vk.18

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.15, 0) ~~> (#vk.2, 0)
1: !LTK_SIG( $V.2, ~ltk.3 ) ▶₀ #vr.12
2: !PK_SIG( $V.2, pkV ) ▶₁ #vr.12
3: !KU( sign(<           <$V.2,             h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.2, gx.1>, 'g'^~yy.2>), pkV>,            aeadEncrypt('emptyStr',                       hkdfExpand(<$cAEAD0.2,                                    h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.2, gx.1>, 'g'^~yy.2>),                                    'K_2m'>,                                  hkdfExtract('emptyStr', z.1)),                       <$V.2,                         h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.2, gx.1>, 'g'^~yy.2>), pkV>,                       $cAEAD0.2)          >,          ~ltk.3)) @ #vk.23
4: !KU( (      sign(<            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'                                   >,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)⊕      sign(<            <$V.1, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.2)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'                                   >,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V.1, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.2)>,                        $cAEAD0)           >,           ~ltk.2)     )) @ #vk.19
5: splitEqs(1)
6: splitEqs(11)
7: !KU( 'g'^~yy ) @ #vk.5
8: !KU( 'g'^~xx ) @ #vk.18

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.10, 0) ~~> (#vk.1, 0)
1: StI1_SIG_SIG( $U.1, ~ltk.3, $V.2, ~xx.1, m1, ~tid.2 ) ▶₀ #vr.8
2: !PK_SIG( $V.2, pk(x) ) ▶₁ #vr.8
3: !PK_SIG( $U.1, pkU ) ▶₂ #vr.8
4: !KU( sign(<           <$U.1,             h(<$cHash0.1, h(<$cHash0.1, m1, gy>),                <                ($V.2⊕                 hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy>), 'K_2e', '1'>,                            hkdfExtract('emptyStr', z))                ),                 (                 hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy>), 'K_2e', '2'>,                            hkdfExtract('emptyStr', z))⊕                 sign(<<$V.2, h(<$cHash0.1, m1, gy>), pk(x)>,                        aeadEncrypt('emptyStr',                                   hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy>), 'K_2m'>,                                              hkdfExtract('emptyStr', z)),                                   <$V.2, h(<$cHash0.1, m1, gy>), pk(x)>, $cAEAD0.1)                      >,                      x)                )               >,                'emptyStr'>),             pkU>,            aeadEncrypt('emptyStr',                       hkdfExpand(<$cAEAD0.1,                                    h(<$cHash0.1, h(<$cHash0.1, m1, gy>),                                       <                                       ($V.2⊕                                        hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy>), 'K_2e', '1'>,                                                   hkdfExtract('emptyStr', z))                                       ),                                        (                                        hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy>), 'K_2e', '2'>,                                                   hkdfExtract('emptyStr', z))⊕                                        sign(<<$V.2, h(<$cHash0.1, m1, gy>), pk(x)>,                                               aeadEncrypt('emptyStr',                                                          hkdfExpand(<$cAEAD0.1,                                                                       h(<$cHash0.1, m1, gy>), 'K_2m'                                                                     >,                                                                     hkdfExtract('emptyStr', z)),                                                          <$V.2, h(<$cHash0.1, m1, gy>), pk(x)>,                                                          $cAEAD0.1)                                             >,                                             x)                                       )                                      >,                                       'emptyStr'>),                                    'K_3m'>,                                  hkdfExtract('emptyStr', z)),                       <$U.1,                         h(<$cHash0.1, h(<$cHash0.1, m1, gy>),                            <                            ($V.2⊕                             hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy>), 'K_2e', '1'>,                                        hkdfExtract('emptyStr', z))                            ),                             (                             hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy>), 'K_2e', '2'>,                                        hkdfExtract('emptyStr', z))⊕                             sign(<<$V.2, h(<$cHash0.1, m1, gy>), pk(x)>,                                    aeadEncrypt('emptyStr',                                               hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy>), 'K_2m'                                                          >,                                                          hkdfExtract('emptyStr', z)),                                               <$V.2, h(<$cHash0.1, m1, gy>), pk(x)>, $cAEAD0.1)                                  >,                                  x)                            )                           >,                            'emptyStr'>),                         pkU>,                       $cAEAD0.1)          >,          ~ltk.3)) @ #vk.20
5: splitEqs(6)
6: !KU( ($V.2⊕      hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.15
7: !KU( (      hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', z))⊕      sign(<<$V.2, h(<$cHash0.1, m1, gy>), pk(x)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy>), 'K_2m'>,                                   hkdfExtract('emptyStr', z)),                        <$V.2, h(<$cHash0.1, m1, gy>), pk(x)>, $cAEAD0.1)           >,           x)     )) @ #vk.16
8: !KU( ($V⊕$V.1) ) @ #vk.11
9: !KU( 'g'^~yy ) @ #vk.4
10: !KU( 'g'^~xx ) @ #vk.10

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.10, 0) ~~> (#vk.1, 0)
1: StI1_SIG_SIG( $U.1, ~ltk.3, $V.2, ~xx.1, m1, ~tid.2 ) ▶₀ #vr.8
2: !PK_SIG( $V.2, pk(x) ) ▶₁ #vr.8
3: !PK_SIG( $U.1, pkU ) ▶₂ #vr.8
4: !KU( sign(<           <$U.1,             h(<$cHash0.1, h(<$cHash0.1, m1, gy>),                <                ($V.2⊕                 hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy>), 'K_2e', '1'>,                            hkdfExtract('emptyStr', z))                ),                 (                 hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy>), 'K_2e', '2'>,                            hkdfExtract('emptyStr', z))⊕                 sign(<<$V.2, h(<$cHash0.1, m1, gy>), pk(x)>,                        aeadEncrypt('emptyStr',                                   hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy>), 'K_2m'>,                                              hkdfExtract('emptyStr', z)),                                   <$V.2, h(<$cHash0.1, m1, gy>), pk(x)>, $cAEAD0.1)                      >,                      x)                )               >,                'emptyStr'>),             pkU>,            aeadEncrypt('emptyStr',                       hkdfExpand(<$cAEAD0.1,                                    h(<$cHash0.1, h(<$cHash0.1, m1, gy>),                                       <                                       ($V.2⊕                                        hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy>), 'K_2e', '1'>,                                                   hkdfExtract('emptyStr', z))                                       ),                                        (                                        hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy>), 'K_2e', '2'>,                                                   hkdfExtract('emptyStr', z))⊕                                        sign(<<$V.2, h(<$cHash0.1, m1, gy>), pk(x)>,                                               aeadEncrypt('emptyStr',                                                          hkdfExpand(<$cAEAD0.1,                                                                       h(<$cHash0.1, m1, gy>), 'K_2m'                                                                     >,                                                                     hkdfExtract('emptyStr', z)),                                                          <$V.2, h(<$cHash0.1, m1, gy>), pk(x)>,                                                          $cAEAD0.1)                                             >,                                             x)                                       )                                      >,                                       'emptyStr'>),                                    'K_3m'>,                                  hkdfExtract('emptyStr', z)),                       <$U.1,                         h(<$cHash0.1, h(<$cHash0.1, m1, gy>),                            <                            ($V.2⊕                             hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy>), 'K_2e', '1'>,                                        hkdfExtract('emptyStr', z))                            ),                             (                             hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy>), 'K_2e', '2'>,                                        hkdfExtract('emptyStr', z))⊕                             sign(<<$V.2, h(<$cHash0.1, m1, gy>), pk(x)>,                                    aeadEncrypt('emptyStr',                                               hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy>), 'K_2m'                                                          >,                                                          hkdfExtract('emptyStr', z)),                                               <$V.2, h(<$cHash0.1, m1, gy>), pk(x)>, $cAEAD0.1)                                  >,                                  x)                            )                           >,                            'emptyStr'>),                         pkU>,                       $cAEAD0.1)          >,          ~ltk.3)) @ #vk.21
5: splitEqs(6)
6: !KU( h(<$cHash0.1, h(<$cHash0.1, m1, gy>),         <         ($V.2⊕          hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy>), 'K_2e', '1'>,                     hkdfExtract('emptyStr', z))         ),          (          hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy>), 'K_2e', '2'>,                     hkdfExtract('emptyStr', z))⊕          sign(<<$V.2, h(<$cHash0.1, m1, gy>), pk(x)>,                 aeadEncrypt('emptyStr',                            hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy>), 'K_2m'>,                                       hkdfExtract('emptyStr', z)),                            <$V.2, h(<$cHash0.1, m1, gy>), pk(x)>, $cAEAD0.1)               >,               x)         )        >,         'emptyStr'>)) @ #vk.18
7: !KU( ($V.2⊕      hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.15
8: !KU( (      hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', z))⊕      sign(<<$V.2, h(<$cHash0.1, m1, gy>), pk(x)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy>), 'K_2m'>,                                   hkdfExtract('emptyStr', z)),                        <$V.2, h(<$cHash0.1, m1, gy>), pk(x)>, $cAEAD0.1)           >,           x)     )) @ #vk.16
9: !KU( ($V⊕$V.1) ) @ #vk.11
10: !KU( 'g'^~yy ) @ #vk.4
11: !KU( 'g'^~xx ) @ #vk.10

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.10, 0) ~~> (#vk.1, 0)
1: !LTK_SIG( $V.2, ~ltk.3 ) ▶₀ #vr.8
2: !PK_SIG( $V.2, pkV ) ▶₁ #vr.8
3: splitEqs(6)
4: !KU( ($V⊕$V.1) ) @ #vk.13
5: !KU( 'g'^~yy ) @ #vk.4
6: !KU( 'g'^~xx ) @ #vk.12

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.10, 0) ~~> (#vk.1, 0)
1: !LTK_SIG( $V.2, ~ltk.3 ) ▶₀ #vr.8
2: !PK_SIG( $V.2, pkV ) ▶₁ #vr.8
3: splitEqs(6)
4: !KU( ($V⊕$V.1) ) @ #vk.13
5: !KU( 'g'^~yy ) @ #vk.4
6: !KU( 'g'^~xx ) @ #vk.12

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  simplified formula:
      "((#vr.8 = #i) ∨ (#i < #vr.8))"
    to
      "⊥"
  solved goal nr. 57 (simplified): (#vr.8 = #i)  ∥ (#i < #vr.8)
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.11, 0) ~~> (#vk.1, 0)
1: !LTK_SIG( $V.2, ~ltk.3 ) ▶₀ #vr.8
2: !PK_SIG( $V.2, pkV ) ▶₁ #vr.8
3: !KU( (z.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, gx>, 'g'^~yy.1>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.17
4: splitEqs(6)
5: !KU( ($V⊕$V.1) ) @ #vk.13
6: !KU( 'g'^~yy ) @ #vk.4
7: !KU( 'g'^~xx ) @ #vk.12

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.11, 0) ~~> (#vk.1, 0)
1: !LTK_SIG( $V.2, ~ltk.3 ) ▶₀ #vr.8
2: !PK_SIG( $V.2, pkV ) ▶₁ #vr.8
3: splitEqs(6)
4: !KU( (z.1⊕$V.2) ) @ #vk.17
5: !KU( ($V⊕$V.1) ) @ #vk.13
6: !KU( 'g'^~yy ) @ #vk.4
7: !KU( 'g'^~xx ) @ #vk.12

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.11, 0) ~~> (#vk.1, 0)
1: !LTK_SIG( $V.2, ~ltk.3 ) ▶₀ #vr.8
2: !PK_SIG( $V.2, pkV ) ▶₁ #vr.8
3: splitEqs(6)
4: !KU( ($V⊕$V.1) ) @ #vk.13
5: !KU( 'g'^~yy ) @ #vk.4
6: !KU( 'g'^~xx ) @ #vk.12

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.11, 0) ~~> (#vk.1, 0)
1: !LTK_SIG( $V.2, ~ltk.3 ) ▶₀ #vr.8
2: !PK_SIG( $V.2, pkV ) ▶₁ #vr.8
3: !KU( (z.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, gx>, 'g'^~yy.1>), 'K_2e',                   '2'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.17
4: splitEqs(6)
5: !KU( ($V⊕$V.1) ) @ #vk.13
6: !KU( 'g'^~yy ) @ #vk.4
7: !KU( 'g'^~xx ) @ #vk.12

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.11, 0) ~~> (#vk.1, 0)
1: !LTK_SIG( $V.2, ~ltk.3 ) ▶₀ #vr.8
2: !PK_SIG( $V.2, pkV ) ▶₁ #vr.8
3: !KU( sign(<           <$V.2, h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, gx>, 'g'^~yy.1>),             pkV>,            aeadEncrypt('emptyStr',                       hkdfExpand(<$cAEAD0.1,                                    h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, gx>, 'g'^~yy.1>), 'K_2m'                                  >,                                  hkdfExtract('emptyStr', z)),                       <$V.2, h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, gx>, 'g'^~yy.1>),                         pkV>,                       $cAEAD0.1)          >,          ~ltk.3)) @ #vk.17
4: splitEqs(6)
5: !KU( ($V⊕$V.1) ) @ #vk.13
6: !KU( 'g'^~yy ) @ #vk.4
7: !KU( 'g'^~xx ) @ #vk.12

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.11, 0) ~~> (#vk.1, 0)
1: !LTK_SIG( $V.2, ~ltk.3 ) ▶₀ #vr.8
2: !PK_SIG( $V.2, pkV ) ▶₁ #vr.8
3: !KU( hkdfExpand(<$cAEAD0.1,                  h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, gx>, 'g'^~yy.1>), 'K_2e',                  '2'>,                hkdfExtract('emptyStr', z))) @ #vk.17
4: splitEqs(6)
5: !KU( ($V⊕$V.1) ) @ #vk.13
6: !KU( 'g'^~yy ) @ #vk.4
7: !KU( 'g'^~xx ) @ #vk.12

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.11, 0) ~~> (#vk.1, 0)
1: !LTK_SIG( $V.2, ~ltk.3 ) ▶₀ #vr.8
2: !PK_SIG( $V.2, pkV ) ▶₁ #vr.8
3: !KU( (z.1⊕      sign(<            <$V.2, h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, gx>, 'g'^~yy.1>),              pkV>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, gx>, 'g'^~yy.1>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', z)),                        <$V.2, h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, gx>, 'g'^~yy.1>),                          pkV>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.17
4: splitEqs(6)
5: !KU( ($V⊕$V.1) ) @ #vk.13
6: !KU( 'g'^~yy ) @ #vk.4
7: !KU( 'g'^~xx ) @ #vk.12

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( (      sign(<            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'                                   >,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)⊕      sign(<            <$V.1, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.2)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'                                   >,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V.1, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.2)>,                        $cAEAD0)           >,           ~ltk.2)     )) @ #vk.12
1: !KU( ($V⊕$V.1) ) @ #vk.11
2: !KU( 'g'^~yy ) @ #vk.4
3: !KU( 'g'^~xx ) @ #vk.10

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 57 (directly):
    !KU( (
          sign(<
                <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 
                 pk(~ltk.1)>, 
                aeadEncrypt('emptyStr',
                            hkdfExpand(<$cAEAD0, 
                                        h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 
                                        'K_2m'>,
                                       hkdfExtract('emptyStr', 'g'^(~xx*~yy))),
                            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 
                             pk(~ltk.1)>,
                            $cAEAD0)
               >,
               ~ltk.1)⊕
          sign(<
                <$V.1, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 
                 pk(~ltk.2)>, 
                aeadEncrypt('emptyStr',
                            hkdfExpand(<$cAEAD0, 
                                        h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 
                                        'K_2m'>,
                                       hkdfExtract('emptyStr', 'g'^(~xx*~yy))),
                            <$V.1, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 
                             pk(~ltk.2)>,
                            $cAEAD0)
               >,
               ~ltk.2)
         )
    ) @ #vk.12
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( sign(<           <$V.1, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),             pk(~ltk.2)>,            aeadEncrypt('emptyStr',                       hkdfExpand(<$cAEAD0,                                    h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'                                  >,                                  hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                       <$V.1, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                         pk(~ltk.2)>,                       $cAEAD0)          >,          ~ltk.2)) @ #vk.13
1: !KU( sign(<           <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),             pk(~ltk.1)>,            aeadEncrypt('emptyStr',                       hkdfExpand(<$cAEAD0,                                    h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'                                  >,                                  hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                       <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                         pk(~ltk.1)>,                       $cAEAD0)          >,          ~ltk.1)) @ #vk.14
2: !KU( ($V⊕$V.1) ) @ #vk.12
3: !KU( 'g'^~yy ) @ #vk.5
4: !KU( 'g'^~xx ) @ #vk.11

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KD( (      sign(<            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'                                   >,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)⊕      sign(<            <$V.1, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.2)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'                                   >,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V.1, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.2)>,                        $cAEAD0)           >,           ~ltk.2)     )) ▶₀ #vk.2
1: !KU( ($V⊕$V.1) ) @ #vk.12
2: !KU( 'g'^~yy ) @ #vk.5
3: !KU( 'g'^~xx ) @ #vk.11

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 61 (precomputed):
    !KU( sign(<
               <$V.1, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 
                pk(~ltk.2)>, 
               aeadEncrypt('emptyStr',
                           hkdfExpand(<$cAEAD0, 
                                       h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 
                                       'K_2m'>,
                                      hkdfExtract('emptyStr', 'g'^(~xx*~yy))),
                           <$V.1, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 
                            pk(~ltk.2)>,
                           $cAEAD0)
              >,
              ~ltk.2)
    ) @ #vk.13
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~ltk.2 ) @ #vk.16
1: !KU( h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>)) @ #vk.20
2: !KU( sign(<           <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),             pk(~ltk.1)>,            aeadEncrypt('emptyStr',                       hkdfExpand(<$cAEAD0,                                    h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'                                  >,                                  hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                       <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                         pk(~ltk.1)>,                       $cAEAD0)          >,          ~ltk.1)) @ #vk.14
3: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0,                              h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'>,                            hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                 <$V.1, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                   pk(~ltk.2)>,                 $cAEAD0)) @ #vk.22
4: !KU( ($V⊕$V.1) ) @ #vk.13
5: !KU( 'g'^~yy ) @ #vk.6
6: !KU( 'g'^~xx ) @ #vk.12
7: !KU( pk(~ltk.2) ) @ #vk.21

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 65 (precomputed): !KU( ~ltk.2 ) @ #vk.16
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( sign(<           <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),             pk(~ltk.1)>,            aeadEncrypt('emptyStr',                       hkdfExpand(<$cAEAD0,                                    h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'                                  >,                                  hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                       <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                         pk(~ltk.1)>,                       $cAEAD0)          >,          ~ltk.1)) @ #vk.14
1: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                  '2'>,                hkdfExtract('emptyStr', 'g'^(~xx*~yy)))) @ #vk.15
2: !KU( ($V⊕$V.1) ) @ #vk.13
3: !KU( 'g'^~yy ) @ #vk.6
4: !KU( 'g'^~xx ) @ #vk.12

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 62 (precomputed):
    !KU( sign(<
               <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 
                pk(~ltk.1)>, 
               aeadEncrypt('emptyStr',
                           hkdfExpand(<$cAEAD0, 
                                       h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 
                                       'K_2m'>,
                                      hkdfExtract('emptyStr', 'g'^(~xx*~yy))),
                           <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 
                            pk(~ltk.1)>,
                           $cAEAD0)
              >,
              ~ltk.1)
    ) @ #vk.14
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~ltk.1 ) @ #vk.17
1: !KU( h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>)) @ #vk.21
2: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                  '2'>,                hkdfExtract('emptyStr', 'g'^(~xx*~yy)))) @ #vk.15
3: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0,                              h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'>,                            hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                 <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                   pk(~ltk.1)>,                 $cAEAD0)) @ #vk.23
4: !KU( ($V⊕$V.1) ) @ #vk.14
5: !KU( 'g'^~yy ) @ #vk.7
6: !KU( 'g'^~xx ) @ #vk.13
7: !KU( pk(~ltk.1) ) @ #vk.22

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 75 (precomputed): !KU( ~ltk.1 ) @ #vk.17
  simplified formula:
      "((#vr.25 = #i) ∨ (#i < #vr.25))"
    to
      "⊥"
  solved goal nr. 84 (simplified): (#vr.25 = #i)  ∥ (#i < #vr.25)
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>)) @ #vk.20
1: !KU( sign(<           <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),             pk(~ltk.1)>,            aeadEncrypt('emptyStr',                       hkdfExpand(<$cAEAD0,                                    h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'                                  >,                                  hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                       <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                         pk(~ltk.1)>,                       $cAEAD0)          >,          ~ltk.1)) @ #vk.15
2: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0,                              h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'>,                            hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                 <$V.1, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                   pk(~ltk.2)>,                 $cAEAD0)) @ #vk.22
3: !KU( ($V⊕$V.1) ) @ #vk.14
4: !KU( 'g'^~yy ) @ #vk.7
5: !KU( 'g'^~xx ) @ #vk.13
6: !KU( pk(~ltk.2) ) @ #vk.21

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 69 (precomputed):
    !KU( h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>)
    ) @ #vk.20
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( sign(<           <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),             pk(~ltk.1)>,            aeadEncrypt('emptyStr',                       hkdfExpand(<$cAEAD0,                                    h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'                                  >,                                  hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                       <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                         pk(~ltk.1)>,                       $cAEAD0)          >,          ~ltk.1)) @ #vk.17
1: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0,                              h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'>,                            hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                 <$V.1, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                   pk(~ltk.2)>,                 $cAEAD0)) @ #vk.23
2: !KU( ($V⊕$V.1) ) @ #vk.16
3: !KU( 'g'^~yy ) @ #vk.8
4: !KU( 'g'^~xx ) @ #vk.15
5: !KU( pk(~ltk.2) ) @ #vk.22

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 62 (precomputed):
    !KU( sign(<
               <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 
                pk(~ltk.1)>, 
               aeadEncrypt('emptyStr',
                           hkdfExpand(<$cAEAD0, 
                                       h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 
                                       'K_2m'>,
                                      hkdfExtract('emptyStr', 'g'^(~xx*~yy))),
                           <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 
                            pk(~ltk.1)>,
                           $cAEAD0)
              >,
              ~ltk.1)
    ) @ #vk.17
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~ltk.1 ) @ #vk.28
1: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0,                              h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'>,                            hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                 <$V.1, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                   pk(~ltk.2)>,                 $cAEAD0)) @ #vk.25
2: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0,                              h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'>,                            hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                 <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                   pk(~ltk.1)>,                 $cAEAD0)) @ #vk.32
3: !KU( ($V⊕$V.1) ) @ #vk.20
4: !KU( 'g'^~yy ) @ #vk.11
5: !KU( 'g'^~xx ) @ #vk.19
6: !KU( pk(~ltk.2) ) @ #vk.24
7: !KU( pk(~ltk.1) ) @ #vk.31

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 88 (precomputed): !KU( ~ltk.1 ) @ #vk.28
  simplified formula:
      "((#vr.34 = #i) ∨ (#i < #vr.34))"
    to
      "⊥"
  solved goal nr. 97 (simplified): (#vr.34 = #i)  ∥ (#i < #vr.34)
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vl.1, 0) ~~> (#vk.2, 0)
1: !LTK_SIG( $V.2, ~ltk.3 ) ▶₀ #vr.10
2: !PK_SIG( $V.2, pkV ) ▶₁ #vr.10
3: splitEqs(11)
4: !KU( ($V⊕$V.1) ) @ #vk.14
5: !KU( 'g'^~yy ) @ #vk.5
6: !KU( 'g'^~xx ) @ #vk.13

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vl.1, 0) ~~> (#vk.2, 0)
1: StI1_SIG_SIG( $U.1, ~ltk.3, $V.2, ~xx.1, m1, ~tid.2 ) ▶₀ #vr.10
2: !PK_SIG( $V.2, pk(x) ) ▶₁ #vr.10
3: !PK_SIG( $U.1, pkU ) ▶₂ #vr.10
4: splitEqs(11)
5: !KU( ($V.2⊕      hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.16
6: !KU( (      hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', z))⊕      sign(<<$V.2, h(<$cHash0.1, m1, gy>), pk(x)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy>), 'K_2m'>,                                   hkdfExtract('emptyStr', z)),                        <$V.2, h(<$cHash0.1, m1, gy>), pk(x)>, $cAEAD0.1)           >,           x)     )) @ #vk.17
7: !KU( ($V⊕$V.1) ) @ #vk.12
8: !KU( 'g'^~yy ) @ #vk.5
9: !KU( 'g'^~xx ) @ #vk.11

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: CommitI( tid.2, u, v, t ) ▶₀ #vr.10
1: !KU( ($V⊕$V.1) ) @ #vk.12
2: !KU( 'g'^~yy ) @ #vk.5
3: !KU( 'g'^~xx ) @ #vk.11

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 64 (precomputed):
    CommitI( tid.2, u, v, t ) ▶₀ #vr.10
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: CommitR( tid.2, u, v, t ) ▶₀ #vr.10
1: !KU( ($V⊕$V.1) ) @ #vk.12
2: !KU( 'g'^~yy ) @ #vk.5
3: !KU( 'g'^~xx ) @ #vk.11

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 64 (precomputed):
    CommitR( tid.2, u, v, t ) ▶₀ #vr.10
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.11, 0) ~~> (#vk.2, 0)
1: StI1_SIG_SIG( $U.1, ~ltk.3, $V.2, ~xx.1, m1, ~tid.2 ) ▶₀ #vr.10
2: !PK_SIG( $V.2, pk(x) ) ▶₁ #vr.10
3: !PK_SIG( $U.1, pkU ) ▶₂ #vr.10
4: splitEqs(11)
5: !KU( ($V.2⊕      hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.16
6: !KU( (      hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', z))⊕      sign(<<$V.2, h(<$cHash0.1, m1, gy>), pk(x)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy>), 'K_2m'>,                                   hkdfExtract('emptyStr', z)),                        <$V.2, h(<$cHash0.1, m1, gy>), pk(x)>, $cAEAD0.1)           >,           x)     )) @ #vk.17
7: !KU( ($V⊕$V.1) ) @ #vk.12
8: !KU( 'g'^~yy ) @ #vk.5
9: !KU( 'g'^~xx ) @ #vk.11

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.12, 0) ~~> (#vk.2, 0)
1: StI1_SIG_SIG( $U.1, ~ltk.3, $V.2, ~xx.1, m1, ~tid.2 ) ▶₀ #vr.10
2: !PK_SIG( $V.2, pk(x) ) ▶₁ #vr.10
3: !PK_SIG( $U.1, pkU ) ▶₂ #vr.10
4: !KU( sign(<           <$U.1,             h(<$cHash0.1, h(<$cHash0.1, m1, gy>),                <                ($V.2⊕                 hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy>), 'K_2e', '1'>,                            hkdfExtract('emptyStr', z))                ),                 (                 hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy>), 'K_2e', '2'>,                            hkdfExtract('emptyStr', z))⊕                 sign(<<$V.2, h(<$cHash0.1, m1, gy>), pk(x)>,                        aeadEncrypt('emptyStr',                                   hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy>), 'K_2m'>,                                              hkdfExtract('emptyStr', z)),                                   <$V.2, h(<$cHash0.1, m1, gy>), pk(x)>, $cAEAD0.1)                      >,                      x)                )               >,                'emptyStr'>),             pkU>,            aeadEncrypt('emptyStr',                       hkdfExpand(<$cAEAD0.1,                                    h(<$cHash0.1, h(<$cHash0.1, m1, gy>),                                       <                                       ($V.2⊕                                        hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy>), 'K_2e', '1'>,                                                   hkdfExtract('emptyStr', z))                                       ),                                        (                                        hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy>), 'K_2e', '2'>,                                                   hkdfExtract('emptyStr', z))⊕                                        sign(<<$V.2, h(<$cHash0.1, m1, gy>), pk(x)>,                                               aeadEncrypt('emptyStr',                                                          hkdfExpand(<$cAEAD0.1,                                                                       h(<$cHash0.1, m1, gy>), 'K_2m'                                                                     >,                                                                     hkdfExtract('emptyStr', z)),                                                          <$V.2, h(<$cHash0.1, m1, gy>), pk(x)>,                                                          $cAEAD0.1)                                             >,                                             x)                                       )                                      >,                                       'emptyStr'>),                                    'K_3m'>,                                  hkdfExtract('emptyStr', z)),                       <$U.1,                         h(<$cHash0.1, h(<$cHash0.1, m1, gy>),                            <                            ($V.2⊕                             hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy>), 'K_2e', '1'>,                                        hkdfExtract('emptyStr', z))                            ),                             (                             hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy>), 'K_2e', '2'>,                                        hkdfExtract('emptyStr', z))⊕                             sign(<<$V.2, h(<$cHash0.1, m1, gy>), pk(x)>,                                    aeadEncrypt('emptyStr',                                               hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy>), 'K_2m'                                                          >,                                                          hkdfExtract('emptyStr', z)),                                               <$V.2, h(<$cHash0.1, m1, gy>), pk(x)>, $cAEAD0.1)                                  >,                                  x)                            )                           >,                            'emptyStr'>),                         pkU>,                       $cAEAD0.1)          >,          ~ltk.3)) @ #vk.21
5: splitEqs(11)
6: !KU( ($V.2⊕      hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.16
7: !KU( (      hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', z))⊕      sign(<<$V.2, h(<$cHash0.1, m1, gy>), pk(x)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy>), 'K_2m'>,                                   hkdfExtract('emptyStr', z)),                        <$V.2, h(<$cHash0.1, m1, gy>), pk(x)>, $cAEAD0.1)           >,           x)     )) @ #vk.17
8: !KU( ($V⊕$V.1) ) @ #vk.12
9: !KU( 'g'^~yy ) @ #vk.5
10: !KU( 'g'^~xx ) @ #vk.11

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.12, 0) ~~> (#vk.2, 0)
1: StI1_SIG_SIG( $U.1, ~ltk.3, $V.2, ~xx.1, m1, ~tid.2 ) ▶₀ #vr.10
2: !PK_SIG( $V.2, pk(x) ) ▶₁ #vr.10
3: !PK_SIG( $U.1, pkU ) ▶₂ #vr.10
4: !KU( sign(<           <$U.1,             h(<$cHash0.1, h(<$cHash0.1, m1, gy>),                <                ($V.2⊕                 hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy>), 'K_2e', '1'>,                            hkdfExtract('emptyStr', z))                ),                 (                 hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy>), 'K_2e', '2'>,                            hkdfExtract('emptyStr', z))⊕                 sign(<<$V.2, h(<$cHash0.1, m1, gy>), pk(x)>,                        aeadEncrypt('emptyStr',                                   hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy>), 'K_2m'>,                                              hkdfExtract('emptyStr', z)),                                   <$V.2, h(<$cHash0.1, m1, gy>), pk(x)>, $cAEAD0.1)                      >,                      x)                )               >,                'emptyStr'>),             pkU>,            aeadEncrypt('emptyStr',                       hkdfExpand(<$cAEAD0.1,                                    h(<$cHash0.1, h(<$cHash0.1, m1, gy>),                                       <                                       ($V.2⊕                                        hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy>), 'K_2e', '1'>,                                                   hkdfExtract('emptyStr', z))                                       ),                                        (                                        hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy>), 'K_2e', '2'>,                                                   hkdfExtract('emptyStr', z))⊕                                        sign(<<$V.2, h(<$cHash0.1, m1, gy>), pk(x)>,                                               aeadEncrypt('emptyStr',                                                          hkdfExpand(<$cAEAD0.1,                                                                       h(<$cHash0.1, m1, gy>), 'K_2m'                                                                     >,                                                                     hkdfExtract('emptyStr', z)),                                                          <$V.2, h(<$cHash0.1, m1, gy>), pk(x)>,                                                          $cAEAD0.1)                                             >,                                             x)                                       )                                      >,                                       'emptyStr'>),                                    'K_3m'>,                                  hkdfExtract('emptyStr', z)),                       <$U.1,                         h(<$cHash0.1, h(<$cHash0.1, m1, gy>),                            <                            ($V.2⊕                             hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy>), 'K_2e', '1'>,                                        hkdfExtract('emptyStr', z))                            ),                             (                             hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy>), 'K_2e', '2'>,                                        hkdfExtract('emptyStr', z))⊕                             sign(<<$V.2, h(<$cHash0.1, m1, gy>), pk(x)>,                                    aeadEncrypt('emptyStr',                                               hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy>), 'K_2m'                                                          >,                                                          hkdfExtract('emptyStr', z)),                                               <$V.2, h(<$cHash0.1, m1, gy>), pk(x)>, $cAEAD0.1)                                  >,                                  x)                            )                           >,                            'emptyStr'>),                         pkU>,                       $cAEAD0.1)          >,          ~ltk.3)) @ #vk.22
5: splitEqs(11)
6: !KU( h(<$cHash0.1, h(<$cHash0.1, m1, gy>),         <         ($V.2⊕          hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy>), 'K_2e', '1'>,                     hkdfExtract('emptyStr', z))         ),          (          hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy>), 'K_2e', '2'>,                     hkdfExtract('emptyStr', z))⊕          sign(<<$V.2, h(<$cHash0.1, m1, gy>), pk(x)>,                 aeadEncrypt('emptyStr',                            hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy>), 'K_2m'>,                                       hkdfExtract('emptyStr', z)),                            <$V.2, h(<$cHash0.1, m1, gy>), pk(x)>, $cAEAD0.1)               >,               x)         )        >,         'emptyStr'>)) @ #vk.19
7: !KU( ($V.2⊕      hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.16
8: !KU( (      hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', z))⊕      sign(<<$V.2, h(<$cHash0.1, m1, gy>), pk(x)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy>), 'K_2m'>,                                   hkdfExtract('emptyStr', z)),                        <$V.2, h(<$cHash0.1, m1, gy>), pk(x)>, $cAEAD0.1)           >,           x)     )) @ #vk.17
9: !KU( ($V⊕$V.1) ) @ #vk.12
10: !KU( 'g'^~yy ) @ #vk.5
11: !KU( 'g'^~xx ) @ #vk.11

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.11, 0) ~~> (#vk.2, 0)
1: !LTK_SIG( $V.2, ~ltk.3 ) ▶₀ #vr.10
2: !PK_SIG( $V.2, pkV ) ▶₁ #vr.10
3: splitEqs(11)
4: !KU( ($V⊕$V.1) ) @ #vk.14
5: !KU( 'g'^~yy ) @ #vk.5
6: !KU( 'g'^~xx ) @ #vk.13

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.12, 0) ~~> (#vk.2, 0)
1: !LTK_SIG( $V.2, ~ltk.3 ) ▶₀ #vr.10
2: !PK_SIG( $V.2, pkV ) ▶₁ #vr.10
3: splitEqs(11)
4: !KU( ($V⊕$V.1) ) @ #vk.14
5: !KU( 'g'^~yy ) @ #vk.5
6: !KU( 'g'^~xx ) @ #vk.13

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.12, 0) ~~> (#vk.2, 0)
1: !LTK_SIG( $V.2, ~ltk.3 ) ▶₀ #vr.10
2: !PK_SIG( $V.2, pkV ) ▶₁ #vr.10
3: splitEqs(11)
4: !KU( ($V⊕$V.1) ) @ #vk.14
5: !KU( 'g'^~yy ) @ #vk.5
6: !KU( 'g'^~xx ) @ #vk.13

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.13, 0) ~~> (#vk.2, 0)
1: !LTK_SIG( $V.2, ~ltk.3 ) ▶₀ #vr.10
2: !PK_SIG( $V.2, pkV ) ▶₁ #vr.10
3: splitEqs(11)
4: !KU( (z.1⊕$V.2) ) @ #vk.18
5: !KU( ($V⊕$V.1) ) @ #vk.14
6: !KU( 'g'^~yy ) @ #vk.5
7: !KU( 'g'^~xx ) @ #vk.13

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.13, 0) ~~> (#vk.2, 0)
1: !LTK_SIG( $V.2, ~ltk.3 ) ▶₀ #vr.10
2: !PK_SIG( $V.2, pkV ) ▶₁ #vr.10
3: !KU( (z.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, gx>, 'g'^~yy.1>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.18
4: splitEqs(11)
5: !KU( ($V⊕$V.1) ) @ #vk.14
6: !KU( 'g'^~yy ) @ #vk.5
7: !KU( 'g'^~xx ) @ #vk.13

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.13, 0) ~~> (#vk.2, 0)
1: !LTK_SIG( $V.2, ~ltk.3 ) ▶₀ #vr.10
2: !PK_SIG( $V.2, pkV ) ▶₁ #vr.10
3: splitEqs(11)
4: !KU( ($V⊕$V.1) ) @ #vk.14
5: !KU( 'g'^~yy ) @ #vk.5
6: !KU( 'g'^~xx ) @ #vk.13

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.13, 0) ~~> (#vk.2, 0)
1: !LTK_SIG( $V.2, ~ltk.3 ) ▶₀ #vr.10
2: !PK_SIG( $V.2, pkV ) ▶₁ #vr.10
3: !KU( hkdfExpand(<$cAEAD0.1,                  h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, gx>, 'g'^~yy.1>), 'K_2e',                  '2'>,                hkdfExtract('emptyStr', z))) @ #vk.18
4: splitEqs(11)
5: !KU( ($V⊕$V.1) ) @ #vk.14
6: !KU( 'g'^~yy ) @ #vk.5
7: !KU( 'g'^~xx ) @ #vk.13

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.13, 0) ~~> (#vk.2, 0)
1: !LTK_SIG( $V.2, ~ltk.3 ) ▶₀ #vr.10
2: !PK_SIG( $V.2, pkV ) ▶₁ #vr.10
3: !KU( sign(<           <$V.2, h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, gx>, 'g'^~yy.1>),             pkV>,            aeadEncrypt('emptyStr',                       hkdfExpand(<$cAEAD0.1,                                    h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, gx>, 'g'^~yy.1>), 'K_2m'                                  >,                                  hkdfExtract('emptyStr', z)),                       <$V.2, h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, gx>, 'g'^~yy.1>),                         pkV>,                       $cAEAD0.1)          >,          ~ltk.3)) @ #vk.18
4: splitEqs(11)
5: !KU( ($V⊕$V.1) ) @ #vk.14
6: !KU( 'g'^~yy ) @ #vk.5
7: !KU( 'g'^~xx ) @ #vk.13

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.13, 0) ~~> (#vk.2, 0)
1: !LTK_SIG( $V.2, ~ltk.3 ) ▶₀ #vr.10
2: !PK_SIG( $V.2, pkV ) ▶₁ #vr.10
3: !KU( (z.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, gx>, 'g'^~yy.1>), 'K_2e',                   '2'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.18
4: splitEqs(11)
5: !KU( ($V⊕$V.1) ) @ #vk.14
6: !KU( 'g'^~yy ) @ #vk.5
7: !KU( 'g'^~xx ) @ #vk.13

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.13, 0) ~~> (#vk.2, 0)
1: !LTK_SIG( $V.2, ~ltk.3 ) ▶₀ #vr.10
2: !PK_SIG( $V.2, pkV ) ▶₁ #vr.10
3: !KU( (z.1⊕      sign(<            <$V.2, h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, gx>, 'g'^~yy.1>),              pkV>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, gx>, 'g'^~yy.1>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', z)),                        <$V.2, h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, gx>, 'g'^~yy.1>),                          pkV>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.18
4: splitEqs(11)
5: !KU( ($V⊕$V.1) ) @ #vk.14
6: !KU( 'g'^~yy ) @ #vk.5
7: !KU( 'g'^~xx ) @ #vk.13

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: splitEqs(1)
1: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, 'g'^x>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))     )) @ #vk.8
2: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, 'g'^x>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, 'g'^x>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, 'g'^x>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, 'g'^x>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.9
3: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                  '1'>,                hkdfExtract('emptyStr', 'g'^(~xx*~yy)))) @ #vk.10
4: !KU( 'g'^x ) @ #vk.6
5: !KU( 'g'^~yy ) @ #vk.4
6: !KU( 'g'^~xx ) @ #vk.17

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 14 (directly): splitEqs(1)
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( 'g'^(~xx*~yy*inv(~xx.1)) ) @ #vk.6
1: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                      'g'^(~xx*~yy*inv(~xx.1))>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))     )) @ #vk.8
2: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                      'g'^(~xx*~yy*inv(~xx.1))>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                 'g'^(~xx*~yy*inv(~xx.1))>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                                        'g'^(~xx*~yy*inv(~xx.1))>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                             'g'^(~xx*~yy*inv(~xx.1))>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.9
3: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                  '1'>,                hkdfExtract('emptyStr', 'g'^(~xx*~yy)))) @ #vk.10
4: !KU( 'g'^~yy ) @ #vk.4
5: !KU( 'g'^~xx ) @ #vk.17

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 51 (precomputed):
    !KU( 'g'^(~xx*~yy*inv(~xx.1)) ) @ #vk.6
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.19
1: !KU( ~xx.1 ) @ #vk.21
2: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                      'g'^(~xx*~yy*inv(~xx.1))>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))     )) @ #vk.8
3: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                      'g'^(~xx*~yy*inv(~xx.1))>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                 'g'^(~xx*~yy*inv(~xx.1))>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                                        'g'^(~xx*~yy*inv(~xx.1))>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                             'g'^(~xx*~yy*inv(~xx.1))>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.9
4: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                  '1'>,                hkdfExtract('emptyStr', 'g'^(~xx*~yy)))) @ #vk.10
5: !KU( 'g'^~yy ) @ #vk.5
6: !KU( 'g'^~xx ) @ #vk.17

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 63 (precomputed): !KU( ~xx ) @ #vk.19
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~yy ) @ #vk.19
1: !KU( ~xx.1 ) @ #vk.21
2: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                      'g'^(~xx*~yy*inv(~xx.1))>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))     )) @ #vk.8
3: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                      'g'^(~xx*~yy*inv(~xx.1))>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                 'g'^(~xx*~yy*inv(~xx.1))>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                                        'g'^(~xx*~yy*inv(~xx.1))>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                             'g'^(~xx*~yy*inv(~xx.1))>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.9
4: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                  '1'>,                hkdfExtract('emptyStr', 'g'^(~xx*~yy)))) @ #vk.10
5: !KU( 'g'^~yy ) @ #vk.5
6: !KU( 'g'^~xx ) @ #vk.17

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 57 (precomputed): !KU( ~yy ) @ #vk.19
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.20
1: !KU( ~yy ) @ #vk.21
2: !KU( ~xx.1 ) @ #vk.23
3: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                      'g'^(~xx*~yy*inv(~xx.1))>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))     )) @ #vk.8
4: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                      'g'^(~xx*~yy*inv(~xx.1))>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                 'g'^(~xx*~yy*inv(~xx.1))>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                                        'g'^(~xx*~yy*inv(~xx.1))>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                             'g'^(~xx*~yy*inv(~xx.1))>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.9
5: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                  '1'>,                hkdfExtract('emptyStr', 'g'^(~xx*~yy)))) @ #vk.10
6: !KU( 'g'^~yy ) @ #vk.5
7: !KU( 'g'^~xx ) @ #vk.17

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 58 (precomputed): !KU( ~xx ) @ #vk.20
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !PK_SIG( $V.2, pkV ) ▶₁ #vr.6
1: splitEqs(1)
2: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, 'g'^x>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))     )) @ #vk.8
3: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, 'g'^x>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, 'g'^x>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, 'g'^x>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, 'g'^x>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.9
4: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                  '1'>,                hkdfExtract('emptyStr', 'g'^(~xx*~yy)))) @ #vk.10
5: !KU( (      sign(<            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'                                   >,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)⊕      sign(<            <$V.2, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pkV>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'                                   >,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V.2, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pkV>,                        $cAEAD0)           >,           ~ltk.4)     )) @ #vk.18
6: !KU( 'g'^x ) @ #vk.6
7: !KU( 'g'^~yy ) @ #vk.4
8: !KU( 'g'^~xx ) @ #vk.17

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 38 (precomputed): !PK_SIG( $V.2, pkV ) ▶₁ #vr.6
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: splitEqs(1)
1: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, 'g'^x>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))     )) @ #vk.8
2: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, 'g'^x>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, 'g'^x>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, 'g'^x>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, 'g'^x>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.9
3: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                  '1'>,                hkdfExtract('emptyStr', 'g'^(~xx*~yy)))) @ #vk.10
4: !KU( (      sign(<            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'                                   >,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)⊕      sign(<            <$V.2, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.4)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'                                   >,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V.2, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.4)>,                        $cAEAD0)           >,           ~ltk.4)     )) @ #vk.18
5: !KU( 'g'^x ) @ #vk.6
6: !KU( 'g'^~yy ) @ #vk.4
7: !KU( 'g'^~xx ) @ #vk.17

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 14 (directly): splitEqs(1)
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( 'g'^(~xx*~yy*inv(~xx.1)) ) @ #vk.6
1: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                      'g'^(~xx*~yy*inv(~xx.1))>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))     )) @ #vk.8
2: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                      'g'^(~xx*~yy*inv(~xx.1))>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                 'g'^(~xx*~yy*inv(~xx.1))>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                                        'g'^(~xx*~yy*inv(~xx.1))>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                             'g'^(~xx*~yy*inv(~xx.1))>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.9
3: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                  '1'>,                hkdfExtract('emptyStr', 'g'^(~xx*~yy)))) @ #vk.10
4: !KU( (      sign(<            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'                                   >,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)⊕      sign(<            <$V.2, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.4)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'                                   >,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V.2, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.4)>,                        $cAEAD0)           >,           ~ltk.4)     )) @ #vk.18
5: !KU( 'g'^~yy ) @ #vk.4
6: !KU( 'g'^~xx ) @ #vk.17

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 55 (precomputed):
    !KU( 'g'^(~xx*~yy*inv(~xx.1)) ) @ #vk.6
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.20
1: !KU( ~xx.1 ) @ #vk.22
2: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                      'g'^(~xx*~yy*inv(~xx.1))>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))     )) @ #vk.8
3: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                      'g'^(~xx*~yy*inv(~xx.1))>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                 'g'^(~xx*~yy*inv(~xx.1))>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                                        'g'^(~xx*~yy*inv(~xx.1))>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                             'g'^(~xx*~yy*inv(~xx.1))>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.9
4: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                  '1'>,                hkdfExtract('emptyStr', 'g'^(~xx*~yy)))) @ #vk.10
5: !KU( (      sign(<            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'                                   >,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)⊕      sign(<            <$V.2, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.4)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'                                   >,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V.2, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.4)>,                        $cAEAD0)           >,           ~ltk.4)     )) @ #vk.18
6: !KU( 'g'^~yy ) @ #vk.5
7: !KU( 'g'^~xx ) @ #vk.17

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.21
1: !KU( ~yy ) @ #vk.22
2: !KU( ~xx.1 ) @ #vk.24
3: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                      'g'^(~xx*~yy*inv(~xx.1))>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))     )) @ #vk.8
4: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                      'g'^(~xx*~yy*inv(~xx.1))>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                 'g'^(~xx*~yy*inv(~xx.1))>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                                        'g'^(~xx*~yy*inv(~xx.1))>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                             'g'^(~xx*~yy*inv(~xx.1))>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.9
5: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                  '1'>,                hkdfExtract('emptyStr', 'g'^(~xx*~yy)))) @ #vk.10
6: !KU( (      sign(<            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'                                   >,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)⊕      sign(<            <$V.2, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.4)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'                                   >,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V.2, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.4)>,                        $cAEAD0)           >,           ~ltk.4)     )) @ #vk.18
7: !KU( 'g'^~yy ) @ #vk.5
8: !KU( 'g'^~xx ) @ #vk.17

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 67 (precomputed): !KU( ~xx ) @ #vk.20
  solved goal nr. 62 (precomputed): !KU( ~xx ) @ #vk.21
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~yy ) @ #vk.20
1: !KU( ~xx.1 ) @ #vk.22
2: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                      'g'^(~xx*~yy*inv(~xx.1))>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))     )) @ #vk.8
3: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                      'g'^(~xx*~yy*inv(~xx.1))>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                 'g'^(~xx*~yy*inv(~xx.1))>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                                        'g'^(~xx*~yy*inv(~xx.1))>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                             'g'^(~xx*~yy*inv(~xx.1))>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.9
4: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                  '1'>,                hkdfExtract('emptyStr', 'g'^(~xx*~yy)))) @ #vk.10
5: !KU( (      sign(<            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'                                   >,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)⊕      sign(<            <$V.2, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.4)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'                                   >,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V.2, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.4)>,                        $cAEAD0)           >,           ~ltk.4)     )) @ #vk.18
6: !KU( 'g'^~yy ) @ #vk.5
7: !KU( 'g'^~xx ) @ #vk.17

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 61 (precomputed): !KU( ~yy ) @ #vk.20
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: splitEqs(1)
1: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, 'g'^x>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))     )) @ #vk.8
2: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, 'g'^x>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, 'g'^x>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, 'g'^x>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, 'g'^x>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.9
3: !KU( 'g'^x ) @ #vk.6
4: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                   '2'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      sign(<            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'                                   >,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)     )) @ #vk.4
5: !KU( 'g'^~yy ) @ #vk.3
6: !KU( 'g'^~xx ) @ #vk.15

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 14 (directly): splitEqs(1)
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( 'g'^(~xx*~yy*inv(~xx.1)) ) @ #vk.6
1: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                      'g'^(~xx*~yy*inv(~xx.1))>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))     )) @ #vk.8
2: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                      'g'^(~xx*~yy*inv(~xx.1))>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                 'g'^(~xx*~yy*inv(~xx.1))>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                                        'g'^(~xx*~yy*inv(~xx.1))>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                             'g'^(~xx*~yy*inv(~xx.1))>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.9
3: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                   '2'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      sign(<            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'                                   >,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)     )) @ #vk.4
4: !KU( 'g'^~yy ) @ #vk.3
5: !KU( 'g'^~xx ) @ #vk.15

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 49 (precomputed):
    !KU( 'g'^(~xx*~yy*inv(~xx.1)) ) @ #vk.6
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.17
1: !KU( ~xx.1 ) @ #vk.19
2: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                      'g'^(~xx*~yy*inv(~xx.1))>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))     )) @ #vk.8
3: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                      'g'^(~xx*~yy*inv(~xx.1))>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                 'g'^(~xx*~yy*inv(~xx.1))>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                                        'g'^(~xx*~yy*inv(~xx.1))>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                             'g'^(~xx*~yy*inv(~xx.1))>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.9
4: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                   '2'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      sign(<            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'                                   >,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)     )) @ #vk.5
5: !KU( 'g'^~yy ) @ #vk.4
6: !KU( 'g'^~xx ) @ #vk.15

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 61 (precomputed): !KU( ~xx ) @ #vk.17
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.18
1: !KU( ~yy ) @ #vk.19
2: !KU( ~xx.1 ) @ #vk.21
3: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                      'g'^(~xx*~yy*inv(~xx.1))>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))     )) @ #vk.8
4: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                      'g'^(~xx*~yy*inv(~xx.1))>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                 'g'^(~xx*~yy*inv(~xx.1))>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                                        'g'^(~xx*~yy*inv(~xx.1))>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                             'g'^(~xx*~yy*inv(~xx.1))>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.9
5: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                   '2'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      sign(<            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'                                   >,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)     )) @ #vk.5
6: !KU( 'g'^~yy ) @ #vk.4
7: !KU( 'g'^~xx ) @ #vk.15

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 56 (precomputed): !KU( ~xx ) @ #vk.18
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~yy ) @ #vk.17
1: !KU( ~xx.1 ) @ #vk.19
2: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                      'g'^(~xx*~yy*inv(~xx.1))>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))     )) @ #vk.8
3: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                      'g'^(~xx*~yy*inv(~xx.1))>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                 'g'^(~xx*~yy*inv(~xx.1))>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                                        'g'^(~xx*~yy*inv(~xx.1))>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                             'g'^(~xx*~yy*inv(~xx.1))>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.9
4: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                   '2'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      sign(<            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'                                   >,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)     )) @ #vk.5
5: !KU( 'g'^~yy ) @ #vk.4
6: !KU( 'g'^~xx ) @ #vk.15

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 55 (precomputed): !KU( ~yy ) @ #vk.17
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !PK_SIG( $V, pkV ) ▶₁ #vr.6
1: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)     )) @ #vk.4
2: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))     )) @ #vk.8
3: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.9
4: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))⊕      hkdfExpand(<$cAEAD0.2,                   h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.2, gx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.16
5: splitEqs(0)
6: splitEqs(1)
7: splitEqs(2)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 36 (precomputed): !PK_SIG( $V, pkV ) ▶₁ #vr.6
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)     )) @ #vk.4
1: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))     )) @ #vk.8
2: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.9
3: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))⊕      hkdfExpand(<$cAEAD0.2,                   h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.2, gx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.16
4: splitEqs(0)
5: splitEqs(1)
6: splitEqs(2)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 11 (directly):
    !KU( (
          hkdfExpand(<$cAEAD0, 
                      h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,
                     hkdfExtract('emptyStr', expSk))⊕
          sign(<
                <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 
                 pk(~ltk.1)>, 
                aeadEncrypt('emptyStr',
                            hkdfExpand(<$cAEAD0, 
                                        h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'
                                       >,
                                       hkdfExtract('emptyStr', expSk)),
                            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 
                             pk(~ltk.1)>,
                            $cAEAD0)
               >,
               ~ltk.1)
         )
    ) @ #vk.4
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( sign(<           <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>),             pk(~ltk.1)>,            aeadEncrypt('emptyStr',                       hkdfExpand(<$cAEAD0,                                    h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                                  hkdfExtract('emptyStr', expSk)),                       <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>),                         pk(~ltk.1)>,                       $cAEAD0)          >,          ~ltk.1)) @ #vk.17
1: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))     )) @ #vk.8
2: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.9
3: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))⊕      hkdfExpand(<$cAEAD0.2,                   h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.2, gx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.16
4: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                hkdfExtract('emptyStr', expSk))) @ #vk.18
5: splitEqs(0)
6: splitEqs(1)
7: splitEqs(2)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 55 (precomputed):
    !KU( sign(<
               <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 
                pk(~ltk.1)>, 
               aeadEncrypt('emptyStr',
                           hkdfExpand(<$cAEAD0, 
                                       h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,
                                      hkdfExtract('emptyStr', expSk)),
                           <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 
                            pk(~ltk.1)>,
                           $cAEAD0)
              >,
              ~ltk.1)
    ) @ #vk.17
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KD( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)     )) ▶₀ #vk.1
1: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))     )) @ #vk.8
2: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.9
3: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))⊕      hkdfExpand(<$cAEAD0.2,                   h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.2, gx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.16
4: splitEqs(0)
5: splitEqs(1)
6: splitEqs(2)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~ltk.1 ) @ #vk.20
1: !KU( h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>) ) @ #vk.24
2: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))     )) @ #vk.9
3: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.10
4: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))⊕      hkdfExpand(<$cAEAD0.2,                   h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.2, gx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.17
5: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                hkdfExtract('emptyStr', expSk))) @ #vk.18
6: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0,                              h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                            hkdfExtract('emptyStr', expSk)),                 <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>),                   pk(~ltk.1)>,                 $cAEAD0)) @ #vk.26
7: splitEqs(0)
8: splitEqs(1)
9: splitEqs(2)
10: !KU( pk(~ltk.1) ) @ #vk.25

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 59 (precomputed): !KU( ~ltk.1 ) @ #vk.20
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: splitEqs(1)
1: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, 'g'^x>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))     )) @ #vk.9
2: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, 'g'^x>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, 'g'^x>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, 'g'^x>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, 'g'^x>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.10
3: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      hkdfExpand(<$cAEAD0.2,                   h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.2, gx>, 'g'^~yy.1>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.19
4: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                  '2'>,                hkdfExtract('emptyStr', 'g'^(~xx*~yy)))) @ #vk.20
5: splitEqs(2)
6: !KU( 'g'^x ) @ #vk.7
7: !KU( 'g'^~xx ) @ #vk.23
8: !KU( 'g'^~yy ) @ #vk.5

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 14 (directly): splitEqs(1)
  simplified formula:
      "((#vr.28 = #i) ∨ (#i < #vr.28))"
    to
      "⊥"
  solved goal nr. 68 (simplified): (#vr.28 = #i)  ∥ (#i < #vr.28)
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( 'g'^(~xx*~yy*inv(~xx.1)) ) @ #vk.7
1: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                      'g'^(~xx*~yy*inv(~xx.1))>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))     )) @ #vk.9
2: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                      'g'^(~xx*~yy*inv(~xx.1))>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                 'g'^(~xx*~yy*inv(~xx.1))>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                                        'g'^(~xx*~yy*inv(~xx.1))>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                             'g'^(~xx*~yy*inv(~xx.1))>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.10
3: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      hkdfExpand(<$cAEAD0.2,                   h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.2, gx>, 'g'^~yy.1>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.19
4: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                  '2'>,                hkdfExtract('emptyStr', 'g'^(~xx*~yy)))) @ #vk.20
5: splitEqs(2)
6: !KU( 'g'^~xx ) @ #vk.23
7: !KU( 'g'^~yy ) @ #vk.5

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 68 (precomputed):
    !KU( 'g'^(~xx*~yy*inv(~xx.1)) ) @ #vk.7
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~yy ) @ #vk.25
1: !KU( ~xx.1 ) @ #vk.27
2: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                      'g'^(~xx*~yy*inv(~xx.1))>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))     )) @ #vk.9
3: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                      'g'^(~xx*~yy*inv(~xx.1))>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                 'g'^(~xx*~yy*inv(~xx.1))>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                                        'g'^(~xx*~yy*inv(~xx.1))>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                             'g'^(~xx*~yy*inv(~xx.1))>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.10
4: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      hkdfExpand(<$cAEAD0.2,                   h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.2, gx>, 'g'^~yy.1>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.19
5: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                  '2'>,                hkdfExtract('emptyStr', 'g'^(~xx*~yy)))) @ #vk.20
6: splitEqs(2)
7: !KU( 'g'^~xx ) @ #vk.23
8: !KU( 'g'^~yy ) @ #vk.6

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 71 (precomputed): !KU( ~yy ) @ #vk.25
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.26
1: !KU( ~yy ) @ #vk.27
2: !KU( ~xx.1 ) @ #vk.29
3: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                      'g'^(~xx*~yy*inv(~xx.1))>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))     )) @ #vk.9
4: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                      'g'^(~xx*~yy*inv(~xx.1))>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                 'g'^(~xx*~yy*inv(~xx.1))>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                                        'g'^(~xx*~yy*inv(~xx.1))>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                             'g'^(~xx*~yy*inv(~xx.1))>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.10
5: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      hkdfExpand(<$cAEAD0.2,                   h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.2, gx>, 'g'^~yy.1>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.19
6: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                  '2'>,                hkdfExtract('emptyStr', 'g'^(~xx*~yy)))) @ #vk.20
7: splitEqs(2)
8: !KU( 'g'^~xx ) @ #vk.23
9: !KU( 'g'^~yy ) @ #vk.6

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 72 (precomputed): !KU( ~xx ) @ #vk.26
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.25
1: !KU( ~xx.1 ) @ #vk.27
2: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                      'g'^(~xx*~yy*inv(~xx.1))>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))     )) @ #vk.9
3: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                      'g'^(~xx*~yy*inv(~xx.1))>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                 'g'^(~xx*~yy*inv(~xx.1))>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                                        'g'^(~xx*~yy*inv(~xx.1))>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                             'g'^(~xx*~yy*inv(~xx.1))>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.10
4: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      hkdfExpand(<$cAEAD0.2,                   h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.2, gx>, 'g'^~yy.1>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.19
5: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                  '2'>,                hkdfExtract('emptyStr', 'g'^(~xx*~yy)))) @ #vk.20
6: splitEqs(2)
7: !KU( 'g'^~xx ) @ #vk.23
8: !KU( 'g'^~yy ) @ #vk.6

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 77 (precomputed): !KU( ~xx ) @ #vk.25
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vl.1, 0) ~~> (#vk.1, 0)
1: !LTK_SIG( $V.2, ~ltk.4 ) ▶₀ #vr.10
2: !PK_SIG( $V.2, pkV ) ▶₁ #vr.10
3: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))     )) @ #vk.8
4: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.9
5: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))⊕      hkdfExpand(<$cAEAD0.2,                   h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.2, gx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.18
6: splitEqs(0)
7: splitEqs(1)
8: splitEqs(2)
9: splitEqs(7)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vl.1, 0) ~~> (#vk.1, 0)
1: StI1_SIG_SIG( $U.2, ~ltk.4, $V.2, ~xx.2, m1, ~tid.3 ) ▶₀ #vr.10
2: !PK_SIG( $V.2, pk(x) ) ▶₁ #vr.10
3: !PK_SIG( $U.2, pkU ) ▶₂ #vr.10
4: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))     )) @ #vk.8
5: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.9
6: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))⊕      hkdfExpand(<$cAEAD0.2,                   h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.2, gx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.16
7: splitEqs(0)
8: splitEqs(1)
9: splitEqs(2)
10: splitEqs(7)
11: !KU( ($V.2⊕      hkdfExpand(<$cAEAD0.3, h(<$cHash0.3, m1, gy.2>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', z.1))     )) @ #vk.20
12: !KU( (      hkdfExpand(<$cAEAD0.3, h(<$cHash0.3, m1, gy.2>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', z.1))⊕      sign(<<$V.2, h(<$cHash0.3, m1, gy.2>), pk(x)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.3, h(<$cHash0.3, m1, gy.2>), 'K_2m'>,                                   hkdfExtract('emptyStr', z.1)),                        <$V.2, h(<$cHash0.3, m1, gy.2>), pk(x)>, $cAEAD0.3)           >,           x)     )) @ #vk.21

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: CommitI( tid.3, u, v, t ) ▶₀ #vr.10
1: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))     )) @ #vk.8
2: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.9
3: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))⊕      hkdfExpand(<$cAEAD0.2,                   h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.2, gx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.16
4: splitEqs(0)
5: splitEqs(1)
6: splitEqs(2)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 58 (precomputed):
    CommitI( tid.3, u, v, t ) ▶₀ #vr.10
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: CommitR( tid.3, u, v, t ) ▶₀ #vr.10
1: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))     )) @ #vk.8
2: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.9
3: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))⊕      hkdfExpand(<$cAEAD0.2,                   h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.2, gx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.16
4: splitEqs(0)
5: splitEqs(1)
6: splitEqs(2)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 58 (precomputed):
    CommitR( tid.3, u, v, t ) ▶₀ #vr.10
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.11, 0) ~~> (#vk.1, 0)
1: StI1_SIG_SIG( $U.2, ~ltk.4, $V.2, ~xx.2, m1, ~tid.3 ) ▶₀ #vr.10
2: !PK_SIG( $V.2, pk(x) ) ▶₁ #vr.10
3: !PK_SIG( $U.2, pkU ) ▶₂ #vr.10
4: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))     )) @ #vk.8
5: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.9
6: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))⊕      hkdfExpand(<$cAEAD0.2,                   h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.2, gx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.16
7: splitEqs(0)
8: splitEqs(1)
9: splitEqs(2)
10: splitEqs(7)
11: !KU( ($V.2⊕      hkdfExpand(<$cAEAD0.3, h(<$cHash0.3, m1, gy.2>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', z.1))     )) @ #vk.20
12: !KU( (      hkdfExpand(<$cAEAD0.3, h(<$cHash0.3, m1, gy.2>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', z.1))⊕      sign(<<$V.2, h(<$cHash0.3, m1, gy.2>), pk(x)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.3, h(<$cHash0.3, m1, gy.2>), 'K_2m'>,                                   hkdfExtract('emptyStr', z.1)),                        <$V.2, h(<$cHash0.3, m1, gy.2>), pk(x)>, $cAEAD0.3)           >,           x)     )) @ #vk.21

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.12, 0) ~~> (#vk.1, 0)
1: StI1_SIG_SIG( $U.2, ~ltk.4, $V.2, ~xx.2, m1, ~tid.3 ) ▶₀ #vr.10
2: !PK_SIG( $V.2, pk(x) ) ▶₁ #vr.10
3: !PK_SIG( $U.2, pkU ) ▶₂ #vr.10
4: !KU( sign(<           <$U.2,             h(<$cHash0.3, h(<$cHash0.3, m1, gy.2>),                <                ($V.2⊕                 hkdfExpand(<$cAEAD0.3, h(<$cHash0.3, m1, gy.2>), 'K_2e', '1'>,                            hkdfExtract('emptyStr', z.1))                ),                 (                 hkdfExpand(<$cAEAD0.3, h(<$cHash0.3, m1, gy.2>), 'K_2e', '2'>,                            hkdfExtract('emptyStr', z.1))⊕                 sign(<<$V.2, h(<$cHash0.3, m1, gy.2>), pk(x)>,                        aeadEncrypt('emptyStr',                                   hkdfExpand(<$cAEAD0.3, h(<$cHash0.3, m1, gy.2>), 'K_2m'>,                                              hkdfExtract('emptyStr', z.1)),                                   <$V.2, h(<$cHash0.3, m1, gy.2>), pk(x)>, $cAEAD0.3)                      >,                      x)                )               >,                'emptyStr'>),             pkU>,            aeadEncrypt('emptyStr',                       hkdfExpand(<$cAEAD0.3,                                    h(<$cHash0.3, h(<$cHash0.3, m1, gy.2>),                                       <                                       ($V.2⊕                                        hkdfExpand(<$cAEAD0.3, h(<$cHash0.3, m1, gy.2>), 'K_2e', '1'                                                   >,                                                   hkdfExtract('emptyStr', z.1))                                       ),                                        (                                        hkdfExpand(<$cAEAD0.3, h(<$cHash0.3, m1, gy.2>), 'K_2e', '2'                                                   >,                                                   hkdfExtract('emptyStr', z.1))⊕                                        sign(<<$V.2, h(<$cHash0.3, m1, gy.2>), pk(x)>,                                               aeadEncrypt('emptyStr',                                                          hkdfExpand(<$cAEAD0.3,                                                                       h(<$cHash0.3, m1, gy.2>),                                                                       'K_2m'>,                                                                     hkdfExtract('emptyStr', z.1)),                                                          <$V.2, h(<$cHash0.3, m1, gy.2>), pk(x)>,                                                          $cAEAD0.3)                                             >,                                             x)                                       )                                      >,                                       'emptyStr'>),                                    'K_3m'>,                                  hkdfExtract('emptyStr', z.1)),                       <$U.2,                         h(<$cHash0.3, h(<$cHash0.3, m1, gy.2>),                            <                            ($V.2⊕                             hkdfExpand(<$cAEAD0.3, h(<$cHash0.3, m1, gy.2>), 'K_2e', '1'>,                                        hkdfExtract('emptyStr', z.1))                            ),                             (                             hkdfExpand(<$cAEAD0.3, h(<$cHash0.3, m1, gy.2>), 'K_2e', '2'>,                                        hkdfExtract('emptyStr', z.1))⊕                             sign(<<$V.2, h(<$cHash0.3, m1, gy.2>), pk(x)>,                                    aeadEncrypt('emptyStr',                                               hkdfExpand(<$cAEAD0.3, h(<$cHash0.3, m1, gy.2>),                                                            'K_2m'>,                                                          hkdfExtract('emptyStr', z.1)),                                               <$V.2, h(<$cHash0.3, m1, gy.2>), pk(x)>, $cAEAD0.3)                                  >,                                  x)                            )                           >,                            'emptyStr'>),                         pkU>,                       $cAEAD0.3)          >,          ~ltk.4)) @ #vk.25
5: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))     )) @ #vk.8
6: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.9
7: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))⊕      hkdfExpand(<$cAEAD0.2,                   h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.2, gx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.16
8: splitEqs(0)
9: splitEqs(1)
10: splitEqs(2)
11: splitEqs(7)
12: !KU( ($V.2⊕      hkdfExpand(<$cAEAD0.3, h(<$cHash0.3, m1, gy.2>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', z.1))     )) @ #vk.20
13: !KU( (      hkdfExpand(<$cAEAD0.3, h(<$cHash0.3, m1, gy.2>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', z.1))⊕      sign(<<$V.2, h(<$cHash0.3, m1, gy.2>), pk(x)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.3, h(<$cHash0.3, m1, gy.2>), 'K_2m'>,                                   hkdfExtract('emptyStr', z.1)),                        <$V.2, h(<$cHash0.3, m1, gy.2>), pk(x)>, $cAEAD0.3)           >,           x)     )) @ #vk.21

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.12, 0) ~~> (#vk.1, 0)
1: StI1_SIG_SIG( $U.2, ~ltk.4, $V.2, ~xx.2, m1, ~tid.3 ) ▶₀ #vr.10
2: !PK_SIG( $V.2, pk(x) ) ▶₁ #vr.10
3: !PK_SIG( $U.2, pkU ) ▶₂ #vr.10
4: !KU( sign(<           <$U.2,             h(<$cHash0.3, h(<$cHash0.3, m1, gy.2>),                <                ($V.2⊕                 hkdfExpand(<$cAEAD0.3, h(<$cHash0.3, m1, gy.2>), 'K_2e', '1'>,                            hkdfExtract('emptyStr', z.1))                ),                 (                 hkdfExpand(<$cAEAD0.3, h(<$cHash0.3, m1, gy.2>), 'K_2e', '2'>,                            hkdfExtract('emptyStr', z.1))⊕                 sign(<<$V.2, h(<$cHash0.3, m1, gy.2>), pk(x)>,                        aeadEncrypt('emptyStr',                                   hkdfExpand(<$cAEAD0.3, h(<$cHash0.3, m1, gy.2>), 'K_2m'>,                                              hkdfExtract('emptyStr', z.1)),                                   <$V.2, h(<$cHash0.3, m1, gy.2>), pk(x)>, $cAEAD0.3)                      >,                      x)                )               >,                'emptyStr'>),             pkU>,            aeadEncrypt('emptyStr',                       hkdfExpand(<$cAEAD0.3,                                    h(<$cHash0.3, h(<$cHash0.3, m1, gy.2>),                                       <                                       ($V.2⊕                                        hkdfExpand(<$cAEAD0.3, h(<$cHash0.3, m1, gy.2>), 'K_2e', '1'                                                   >,                                                   hkdfExtract('emptyStr', z.1))                                       ),                                        (                                        hkdfExpand(<$cAEAD0.3, h(<$cHash0.3, m1, gy.2>), 'K_2e', '2'                                                   >,                                                   hkdfExtract('emptyStr', z.1))⊕                                        sign(<<$V.2, h(<$cHash0.3, m1, gy.2>), pk(x)>,                                               aeadEncrypt('emptyStr',                                                          hkdfExpand(<$cAEAD0.3,                                                                       h(<$cHash0.3, m1, gy.2>),                                                                       'K_2m'>,                                                                     hkdfExtract('emptyStr', z.1)),                                                          <$V.2, h(<$cHash0.3, m1, gy.2>), pk(x)>,                                                          $cAEAD0.3)                                             >,                                             x)                                       )                                      >,                                       'emptyStr'>),                                    'K_3m'>,                                  hkdfExtract('emptyStr', z.1)),                       <$U.2,                         h(<$cHash0.3, h(<$cHash0.3, m1, gy.2>),                            <                            ($V.2⊕                             hkdfExpand(<$cAEAD0.3, h(<$cHash0.3, m1, gy.2>), 'K_2e', '1'>,                                        hkdfExtract('emptyStr', z.1))                            ),                             (                             hkdfExpand(<$cAEAD0.3, h(<$cHash0.3, m1, gy.2>), 'K_2e', '2'>,                                        hkdfExtract('emptyStr', z.1))⊕                             sign(<<$V.2, h(<$cHash0.3, m1, gy.2>), pk(x)>,                                    aeadEncrypt('emptyStr',                                               hkdfExpand(<$cAEAD0.3, h(<$cHash0.3, m1, gy.2>),                                                            'K_2m'>,                                                          hkdfExtract('emptyStr', z.1)),                                               <$V.2, h(<$cHash0.3, m1, gy.2>), pk(x)>, $cAEAD0.3)                                  >,                                  x)                            )                           >,                            'emptyStr'>),                         pkU>,                       $cAEAD0.3)          >,          ~ltk.4)) @ #vk.26
5: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))     )) @ #vk.8
6: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.9
7: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))⊕      hkdfExpand(<$cAEAD0.2,                   h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.2, gx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.16
8: splitEqs(0)
9: splitEqs(1)
10: splitEqs(2)
11: splitEqs(7)
12: !KU( h(<$cHash0.3, h(<$cHash0.3, m1, gy.2>),         <         ($V.2⊕          hkdfExpand(<$cAEAD0.3, h(<$cHash0.3, m1, gy.2>), 'K_2e', '1'>,                     hkdfExtract('emptyStr', z.1))         ),          (          hkdfExpand(<$cAEAD0.3, h(<$cHash0.3, m1, gy.2>), 'K_2e', '2'>,                     hkdfExtract('emptyStr', z.1))⊕          sign(<<$V.2, h(<$cHash0.3, m1, gy.2>), pk(x)>,                 aeadEncrypt('emptyStr',                            hkdfExpand(<$cAEAD0.3, h(<$cHash0.3, m1, gy.2>), 'K_2m'>,                                       hkdfExtract('emptyStr', z.1)),                            <$V.2, h(<$cHash0.3, m1, gy.2>), pk(x)>, $cAEAD0.3)               >,               x)         )        >,         'emptyStr'>)) @ #vk.23
13: !KU( ($V.2⊕      hkdfExpand(<$cAEAD0.3, h(<$cHash0.3, m1, gy.2>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', z.1))     )) @ #vk.20
14: !KU( (      hkdfExpand(<$cAEAD0.3, h(<$cHash0.3, m1, gy.2>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', z.1))⊕      sign(<<$V.2, h(<$cHash0.3, m1, gy.2>), pk(x)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.3, h(<$cHash0.3, m1, gy.2>), 'K_2m'>,                                   hkdfExtract('emptyStr', z.1)),                        <$V.2, h(<$cHash0.3, m1, gy.2>), pk(x)>, $cAEAD0.3)           >,           x)     )) @ #vk.21

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.11, 0) ~~> (#vk.1, 0)
1: !LTK_SIG( $V.2, ~ltk.4 ) ▶₀ #vr.10
2: !PK_SIG( $V.2, pkV ) ▶₁ #vr.10
3: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))     )) @ #vk.8
4: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.9
5: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))⊕      hkdfExpand(<$cAEAD0.2,                   h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.2, gx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.18
6: splitEqs(0)
7: splitEqs(1)
8: splitEqs(2)
9: splitEqs(7)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.12, 0) ~~> (#vk.1, 0)
1: !LTK_SIG( $V.2, ~ltk.4 ) ▶₀ #vr.10
2: !PK_SIG( $V.2, pkV ) ▶₁ #vr.10
3: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))     )) @ #vk.8
4: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.9
5: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))⊕      hkdfExpand(<$cAEAD0.2,                   h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.2, gx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.18
6: splitEqs(0)
7: splitEqs(1)
8: splitEqs(2)
9: splitEqs(7)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.12, 0) ~~> (#vk.1, 0)
1: !LTK_SIG( $V.2, ~ltk.4 ) ▶₀ #vr.10
2: !PK_SIG( $V.2, pkV ) ▶₁ #vr.10
3: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))     )) @ #vk.8
4: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.9
5: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))⊕      hkdfExpand(<$cAEAD0.2,                   h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.2, gx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.18
6: splitEqs(0)
7: splitEqs(1)
8: splitEqs(2)
9: splitEqs(7)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.13, 0) ~~> (#vk.1, 0)
1: !LTK_SIG( $V.2, ~ltk.4 ) ▶₀ #vr.10
2: !PK_SIG( $V.2, pkV ) ▶₁ #vr.10
3: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))     )) @ #vk.8
4: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.9
5: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))⊕      hkdfExpand(<$cAEAD0.2,                   h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.2, gx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.18
6: splitEqs(0)
7: splitEqs(1)
8: splitEqs(2)
9: splitEqs(7)
10: !KU( ($V.2⊕z.2) ) @ #vk.22

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.13, 0) ~~> (#vk.1, 0)
1: !LTK_SIG( $V.2, ~ltk.4 ) ▶₀ #vr.10
2: !PK_SIG( $V.2, pkV ) ▶₁ #vr.10
3: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))     )) @ #vk.8
4: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.9
5: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))⊕      hkdfExpand(<$cAEAD0.2,                   h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.2, gx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.18
6: !KU( (z.2⊕      hkdfExpand(<$cAEAD0.3,                   h(<$cHash0.3, <'SIG', 'SIG', $cSUITE0.3, gx.1>, 'g'^~yy.1>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', z.1))     )) @ #vk.22
7: splitEqs(0)
8: splitEqs(1)
9: splitEqs(2)
10: splitEqs(7)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.13, 0) ~~> (#vk.1, 0)
1: !LTK_SIG( $V.2, ~ltk.4 ) ▶₀ #vr.10
2: !PK_SIG( $V.2, pkV ) ▶₁ #vr.10
3: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))     )) @ #vk.8
4: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.9
5: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))⊕      hkdfExpand(<$cAEAD0.2,                   h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.2, gx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.18
6: splitEqs(0)
7: splitEqs(1)
8: splitEqs(2)
9: splitEqs(7)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.13, 0) ~~> (#vk.1, 0)
1: !LTK_SIG( $V.2, ~ltk.4 ) ▶₀ #vr.10
2: !PK_SIG( $V.2, pkV ) ▶₁ #vr.10
3: !KU( sign(<           <$V.2,             h(<$cHash0.3, <'SIG', 'SIG', $cSUITE0.3, gx.1>, 'g'^~yy.1>), pkV>,            aeadEncrypt('emptyStr',                       hkdfExpand(<$cAEAD0.3,                                    h(<$cHash0.3, <'SIG', 'SIG', $cSUITE0.3, gx.1>, 'g'^~yy.1>),                                    'K_2m'>,                                  hkdfExtract('emptyStr', z.1)),                       <$V.2,                         h(<$cHash0.3, <'SIG', 'SIG', $cSUITE0.3, gx.1>, 'g'^~yy.1>), pkV>,                       $cAEAD0.3)          >,          ~ltk.4)) @ #vk.22
4: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))     )) @ #vk.8
5: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.9
6: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))⊕      hkdfExpand(<$cAEAD0.2,                   h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.2, gx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.18
7: splitEqs(0)
8: splitEqs(1)
9: splitEqs(2)
10: splitEqs(7)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !LTK_SIG( $V, ~ltk.1 ) ▶₀ #vr.10
1: !PK_SIG( $V, pk(~ltk.1) ) ▶₁ #vr.10
2: splitEqs(1)
3: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, 'g'^x>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))     )) @ #vk.8
4: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, 'g'^x>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, 'g'^x>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, 'g'^x>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, 'g'^x>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.9
5: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      hkdfExpand(<$cAEAD0.2,                   h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.2, gx>, 'g'^~yy.1>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.18
6: splitEqs(2)
7: !KU( 'g'^x ) @ #vk.6
8: !KU( 'g'^~yy ) @ #vk.4
9: !KU( 'g'^~xx ) @ #vk.21

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 58 (precomputed): !LTK_SIG( $V, ~ltk.1 ) ▶₀ #vr.10
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.13, 0) ~~> (#vk.1, 0)
1: !LTK_SIG( $V.2, ~ltk.4 ) ▶₀ #vr.10
2: !PK_SIG( $V.2, pkV ) ▶₁ #vr.10
3: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))     )) @ #vk.8
4: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.9
5: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))⊕      hkdfExpand(<$cAEAD0.2,                   h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.2, gx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.18
6: !KU( (z.2⊕      hkdfExpand(<$cAEAD0.3,                   h(<$cHash0.3, <'SIG', 'SIG', $cSUITE0.3, gx.1>, 'g'^~yy.1>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', z.1))     )) @ #vk.22
7: splitEqs(0)
8: splitEqs(1)
9: splitEqs(2)
10: splitEqs(7)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.13, 0) ~~> (#vk.1, 0)
1: !LTK_SIG( $V.2, ~ltk.4 ) ▶₀ #vr.10
2: !PK_SIG( $V.2, pkV ) ▶₁ #vr.10
3: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))     )) @ #vk.8
4: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.9
5: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))⊕      hkdfExpand(<$cAEAD0.2,                   h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.2, gx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.18
6: !KU( (z.2⊕      sign(<            <$V.2,              h(<$cHash0.3, <'SIG', 'SIG', $cSUITE0.3, gx.1>, 'g'^~yy.1>), pkV>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.3,                                     h(<$cHash0.3, <'SIG', 'SIG', $cSUITE0.3, gx.1>, 'g'^~yy.1>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', z.1)),                        <$V.2,                          h(<$cHash0.3, <'SIG', 'SIG', $cSUITE0.3, gx.1>, 'g'^~yy.1>), pkV>,                        $cAEAD0.3)           >,           ~ltk.4)     )) @ #vk.22
7: splitEqs(0)
8: splitEqs(1)
9: splitEqs(2)
10: splitEqs(7)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.13, 0) ~~> (#vk.1, 0)
1: !LTK_SIG( $V.2, ~ltk.4 ) ▶₀ #vr.10
2: !PK_SIG( $V.2, pkV ) ▶₁ #vr.10
3: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))     )) @ #vk.8
4: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.9
5: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))⊕      hkdfExpand(<$cAEAD0.2,                   h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.2, gx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.18
6: !KU( hkdfExpand(<$cAEAD0.3,                  h(<$cHash0.3, <'SIG', 'SIG', $cSUITE0.3, gx.1>, 'g'^~yy.1>),                  'K_2e', '2'>,                hkdfExtract('emptyStr', z.1))) @ #vk.22
7: splitEqs(0)
8: splitEqs(1)
9: splitEqs(2)
10: splitEqs(7)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !PK_SIG( $V, pk(~ltk.1) ) ▶₁ #vr.10
1: splitEqs(1)
2: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, 'g'^x>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))     )) @ #vk.8
3: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, 'g'^x>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, 'g'^x>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, 'g'^x>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, 'g'^x>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.9
4: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      hkdfExpand(<$cAEAD0.2,                   h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.2, gx>, 'g'^~yy.1>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.18
5: splitEqs(2)
6: !KU( 'g'^x ) @ #vk.6
7: !KU( 'g'^~yy ) @ #vk.4
8: !KU( 'g'^~xx ) @ #vk.21

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 59 (precomputed):
    !PK_SIG( $V, pk(~ltk.1) ) ▶₁ #vr.10
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: splitEqs(1)
1: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, 'g'^x>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))     )) @ #vk.8
2: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, 'g'^x>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, 'g'^x>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, 'g'^x>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, 'g'^x>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.9
3: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      hkdfExpand(<$cAEAD0.2,                   h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.2, gx>, 'g'^~yy.1>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.18
4: splitEqs(2)
5: !KU( 'g'^x ) @ #vk.6
6: !KU( 'g'^~yy ) @ #vk.4
7: !KU( 'g'^~xx ) @ #vk.21

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 14 (directly): splitEqs(1)
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( 'g'^(~xx*~yy*inv(~xx.1)) ) @ #vk.6
1: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                      'g'^(~xx*~yy*inv(~xx.1))>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))     )) @ #vk.8
2: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                      'g'^(~xx*~yy*inv(~xx.1))>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                 'g'^(~xx*~yy*inv(~xx.1))>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                                        'g'^(~xx*~yy*inv(~xx.1))>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                             'g'^(~xx*~yy*inv(~xx.1))>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.9
3: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      hkdfExpand(<$cAEAD0.2,                   h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.2, gx>, 'g'^~yy.1>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.18
4: splitEqs(2)
5: !KU( 'g'^~yy ) @ #vk.4
6: !KU( 'g'^~xx ) @ #vk.21

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 72 (precomputed):
    !KU( 'g'^(~xx*~yy*inv(~xx.1)) ) @ #vk.6
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.24
1: !KU( ~yy ) @ #vk.25
2: !KU( ~xx.1 ) @ #vk.27
3: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                      'g'^(~xx*~yy*inv(~xx.1))>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))     )) @ #vk.8
4: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                      'g'^(~xx*~yy*inv(~xx.1))>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                 'g'^(~xx*~yy*inv(~xx.1))>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                                        'g'^(~xx*~yy*inv(~xx.1))>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                             'g'^(~xx*~yy*inv(~xx.1))>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.9
5: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      hkdfExpand(<$cAEAD0.2,                   h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.2, gx>, 'g'^~yy.1>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.18
6: splitEqs(2)
7: !KU( 'g'^~yy ) @ #vk.5
8: !KU( 'g'^~xx ) @ #vk.21

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 79 (precomputed): !KU( ~xx ) @ #vk.24
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~yy ) @ #vk.23
1: !KU( ~xx.1 ) @ #vk.25
2: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                      'g'^(~xx*~yy*inv(~xx.1))>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))     )) @ #vk.8
3: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                      'g'^(~xx*~yy*inv(~xx.1))>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                 'g'^(~xx*~yy*inv(~xx.1))>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                                        'g'^(~xx*~yy*inv(~xx.1))>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                             'g'^(~xx*~yy*inv(~xx.1))>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.9
4: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      hkdfExpand(<$cAEAD0.2,                   h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.2, gx>, 'g'^~yy.1>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.18
5: splitEqs(2)
6: !KU( 'g'^~yy ) @ #vk.5
7: !KU( 'g'^~xx ) @ #vk.21

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 78 (precomputed): !KU( ~yy ) @ #vk.23
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.23
1: !KU( ~xx.1 ) @ #vk.25
2: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                      'g'^(~xx*~yy*inv(~xx.1))>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))     )) @ #vk.8
3: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                      'g'^(~xx*~yy*inv(~xx.1))>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                 'g'^(~xx*~yy*inv(~xx.1))>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                                        'g'^(~xx*~yy*inv(~xx.1))>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                             'g'^(~xx*~yy*inv(~xx.1))>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.9
4: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      hkdfExpand(<$cAEAD0.2,                   h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.2, gx>, 'g'^~yy.1>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.18
5: splitEqs(2)
6: !KU( 'g'^~yy ) @ #vk.5
7: !KU( 'g'^~xx ) @ #vk.21

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 84 (precomputed): !KU( ~xx ) @ #vk.23
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !LTK_SIG( $V.2, ~ltk.4 ) ▶₀ #vr.10
1: !PK_SIG( $V.2, pkV ) ▶₁ #vr.10
2: splitEqs(1)
3: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, 'g'^x>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))     )) @ #vk.8
4: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, 'g'^x>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, 'g'^x>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, 'g'^x>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, 'g'^x>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.9
5: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      hkdfExpand(<$cAEAD0.2,                   h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.2, gx>, 'g'^~yy.1>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.18
6: !KU( (      sign(<            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'                                   >,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)⊕      sign(<            <$V.2, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pkV>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'                                   >,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V.2, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pkV>,                        $cAEAD0)           >,           ~ltk.4)     )) @ #vk.22
7: splitEqs(2)
8: !KU( 'g'^x ) @ #vk.6
9: !KU( 'g'^~yy ) @ #vk.4
10: !KU( 'g'^~xx ) @ #vk.21

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 58 (precomputed):
    !LTK_SIG( $V.2, ~ltk.4 ) ▶₀ #vr.10
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !PK_SIG( $V.2, pkV ) ▶₁ #vr.10
1: splitEqs(1)
2: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, 'g'^x>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))     )) @ #vk.8
3: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, 'g'^x>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, 'g'^x>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, 'g'^x>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, 'g'^x>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.9
4: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      hkdfExpand(<$cAEAD0.2,                   h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.2, gx>, 'g'^~yy.1>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.18
5: !KU( (      sign(<            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'                                   >,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)⊕      sign(<            <$V.2, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pkV>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'                                   >,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V.2, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pkV>,                        $cAEAD0)           >,           ~ltk.4)     )) @ #vk.22
6: splitEqs(2)
7: !KU( 'g'^x ) @ #vk.6
8: !KU( 'g'^~yy ) @ #vk.4
9: !KU( 'g'^~xx ) @ #vk.21

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 59 (precomputed): !PK_SIG( $V.2, pkV ) ▶₁ #vr.10
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: splitEqs(1)
1: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, 'g'^x>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))     )) @ #vk.8
2: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, 'g'^x>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, 'g'^x>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, 'g'^x>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, 'g'^x>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.9
3: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      hkdfExpand(<$cAEAD0.2,                   h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.2, gx>, 'g'^~yy.1>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.18
4: !KU( (      sign(<            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'                                   >,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)⊕      sign(<            <$V.2, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.4)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'                                   >,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V.2, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.4)>,                        $cAEAD0)           >,           ~ltk.4)     )) @ #vk.22
5: splitEqs(2)
6: !KU( 'g'^x ) @ #vk.6
7: !KU( 'g'^~yy ) @ #vk.4
8: !KU( 'g'^~xx ) @ #vk.21

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 14 (directly): splitEqs(1)
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( 'g'^(~xx*~yy*inv(~xx.1)) ) @ #vk.6
1: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                      'g'^(~xx*~yy*inv(~xx.1))>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))     )) @ #vk.8
2: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                      'g'^(~xx*~yy*inv(~xx.1))>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                 'g'^(~xx*~yy*inv(~xx.1))>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                                        'g'^(~xx*~yy*inv(~xx.1))>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                             'g'^(~xx*~yy*inv(~xx.1))>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.9
3: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      hkdfExpand(<$cAEAD0.2,                   h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.2, gx>, 'g'^~yy.1>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.18
4: !KU( (      sign(<            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'                                   >,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)⊕      sign(<            <$V.2, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.4)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'                                   >,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V.2, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.4)>,                        $cAEAD0)           >,           ~ltk.4)     )) @ #vk.22
5: splitEqs(2)
6: !KU( 'g'^~yy ) @ #vk.4
7: !KU( 'g'^~xx ) @ #vk.21

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 76 (precomputed):
    !KU( 'g'^(~xx*~yy*inv(~xx.1)) ) @ #vk.6
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.25
1: !KU( ~yy ) @ #vk.26
2: !KU( ~xx.1 ) @ #vk.28
3: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                      'g'^(~xx*~yy*inv(~xx.1))>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))     )) @ #vk.8
4: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                      'g'^(~xx*~yy*inv(~xx.1))>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                 'g'^(~xx*~yy*inv(~xx.1))>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                                        'g'^(~xx*~yy*inv(~xx.1))>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                             'g'^(~xx*~yy*inv(~xx.1))>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.9
5: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      hkdfExpand(<$cAEAD0.2,                   h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.2, gx>, 'g'^~yy.1>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.18
6: !KU( (      sign(<            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'                                   >,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)⊕      sign(<            <$V.2, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.4)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'                                   >,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V.2, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.4)>,                        $cAEAD0)           >,           ~ltk.4)     )) @ #vk.22
7: splitEqs(2)
8: !KU( 'g'^~yy ) @ #vk.5
9: !KU( 'g'^~xx ) @ #vk.21

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 83 (precomputed): !KU( ~xx ) @ #vk.25
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~yy ) @ #vk.24
1: !KU( ~xx.1 ) @ #vk.26
2: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                      'g'^(~xx*~yy*inv(~xx.1))>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))     )) @ #vk.8
3: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                      'g'^(~xx*~yy*inv(~xx.1))>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                 'g'^(~xx*~yy*inv(~xx.1))>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                                        'g'^(~xx*~yy*inv(~xx.1))>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                             'g'^(~xx*~yy*inv(~xx.1))>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.9
4: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      hkdfExpand(<$cAEAD0.2,                   h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.2, gx>, 'g'^~yy.1>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.18
5: !KU( (      sign(<            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'                                   >,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)⊕      sign(<            <$V.2, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.4)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'                                   >,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V.2, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.4)>,                        $cAEAD0)           >,           ~ltk.4)     )) @ #vk.22
6: splitEqs(2)
7: !KU( 'g'^~yy ) @ #vk.5
8: !KU( 'g'^~xx ) @ #vk.21

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 82 (precomputed): !KU( ~yy ) @ #vk.24
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.24
1: !KU( ~xx.1 ) @ #vk.26
2: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                      'g'^(~xx*~yy*inv(~xx.1))>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))     )) @ #vk.8
3: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                      'g'^(~xx*~yy*inv(~xx.1))>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                 'g'^(~xx*~yy*inv(~xx.1))>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                                        'g'^(~xx*~yy*inv(~xx.1))>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                             'g'^(~xx*~yy*inv(~xx.1))>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.9
4: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      hkdfExpand(<$cAEAD0.2,                   h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.2, gx>, 'g'^~yy.1>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.18
5: !KU( (      sign(<            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'                                   >,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)⊕      sign(<            <$V.2, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.4)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'                                   >,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V.2, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.4)>,                        $cAEAD0)           >,           ~ltk.4)     )) @ #vk.22
6: splitEqs(2)
7: !KU( 'g'^~yy ) @ #vk.5
8: !KU( 'g'^~xx ) @ #vk.21

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 88 (precomputed): !KU( ~xx ) @ #vk.24
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !PK_SIG( $V.2, pkV ) ▶₁ #vr.6
1: splitEqs(1)
2: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                   '2'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      sign(<            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'                                   >,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)     )) @ #vk.4
3: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, 'g'^x>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))     )) @ #vk.8
4: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, 'g'^x>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, 'g'^x>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, 'g'^x>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, 'g'^x>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.9
5: !KU( 'g'^x ) @ #vk.6
6: !KU( ($V⊕$V.2) ) @ #vk.16
7: !KU( 'g'^~yy ) @ #vk.3
8: !KU( 'g'^~xx ) @ #vk.15

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 36 (precomputed): !PK_SIG( $V.2, pkV ) ▶₁ #vr.6
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: splitEqs(1)
1: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                   '2'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      sign(<            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'                                   >,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)     )) @ #vk.4
2: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, 'g'^x>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))     )) @ #vk.8
3: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, 'g'^x>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, 'g'^x>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, 'g'^x>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, 'g'^x>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.9
4: !KU( 'g'^x ) @ #vk.6
5: !KU( ($V⊕$V.2) ) @ #vk.16
6: !KU( 'g'^~yy ) @ #vk.3
7: !KU( 'g'^~xx ) @ #vk.15

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 14 (directly): splitEqs(1)
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( 'g'^(~xx*~yy*inv(~xx.1)) ) @ #vk.6
1: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                   '2'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      sign(<            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'                                   >,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)     )) @ #vk.4
2: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                      'g'^(~xx*~yy*inv(~xx.1))>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))     )) @ #vk.8
3: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                      'g'^(~xx*~yy*inv(~xx.1))>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                 'g'^(~xx*~yy*inv(~xx.1))>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                                        'g'^(~xx*~yy*inv(~xx.1))>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                             'g'^(~xx*~yy*inv(~xx.1))>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.9
4: !KU( ($V⊕$V.2) ) @ #vk.16
5: !KU( 'g'^~yy ) @ #vk.3
6: !KU( 'g'^~xx ) @ #vk.15

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 53 (precomputed):
    !KU( 'g'^(~xx*~yy*inv(~xx.1)) ) @ #vk.6
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.18
1: !KU( ~xx.1 ) @ #vk.20
2: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                   '2'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      sign(<            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'                                   >,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)     )) @ #vk.5
3: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                      'g'^(~xx*~yy*inv(~xx.1))>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))     )) @ #vk.8
4: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                      'g'^(~xx*~yy*inv(~xx.1))>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                 'g'^(~xx*~yy*inv(~xx.1))>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                                        'g'^(~xx*~yy*inv(~xx.1))>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                             'g'^(~xx*~yy*inv(~xx.1))>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.9
5: !KU( ($V⊕$V.2) ) @ #vk.16
6: !KU( 'g'^~yy ) @ #vk.4
7: !KU( 'g'^~xx ) @ #vk.15

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 65 (precomputed): !KU( ~xx ) @ #vk.18
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.19
1: !KU( ~yy ) @ #vk.20
2: !KU( ~xx.1 ) @ #vk.22
3: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                   '2'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      sign(<            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'                                   >,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)     )) @ #vk.5
4: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                      'g'^(~xx*~yy*inv(~xx.1))>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))     )) @ #vk.8
5: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                      'g'^(~xx*~yy*inv(~xx.1))>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                 'g'^(~xx*~yy*inv(~xx.1))>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                                        'g'^(~xx*~yy*inv(~xx.1))>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                             'g'^(~xx*~yy*inv(~xx.1))>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.9
6: !KU( ($V⊕$V.2) ) @ #vk.16
7: !KU( 'g'^~yy ) @ #vk.4
8: !KU( 'g'^~xx ) @ #vk.15

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 60 (precomputed): !KU( ~xx ) @ #vk.19
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~yy ) @ #vk.18
1: !KU( ~xx.1 ) @ #vk.20
2: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                   '2'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      sign(<            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'                                   >,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)     )) @ #vk.5
3: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                      'g'^(~xx*~yy*inv(~xx.1))>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))     )) @ #vk.8
4: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                      'g'^(~xx*~yy*inv(~xx.1))>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                 'g'^(~xx*~yy*inv(~xx.1))>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                                        'g'^(~xx*~yy*inv(~xx.1))>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                             'g'^(~xx*~yy*inv(~xx.1))>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.9
5: !KU( ($V⊕$V.2) ) @ #vk.16
6: !KU( 'g'^~yy ) @ #vk.4
7: !KU( 'g'^~xx ) @ #vk.15

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 59 (precomputed): !KU( ~yy ) @ #vk.18
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: splitEqs(1)
1: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, 'g'^x>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))     )) @ #vk.8
2: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, 'g'^x>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, 'g'^x>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, 'g'^x>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, 'g'^x>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.9
3: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                  '1'>,                hkdfExtract('emptyStr', 'g'^(~xx*~yy)))) @ #vk.10
4: !KU( 'g'^x ) @ #vk.6
5: !KU( 'g'^~yy ) @ #vk.4
6: !KU( 'g'^~xx ) @ #vk.17

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 14 (directly): splitEqs(1)
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( 'g'^(~xx*~yy*inv(~xx.1)) ) @ #vk.6
1: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                      'g'^(~xx*~yy*inv(~xx.1))>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))     )) @ #vk.8
2: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                      'g'^(~xx*~yy*inv(~xx.1))>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                 'g'^(~xx*~yy*inv(~xx.1))>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                                        'g'^(~xx*~yy*inv(~xx.1))>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                             'g'^(~xx*~yy*inv(~xx.1))>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.9
3: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                  '1'>,                hkdfExtract('emptyStr', 'g'^(~xx*~yy)))) @ #vk.10
4: !KU( 'g'^~yy ) @ #vk.4
5: !KU( 'g'^~xx ) @ #vk.17

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 51 (precomputed):
    !KU( 'g'^(~xx*~yy*inv(~xx.1)) ) @ #vk.6
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.20
1: !KU( ~yy ) @ #vk.21
2: !KU( ~xx.1 ) @ #vk.23
3: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                      'g'^(~xx*~yy*inv(~xx.1))>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))     )) @ #vk.8
4: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                      'g'^(~xx*~yy*inv(~xx.1))>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                 'g'^(~xx*~yy*inv(~xx.1))>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                                        'g'^(~xx*~yy*inv(~xx.1))>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                             'g'^(~xx*~yy*inv(~xx.1))>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.9
5: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                  '1'>,                hkdfExtract('emptyStr', 'g'^(~xx*~yy)))) @ #vk.10
6: !KU( 'g'^~yy ) @ #vk.5
7: !KU( 'g'^~xx ) @ #vk.17

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 58 (precomputed): !KU( ~xx ) @ #vk.20
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~yy ) @ #vk.19
1: !KU( ~xx.1 ) @ #vk.21
2: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                      'g'^(~xx*~yy*inv(~xx.1))>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))     )) @ #vk.8
3: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                      'g'^(~xx*~yy*inv(~xx.1))>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                 'g'^(~xx*~yy*inv(~xx.1))>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                                        'g'^(~xx*~yy*inv(~xx.1))>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                             'g'^(~xx*~yy*inv(~xx.1))>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.9
4: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                  '1'>,                hkdfExtract('emptyStr', 'g'^(~xx*~yy)))) @ #vk.10
5: !KU( 'g'^~yy ) @ #vk.5
6: !KU( 'g'^~xx ) @ #vk.17

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 57 (precomputed): !KU( ~yy ) @ #vk.19
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.19
1: !KU( ~xx.1 ) @ #vk.21
2: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                      'g'^(~xx*~yy*inv(~xx.1))>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))     )) @ #vk.8
3: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                      'g'^(~xx*~yy*inv(~xx.1))>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                 'g'^(~xx*~yy*inv(~xx.1))>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                                        'g'^(~xx*~yy*inv(~xx.1))>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                             'g'^(~xx*~yy*inv(~xx.1))>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.9
4: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                  '1'>,                hkdfExtract('emptyStr', 'g'^(~xx*~yy)))) @ #vk.10
5: !KU( 'g'^~yy ) @ #vk.5
6: !KU( 'g'^~xx ) @ #vk.17

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 63 (precomputed): !KU( ~xx ) @ #vk.19
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !PK_SIG( $V.2, pkV ) ▶₁ #vr.6
1: splitEqs(1)
2: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, 'g'^x>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))     )) @ #vk.8
3: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, 'g'^x>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, 'g'^x>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, 'g'^x>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, 'g'^x>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.9
4: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                  '1'>,                hkdfExtract('emptyStr', 'g'^(~xx*~yy)))) @ #vk.10
5: !KU( (      sign(<            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'                                   >,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)⊕      sign(<            <$V.2, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pkV>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'                                   >,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V.2, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pkV>,                        $cAEAD0)           >,           ~ltk.4)     )) @ #vk.18
6: !KU( 'g'^x ) @ #vk.6
7: !KU( 'g'^~yy ) @ #vk.4
8: !KU( 'g'^~xx ) @ #vk.17

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 38 (precomputed): !PK_SIG( $V.2, pkV ) ▶₁ #vr.6
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: splitEqs(1)
1: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, 'g'^x>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))     )) @ #vk.8
2: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, 'g'^x>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, 'g'^x>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, 'g'^x>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, 'g'^x>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.9
3: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                  '1'>,                hkdfExtract('emptyStr', 'g'^(~xx*~yy)))) @ #vk.10
4: !KU( (      sign(<            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'                                   >,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)⊕      sign(<            <$V.2, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.4)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'                                   >,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V.2, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.4)>,                        $cAEAD0)           >,           ~ltk.4)     )) @ #vk.18
5: !KU( 'g'^x ) @ #vk.6
6: !KU( 'g'^~yy ) @ #vk.4
7: !KU( 'g'^~xx ) @ #vk.17

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 14 (directly): splitEqs(1)
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( 'g'^(~xx*~yy*inv(~xx.1)) ) @ #vk.6
1: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                      'g'^(~xx*~yy*inv(~xx.1))>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))     )) @ #vk.8
2: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                      'g'^(~xx*~yy*inv(~xx.1))>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                 'g'^(~xx*~yy*inv(~xx.1))>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                                        'g'^(~xx*~yy*inv(~xx.1))>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                             'g'^(~xx*~yy*inv(~xx.1))>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.9
3: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                  '1'>,                hkdfExtract('emptyStr', 'g'^(~xx*~yy)))) @ #vk.10
4: !KU( (      sign(<            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'                                   >,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)⊕      sign(<            <$V.2, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.4)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'                                   >,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V.2, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.4)>,                        $cAEAD0)           >,           ~ltk.4)     )) @ #vk.18
5: !KU( 'g'^~yy ) @ #vk.4
6: !KU( 'g'^~xx ) @ #vk.17

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 55 (precomputed):
    !KU( 'g'^(~xx*~yy*inv(~xx.1)) ) @ #vk.6
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.20
1: !KU( ~xx.1 ) @ #vk.22
2: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                      'g'^(~xx*~yy*inv(~xx.1))>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))     )) @ #vk.8
3: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                      'g'^(~xx*~yy*inv(~xx.1))>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                 'g'^(~xx*~yy*inv(~xx.1))>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                                        'g'^(~xx*~yy*inv(~xx.1))>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                             'g'^(~xx*~yy*inv(~xx.1))>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.9
4: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                  '1'>,                hkdfExtract('emptyStr', 'g'^(~xx*~yy)))) @ #vk.10
5: !KU( (      sign(<            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'                                   >,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)⊕      sign(<            <$V.2, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.4)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'                                   >,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V.2, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.4)>,                        $cAEAD0)           >,           ~ltk.4)     )) @ #vk.18
6: !KU( 'g'^~yy ) @ #vk.5
7: !KU( 'g'^~xx ) @ #vk.17

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 67 (precomputed): !KU( ~xx ) @ #vk.20
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.21
1: !KU( ~yy ) @ #vk.22
2: !KU( ~xx.1 ) @ #vk.24
3: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                      'g'^(~xx*~yy*inv(~xx.1))>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))     )) @ #vk.8
4: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                      'g'^(~xx*~yy*inv(~xx.1))>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                 'g'^(~xx*~yy*inv(~xx.1))>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                                        'g'^(~xx*~yy*inv(~xx.1))>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                             'g'^(~xx*~yy*inv(~xx.1))>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.9
5: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                  '1'>,                hkdfExtract('emptyStr', 'g'^(~xx*~yy)))) @ #vk.10
6: !KU( (      sign(<            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'                                   >,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)⊕      sign(<            <$V.2, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.4)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'                                   >,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V.2, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.4)>,                        $cAEAD0)           >,           ~ltk.4)     )) @ #vk.18
7: !KU( 'g'^~yy ) @ #vk.5
8: !KU( 'g'^~xx ) @ #vk.17

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 62 (precomputed): !KU( ~xx ) @ #vk.21
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~yy ) @ #vk.20
1: !KU( ~xx.1 ) @ #vk.22
2: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                      'g'^(~xx*~yy*inv(~xx.1))>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))     )) @ #vk.8
3: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                      'g'^(~xx*~yy*inv(~xx.1))>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                 'g'^(~xx*~yy*inv(~xx.1))>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                                        'g'^(~xx*~yy*inv(~xx.1))>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                             'g'^(~xx*~yy*inv(~xx.1))>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.9
4: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                  '1'>,                hkdfExtract('emptyStr', 'g'^(~xx*~yy)))) @ #vk.10
5: !KU( (      sign(<            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'                                   >,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)⊕      sign(<            <$V.2, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.4)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'                                   >,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V.2, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.4)>,                        $cAEAD0)           >,           ~ltk.4)     )) @ #vk.18
6: !KU( 'g'^~yy ) @ #vk.5
7: !KU( 'g'^~xx ) @ #vk.17

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 61 (precomputed): !KU( ~yy ) @ #vk.20
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( 'g'^(~xx*~yy*inv(~xx.1)) ) @ #vk.6
1: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                      'g'^(~xx*~yy*inv(~xx.1))>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))     )) @ #vk.8
2: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                      'g'^(~xx*~yy*inv(~xx.1))>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                 'g'^(~xx*~yy*inv(~xx.1))>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                                        'g'^(~xx*~yy*inv(~xx.1))>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                             'g'^(~xx*~yy*inv(~xx.1))>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.9
3: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                   '2'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      sign(<            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'                                   >,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)     )) @ #vk.4
4: !KU( 'g'^~yy ) @ #vk.3
5: !KU( 'g'^~xx ) @ #vk.15

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 49 (precomputed):
    !KU( 'g'^(~xx*~yy*inv(~xx.1)) ) @ #vk.6
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.17
1: !KU( ~xx.1 ) @ #vk.19
2: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                      'g'^(~xx*~yy*inv(~xx.1))>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))     )) @ #vk.8
3: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                      'g'^(~xx*~yy*inv(~xx.1))>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                 'g'^(~xx*~yy*inv(~xx.1))>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                                        'g'^(~xx*~yy*inv(~xx.1))>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                             'g'^(~xx*~yy*inv(~xx.1))>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.9
4: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                   '2'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      sign(<            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'                                   >,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)     )) @ #vk.5
5: !KU( 'g'^~yy ) @ #vk.4
6: !KU( 'g'^~xx ) @ #vk.15

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 61 (precomputed): !KU( ~xx ) @ #vk.17
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.18
1: !KU( ~yy ) @ #vk.19
2: !KU( ~xx.1 ) @ #vk.21
3: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                      'g'^(~xx*~yy*inv(~xx.1))>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))     )) @ #vk.8
4: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                      'g'^(~xx*~yy*inv(~xx.1))>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                 'g'^(~xx*~yy*inv(~xx.1))>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                                        'g'^(~xx*~yy*inv(~xx.1))>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                             'g'^(~xx*~yy*inv(~xx.1))>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.9
5: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                   '2'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      sign(<            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'                                   >,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)     )) @ #vk.5
6: !KU( 'g'^~yy ) @ #vk.4
7: !KU( 'g'^~xx ) @ #vk.15

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 56 (precomputed): !KU( ~xx ) @ #vk.18
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~yy ) @ #vk.17
1: !KU( ~xx.1 ) @ #vk.19
2: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                      'g'^(~xx*~yy*inv(~xx.1))>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))     )) @ #vk.8
3: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                      'g'^(~xx*~yy*inv(~xx.1))>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                 'g'^(~xx*~yy*inv(~xx.1))>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                                        'g'^(~xx*~yy*inv(~xx.1))>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                             'g'^(~xx*~yy*inv(~xx.1))>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.9
4: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                   '2'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      sign(<            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'                                   >,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)     )) @ #vk.5
5: !KU( 'g'^~yy ) @ #vk.4
6: !KU( 'g'^~xx ) @ #vk.15

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 55 (precomputed): !KU( ~yy ) @ #vk.17
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !PK_SIG( $V, pkV ) ▶₁ #vr.6
1: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)     )) @ #vk.4
2: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))     )) @ #vk.8
3: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.9
4: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))⊕      hkdfExpand(<$cAEAD0.2,                   h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.2, gx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.16
5: splitEqs(0)
6: splitEqs(1)
7: splitEqs(2)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 36 (precomputed): !PK_SIG( $V, pkV ) ▶₁ #vr.6
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)     )) @ #vk.4
1: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))     )) @ #vk.8
2: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.9
3: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))⊕      hkdfExpand(<$cAEAD0.2,                   h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.2, gx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.16
4: splitEqs(0)
5: splitEqs(1)
6: splitEqs(2)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 11 (directly):
    !KU( (
          hkdfExpand(<$cAEAD0, 
                      h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,
                     hkdfExtract('emptyStr', expSk))⊕
          sign(<
                <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 
                 pk(~ltk.1)>, 
                aeadEncrypt('emptyStr',
                            hkdfExpand(<$cAEAD0, 
                                        h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'
                                       >,
                                       hkdfExtract('emptyStr', expSk)),
                            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 
                             pk(~ltk.1)>,
                            $cAEAD0)
               >,
               ~ltk.1)
         )
    ) @ #vk.4
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( sign(<           <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>),             pk(~ltk.1)>,            aeadEncrypt('emptyStr',                       hkdfExpand(<$cAEAD0,                                    h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                                  hkdfExtract('emptyStr', expSk)),                       <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>),                         pk(~ltk.1)>,                       $cAEAD0)          >,          ~ltk.1)) @ #vk.17
1: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))     )) @ #vk.8
2: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.9
3: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))⊕      hkdfExpand(<$cAEAD0.2,                   h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.2, gx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.16
4: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                hkdfExtract('emptyStr', expSk))) @ #vk.18
5: splitEqs(0)
6: splitEqs(1)
7: splitEqs(2)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 55 (precomputed):
    !KU( sign(<
               <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 
                pk(~ltk.1)>, 
               aeadEncrypt('emptyStr',
                           hkdfExpand(<$cAEAD0, 
                                       h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,
                                      hkdfExtract('emptyStr', expSk)),
                           <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 
                            pk(~ltk.1)>,
                           $cAEAD0)
              >,
              ~ltk.1)
    ) @ #vk.17
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KD( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)     )) ▶₀ #vk.1
1: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))     )) @ #vk.8
2: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.9
3: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))⊕      hkdfExpand(<$cAEAD0.2,                   h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.2, gx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.16
4: splitEqs(0)
5: splitEqs(1)
6: splitEqs(2)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~ltk.1 ) @ #vk.20
1: !KU( h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>) ) @ #vk.24
2: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))     )) @ #vk.9
3: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.10
4: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))⊕      hkdfExpand(<$cAEAD0.2,                   h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.2, gx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.17
5: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                hkdfExtract('emptyStr', expSk))) @ #vk.18
6: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0,                              h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                            hkdfExtract('emptyStr', expSk)),                 <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>),                   pk(~ltk.1)>,                 $cAEAD0)) @ #vk.26
7: splitEqs(0)
8: splitEqs(1)
9: splitEqs(2)
10: !KU( pk(~ltk.1) ) @ #vk.25

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 59 (precomputed): !KU( ~ltk.1 ) @ #vk.20
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: splitEqs(1)
1: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, 'g'^x>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))     )) @ #vk.9
2: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, 'g'^x>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, 'g'^x>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, 'g'^x>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, 'g'^x>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.10
3: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      hkdfExpand(<$cAEAD0.2,                   h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.2, gx>, 'g'^~yy.1>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.19
4: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                  '2'>,                hkdfExtract('emptyStr', 'g'^(~xx*~yy)))) @ #vk.20
5: splitEqs(2)
6: !KU( 'g'^x ) @ #vk.7
7: !KU( 'g'^~xx ) @ #vk.23
8: !KU( 'g'^~yy ) @ #vk.5

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 14 (directly): splitEqs(1)
  simplified formula:
      "((#vr.28 = #i) ∨ (#i < #vr.28))"
    to
      "⊥"
  solved goal nr. 68 (simplified): (#vr.28 = #i)  ∥ (#i < #vr.28)
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( 'g'^(~xx*~yy*inv(~xx.1)) ) @ #vk.7
1: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                      'g'^(~xx*~yy*inv(~xx.1))>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))     )) @ #vk.9
2: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                      'g'^(~xx*~yy*inv(~xx.1))>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                 'g'^(~xx*~yy*inv(~xx.1))>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                                        'g'^(~xx*~yy*inv(~xx.1))>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                             'g'^(~xx*~yy*inv(~xx.1))>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.10
3: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      hkdfExpand(<$cAEAD0.2,                   h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.2, gx>, 'g'^~yy.1>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.19
4: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                  '2'>,                hkdfExtract('emptyStr', 'g'^(~xx*~yy)))) @ #vk.20
5: splitEqs(2)
6: !KU( 'g'^~xx ) @ #vk.23
7: !KU( 'g'^~yy ) @ #vk.5

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 68 (precomputed):
    !KU( 'g'^(~xx*~yy*inv(~xx.1)) ) @ #vk.7
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.25
1: !KU( ~xx.1 ) @ #vk.27
2: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                      'g'^(~xx*~yy*inv(~xx.1))>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))     )) @ #vk.9
3: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                      'g'^(~xx*~yy*inv(~xx.1))>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                 'g'^(~xx*~yy*inv(~xx.1))>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                                        'g'^(~xx*~yy*inv(~xx.1))>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                             'g'^(~xx*~yy*inv(~xx.1))>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.10
4: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      hkdfExpand(<$cAEAD0.2,                   h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.2, gx>, 'g'^~yy.1>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.19
5: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                  '2'>,                hkdfExtract('emptyStr', 'g'^(~xx*~yy)))) @ #vk.20
6: splitEqs(2)
7: !KU( 'g'^~xx ) @ #vk.23
8: !KU( 'g'^~yy ) @ #vk.6

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 77 (precomputed): !KU( ~xx ) @ #vk.25
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~yy ) @ #vk.25
1: !KU( ~xx.1 ) @ #vk.27
2: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                      'g'^(~xx*~yy*inv(~xx.1))>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))     )) @ #vk.9
3: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                      'g'^(~xx*~yy*inv(~xx.1))>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                 'g'^(~xx*~yy*inv(~xx.1))>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                                        'g'^(~xx*~yy*inv(~xx.1))>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                             'g'^(~xx*~yy*inv(~xx.1))>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.10
4: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      hkdfExpand(<$cAEAD0.2,                   h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.2, gx>, 'g'^~yy.1>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.19
5: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                  '2'>,                hkdfExtract('emptyStr', 'g'^(~xx*~yy)))) @ #vk.20
6: splitEqs(2)
7: !KU( 'g'^~xx ) @ #vk.23
8: !KU( 'g'^~yy ) @ #vk.6

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 71 (precomputed): !KU( ~yy ) @ #vk.25
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.26
1: !KU( ~yy ) @ #vk.27
2: !KU( ~xx.1 ) @ #vk.29
3: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                      'g'^(~xx*~yy*inv(~xx.1))>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))     )) @ #vk.9
4: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                      'g'^(~xx*~yy*inv(~xx.1))>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                 'g'^(~xx*~yy*inv(~xx.1))>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                                        'g'^(~xx*~yy*inv(~xx.1))>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                             'g'^(~xx*~yy*inv(~xx.1))>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.10
5: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      hkdfExpand(<$cAEAD0.2,                   h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.2, gx>, 'g'^~yy.1>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.19
6: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                  '2'>,                hkdfExtract('emptyStr', 'g'^(~xx*~yy)))) @ #vk.20
7: splitEqs(2)
8: !KU( 'g'^~xx ) @ #vk.23
9: !KU( 'g'^~yy ) @ #vk.6

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 72 (precomputed): !KU( ~xx ) @ #vk.26
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vl.1, 0) ~~> (#vk.1, 0)
1: !LTK_SIG( $V.2, ~ltk.4 ) ▶₀ #vr.10
2: !PK_SIG( $V.2, pkV ) ▶₁ #vr.10
3: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))     )) @ #vk.8
4: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.9
5: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))⊕      hkdfExpand(<$cAEAD0.2,                   h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.2, gx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.18
6: splitEqs(0)
7: splitEqs(1)
8: splitEqs(2)
9: splitEqs(7)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vl.1, 0) ~~> (#vk.1, 0)
1: StI1_SIG_SIG( $U.2, ~ltk.4, $V.2, ~xx.2, m1, ~tid.3 ) ▶₀ #vr.10
2: !PK_SIG( $V.2, pk(x) ) ▶₁ #vr.10
3: !PK_SIG( $U.2, pkU ) ▶₂ #vr.10
4: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))     )) @ #vk.8
5: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.9
6: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))⊕      hkdfExpand(<$cAEAD0.2,                   h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.2, gx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.16
7: splitEqs(0)
8: splitEqs(1)
9: splitEqs(2)
10: splitEqs(7)
11: !KU( ($V.2⊕      hkdfExpand(<$cAEAD0.3, h(<$cHash0.3, m1, gy.2>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', z.1))     )) @ #vk.20
12: !KU( (      hkdfExpand(<$cAEAD0.3, h(<$cHash0.3, m1, gy.2>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', z.1))⊕      sign(<<$V.2, h(<$cHash0.3, m1, gy.2>), pk(x)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.3, h(<$cHash0.3, m1, gy.2>), 'K_2m'>,                                   hkdfExtract('emptyStr', z.1)),                        <$V.2, h(<$cHash0.3, m1, gy.2>), pk(x)>, $cAEAD0.3)           >,           x)     )) @ #vk.21

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: CommitI( tid.3, u, v, t ) ▶₀ #vr.10
1: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))     )) @ #vk.8
2: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.9
3: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))⊕      hkdfExpand(<$cAEAD0.2,                   h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.2, gx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.16
4: splitEqs(0)
5: splitEqs(1)
6: splitEqs(2)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: CommitR( tid.3, u, v, t ) ▶₀ #vr.10
1: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))     )) @ #vk.8
2: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.9
3: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))⊕      hkdfExpand(<$cAEAD0.2,                   h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.2, gx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.16
4: splitEqs(0)
5: splitEqs(1)
6: splitEqs(2)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 58 (precomputed):
    CommitI( tid.3, u, v, t ) ▶₀ #vr.10
  solved goal nr. 58 (precomputed):
    CommitR( tid.3, u, v, t ) ▶₀ #vr.10
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.11, 0) ~~> (#vk.1, 0)
1: StI1_SIG_SIG( $U.2, ~ltk.4, $V.2, ~xx.2, m1, ~tid.3 ) ▶₀ #vr.10
2: !PK_SIG( $V.2, pk(x) ) ▶₁ #vr.10
3: !PK_SIG( $U.2, pkU ) ▶₂ #vr.10
4: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))     )) @ #vk.8
5: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.9
6: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))⊕      hkdfExpand(<$cAEAD0.2,                   h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.2, gx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.16
7: splitEqs(0)
8: splitEqs(1)
9: splitEqs(2)
10: splitEqs(7)
11: !KU( ($V.2⊕      hkdfExpand(<$cAEAD0.3, h(<$cHash0.3, m1, gy.2>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', z.1))     )) @ #vk.20
12: !KU( (      hkdfExpand(<$cAEAD0.3, h(<$cHash0.3, m1, gy.2>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', z.1))⊕      sign(<<$V.2, h(<$cHash0.3, m1, gy.2>), pk(x)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.3, h(<$cHash0.3, m1, gy.2>), 'K_2m'>,                                   hkdfExtract('emptyStr', z.1)),                        <$V.2, h(<$cHash0.3, m1, gy.2>), pk(x)>, $cAEAD0.3)           >,           x)     )) @ #vk.21

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.12, 0) ~~> (#vk.1, 0)
1: StI1_SIG_SIG( $U.2, ~ltk.4, $V.2, ~xx.2, m1, ~tid.3 ) ▶₀ #vr.10
2: !PK_SIG( $V.2, pk(x) ) ▶₁ #vr.10
3: !PK_SIG( $U.2, pkU ) ▶₂ #vr.10
4: !KU( sign(<           <$U.2,             h(<$cHash0.3, h(<$cHash0.3, m1, gy.2>),                <                ($V.2⊕                 hkdfExpand(<$cAEAD0.3, h(<$cHash0.3, m1, gy.2>), 'K_2e', '1'>,                            hkdfExtract('emptyStr', z.1))                ),                 (                 hkdfExpand(<$cAEAD0.3, h(<$cHash0.3, m1, gy.2>), 'K_2e', '2'>,                            hkdfExtract('emptyStr', z.1))⊕                 sign(<<$V.2, h(<$cHash0.3, m1, gy.2>), pk(x)>,                        aeadEncrypt('emptyStr',                                   hkdfExpand(<$cAEAD0.3, h(<$cHash0.3, m1, gy.2>), 'K_2m'>,                                              hkdfExtract('emptyStr', z.1)),                                   <$V.2, h(<$cHash0.3, m1, gy.2>), pk(x)>, $cAEAD0.3)                      >,                      x)                )               >,                'emptyStr'>),             pkU>,            aeadEncrypt('emptyStr',                       hkdfExpand(<$cAEAD0.3,                                    h(<$cHash0.3, h(<$cHash0.3, m1, gy.2>),                                       <                                       ($V.2⊕                                        hkdfExpand(<$cAEAD0.3, h(<$cHash0.3, m1, gy.2>), 'K_2e', '1'                                                   >,                                                   hkdfExtract('emptyStr', z.1))                                       ),                                        (                                        hkdfExpand(<$cAEAD0.3, h(<$cHash0.3, m1, gy.2>), 'K_2e', '2'                                                   >,                                                   hkdfExtract('emptyStr', z.1))⊕                                        sign(<<$V.2, h(<$cHash0.3, m1, gy.2>), pk(x)>,                                               aeadEncrypt('emptyStr',                                                          hkdfExpand(<$cAEAD0.3,                                                                       h(<$cHash0.3, m1, gy.2>),                                                                       'K_2m'>,                                                                     hkdfExtract('emptyStr', z.1)),                                                          <$V.2, h(<$cHash0.3, m1, gy.2>), pk(x)>,                                                          $cAEAD0.3)                                             >,                                             x)                                       )                                      >,                                       'emptyStr'>),                                    'K_3m'>,                                  hkdfExtract('emptyStr', z.1)),                       <$U.2,                         h(<$cHash0.3, h(<$cHash0.3, m1, gy.2>),                            <                            ($V.2⊕                             hkdfExpand(<$cAEAD0.3, h(<$cHash0.3, m1, gy.2>), 'K_2e', '1'>,                                        hkdfExtract('emptyStr', z.1))                            ),                             (                             hkdfExpand(<$cAEAD0.3, h(<$cHash0.3, m1, gy.2>), 'K_2e', '2'>,                                        hkdfExtract('emptyStr', z.1))⊕                             sign(<<$V.2, h(<$cHash0.3, m1, gy.2>), pk(x)>,                                    aeadEncrypt('emptyStr',                                               hkdfExpand(<$cAEAD0.3, h(<$cHash0.3, m1, gy.2>),                                                            'K_2m'>,                                                          hkdfExtract('emptyStr', z.1)),                                               <$V.2, h(<$cHash0.3, m1, gy.2>), pk(x)>, $cAEAD0.3)                                  >,                                  x)                            )                           >,                            'emptyStr'>),                         pkU>,                       $cAEAD0.3)          >,          ~ltk.4)) @ #vk.25
5: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))     )) @ #vk.8
6: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.9
7: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))⊕      hkdfExpand(<$cAEAD0.2,                   h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.2, gx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.16
8: splitEqs(0)
9: splitEqs(1)
10: splitEqs(2)
11: splitEqs(7)
12: !KU( ($V.2⊕      hkdfExpand(<$cAEAD0.3, h(<$cHash0.3, m1, gy.2>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', z.1))     )) @ #vk.20
13: !KU( (      hkdfExpand(<$cAEAD0.3, h(<$cHash0.3, m1, gy.2>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', z.1))⊕      sign(<<$V.2, h(<$cHash0.3, m1, gy.2>), pk(x)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.3, h(<$cHash0.3, m1, gy.2>), 'K_2m'>,                                   hkdfExtract('emptyStr', z.1)),                        <$V.2, h(<$cHash0.3, m1, gy.2>), pk(x)>, $cAEAD0.3)           >,           x)     )) @ #vk.21

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.12, 0) ~~> (#vk.1, 0)
1: StI1_SIG_SIG( $U.2, ~ltk.4, $V.2, ~xx.2, m1, ~tid.3 ) ▶₀ #vr.10
2: !PK_SIG( $V.2, pk(x) ) ▶₁ #vr.10
3: !PK_SIG( $U.2, pkU ) ▶₂ #vr.10
4: !KU( sign(<           <$U.2,             h(<$cHash0.3, h(<$cHash0.3, m1, gy.2>),                <                ($V.2⊕                 hkdfExpand(<$cAEAD0.3, h(<$cHash0.3, m1, gy.2>), 'K_2e', '1'>,                            hkdfExtract('emptyStr', z.1))                ),                 (                 hkdfExpand(<$cAEAD0.3, h(<$cHash0.3, m1, gy.2>), 'K_2e', '2'>,                            hkdfExtract('emptyStr', z.1))⊕                 sign(<<$V.2, h(<$cHash0.3, m1, gy.2>), pk(x)>,                        aeadEncrypt('emptyStr',                                   hkdfExpand(<$cAEAD0.3, h(<$cHash0.3, m1, gy.2>), 'K_2m'>,                                              hkdfExtract('emptyStr', z.1)),                                   <$V.2, h(<$cHash0.3, m1, gy.2>), pk(x)>, $cAEAD0.3)                      >,                      x)                )               >,                'emptyStr'>),             pkU>,            aeadEncrypt('emptyStr',                       hkdfExpand(<$cAEAD0.3,                                    h(<$cHash0.3, h(<$cHash0.3, m1, gy.2>),                                       <                                       ($V.2⊕                                        hkdfExpand(<$cAEAD0.3, h(<$cHash0.3, m1, gy.2>), 'K_2e', '1'                                                   >,                                                   hkdfExtract('emptyStr', z.1))                                       ),                                        (                                        hkdfExpand(<$cAEAD0.3, h(<$cHash0.3, m1, gy.2>), 'K_2e', '2'                                                   >,                                                   hkdfExtract('emptyStr', z.1))⊕                                        sign(<<$V.2, h(<$cHash0.3, m1, gy.2>), pk(x)>,                                               aeadEncrypt('emptyStr',                                                          hkdfExpand(<$cAEAD0.3,                                                                       h(<$cHash0.3, m1, gy.2>),                                                                       'K_2m'>,                                                                     hkdfExtract('emptyStr', z.1)),                                                          <$V.2, h(<$cHash0.3, m1, gy.2>), pk(x)>,                                                          $cAEAD0.3)                                             >,                                             x)                                       )                                      >,                                       'emptyStr'>),                                    'K_3m'>,                                  hkdfExtract('emptyStr', z.1)),                       <$U.2,                         h(<$cHash0.3, h(<$cHash0.3, m1, gy.2>),                            <                            ($V.2⊕                             hkdfExpand(<$cAEAD0.3, h(<$cHash0.3, m1, gy.2>), 'K_2e', '1'>,                                        hkdfExtract('emptyStr', z.1))                            ),                             (                             hkdfExpand(<$cAEAD0.3, h(<$cHash0.3, m1, gy.2>), 'K_2e', '2'>,                                        hkdfExtract('emptyStr', z.1))⊕                             sign(<<$V.2, h(<$cHash0.3, m1, gy.2>), pk(x)>,                                    aeadEncrypt('emptyStr',                                               hkdfExpand(<$cAEAD0.3, h(<$cHash0.3, m1, gy.2>),                                                            'K_2m'>,                                                          hkdfExtract('emptyStr', z.1)),                                               <$V.2, h(<$cHash0.3, m1, gy.2>), pk(x)>, $cAEAD0.3)                                  >,                                  x)                            )                           >,                            'emptyStr'>),                         pkU>,                       $cAEAD0.3)          >,          ~ltk.4)) @ #vk.26
5: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))     )) @ #vk.8
6: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.9
7: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))⊕      hkdfExpand(<$cAEAD0.2,                   h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.2, gx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.16
8: splitEqs(0)
9: splitEqs(1)
10: splitEqs(2)
11: splitEqs(7)
12: !KU( h(<$cHash0.3, h(<$cHash0.3, m1, gy.2>),         <         ($V.2⊕          hkdfExpand(<$cAEAD0.3, h(<$cHash0.3, m1, gy.2>), 'K_2e', '1'>,                     hkdfExtract('emptyStr', z.1))         ),          (          hkdfExpand(<$cAEAD0.3, h(<$cHash0.3, m1, gy.2>), 'K_2e', '2'>,                     hkdfExtract('emptyStr', z.1))⊕          sign(<<$V.2, h(<$cHash0.3, m1, gy.2>), pk(x)>,                 aeadEncrypt('emptyStr',                            hkdfExpand(<$cAEAD0.3, h(<$cHash0.3, m1, gy.2>), 'K_2m'>,                                       hkdfExtract('emptyStr', z.1)),                            <$V.2, h(<$cHash0.3, m1, gy.2>), pk(x)>, $cAEAD0.3)               >,               x)         )        >,         'emptyStr'>)) @ #vk.23
13: !KU( ($V.2⊕      hkdfExpand(<$cAEAD0.3, h(<$cHash0.3, m1, gy.2>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', z.1))     )) @ #vk.20
14: !KU( (      hkdfExpand(<$cAEAD0.3, h(<$cHash0.3, m1, gy.2>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', z.1))⊕      sign(<<$V.2, h(<$cHash0.3, m1, gy.2>), pk(x)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.3, h(<$cHash0.3, m1, gy.2>), 'K_2m'>,                                   hkdfExtract('emptyStr', z.1)),                        <$V.2, h(<$cHash0.3, m1, gy.2>), pk(x)>, $cAEAD0.3)           >,           x)     )) @ #vk.21

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.11, 0) ~~> (#vk.1, 0)
1: !LTK_SIG( $V.2, ~ltk.4 ) ▶₀ #vr.10
2: !PK_SIG( $V.2, pkV ) ▶₁ #vr.10
3: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))     )) @ #vk.8
4: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.9
5: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))⊕      hkdfExpand(<$cAEAD0.2,                   h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.2, gx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.18
6: splitEqs(0)
7: splitEqs(1)
8: splitEqs(2)
9: splitEqs(7)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.12, 0) ~~> (#vk.1, 0)
1: !LTK_SIG( $V.2, ~ltk.4 ) ▶₀ #vr.10
2: !PK_SIG( $V.2, pkV ) ▶₁ #vr.10
3: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))     )) @ #vk.8
4: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.9
5: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))⊕      hkdfExpand(<$cAEAD0.2,                   h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.2, gx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.18
6: splitEqs(0)
7: splitEqs(1)
8: splitEqs(2)
9: splitEqs(7)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.12, 0) ~~> (#vk.1, 0)
1: !LTK_SIG( $V.2, ~ltk.4 ) ▶₀ #vr.10
2: !PK_SIG( $V.2, pkV ) ▶₁ #vr.10
3: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))     )) @ #vk.8
4: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.9
5: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))⊕      hkdfExpand(<$cAEAD0.2,                   h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.2, gx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.18
6: splitEqs(0)
7: splitEqs(1)
8: splitEqs(2)
9: splitEqs(7)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.13, 0) ~~> (#vk.1, 0)
1: !LTK_SIG( $V.2, ~ltk.4 ) ▶₀ #vr.10
2: !PK_SIG( $V.2, pkV ) ▶₁ #vr.10
3: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))     )) @ #vk.8
4: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.9
5: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))⊕      hkdfExpand(<$cAEAD0.2,                   h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.2, gx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.18
6: !KU( (z.2⊕      hkdfExpand(<$cAEAD0.3,                   h(<$cHash0.3, <'SIG', 'SIG', $cSUITE0.3, gx.1>, 'g'^~yy.1>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', z.1))     )) @ #vk.22
7: splitEqs(0)
8: splitEqs(1)
9: splitEqs(2)
10: splitEqs(7)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.13, 0) ~~> (#vk.1, 0)
1: !LTK_SIG( $V.2, ~ltk.4 ) ▶₀ #vr.10
2: !PK_SIG( $V.2, pkV ) ▶₁ #vr.10
3: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))     )) @ #vk.8
4: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.9
5: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))⊕      hkdfExpand(<$cAEAD0.2,                   h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.2, gx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.18
6: splitEqs(0)
7: splitEqs(1)
8: splitEqs(2)
9: splitEqs(7)
10: !KU( ($V.2⊕z.2) ) @ #vk.22

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.13, 0) ~~> (#vk.1, 0)
1: !LTK_SIG( $V.2, ~ltk.4 ) ▶₀ #vr.10
2: !PK_SIG( $V.2, pkV ) ▶₁ #vr.10
3: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))     )) @ #vk.8
4: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.9
5: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))⊕      hkdfExpand(<$cAEAD0.2,                   h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.2, gx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.18
6: splitEqs(0)
7: splitEqs(1)
8: splitEqs(2)
9: splitEqs(7)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.13, 0) ~~> (#vk.1, 0)
1: !LTK_SIG( $V.2, ~ltk.4 ) ▶₀ #vr.10
2: !PK_SIG( $V.2, pkV ) ▶₁ #vr.10
3: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))     )) @ #vk.8
4: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.9
5: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))⊕      hkdfExpand(<$cAEAD0.2,                   h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.2, gx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.18
6: !KU( (z.2⊕      hkdfExpand(<$cAEAD0.3,                   h(<$cHash0.3, <'SIG', 'SIG', $cSUITE0.3, gx.1>, 'g'^~yy.1>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', z.1))     )) @ #vk.22
7: splitEqs(0)
8: splitEqs(1)
9: splitEqs(2)
10: splitEqs(7)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.13, 0) ~~> (#vk.1, 0)
1: !LTK_SIG( $V.2, ~ltk.4 ) ▶₀ #vr.10
2: !PK_SIG( $V.2, pkV ) ▶₁ #vr.10
3: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))     )) @ #vk.8
4: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.9
5: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))⊕      hkdfExpand(<$cAEAD0.2,                   h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.2, gx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.18
6: !KU( (z.2⊕      sign(<            <$V.2,              h(<$cHash0.3, <'SIG', 'SIG', $cSUITE0.3, gx.1>, 'g'^~yy.1>), pkV>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.3,                                     h(<$cHash0.3, <'SIG', 'SIG', $cSUITE0.3, gx.1>, 'g'^~yy.1>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', z.1)),                        <$V.2,                          h(<$cHash0.3, <'SIG', 'SIG', $cSUITE0.3, gx.1>, 'g'^~yy.1>), pkV>,                        $cAEAD0.3)           >,           ~ltk.4)     )) @ #vk.22
7: splitEqs(0)
8: splitEqs(1)
9: splitEqs(2)
10: splitEqs(7)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.13, 0) ~~> (#vk.1, 0)
1: !LTK_SIG( $V.2, ~ltk.4 ) ▶₀ #vr.10
2: !PK_SIG( $V.2, pkV ) ▶₁ #vr.10
3: !KU( sign(<           <$V.2,             h(<$cHash0.3, <'SIG', 'SIG', $cSUITE0.3, gx.1>, 'g'^~yy.1>), pkV>,            aeadEncrypt('emptyStr',                       hkdfExpand(<$cAEAD0.3,                                    h(<$cHash0.3, <'SIG', 'SIG', $cSUITE0.3, gx.1>, 'g'^~yy.1>),                                    'K_2m'>,                                  hkdfExtract('emptyStr', z.1)),                       <$V.2,                         h(<$cHash0.3, <'SIG', 'SIG', $cSUITE0.3, gx.1>, 'g'^~yy.1>), pkV>,                       $cAEAD0.3)          >,          ~ltk.4)) @ #vk.22
4: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))     )) @ #vk.8
5: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.9
6: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))⊕      hkdfExpand(<$cAEAD0.2,                   h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.2, gx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.18
7: splitEqs(0)
8: splitEqs(1)
9: splitEqs(2)
10: splitEqs(7)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !LTK_SIG( $V, ~ltk.1 ) ▶₀ #vr.10
1: !PK_SIG( $V, pk(~ltk.1) ) ▶₁ #vr.10
2: splitEqs(1)
3: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, 'g'^x>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))     )) @ #vk.8
4: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, 'g'^x>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, 'g'^x>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, 'g'^x>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, 'g'^x>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.9
5: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      hkdfExpand(<$cAEAD0.2,                   h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.2, gx>, 'g'^~yy.1>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.18
6: splitEqs(2)
7: !KU( 'g'^x ) @ #vk.6
8: !KU( 'g'^~yy ) @ #vk.4
9: !KU( 'g'^~xx ) @ #vk.21

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 58 (precomputed): !LTK_SIG( $V, ~ltk.1 ) ▶₀ #vr.10
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.13, 0) ~~> (#vk.1, 0)
1: !LTK_SIG( $V.2, ~ltk.4 ) ▶₀ #vr.10
2: !PK_SIG( $V.2, pkV ) ▶₁ #vr.10
3: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))     )) @ #vk.8
4: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', expSk))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', expSk)),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, gy.1>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.9
5: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', expSk))⊕      hkdfExpand(<$cAEAD0.2,                   h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.2, gx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.18
6: !KU( hkdfExpand(<$cAEAD0.3,                  h(<$cHash0.3, <'SIG', 'SIG', $cSUITE0.3, gx.1>, 'g'^~yy.1>),                  'K_2e', '2'>,                hkdfExtract('emptyStr', z.1))) @ #vk.22
7: splitEqs(0)
8: splitEqs(1)
9: splitEqs(2)
10: splitEqs(7)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !PK_SIG( $V, pk(~ltk.1) ) ▶₁ #vr.10
1: splitEqs(1)
2: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, 'g'^x>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))     )) @ #vk.8
3: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, 'g'^x>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, 'g'^x>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, 'g'^x>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, 'g'^x>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.9
4: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      hkdfExpand(<$cAEAD0.2,                   h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.2, gx>, 'g'^~yy.1>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.18
5: splitEqs(2)
6: !KU( 'g'^x ) @ #vk.6
7: !KU( 'g'^~yy ) @ #vk.4
8: !KU( 'g'^~xx ) @ #vk.21

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 59 (precomputed):
    !PK_SIG( $V, pk(~ltk.1) ) ▶₁ #vr.10
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: splitEqs(1)
1: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, 'g'^x>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))     )) @ #vk.8
2: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, 'g'^x>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, 'g'^x>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, 'g'^x>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, 'g'^x>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.9
3: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      hkdfExpand(<$cAEAD0.2,                   h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.2, gx>, 'g'^~yy.1>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.18
4: splitEqs(2)
5: !KU( 'g'^x ) @ #vk.6
6: !KU( 'g'^~yy ) @ #vk.4
7: !KU( 'g'^~xx ) @ #vk.21

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 14 (directly): splitEqs(1)
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( 'g'^(~xx*~yy*inv(~xx.1)) ) @ #vk.6
1: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                      'g'^(~xx*~yy*inv(~xx.1))>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))     )) @ #vk.8
2: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                      'g'^(~xx*~yy*inv(~xx.1))>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                 'g'^(~xx*~yy*inv(~xx.1))>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                                        'g'^(~xx*~yy*inv(~xx.1))>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                             'g'^(~xx*~yy*inv(~xx.1))>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.9
3: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      hkdfExpand(<$cAEAD0.2,                   h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.2, gx>, 'g'^~yy.1>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.18
4: splitEqs(2)
5: !KU( 'g'^~yy ) @ #vk.4
6: !KU( 'g'^~xx ) @ #vk.21

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 72 (precomputed):
    !KU( 'g'^(~xx*~yy*inv(~xx.1)) ) @ #vk.6
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~yy ) @ #vk.23
1: !KU( ~xx.1 ) @ #vk.25
2: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                      'g'^(~xx*~yy*inv(~xx.1))>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))     )) @ #vk.8
3: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                      'g'^(~xx*~yy*inv(~xx.1))>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                 'g'^(~xx*~yy*inv(~xx.1))>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                                        'g'^(~xx*~yy*inv(~xx.1))>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                             'g'^(~xx*~yy*inv(~xx.1))>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.9
4: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      hkdfExpand(<$cAEAD0.2,                   h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.2, gx>, 'g'^~yy.1>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.18
5: splitEqs(2)
6: !KU( 'g'^~yy ) @ #vk.5
7: !KU( 'g'^~xx ) @ #vk.21

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 78 (precomputed): !KU( ~yy ) @ #vk.23
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.24
1: !KU( ~yy ) @ #vk.25
2: !KU( ~xx.1 ) @ #vk.27
3: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                      'g'^(~xx*~yy*inv(~xx.1))>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))     )) @ #vk.8
4: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                      'g'^(~xx*~yy*inv(~xx.1))>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                 'g'^(~xx*~yy*inv(~xx.1))>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                                        'g'^(~xx*~yy*inv(~xx.1))>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                             'g'^(~xx*~yy*inv(~xx.1))>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.9
5: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      hkdfExpand(<$cAEAD0.2,                   h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.2, gx>, 'g'^~yy.1>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.18
6: splitEqs(2)
7: !KU( 'g'^~yy ) @ #vk.5
8: !KU( 'g'^~xx ) @ #vk.21

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 79 (precomputed): !KU( ~xx ) @ #vk.24
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.23
1: !KU( ~xx.1 ) @ #vk.25
2: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                      'g'^(~xx*~yy*inv(~xx.1))>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))     )) @ #vk.8
3: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                      'g'^(~xx*~yy*inv(~xx.1))>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                 'g'^(~xx*~yy*inv(~xx.1))>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                                        'g'^(~xx*~yy*inv(~xx.1))>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                             'g'^(~xx*~yy*inv(~xx.1))>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.9
4: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      hkdfExpand(<$cAEAD0.2,                   h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.2, gx>, 'g'^~yy.1>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.18
5: splitEqs(2)
6: !KU( 'g'^~yy ) @ #vk.5
7: !KU( 'g'^~xx ) @ #vk.21

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 84 (precomputed): !KU( ~xx ) @ #vk.23
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !LTK_SIG( $V.2, ~ltk.4 ) ▶₀ #vr.10
1: !PK_SIG( $V.2, pkV ) ▶₁ #vr.10
2: splitEqs(1)
3: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, 'g'^x>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))     )) @ #vk.8
4: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, 'g'^x>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, 'g'^x>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, 'g'^x>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, 'g'^x>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.9
5: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      hkdfExpand(<$cAEAD0.2,                   h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.2, gx>, 'g'^~yy.1>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.18
6: !KU( (      sign(<            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'                                   >,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)⊕      sign(<            <$V.2, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pkV>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'                                   >,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V.2, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pkV>,                        $cAEAD0)           >,           ~ltk.4)     )) @ #vk.22
7: splitEqs(2)
8: !KU( 'g'^x ) @ #vk.6
9: !KU( 'g'^~yy ) @ #vk.4
10: !KU( 'g'^~xx ) @ #vk.21

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 58 (precomputed):
    !LTK_SIG( $V.2, ~ltk.4 ) ▶₀ #vr.10
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !PK_SIG( $V.2, pkV ) ▶₁ #vr.10
1: splitEqs(1)
2: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, 'g'^x>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))     )) @ #vk.8
3: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, 'g'^x>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, 'g'^x>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, 'g'^x>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, 'g'^x>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.9
4: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      hkdfExpand(<$cAEAD0.2,                   h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.2, gx>, 'g'^~yy.1>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.18
5: !KU( (      sign(<            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'                                   >,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)⊕      sign(<            <$V.2, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pkV>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'                                   >,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V.2, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pkV>,                        $cAEAD0)           >,           ~ltk.4)     )) @ #vk.22
6: splitEqs(2)
7: !KU( 'g'^x ) @ #vk.6
8: !KU( 'g'^~yy ) @ #vk.4
9: !KU( 'g'^~xx ) @ #vk.21

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 59 (precomputed): !PK_SIG( $V.2, pkV ) ▶₁ #vr.10
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: splitEqs(1)
1: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, 'g'^x>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))     )) @ #vk.8
2: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, 'g'^x>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, 'g'^x>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, 'g'^x>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, 'g'^x>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.9
3: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      hkdfExpand(<$cAEAD0.2,                   h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.2, gx>, 'g'^~yy.1>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.18
4: !KU( (      sign(<            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'                                   >,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)⊕      sign(<            <$V.2, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.4)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'                                   >,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V.2, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.4)>,                        $cAEAD0)           >,           ~ltk.4)     )) @ #vk.22
5: splitEqs(2)
6: !KU( 'g'^x ) @ #vk.6
7: !KU( 'g'^~yy ) @ #vk.4
8: !KU( 'g'^~xx ) @ #vk.21

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 14 (directly): splitEqs(1)
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( 'g'^(~xx*~yy*inv(~xx.1)) ) @ #vk.6
1: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                      'g'^(~xx*~yy*inv(~xx.1))>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))     )) @ #vk.8
2: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                      'g'^(~xx*~yy*inv(~xx.1))>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                 'g'^(~xx*~yy*inv(~xx.1))>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                                        'g'^(~xx*~yy*inv(~xx.1))>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                             'g'^(~xx*~yy*inv(~xx.1))>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.9
3: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      hkdfExpand(<$cAEAD0.2,                   h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.2, gx>, 'g'^~yy.1>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.18
4: !KU( (      sign(<            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'                                   >,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)⊕      sign(<            <$V.2, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.4)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'                                   >,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V.2, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.4)>,                        $cAEAD0)           >,           ~ltk.4)     )) @ #vk.22
5: splitEqs(2)
6: !KU( 'g'^~yy ) @ #vk.4
7: !KU( 'g'^~xx ) @ #vk.21

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 76 (precomputed):
    !KU( 'g'^(~xx*~yy*inv(~xx.1)) ) @ #vk.6
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~yy ) @ #vk.24
1: !KU( ~xx.1 ) @ #vk.26
2: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                      'g'^(~xx*~yy*inv(~xx.1))>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))     )) @ #vk.8
3: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                      'g'^(~xx*~yy*inv(~xx.1))>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                 'g'^(~xx*~yy*inv(~xx.1))>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                                        'g'^(~xx*~yy*inv(~xx.1))>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                             'g'^(~xx*~yy*inv(~xx.1))>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.9
4: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      hkdfExpand(<$cAEAD0.2,                   h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.2, gx>, 'g'^~yy.1>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.18
5: !KU( (      sign(<            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'                                   >,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)⊕      sign(<            <$V.2, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.4)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'                                   >,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V.2, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.4)>,                        $cAEAD0)           >,           ~ltk.4)     )) @ #vk.22
6: splitEqs(2)
7: !KU( 'g'^~yy ) @ #vk.5
8: !KU( 'g'^~xx ) @ #vk.21

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.25
1: !KU( ~yy ) @ #vk.26
2: !KU( ~xx.1 ) @ #vk.28
3: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                      'g'^(~xx*~yy*inv(~xx.1))>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))     )) @ #vk.8
4: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                      'g'^(~xx*~yy*inv(~xx.1))>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                 'g'^(~xx*~yy*inv(~xx.1))>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                                        'g'^(~xx*~yy*inv(~xx.1))>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                             'g'^(~xx*~yy*inv(~xx.1))>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.9
5: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      hkdfExpand(<$cAEAD0.2,                   h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.2, gx>, 'g'^~yy.1>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.18
6: !KU( (      sign(<            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'                                   >,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)⊕      sign(<            <$V.2, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.4)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'                                   >,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V.2, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.4)>,                        $cAEAD0)           >,           ~ltk.4)     )) @ #vk.22
7: splitEqs(2)
8: !KU( 'g'^~yy ) @ #vk.5
9: !KU( 'g'^~xx ) @ #vk.21

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 83 (precomputed): !KU( ~xx ) @ #vk.25
  solved goal nr. 82 (precomputed): !KU( ~yy ) @ #vk.24
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.24
1: !KU( ~xx.1 ) @ #vk.26
2: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                      'g'^(~xx*~yy*inv(~xx.1))>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))     )) @ #vk.8
3: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                      'g'^(~xx*~yy*inv(~xx.1))>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                 'g'^(~xx*~yy*inv(~xx.1))>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                                        'g'^(~xx*~yy*inv(~xx.1))>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                             'g'^(~xx*~yy*inv(~xx.1))>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.9
4: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      hkdfExpand(<$cAEAD0.2,                   h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.2, gx>, 'g'^~yy.1>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.18
5: !KU( (      sign(<            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'                                   >,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)⊕      sign(<            <$V.2, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.4)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'                                   >,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V.2, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.4)>,                        $cAEAD0)           >,           ~ltk.4)     )) @ #vk.22
6: splitEqs(2)
7: !KU( 'g'^~yy ) @ #vk.5
8: !KU( 'g'^~xx ) @ #vk.21

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 88 (precomputed): !KU( ~xx ) @ #vk.24
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !PK_SIG( $V.2, pkV ) ▶₁ #vr.6
1: splitEqs(1)
2: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                   '2'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      sign(<            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'                                   >,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)     )) @ #vk.4
3: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, 'g'^x>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))     )) @ #vk.8
4: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, 'g'^x>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, 'g'^x>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, 'g'^x>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, 'g'^x>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.9
5: !KU( 'g'^x ) @ #vk.6
6: !KU( ($V⊕$V.2) ) @ #vk.16
7: !KU( 'g'^~yy ) @ #vk.3
8: !KU( 'g'^~xx ) @ #vk.15

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 36 (precomputed): !PK_SIG( $V.2, pkV ) ▶₁ #vr.6
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: splitEqs(1)
1: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                   '2'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      sign(<            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'                                   >,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)     )) @ #vk.4
2: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, 'g'^x>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))     )) @ #vk.8
3: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, 'g'^x>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, 'g'^x>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, 'g'^x>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>, 'g'^x>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.9
4: !KU( 'g'^x ) @ #vk.6
5: !KU( ($V⊕$V.2) ) @ #vk.16
6: !KU( 'g'^~yy ) @ #vk.3
7: !KU( 'g'^~xx ) @ #vk.15

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 14 (directly): splitEqs(1)
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( 'g'^(~xx*~yy*inv(~xx.1)) ) @ #vk.6
1: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                   '2'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      sign(<            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'                                   >,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)     )) @ #vk.4
2: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                      'g'^(~xx*~yy*inv(~xx.1))>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))     )) @ #vk.8
3: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                      'g'^(~xx*~yy*inv(~xx.1))>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                 'g'^(~xx*~yy*inv(~xx.1))>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                                        'g'^(~xx*~yy*inv(~xx.1))>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                             'g'^(~xx*~yy*inv(~xx.1))>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.9
4: !KU( ($V⊕$V.2) ) @ #vk.16
5: !KU( 'g'^~yy ) @ #vk.3
6: !KU( 'g'^~xx ) @ #vk.15

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 53 (precomputed):
    !KU( 'g'^(~xx*~yy*inv(~xx.1)) ) @ #vk.6
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.18
1: !KU( ~xx.1 ) @ #vk.20
2: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                   '2'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      sign(<            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'                                   >,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)     )) @ #vk.5
3: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                      'g'^(~xx*~yy*inv(~xx.1))>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))     )) @ #vk.8
4: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                      'g'^(~xx*~yy*inv(~xx.1))>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                 'g'^(~xx*~yy*inv(~xx.1))>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                                        'g'^(~xx*~yy*inv(~xx.1))>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                             'g'^(~xx*~yy*inv(~xx.1))>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.9
5: !KU( ($V⊕$V.2) ) @ #vk.16
6: !KU( 'g'^~yy ) @ #vk.4
7: !KU( 'g'^~xx ) @ #vk.15

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 65 (precomputed): !KU( ~xx ) @ #vk.18
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.19
1: !KU( ~yy ) @ #vk.20
2: !KU( ~xx.1 ) @ #vk.22
3: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                   '2'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      sign(<            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'                                   >,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)     )) @ #vk.5
4: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                      'g'^(~xx*~yy*inv(~xx.1))>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))     )) @ #vk.8
5: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                      'g'^(~xx*~yy*inv(~xx.1))>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                 'g'^(~xx*~yy*inv(~xx.1))>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                                        'g'^(~xx*~yy*inv(~xx.1))>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                             'g'^(~xx*~yy*inv(~xx.1))>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.9
6: !KU( ($V⊕$V.2) ) @ #vk.16
7: !KU( 'g'^~yy ) @ #vk.4
8: !KU( 'g'^~xx ) @ #vk.15

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 60 (precomputed): !KU( ~xx ) @ #vk.19
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~yy ) @ #vk.18
1: !KU( ~xx.1 ) @ #vk.20
2: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                   '2'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      sign(<            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),              pk(~ltk.1)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0,                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'                                   >,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                          pk(~ltk.1)>,                        $cAEAD0)           >,           ~ltk.1)     )) @ #vk.5
3: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                      'g'^(~xx*~yy*inv(~xx.1))>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))     )) @ #vk.8
4: !KU( (      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                      'g'^(~xx*~yy*inv(~xx.1))>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      sign(<            <$V.1,              h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                 'g'^(~xx*~yy*inv(~xx.1))>),              pk(~ltk.3)>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.1,                                     h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                                        'g'^(~xx*~yy*inv(~xx.1))>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                        <$V.1,                          h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, 'g'^~xx.1>,                             'g'^(~xx*~yy*inv(~xx.1))>),                          pk(~ltk.3)>,                        $cAEAD0.1)           >,           ~ltk.3)     )) @ #vk.9
5: !KU( ($V⊕$V.2) ) @ #vk.16
6: !KU( 'g'^~yy ) @ #vk.4
7: !KU( 'g'^~xx ) @ #vk.15

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 59 (precomputed): !KU( ~yy ) @ #vk.18
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~ltk.1 ) @ #vk.34
1: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, gx>, 'g'^~yy.1>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.26
2: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0,                              h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'>,                            hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                 <$V.1, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                   pk(~ltk.2)>,                 $cAEAD0)) @ #vk.31
3: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0,                              h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'>,                            hkdfExtract('emptyStr', 'g'^(~xx*~yy))),                 <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                   pk(~ltk.1)>,                 $cAEAD0)) @ #vk.38
4: splitEqs(1)
5: !KU( 'g'^~yy ) @ #vk.12
6: !KU( 'g'^~xx ) @ #vk.25
7: !KU( pk(~ltk.2) ) @ #vk.30
8: !KU( pk(~ltk.1) ) @ #vk.37

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 112 (precomputed): !KU( ~ltk.1 ) @ #vk.34
  simplified formula:
      "((#vr.40 = #i) ∨ (#i < #vr.40))"
    to
      "⊥"
  solved goal nr. 121 (simplified): (#vr.40 = #i)  ∥ (#i < #vr.40)
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.17, 0) ~~> (#vk.3, 0)
1: !LTK_SIG( $V.2, ~ltk.3 ) ▶₀ #vr.14
2: !PK_SIG( $V.2, pkV ) ▶₁ #vr.14
3: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, gx>, 'g'^~yy.1>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.20
4: splitEqs(1)
5: splitEqs(16)
6: !KU( 'g'^~yy ) @ #vk.6
7: !KU( 'g'^~xx ) @ #vk.19

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.17, 0) ~~> (#vk.3, 0)
1: !LTK_SIG( $V.2, ~ltk.3 ) ▶₀ #vr.14
2: !PK_SIG( $V.2, pkV ) ▶₁ #vr.14
3: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, gx>, 'g'^~yy.1>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.20
4: !KU( (z.2⊕      hkdfExpand(<$cAEAD0.2,                   h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.2, gx.1>, 'g'^~yy.2>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', z.1))     )) @ #vk.24
5: splitEqs(1)
6: splitEqs(16)
7: !KU( 'g'^~yy ) @ #vk.6
8: !KU( 'g'^~xx ) @ #vk.19

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.17, 0) ~~> (#vk.3, 0)
1: !LTK_SIG( $V.2, ~ltk.3 ) ▶₀ #vr.14
2: !PK_SIG( $V.2, pkV ) ▶₁ #vr.14
3: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, gx>, 'g'^~yy.1>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.20
4: !KU( (z.2⊕      sign(<            <$V.2,              h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.2, gx.1>, 'g'^~yy.2>), pkV>,             aeadEncrypt('emptyStr',                        hkdfExpand(<$cAEAD0.2,                                     h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.2, gx.1>, 'g'^~yy.2>),                                     'K_2m'>,                                   hkdfExtract('emptyStr', z.1)),                        <$V.2,                          h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.2, gx.1>, 'g'^~yy.2>), pkV>,                        $cAEAD0.2)           >,           ~ltk.3)     )) @ #vk.24
5: splitEqs(1)
6: splitEqs(16)
7: !KU( 'g'^~yy ) @ #vk.6
8: !KU( 'g'^~xx ) @ #vk.19

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.17, 0) ~~> (#vk.3, 0)
1: !LTK_SIG( $V.2, ~ltk.3 ) ▶₀ #vr.14
2: !PK_SIG( $V.2, pkV ) ▶₁ #vr.14
3: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, gx>, 'g'^~yy.1>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.20
4: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.2, gx.1>, 'g'^~yy.2>),                  'K_2e', '2'>,                hkdfExtract('emptyStr', z.1))) @ #vk.24
5: splitEqs(1)
6: splitEqs(16)
7: !KU( 'g'^~yy ) @ #vk.6
8: !KU( 'g'^~xx ) @ #vk.19

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.17, 0) ~~> (#vk.3, 0)
1: !LTK_SIG( $V.2, ~ltk.3 ) ▶₀ #vr.14
2: !PK_SIG( $V.2, pkV ) ▶₁ #vr.14
3: !KU( sign(<           <$V.2,             h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.2, gx.1>, 'g'^~yy.2>), pkV>,            aeadEncrypt('emptyStr',                       hkdfExpand(<$cAEAD0.2,                                    h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.2, gx.1>, 'g'^~yy.2>),                                    'K_2m'>,                                  hkdfExtract('emptyStr', z.1)),                       <$V.2,                         h(<$cHash0.2, <'SIG', 'SIG', $cSUITE0.2, gx.1>, 'g'^~yy.2>), pkV>,                       $cAEAD0.2)          >,          ~ltk.3)) @ #vk.24
4: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'SIG', $cSUITE0.1, gx>, 'g'^~yy.1>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.20
5: splitEqs(1)
6: splitEqs(16)
7: !KU( 'g'^~yy ) @ #vk.6
8: !KU( 'g'^~xx ) @ #vk.19

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

 OK.

theory edhoc_SIG_SIG_ACTIVE begin

// Function signature and definition of the equational theory E

builtins: diffie-hellman, xor
functions: aeadDecrypt/4, aeadEncrypt/4, decrypt/3, fst/1, h/1,
           hkdfExpand/2, hkdfExtract/2, pair/2, pk/1, sign/2, snd/1, true/0,
           verify/3
equations:
    aeadDecrypt(key, aeadEncrypt(key, pt, aad, algoId), aad, algoId) = pt,
    decrypt(key, aeadEncrypt(key, pt, aad, algoID), algoId) = pt,
    fst(<x.1, x.2>) = x.1,
    snd(<x.1, x.2>) = x.2,
    verify(sign(x.1, x.2), x.1, pk(x.2)) = true



restriction Eq:
  "∀ x y #i. (Eq( x, y ) @ #i) ⇒ (x = y)"
  // safety formula

rule (modulo E) I1_SIG_SIG:
   [ !LTK_SIG( $U, ~ltk ), Fr( ~xx ), Fr( ~tid ) ]
  --[ I1( ~tid, $U, $V, <'SIG', 'SIG', $cSUITE0, 'g'^~xx> ) ]->
   [
   StI1_SIG_SIG( $U, ~ltk, $V, ~xx, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, ~tid
   ),
   Out( <'SIG', 'SIG', $cSUITE0, 'g'^~xx> )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) R2_SIG_SIG:
   [
   !LTK_SIG( $V, ~ltk ), !PK_SIG( $V, pkV ),
   In( <'SIG', 'SIG', $cSUITE0, gx> ), Fr( ~yy ), Fr( ~tid )
   ]
  --[
  ExpRunningR( ~tid, $V, gx^~yy ),
  R2( ~tid, $V, <'SIG', 'SIG', $cSUITE0, gx>,
      <'g'^~yy, 
       ($V⊕
        hkdfExpand(<$cAEAD0, 
                    h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 'K_2e', '1'>,
                   hkdfExtract('emptyStr', gx^~yy))
       ), 
       (
        hkdfExpand(<$cAEAD0, 
                    h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 'K_2e', '2'>,
                   hkdfExtract('emptyStr', gx^~yy))⊕
        sign(<<$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>), pkV>, 
              aeadEncrypt('emptyStr',
                          hkdfExpand(<$cAEAD0, 
                                      h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 'K_2m'>,
                                     hkdfExtract('emptyStr', gx^~yy)),
                          <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>), pkV>, $cAEAD0)
             >,
             ~ltk)
       )
      >
  )
  ]->
   [
   StR2_SIG_SIG( $V, ~ltk, ~yy, hkdfExtract('emptyStr', gx^~yy),
                 h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>),
                 <
                  ($V⊕
                   hkdfExpand(<$cAEAD0, 
                               h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 'K_2e', '1'>,
                              hkdfExtract('emptyStr', gx^~yy))
                  ), 
                  (
                   hkdfExpand(<$cAEAD0, 
                               h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 'K_2e', '2'>,
                              hkdfExtract('emptyStr', gx^~yy))⊕
                   sign(<<$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>), pkV>, 
                         aeadEncrypt('emptyStr',
                                     hkdfExpand(<$cAEAD0, 
                                                 h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 'K_2m'>,
                                                hkdfExtract('emptyStr', gx^~yy)),
                                     <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>), pkV>, $cAEAD0)
                        >,
                        ~ltk)
                  )
                 >,
                 gx^~yy, ~tid, <'SIG', 'SIG', $cSUITE0, gx>,
                 <'g'^~yy, 
                  ($V⊕
                   hkdfExpand(<$cAEAD0, 
                               h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 'K_2e', '1'>,
                              hkdfExtract('emptyStr', gx^~yy))
                  ), 
                  (
                   hkdfExpand(<$cAEAD0, 
                               h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 'K_2e', '2'>,
                              hkdfExtract('emptyStr', gx^~yy))⊕
                   sign(<<$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>), pkV>, 
                         aeadEncrypt('emptyStr',
                                     hkdfExpand(<$cAEAD0, 
                                                 h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 'K_2m'>,
                                                hkdfExtract('emptyStr', gx^~yy)),
                                     <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>), pkV>, $cAEAD0)
                        >,
                        ~ltk)
                  )
                 >
   ),
   Out( <'g'^~yy, 
         ($V⊕
          hkdfExpand(<$cAEAD0, 
                      h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 'K_2e', '1'>,
                     hkdfExtract('emptyStr', gx^~yy))
         ), 
         (
          hkdfExpand(<$cAEAD0, 
                      h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 'K_2e', '2'>,
                     hkdfExtract('emptyStr', gx^~yy))⊕
          sign(<<$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>), pkV>, 
                aeadEncrypt('emptyStr',
                            hkdfExpand(<$cAEAD0, 
                                        h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 'K_2m'>,
                                       hkdfExtract('emptyStr', gx^~yy)),
                            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>), pkV>, $cAEAD0)
               >,
               ~ltk)
         )
        >
   )
   ]

  /*
  rule (modulo AC) R2_SIG_SIG:
     [
     !LTK_SIG( $V, ~ltk ), !PK_SIG( $V, pkV ),
     In( <'SIG', 'SIG', $cSUITE0, gx> ), Fr( ~yy ), Fr( ~tid )
     ]
    --[
    ExpRunningR( ~tid, $V, z ),
    R2( ~tid, $V, <'SIG', 'SIG', $cSUITE0, gx>,
        <'g'^~yy, 
         ($V⊕
          hkdfExpand(<$cAEAD0, 
                      h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 'K_2e', '1'>,
                     hkdfExtract('emptyStr', z))
         ), 
         (
          hkdfExpand(<$cAEAD0, 
                      h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 'K_2e', '2'>,
                     hkdfExtract('emptyStr', z))⊕
          sign(<<$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>), pkV>, 
                aeadEncrypt('emptyStr',
                            hkdfExpand(<$cAEAD0, 
                                        h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 'K_2m'>,
                                       hkdfExtract('emptyStr', z)),
                            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>), pkV>, $cAEAD0)
               >,
               ~ltk)
         )
        >
    )
    ]->
     [
     StR2_SIG_SIG( $V, ~ltk, ~yy, hkdfExtract('emptyStr', z),
                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>),
                   <
                    ($V⊕
                     hkdfExpand(<$cAEAD0, 
                                 h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 'K_2e', '1'>,
                                hkdfExtract('emptyStr', z))
                    ), 
                    (
                     hkdfExpand(<$cAEAD0, 
                                 h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 'K_2e', '2'>,
                                hkdfExtract('emptyStr', z))⊕
                     sign(<<$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>), pkV>, 
                           aeadEncrypt('emptyStr',
                                       hkdfExpand(<$cAEAD0, 
                                                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 'K_2m'
                                                  >,
                                                  hkdfExtract('emptyStr', z)),
                                       <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>), pkV>,
                                       $cAEAD0)
                          >,
                          ~ltk)
                    )
                   >,
                   z, ~tid, <'SIG', 'SIG', $cSUITE0, gx>,
                   <'g'^~yy, 
                    ($V⊕
                     hkdfExpand(<$cAEAD0, 
                                 h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 'K_2e', '1'>,
                                hkdfExtract('emptyStr', z))
                    ), 
                    (
                     hkdfExpand(<$cAEAD0, 
                                 h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 'K_2e', '2'>,
                                hkdfExtract('emptyStr', z))⊕
                     sign(<<$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>), pkV>, 
                           aeadEncrypt('emptyStr',
                                       hkdfExpand(<$cAEAD0, 
                                                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 'K_2m'
                                                  >,
                                                  hkdfExtract('emptyStr', z)),
                                       <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>), pkV>,
                                       $cAEAD0)
                          >,
                          ~ltk)
                    )
                   >
     ),
     Out( <'g'^~yy, 
           ($V⊕
            hkdfExpand(<$cAEAD0, 
                        h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 'K_2e', '1'>,
                       hkdfExtract('emptyStr', z))
           ), 
           (
            hkdfExpand(<$cAEAD0, 
                        h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 'K_2e', '2'>,
                       hkdfExtract('emptyStr', z))⊕
            sign(<<$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>), pkV>, 
                  aeadEncrypt('emptyStr',
                              hkdfExpand(<$cAEAD0, 
                                          h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 'K_2m'>,
                                         hkdfExtract('emptyStr', z)),
                              <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>), pkV>, $cAEAD0)
                 >,
                 ~ltk)
           )
          >
     )
     ]
    variants (modulo AC)
    1. ~yy   = ~yy.122
       gx    = gx.123
       z     = gx.123^~yy.122
    
    2. ~yy   = ~yy.126
       gx    = z.131^inv(~yy.126)
       z     = z.131
    
    3. ~yy   = ~yy.7560
       gx    = x.15111^x.15112
       z     = x.15111^(~yy.7560*x.15112)
    
    4. ~yy   = ~yy.7561
       gx    = x.15113^inv((~yy.7561*x.15114))
       z     = x.15113^inv(x.15114)
    
    5. ~yy   = ~yy.7561
       gx    = x.15113^(x.15114*inv(~yy.7561))
       z     = x.15113^x.15114
    
    6. ~yy   = ~yy.7562
       gx    = x.15114^(x.15115*inv((~yy.7562*x.15116)))
       z     = x.15114^(x.15115*inv(x.15116))
  */

rule (modulo E) I3_SIG_SIG:
   [
   StI1_SIG_SIG( $U, ~ltk, $V, ~xx, m1, ~tid ), !PK_SIG( $V, pkV ),
   !PK_SIG( $U, pkU ),
   In( <gy, 
        ($V⊕
         hkdfExpand(<$cAEAD0, h(<$cHash0, m1, gy>), 'K_2e', '1'>,
                    hkdfExtract('emptyStr', gy^~xx))
        ), 
        (authR⊕
         hkdfExpand(<$cAEAD0, h(<$cHash0, m1, gy>), 'K_2e', '2'>,
                    hkdfExtract('emptyStr', gy^~xx))
        )
       >
   )
   ]
  --[
  ExpCommitI( ~tid, $U, $V, gy^~xx ), CommitI( ~tid, $U, $V, gy^~xx ),
  ExpRunningI( ~tid, $U, $V, gy^~xx ), RunningI( ~tid, $U, $V, gy^~xx ),
  I3( ~tid, $U, $V, m1,
      <gy, 
       ($V⊕
        hkdfExpand(<$cAEAD0, h(<$cHash0, m1, gy>), 'K_2e', '1'>,
                   hkdfExtract('emptyStr', gy^~xx))
       ), 
       (authR⊕
        hkdfExpand(<$cAEAD0, h(<$cHash0, m1, gy>), 'K_2e', '2'>,
                   hkdfExtract('emptyStr', gy^~xx))
       )
      >,
      <'emptyStr', 
       aeadEncrypt(<$U, 
                    sign(<
                          <$U, 
                           h(<$cHash0, h(<$cHash0, m1, gy>), 
                              <
                               ($V⊕
                                hkdfExpand(<$cAEAD0, h(<$cHash0, m1, gy>), 'K_2e', '1'>,
                                           hkdfExtract('emptyStr', gy^~xx))
                               ), 
                               (authR⊕
                                hkdfExpand(<$cAEAD0, h(<$cHash0, m1, gy>), 'K_2e', '2'>,
                                           hkdfExtract('emptyStr', gy^~xx))
                               )
                              >, 
                              'emptyStr'>), 
                           pkU>, 
                          aeadEncrypt('emptyStr',
                                      hkdfExpand(<$cAEAD0, 
                                                  h(<$cHash0, h(<$cHash0, m1, gy>), 
                                                     <
                                                      ($V⊕
                                                       hkdfExpand(<$cAEAD0, h(<$cHash0, m1, gy>), 'K_2e', '1'
                                                                  >,
                                                                  hkdfExtract('emptyStr', gy^~xx))
                                                      ), 
                                                      (authR⊕
                                                       hkdfExpand(<$cAEAD0, h(<$cHash0, m1, gy>), 'K_2e', '2'
                                                                  >,
                                                                  hkdfExtract('emptyStr', gy^~xx))
                                                      )
                                                     >, 
                                                     'emptyStr'>), 
                                                  'K_3m'>,
                                                 hkdfExtract('emptyStr', gy^~xx)),
                                      <$U, 
                                       h(<$cHash0, h(<$cHash0, m1, gy>), 
                                          <
                                           ($V⊕
                                            hkdfExpand(<$cAEAD0, h(<$cHash0, m1, gy>), 'K_2e', '1'>,
                                                       hkdfExtract('emptyStr', gy^~xx))
                                           ), 
                                           (authR⊕
                                            hkdfExpand(<$cAEAD0, h(<$cHash0, m1, gy>), 'K_2e', '2'>,
                                                       hkdfExtract('emptyStr', gy^~xx))
                                           )
                                          >, 
                                          'emptyStr'>), 
                                       pkU>,
                                      $cAEAD0)
                         >,
                         ~ltk)
                   >,
                   hkdfExpand(<$cAEAD0, 
                               h(<$cHash0, h(<$cHash0, m1, gy>), 
                                  <
                                   ($V⊕
                                    hkdfExpand(<$cAEAD0, h(<$cHash0, m1, gy>), 'K_2e', '1'>,
                                               hkdfExtract('emptyStr', gy^~xx))
                                   ), 
                                   (authR⊕
                                    hkdfExpand(<$cAEAD0, h(<$cHash0, m1, gy>), 'K_2e', '2'>,
                                               hkdfExtract('emptyStr', gy^~xx))
                                   )
                                  >, 
                                  'emptyStr'>), 
                               'K_3ae'>,
                              hkdfExtract('emptyStr', gy^~xx)),
                   h(<$cHash0, h(<$cHash0, m1, gy>), 
                      <
                       ($V⊕
                        hkdfExpand(<$cAEAD0, h(<$cHash0, m1, gy>), 'K_2e', '1'>,
                                   hkdfExtract('emptyStr', gy^~xx))
                       ), 
                       (authR⊕
                        hkdfExpand(<$cAEAD0, h(<$cHash0, m1, gy>), 'K_2e', '2'>,
                                   hkdfExtract('emptyStr', gy^~xx))
                       )
                      >, 
                      'emptyStr'>),
                   $cAEAD0)
      >
  ),
  Eq( verify(authR,
             <<$V, h(<$cHash0, m1, gy>), pkV>, 
              aeadEncrypt('emptyStr',
                          hkdfExpand(<$cAEAD0, h(<$cHash0, m1, gy>), 'K_2m'>,
                                     hkdfExtract('emptyStr', gy^~xx)),
                          <$V, h(<$cHash0, m1, gy>), pkV>, $cAEAD0)
             >,
             pkV),
      true
  )
  ]->
   [
   Out( <'emptyStr', 
         aeadEncrypt(<$U, 
                      sign(<
                            <$U, 
                             h(<$cHash0, h(<$cHash0, m1, gy>), 
                                <
                                 ($V⊕
                                  hkdfExpand(<$cAEAD0, h(<$cHash0, m1, gy>), 'K_2e', '1'>,
                                             hkdfExtract('emptyStr', gy^~xx))
                                 ), 
                                 (authR⊕
                                  hkdfExpand(<$cAEAD0, h(<$cHash0, m1, gy>), 'K_2e', '2'>,
                                             hkdfExtract('emptyStr', gy^~xx))
                                 )
                                >, 
                                'emptyStr'>), 
                             pkU>, 
                            aeadEncrypt('emptyStr',
                                        hkdfExpand(<$cAEAD0, 
                                                    h(<$cHash0, h(<$cHash0, m1, gy>), 
                                                       <
                                                        ($V⊕
                                                         hkdfExpand(<$cAEAD0, h(<$cHash0, m1, gy>), 'K_2e', 
                                                                     '1'>,
                                                                    hkdfExtract('emptyStr', gy^~xx))
                                                        ), 
                                                        (authR⊕
                                                         hkdfExpand(<$cAEAD0, h(<$cHash0, m1, gy>), 'K_2e', 
                                                                     '2'>,
                                                                    hkdfExtract('emptyStr', gy^~xx))
                                                        )
                                                       >, 
                                                       'emptyStr'>), 
                                                    'K_3m'>,
                                                   hkdfExtract('emptyStr', gy^~xx)),
                                        <$U, 
                                         h(<$cHash0, h(<$cHash0, m1, gy>), 
                                            <
                                             ($V⊕
                                              hkdfExpand(<$cAEAD0, h(<$cHash0, m1, gy>), 'K_2e', '1'>,
                                                         hkdfExtract('emptyStr', gy^~xx))
                                             ), 
                                             (authR⊕
                                              hkdfExpand(<$cAEAD0, h(<$cHash0, m1, gy>), 'K_2e', '2'>,
                                                         hkdfExtract('emptyStr', gy^~xx))
                                             )
                                            >, 
                                            'emptyStr'>), 
                                         pkU>,
                                        $cAEAD0)
                           >,
                           ~ltk)
                     >,
                     hkdfExpand(<$cAEAD0, 
                                 h(<$cHash0, h(<$cHash0, m1, gy>), 
                                    <
                                     ($V⊕
                                      hkdfExpand(<$cAEAD0, h(<$cHash0, m1, gy>), 'K_2e', '1'>,
                                                 hkdfExtract('emptyStr', gy^~xx))
                                     ), 
                                     (authR⊕
                                      hkdfExpand(<$cAEAD0, h(<$cHash0, m1, gy>), 'K_2e', '2'>,
                                                 hkdfExtract('emptyStr', gy^~xx))
                                     )
                                    >, 
                                    'emptyStr'>), 
                                 'K_3ae'>,
                                hkdfExtract('emptyStr', gy^~xx)),
                     h(<$cHash0, h(<$cHash0, m1, gy>), 
                        <
                         ($V⊕
                          hkdfExpand(<$cAEAD0, h(<$cHash0, m1, gy>), 'K_2e', '1'>,
                                     hkdfExtract('emptyStr', gy^~xx))
                         ), 
                         (authR⊕
                          hkdfExpand(<$cAEAD0, h(<$cHash0, m1, gy>), 'K_2e', '2'>,
                                     hkdfExtract('emptyStr', gy^~xx))
                         )
                        >, 
                        'emptyStr'>),
                     $cAEAD0)
        >
   )
   ]

  /*
  rule (modulo AC) I3_SIG_SIG:
     [
     StI1_SIG_SIG( $U, ~ltk, $V, ~xx, m1, ~tid ), !PK_SIG( $V, pkV ),
     !PK_SIG( $U, pkU ),
     In( <gy, 
          ($V⊕
           hkdfExpand(<$cAEAD0, h(<$cHash0, m1, gy>), 'K_2e', '1'>,
                      hkdfExtract('emptyStr', z.1))
          ), 
          z>
     )
     ]
    --[
    ExpCommitI( ~tid, $U, $V, z.1 ), CommitI( ~tid, $U, $V, z.1 ),
    ExpRunningI( ~tid, $U, $V, z.1 ), RunningI( ~tid, $U, $V, z.1 ),
    I3( ~tid, $U, $V, m1,
        <gy, 
         ($V⊕
          hkdfExpand(<$cAEAD0, h(<$cHash0, m1, gy>), 'K_2e', '1'>,
                     hkdfExtract('emptyStr', z.1))
         ), 
         z>,
        <'emptyStr', 
         aeadEncrypt(<$U, 
                      sign(<
                            <$U, 
                             h(<$cHash0, h(<$cHash0, m1, gy>), 
                                <
                                 ($V⊕
                                  hkdfExpand(<$cAEAD0, h(<$cHash0, m1, gy>), 'K_2e', '1'>,
                                             hkdfExtract('emptyStr', z.1))
                                 ), 
                                 z>, 
                                'emptyStr'>), 
                             pkU>, 
                            aeadEncrypt('emptyStr',
                                        hkdfExpand(<$cAEAD0, 
                                                    h(<$cHash0, h(<$cHash0, m1, gy>), 
                                                       <
                                                        ($V⊕
                                                         hkdfExpand(<$cAEAD0, h(<$cHash0, m1, gy>), 'K_2e', 
                                                                     '1'>,
                                                                    hkdfExtract('emptyStr', z.1))
                                                        ), 
                                                        z>, 
                                                       'emptyStr'>), 
                                                    'K_3m'>,
                                                   hkdfExtract('emptyStr', z.1)),
                                        <$U, 
                                         h(<$cHash0, h(<$cHash0, m1, gy>), 
                                            <
                                             ($V⊕
                                              hkdfExpand(<$cAEAD0, h(<$cHash0, m1, gy>), 'K_2e', '1'>,
                                                         hkdfExtract('emptyStr', z.1))
                                             ), 
                                             z>, 
                                            'emptyStr'>), 
                                         pkU>,
                                        $cAEAD0)
                           >,
                           ~ltk)
                     >,
                     hkdfExpand(<$cAEAD0, 
                                 h(<$cHash0, h(<$cHash0, m1, gy>), 
                                    <
                                     ($V⊕
                                      hkdfExpand(<$cAEAD0, h(<$cHash0, m1, gy>), 'K_2e', '1'>,
                                                 hkdfExtract('emptyStr', z.1))
                                     ), 
                                     z>, 
                                    'emptyStr'>), 
                                 'K_3ae'>,
                                hkdfExtract('emptyStr', z.1)),
                     h(<$cHash0, h(<$cHash0, m1, gy>), 
                        <
                         ($V⊕
                          hkdfExpand(<$cAEAD0, h(<$cHash0, m1, gy>), 'K_2e', '1'>,
                                     hkdfExtract('emptyStr', z.1))
                         ), 
                         z>, 
                        'emptyStr'>),
                     $cAEAD0)
        >
    ),
    Eq( z.2, true )
    ]->
     [
     Out( <'emptyStr', 
           aeadEncrypt(<$U, 
                        sign(<
                              <$U, 
                               h(<$cHash0, h(<$cHash0, m1, gy>), 
                                  <
                                   ($V⊕
                                    hkdfExpand(<$cAEAD0, h(<$cHash0, m1, gy>), 'K_2e', '1'>,
                                               hkdfExtract('emptyStr', z.1))
                                   ), 
                                   z>, 
                                  'emptyStr'>), 
                               pkU>, 
                              aeadEncrypt('emptyStr',
                                          hkdfExpand(<$cAEAD0, 
                                                      h(<$cHash0, h(<$cHash0, m1, gy>), 
                                                         <
                                                          ($V⊕
                                                           hkdfExpand(<$cAEAD0, h(<$cHash0, m1, gy>), 'K_2e', 
                                                                       '1'>,
                                                                      hkdfExtract('emptyStr', z.1))
                                                          ), 
                                                          z>, 
                                                         'emptyStr'>), 
                                                      'K_3m'>,
                                                     hkdfExtract('emptyStr', z.1)),
                                          <$U, 
                                           h(<$cHash0, h(<$cHash0, m1, gy>), 
                                              <
                                               ($V⊕
                                                hkdfExpand(<$cAEAD0, h(<$cHash0, m1, gy>), 'K_2e', '1'>,
                                                           hkdfExtract('emptyStr', z.1))
                                               ), 
                                               z>, 
                                              'emptyStr'>), 
                                           pkU>,
                                          $cAEAD0)
                             >,
                             ~ltk)
                       >,
                       hkdfExpand(<$cAEAD0, 
                                   h(<$cHash0, h(<$cHash0, m1, gy>), 
                                      <
                                       ($V⊕
                                        hkdfExpand(<$cAEAD0, h(<$cHash0, m1, gy>), 'K_2e', '1'>,
                                                   hkdfExtract('emptyStr', z.1))
                                       ), 
                                       z>, 
                                      'emptyStr'>), 
                                   'K_3ae'>,
                                  hkdfExtract('emptyStr', z.1)),
                       h(<$cHash0, h(<$cHash0, m1, gy>), 
                          <
                           ($V⊕
                            hkdfExpand(<$cAEAD0, h(<$cHash0, m1, gy>), 'K_2e', '1'>,
                                       hkdfExtract('emptyStr', z.1))
                           ), 
                           z>, 
                          'emptyStr'>),
                       $cAEAD0)
          >
     )
     ]
    variants (modulo AC)
     1. $V    = $V.50
        $cAEAD0
              = $cAEAD0.51
        $cHash0
              = $cHash0.52
        ~xx   = ~xx.55
        gy    = gy.57
        m1    = m1.58
        pkV   = pkV.60
        z     = hkdfExpand(<$cAEAD0.51, h(<$cHash0.52, m1.58, gy.57>), 'K_2e', 
                            '2'>,
                           hkdfExtract('emptyStr', gy.57^~xx.55))
        z.1   = gy.57^~xx.55
        z.2   = verify(zero,
                       <<$V.50, h(<$cHash0.52, m1.58, gy.57>), pkV.60>, 
                        aeadEncrypt('emptyStr',
                                    hkdfExpand(<$cAEAD0.51, h(<$cHash0.52, m1.58, gy.57>), 'K_2m'>,
                                               hkdfExtract('emptyStr', gy.57^~xx.55)),
                                    <$V.50, h(<$cHash0.52, m1.58, gy.57>), pkV.60>, $cAEAD0.51)
                       >,
                       pkV.60)
    
     2. $V    = $V.50
        $cAEAD0
              = $cAEAD0.51
        $cHash0
              = $cHash0.52
        ~xx   = ~xx.55
        gy    = gy.57
        m1    = m1.58
        pkV   = pkV.60
        z     = zero
        z.1   = gy.57^~xx.55
        z.2   = verify(hkdfExpand(<$cAEAD0.51, h(<$cHash0.52, m1.58, gy.57>), 
                                   'K_2e', '2'>,
                                  hkdfExtract('emptyStr', gy.57^~xx.55)),
                       <<$V.50, h(<$cHash0.52, m1.58, gy.57>), pkV.60>, 
                        aeadEncrypt('emptyStr',
                                    hkdfExpand(<$cAEAD0.51, h(<$cHash0.52, m1.58, gy.57>), 'K_2m'>,
                                               hkdfExtract('emptyStr', gy.57^~xx.55)),
                                    <$V.50, h(<$cHash0.52, m1.58, gy.57>), pkV.60>, $cAEAD0.51)
                       >,
                       pkV.60)
    
     3. $V    = $V.52
        $cAEAD0
              = $cAEAD0.53
        $cHash0
              = $cHash0.54
        ~xx   = ~xx.57
        gy    = gy.59
        m1    = m1.60
        pkV   = pkV.62
        z     = z.64
        z.1   = gy.59^~xx.57
        z.2   = verify((z.64⊕
                        hkdfExpand(<$cAEAD0.53, h(<$cHash0.54, m1.60, gy.59>), 'K_2e', '2'>,
                                   hkdfExtract('emptyStr', gy.59^~xx.57))
                       ),
                       <<$V.52, h(<$cHash0.54, m1.60, gy.59>), pkV.62>, 
                        aeadEncrypt('emptyStr',
                                    hkdfExpand(<$cAEAD0.53, h(<$cHash0.54, m1.60, gy.59>), 'K_2m'>,
                                               hkdfExtract('emptyStr', gy.59^~xx.57)),
                                    <$V.52, h(<$cHash0.54, m1.60, gy.59>), pkV.62>, $cAEAD0.53)
                       >,
                       pkV.62)
    
     4. $V    = $V.55
        $cAEAD0
              = $cAEAD0.56
        $cHash0
              = $cHash0.57
        ~xx   = ~xx.60
        gy    = z.70^inv(~xx.60)
        m1    = m1.63
        pkV   = pkV.65
        z     = z.67
        z.1   = z.70
        z.2   = verify((z.67⊕
                        hkdfExpand(<$cAEAD0.56, h(<$cHash0.57, m1.63, z.70^inv(~xx.60)>), 
                                    'K_2e', '2'>,
                                   hkdfExtract('emptyStr', z.70))
                       ),
                       <<$V.55, h(<$cHash0.57, m1.63, z.70^inv(~xx.60)>), pkV.65>, 
                        aeadEncrypt('emptyStr',
                                    hkdfExpand(<$cAEAD0.56, h(<$cHash0.57, m1.63, z.70^inv(~xx.60)>), 'K_2m'
                                               >,
                                               hkdfExtract('emptyStr', z.70)),
                                    <$V.55, h(<$cHash0.57, m1.63, z.70^inv(~xx.60)>), pkV.65>, $cAEAD0.56)
                       >,
                       pkV.65)
    
     5. $V    = $V.55
        $cAEAD0
              = $cAEAD0.56
        $cHash0
              = $cHash0.57
        ~xx   = ~xx.60
        gy    = z.70^inv(~xx.60)
        m1    = m1.63
        pkV   = pkV.65
        z     = hkdfExpand(<$cAEAD0.56, 
                            h(<$cHash0.57, m1.63, z.70^inv(~xx.60)>), 'K_2e', '2'>,
                           hkdfExtract('emptyStr', z.70))
        z.1   = z.70
        z.2   = verify(zero,
                       <<$V.55, h(<$cHash0.57, m1.63, z.70^inv(~xx.60)>), pkV.65>, 
                        aeadEncrypt('emptyStr',
                                    hkdfExpand(<$cAEAD0.56, h(<$cHash0.57, m1.63, z.70^inv(~xx.60)>), 'K_2m'
                                               >,
                                               hkdfExtract('emptyStr', z.70)),
                                    <$V.55, h(<$cHash0.57, m1.63, z.70^inv(~xx.60)>), pkV.65>, $cAEAD0.56)
                       >,
                       pkV.65)
    
     6. $V    = $V.55
        $cAEAD0
              = $cAEAD0.56
        $cHash0
              = $cHash0.57
        ~xx   = ~xx.60
        gy    = z.70^inv(~xx.60)
        m1    = m1.63
        pkV   = pkV.65
        z     = zero
        z.1   = z.70
        z.2   = verify(hkdfExpand(<$cAEAD0.56, 
                                   h(<$cHash0.57, m1.63, z.70^inv(~xx.60)>), 'K_2e', '2'>,
                                  hkdfExtract('emptyStr', z.70)),
                       <<$V.55, h(<$cHash0.57, m1.63, z.70^inv(~xx.60)>), pkV.65>, 
                        aeadEncrypt('emptyStr',
                                    hkdfExpand(<$cAEAD0.56, h(<$cHash0.57, m1.63, z.70^inv(~xx.60)>), 'K_2m'
                                               >,
                                               hkdfExtract('emptyStr', z.70)),
                                    <$V.55, h(<$cHash0.57, m1.63, z.70^inv(~xx.60)>), pkV.65>, $cAEAD0.56)
                       >,
                       pkV.65)
    
     7. $V    = $V.699
        $cAEAD0
              = $cAEAD0.700
        $cHash0
              = $cHash0.701
        ~xx   = ~xx.704
        gy    = gy.706
        m1    = m1.707
        pkV   = pkV.709
        z     = (authR.1395⊕
                 hkdfExpand(<$cAEAD0.700, h(<$cHash0.701, m1.707, gy.706>), 'K_2e', '2'>,
                            hkdfExtract('emptyStr', gy.706^~xx.704))
                )
        z.1   = gy.706^~xx.704
        z.2   = verify(authR.1395,
                       <<$V.699, h(<$cHash0.701, m1.707, gy.706>), pkV.709>, 
                        aeadEncrypt('emptyStr',
                                    hkdfExpand(<$cAEAD0.700, h(<$cHash0.701, m1.707, gy.706>), 'K_2m'>,
                                               hkdfExtract('emptyStr', gy.706^~xx.704)),
                                    <$V.699, h(<$cHash0.701, m1.707, gy.706>), pkV.709>, $cAEAD0.700)
                       >,
                       pkV.709)
    
     8. $V    = $V.700
        $cAEAD0
              = $cAEAD0.701
        $cHash0
              = $cHash0.702
        ~xx   = ~xx.705
        gy    = x.1396^x.1397
        m1    = m1.708
        pkV   = pkV.710
        z     = hkdfExpand(<$cAEAD0.701, 
                            h(<$cHash0.702, m1.708, x.1396^x.1397>), 'K_2e', '2'>,
                           hkdfExtract('emptyStr', x.1396^(~xx.705*x.1397)))
        z.1   = x.1396^(~xx.705*x.1397)
        z.2   = verify(zero,
                       <<$V.700, h(<$cHash0.702, m1.708, x.1396^x.1397>), pkV.710>, 
                        aeadEncrypt('emptyStr',
                                    hkdfExpand(<$cAEAD0.701, h(<$cHash0.702, m1.708, x.1396^x.1397>), 'K_2m'
                                               >,
                                               hkdfExtract('emptyStr', x.1396^(~xx.705*x.1397))),
                                    <$V.700, h(<$cHash0.702, m1.708, x.1396^x.1397>), pkV.710>, $cAEAD0.701)
                       >,
                       pkV.710)
    
     9. $V    = $V.701
        $cAEAD0
              = $cAEAD0.702
        $cHash0
              = $cHash0.703
        ~xx   = ~xx.706
        gy    = x.1397^x.1398
        m1    = m1.709
        pkV   = pkV.711
        z     = (authR.1399⊕
                 hkdfExpand(<$cAEAD0.702, h(<$cHash0.703, m1.709, x.1397^x.1398>), 
                             'K_2e', '2'>,
                            hkdfExtract('emptyStr', x.1397^(~xx.706*x.1398)))
                )
        z.1   = x.1397^(~xx.706*x.1398)
        z.2   = verify(authR.1399,
                       <<$V.701, h(<$cHash0.703, m1.709, x.1397^x.1398>), pkV.711>, 
                        aeadEncrypt('emptyStr',
                                    hkdfExpand(<$cAEAD0.702, h(<$cHash0.703, m1.709, x.1397^x.1398>), 'K_2m'
                                               >,
                                               hkdfExtract('emptyStr', x.1397^(~xx.706*x.1398))),
                                    <$V.701, h(<$cHash0.703, m1.709, x.1397^x.1398>), pkV.711>, $cAEAD0.702)
                       >,
                       pkV.711)
    
    10. $V    = $V.701
        $cAEAD0
              = $cAEAD0.702
        $cHash0
              = $cHash0.703
        ~xx   = ~xx.706
        gy    = x.1398^inv((~xx.706*x.1399))
        m1    = m1.709
        pkV   = pkV.711
        z     = hkdfExpand(<$cAEAD0.702, 
                            h(<$cHash0.703, m1.709, x.1398^inv((~xx.706*x.1399))>), 'K_2e', '2'>,
                           hkdfExtract('emptyStr', x.1398^inv(x.1399)))
        z.1   = x.1398^inv(x.1399)
        z.2   = verify(zero,
                       <
                        <$V.701, h(<$cHash0.703, m1.709, x.1398^inv((~xx.706*x.1399))>), pkV.711
                        >, 
                        aeadEncrypt('emptyStr',
                                    hkdfExpand(<$cAEAD0.702, 
                                                h(<$cHash0.703, m1.709, x.1398^inv((~xx.706*x.1399))>), 'K_2m'
                                               >,
                                               hkdfExtract('emptyStr', x.1398^inv(x.1399))),
                                    <$V.701, h(<$cHash0.703, m1.709, x.1398^inv((~xx.706*x.1399))>), pkV.711
                                    >,
                                    $cAEAD0.702)
                       >,
                       pkV.711)
    
    11. $V    = $V.701
        $cAEAD0
              = $cAEAD0.702
        $cHash0
              = $cHash0.703
        ~xx   = ~xx.706
        gy    = x.1398^(x.1399*inv(~xx.706))
        m1    = m1.709
        pkV   = pkV.711
        z     = hkdfExpand(<$cAEAD0.702, 
                            h(<$cHash0.703, m1.709, x.1398^(x.1399*inv(~xx.706))>), 'K_2e', '2'>,
                           hkdfExtract('emptyStr', x.1398^x.1399))
        z.1   = x.1398^x.1399
        z.2   = verify(zero,
                       <
                        <$V.701, h(<$cHash0.703, m1.709, x.1398^(x.1399*inv(~xx.706))>), pkV.711
                        >, 
                        aeadEncrypt('emptyStr',
                                    hkdfExpand(<$cAEAD0.702, 
                                                h(<$cHash0.703, m1.709, x.1398^(x.1399*inv(~xx.706))>), 'K_2m'
                                               >,
                                               hkdfExtract('emptyStr', x.1398^x.1399)),
                                    <$V.701, h(<$cHash0.703, m1.709, x.1398^(x.1399*inv(~xx.706))>), pkV.711
                                    >,
                                    $cAEAD0.702)
                       >,
                       pkV.711)
    
    12. $V    = $V.702
        $cAEAD0
              = $cAEAD0.703
        $cHash0
              = $cHash0.704
        ~xx   = ~xx.707
        gy    = z.717^inv(~xx.707)
        m1    = m1.710
        pkV   = pkV.712
        z     = (authR.1401⊕
                 hkdfExpand(<$cAEAD0.703, h(<$cHash0.704, m1.710, z.717^inv(~xx.707)>), 
                             'K_2e', '2'>,
                            hkdfExtract('emptyStr', z.717))
                )
        z.1   = z.717
        z.2   = verify(authR.1401,
                       <<$V.702, h(<$cHash0.704, m1.710, z.717^inv(~xx.707)>), pkV.712>, 
                        aeadEncrypt('emptyStr',
                                    hkdfExpand(<$cAEAD0.703, h(<$cHash0.704, m1.710, z.717^inv(~xx.707)>), 
                                                'K_2m'>,
                                               hkdfExtract('emptyStr', z.717)),
                                    <$V.702, h(<$cHash0.704, m1.710, z.717^inv(~xx.707)>), pkV.712>,
                                    $cAEAD0.703)
                       >,
                       pkV.712)
    
    13. $V    = $V.702
        $cAEAD0
              = $cAEAD0.703
        $cHash0
              = $cHash0.704
        ~xx   = ~xx.707
        gy    = x.1399^(x.1400*inv((~xx.707*x.1401)))
        m1    = m1.710
        pkV   = pkV.712
        z     = hkdfExpand(<$cAEAD0.703, 
                            h(<$cHash0.704, m1.710, x.1399^(x.1400*inv((~xx.707*x.1401)))>), 'K_2e', 
                            '2'>,
                           hkdfExtract('emptyStr', x.1399^(x.1400*inv(x.1401))))
        z.1   = x.1399^(x.1400*inv(x.1401))
        z.2   = verify(zero,
                       <
                        <$V.702, 
                         h(<$cHash0.704, m1.710, x.1399^(x.1400*inv((~xx.707*x.1401)))>), pkV.712
                        >, 
                        aeadEncrypt('emptyStr',
                                    hkdfExpand(<$cAEAD0.703, 
                                                h(<$cHash0.704, m1.710, x.1399^(x.1400*inv((~xx.707*x.1401)))
                                                  >), 
                                                'K_2m'>,
                                               hkdfExtract('emptyStr', x.1399^(x.1400*inv(x.1401)))),
                                    <$V.702, 
                                     h(<$cHash0.704, m1.710, x.1399^(x.1400*inv((~xx.707*x.1401)))>), pkV.712
                                    >,
                                    $cAEAD0.703)
                       >,
                       pkV.712)
    
    14. $V    = $V.703
        $cAEAD0
              = $cAEAD0.704
        $cHash0
              = $cHash0.705
        ~xx   = ~xx.708
        gy    = x.1401^inv((~xx.708*x.1402))
        m1    = m1.711
        pkV   = pkV.713
        z     = (authR.1403⊕
                 hkdfExpand(<$cAEAD0.704, 
                             h(<$cHash0.705, m1.711, x.1401^inv((~xx.708*x.1402))>), 'K_2e', '2'>,
                            hkdfExtract('emptyStr', x.1401^inv(x.1402)))
                )
        z.1   = x.1401^inv(x.1402)
        z.2   = verify(authR.1403,
                       <
                        <$V.703, h(<$cHash0.705, m1.711, x.1401^inv((~xx.708*x.1402))>), pkV.713
                        >, 
                        aeadEncrypt('emptyStr',
                                    hkdfExpand(<$cAEAD0.704, 
                                                h(<$cHash0.705, m1.711, x.1401^inv((~xx.708*x.1402))>), 'K_2m'
                                               >,
                                               hkdfExtract('emptyStr', x.1401^inv(x.1402))),
                                    <$V.703, h(<$cHash0.705, m1.711, x.1401^inv((~xx.708*x.1402))>), pkV.713
                                    >,
                                    $cAEAD0.704)
                       >,
                       pkV.713)
    
    15. $V    = $V.703
        $cAEAD0
              = $cAEAD0.704
        $cHash0
              = $cHash0.705
        ~xx   = ~xx.708
        gy    = x.1401^(x.1402*inv(~xx.708))
        m1    = m1.711
        pkV   = pkV.713
        z     = (authR.1403⊕
                 hkdfExpand(<$cAEAD0.704, 
                             h(<$cHash0.705, m1.711, x.1401^(x.1402*inv(~xx.708))>), 'K_2e', '2'>,
                            hkdfExtract('emptyStr', x.1401^x.1402))
                )
        z.1   = x.1401^x.1402
        z.2   = verify(authR.1403,
                       <
                        <$V.703, h(<$cHash0.705, m1.711, x.1401^(x.1402*inv(~xx.708))>), pkV.713
                        >, 
                        aeadEncrypt('emptyStr',
                                    hkdfExpand(<$cAEAD0.704, 
                                                h(<$cHash0.705, m1.711, x.1401^(x.1402*inv(~xx.708))>), 'K_2m'
                                               >,
                                               hkdfExtract('emptyStr', x.1401^x.1402)),
                                    <$V.703, h(<$cHash0.705, m1.711, x.1401^(x.1402*inv(~xx.708))>), pkV.713
                                    >,
                                    $cAEAD0.704)
                       >,
                       pkV.713)
    
    16. $V    = $V.704
        $cAEAD0
              = $cAEAD0.705
        $cHash0
              = $cHash0.706
        ~xx   = ~xx.709
        gy    = x.1402^(x.1403*inv((~xx.709*x.1404)))
        m1    = m1.712
        pkV   = pkV.714
        z     = (authR.1405⊕
                 hkdfExpand(<$cAEAD0.705, 
                             h(<$cHash0.706, m1.712, x.1402^(x.1403*inv((~xx.709*x.1404)))>), 'K_2e', 
                             '2'>,
                            hkdfExtract('emptyStr', x.1402^(x.1403*inv(x.1404))))
                )
        z.1   = x.1402^(x.1403*inv(x.1404))
        z.2   = verify(authR.1405,
                       <
                        <$V.704, 
                         h(<$cHash0.706, m1.712, x.1402^(x.1403*inv((~xx.709*x.1404)))>), pkV.714
                        >, 
                        aeadEncrypt('emptyStr',
                                    hkdfExpand(<$cAEAD0.705, 
                                                h(<$cHash0.706, m1.712, x.1402^(x.1403*inv((~xx.709*x.1404)))
                                                  >), 
                                                'K_2m'>,
                                               hkdfExtract('emptyStr', x.1402^(x.1403*inv(x.1404)))),
                                    <$V.704, 
                                     h(<$cHash0.706, m1.712, x.1402^(x.1403*inv((~xx.709*x.1404)))>), pkV.714
                                    >,
                                    $cAEAD0.705)
                       >,
                       pkV.714)
    
    17. $V    = $V.706
        $cAEAD0
              = $cAEAD0.707
        $cHash0
              = $cHash0.708
        ~xx   = ~xx.711
        gy    = x.1408^x.1409
        m1    = m1.714
        pkV   = pkV.716
        z     = zero
        z.1   = x.1408^(~xx.711*x.1409)
        z.2   = verify(hkdfExpand(<$cAEAD0.707, 
                                   h(<$cHash0.708, m1.714, x.1408^x.1409>), 'K_2e', '2'>,
                                  hkdfExtract('emptyStr', x.1408^(~xx.711*x.1409))),
                       <<$V.706, h(<$cHash0.708, m1.714, x.1408^x.1409>), pkV.716>, 
                        aeadEncrypt('emptyStr',
                                    hkdfExpand(<$cAEAD0.707, h(<$cHash0.708, m1.714, x.1408^x.1409>), 'K_2m'
                                               >,
                                               hkdfExtract('emptyStr', x.1408^(~xx.711*x.1409))),
                                    <$V.706, h(<$cHash0.708, m1.714, x.1408^x.1409>), pkV.716>, $cAEAD0.707)
                       >,
                       pkV.716)
    
    18. $V    = $V.706
        $cAEAD0
              = $cAEAD0.707
        $cHash0
              = $cHash0.708
        ~xx   = ~xx.711
        gy    = x.1408^inv((~xx.711*x.1409))
        m1    = m1.714
        pkV   = pkV.716
        z     = zero
        z.1   = x.1408^inv(x.1409)
        z.2   = verify(hkdfExpand(<$cAEAD0.707, 
                                   h(<$cHash0.708, m1.714, x.1408^inv((~xx.711*x.1409))>), 'K_2e', '2'>,
                                  hkdfExtract('emptyStr', x.1408^inv(x.1409))),
                       <
                        <$V.706, h(<$cHash0.708, m1.714, x.1408^inv((~xx.711*x.1409))>), pkV.716
                        >, 
                        aeadEncrypt('emptyStr',
                                    hkdfExpand(<$cAEAD0.707, 
                                                h(<$cHash0.708, m1.714, x.1408^inv((~xx.711*x.1409))>), 'K_2m'
                                               >,
                                               hkdfExtract('emptyStr', x.1408^inv(x.1409))),
                                    <$V.706, h(<$cHash0.708, m1.714, x.1408^inv((~xx.711*x.1409))>), pkV.716
                                    >,
                                    $cAEAD0.707)
                       >,
                       pkV.716)
    
    19. $V    = $V.706
        $cAEAD0
              = $cAEAD0.707
        $cHash0
              = $cHash0.708
        ~xx   = ~xx.711
        gy    = x.1408^(x.1409*inv(~xx.711))
        m1    = m1.714
        pkV   = pkV.716
        z     = zero
        z.1   = x.1408^x.1409
        z.2   = verify(hkdfExpand(<$cAEAD0.707, 
                                   h(<$cHash0.708, m1.714, x.1408^(x.1409*inv(~xx.711))>), 'K_2e', '2'>,
                                  hkdfExtract('emptyStr', x.1408^x.1409)),
                       <
                        <$V.706, h(<$cHash0.708, m1.714, x.1408^(x.1409*inv(~xx.711))>), pkV.716
                        >, 
                        aeadEncrypt('emptyStr',
                                    hkdfExpand(<$cAEAD0.707, 
                                                h(<$cHash0.708, m1.714, x.1408^(x.1409*inv(~xx.711))>), 'K_2m'
                                               >,
                                               hkdfExtract('emptyStr', x.1408^x.1409)),
                                    <$V.706, h(<$cHash0.708, m1.714, x.1408^(x.1409*inv(~xx.711))>), pkV.716
                                    >,
                                    $cAEAD0.707)
                       >,
                       pkV.716)
    
    20. $V    = $V.707
        $cAEAD0
              = $cAEAD0.708
        $cHash0
              = $cHash0.709
        ~xx   = ~xx.712
        gy    = gy.714
        m1    = m1.715
        pkV   = pk(x.1411)
        z     = (
                 hkdfExpand(<$cAEAD0.708, h(<$cHash0.709, m1.715, gy.714>), 'K_2e', '2'>,
                            hkdfExtract('emptyStr', gy.714^~xx.712))⊕
                 sign(<<$V.707, h(<$cHash0.709, m1.715, gy.714>), pk(x.1411)>, 
                       aeadEncrypt('emptyStr',
                                   hkdfExpand(<$cAEAD0.708, h(<$cHash0.709, m1.715, gy.714>), 'K_2m'>,
                                              hkdfExtract('emptyStr', gy.714^~xx.712)),
                                   <$V.707, h(<$cHash0.709, m1.715, gy.714>), pk(x.1411)>, $cAEAD0.708)
                      >,
                      x.1411)
                )
        z.1   = gy.714^~xx.712
        z.2   = true
    
    21. $V    = $V.707
        $cAEAD0
              = $cAEAD0.708
        $cHash0
              = $cHash0.709
        ~xx   = ~xx.712
        gy    = z.722^inv(~xx.712)
        m1    = m1.715
        pkV   = pk(x.1411)
        z     = (
                 hkdfExpand(<$cAEAD0.708, h(<$cHash0.709, m1.715, z.722^inv(~xx.712)>), 
                             'K_2e', '2'>,
                            hkdfExtract('emptyStr', z.722))⊕
                 sign(<
                       <$V.707, h(<$cHash0.709, m1.715, z.722^inv(~xx.712)>), pk(x.1411)>, 
                       aeadEncrypt('emptyStr',
                                   hkdfExpand(<$cAEAD0.708, h(<$cHash0.709, m1.715, z.722^inv(~xx.712)>), 
                                               'K_2m'>,
                                              hkdfExtract('emptyStr', z.722)),
                                   <$V.707, h(<$cHash0.709, m1.715, z.722^inv(~xx.712)>), pk(x.1411)>,
                                   $cAEAD0.708)
                      >,
                      x.1411)
                )
        z.1   = z.722
        z.2   = true
    
    22. $V    = $V.707
        $cAEAD0
              = $cAEAD0.708
        $cHash0
              = $cHash0.709
        ~xx   = ~xx.712
        gy    = x.1409^(x.1410*inv((~xx.712*x.1411)))
        m1    = m1.715
        pkV   = pkV.717
        z     = zero
        z.1   = x.1409^(x.1410*inv(x.1411))
        z.2   = verify(hkdfExpand(<$cAEAD0.708, 
                                   h(<$cHash0.709, m1.715, x.1409^(x.1410*inv((~xx.712*x.1411)))>), 'K_2e', 
                                   '2'>,
                                  hkdfExtract('emptyStr', x.1409^(x.1410*inv(x.1411)))),
                       <
                        <$V.707, 
                         h(<$cHash0.709, m1.715, x.1409^(x.1410*inv((~xx.712*x.1411)))>), pkV.717
                        >, 
                        aeadEncrypt('emptyStr',
                                    hkdfExpand(<$cAEAD0.708, 
                                                h(<$cHash0.709, m1.715, x.1409^(x.1410*inv((~xx.712*x.1411)))
                                                  >), 
                                                'K_2m'>,
                                               hkdfExtract('emptyStr', x.1409^(x.1410*inv(x.1411)))),
                                    <$V.707, 
                                     h(<$cHash0.709, m1.715, x.1409^(x.1410*inv((~xx.712*x.1411)))>), pkV.717
                                    >,
                                    $cAEAD0.708)
                       >,
                       pkV.717)
    
    23. $V    = $V.707
        $cAEAD0
              = $cAEAD0.708
        $cHash0
              = $cHash0.709
        ~xx   = ~xx.712
        gy    = x.1410^x.1411
        m1    = m1.715
        pkV   = pkV.717
        z     = z.719
        z.1   = x.1410^(~xx.712*x.1411)
        z.2   = verify((z.719⊕
                        hkdfExpand(<$cAEAD0.708, h(<$cHash0.709, m1.715, x.1410^x.1411>), 
                                    'K_2e', '2'>,
                                   hkdfExtract('emptyStr', x.1410^(~xx.712*x.1411)))
                       ),
                       <<$V.707, h(<$cHash0.709, m1.715, x.1410^x.1411>), pkV.717>, 
                        aeadEncrypt('emptyStr',
                                    hkdfExpand(<$cAEAD0.708, h(<$cHash0.709, m1.715, x.1410^x.1411>), 'K_2m'
                                               >,
                                               hkdfExtract('emptyStr', x.1410^(~xx.712*x.1411))),
                                    <$V.707, h(<$cHash0.709, m1.715, x.1410^x.1411>), pkV.717>, $cAEAD0.708)
                       >,
                       pkV.717)
    
    24. $V    = $V.707
        $cAEAD0
              = $cAEAD0.708
        $cHash0
              = $cHash0.709
        ~xx   = ~xx.712
        gy    = x.1410^inv((~xx.712*x.1411))
        m1    = m1.715
        pkV   = pkV.717
        z     = z.719
        z.1   = x.1410^inv(x.1411)
        z.2   = verify((z.719⊕
                        hkdfExpand(<$cAEAD0.708, 
                                    h(<$cHash0.709, m1.715, x.1410^inv((~xx.712*x.1411))>), 'K_2e', '2'>,
                                   hkdfExtract('emptyStr', x.1410^inv(x.1411)))
                       ),
                       <
                        <$V.707, h(<$cHash0.709, m1.715, x.1410^inv((~xx.712*x.1411))>), pkV.717
                        >, 
                        aeadEncrypt('emptyStr',
                                    hkdfExpand(<$cAEAD0.708, 
                                                h(<$cHash0.709, m1.715, x.1410^inv((~xx.712*x.1411))>), 'K_2m'
                                               >,
                                               hkdfExtract('emptyStr', x.1410^inv(x.1411))),
                                    <$V.707, h(<$cHash0.709, m1.715, x.1410^inv((~xx.712*x.1411))>), pkV.717
                                    >,
                                    $cAEAD0.708)
                       >,
                       pkV.717)
    
    25. $V    = $V.707
        $cAEAD0
              = $cAEAD0.708
        $cHash0
              = $cHash0.709
        ~xx   = ~xx.712
        gy    = x.1410^(x.1411*inv(~xx.712))
        m1    = m1.715
        pkV   = pkV.717
        z     = z.719
        z.1   = x.1410^x.1411
        z.2   = verify((z.719⊕
                        hkdfExpand(<$cAEAD0.708, 
                                    h(<$cHash0.709, m1.715, x.1410^(x.1411*inv(~xx.712))>), 'K_2e', '2'>,
                                   hkdfExtract('emptyStr', x.1410^x.1411))
                       ),
                       <
                        <$V.707, h(<$cHash0.709, m1.715, x.1410^(x.1411*inv(~xx.712))>), pkV.717
                        >, 
                        aeadEncrypt('emptyStr',
                                    hkdfExpand(<$cAEAD0.708, 
                                                h(<$cHash0.709, m1.715, x.1410^(x.1411*inv(~xx.712))>), 'K_2m'
                                               >,
                                               hkdfExtract('emptyStr', x.1410^x.1411)),
                                    <$V.707, h(<$cHash0.709, m1.715, x.1410^(x.1411*inv(~xx.712))>), pkV.717
                                    >,
                                    $cAEAD0.708)
                       >,
                       pkV.717)
    
    26. $V    = $V.708
        $cAEAD0
              = $cAEAD0.709
        $cHash0
              = $cHash0.710
        ~xx   = ~xx.713
        gy    = x.1411^x.1412
        m1    = m1.716
        pkV   = pk(x.1413)
        z     = (
                 hkdfExpand(<$cAEAD0.709, h(<$cHash0.710, m1.716, x.1411^x.1412>), 
                             'K_2e', '2'>,
                            hkdfExtract('emptyStr', x.1411^(~xx.713*x.1412)))⊕
                 sign(<<$V.708, h(<$cHash0.710, m1.716, x.1411^x.1412>), pk(x.1413)>, 
                       aeadEncrypt('emptyStr',
                                   hkdfExpand(<$cAEAD0.709, h(<$cHash0.710, m1.716, x.1411^x.1412>), 'K_2m'
                                              >,
                                              hkdfExtract('emptyStr', x.1411^(~xx.713*x.1412))),
                                   <$V.708, h(<$cHash0.710, m1.716, x.1411^x.1412>), pk(x.1413)>,
                                   $cAEAD0.709)
                      >,
                      x.1413)
                )
        z.1   = x.1411^(~xx.713*x.1412)
        z.2   = true
    
    27. $V    = $V.708
        $cAEAD0
              = $cAEAD0.709
        $cHash0
              = $cHash0.710
        ~xx   = ~xx.713
        gy    = x.1411^inv((~xx.713*x.1412))
        m1    = m1.716
        pkV   = pk(x.1413)
        z     = (
                 hkdfExpand(<$cAEAD0.709, 
                             h(<$cHash0.710, m1.716, x.1411^inv((~xx.713*x.1412))>), 'K_2e', '2'>,
                            hkdfExtract('emptyStr', x.1411^inv(x.1412)))⊕
                 sign(<
                       <$V.708, h(<$cHash0.710, m1.716, x.1411^inv((~xx.713*x.1412))>), 
                        pk(x.1413)>, 
                       aeadEncrypt('emptyStr',
                                   hkdfExpand(<$cAEAD0.709, 
                                               h(<$cHash0.710, m1.716, x.1411^inv((~xx.713*x.1412))>), 'K_2m'
                                              >,
                                              hkdfExtract('emptyStr', x.1411^inv(x.1412))),
                                   <$V.708, h(<$cHash0.710, m1.716, x.1411^inv((~xx.713*x.1412))>), 
                                    pk(x.1413)>,
                                   $cAEAD0.709)
                      >,
                      x.1413)
                )
        z.1   = x.1411^inv(x.1412)
        z.2   = true
    
    28. $V    = $V.708
        $cAEAD0
              = $cAEAD0.709
        $cHash0
              = $cHash0.710
        ~xx   = ~xx.713
        gy    = x.1411^(x.1412*inv(~xx.713))
        m1    = m1.716
        pkV   = pk(x.1413)
        z     = (
                 hkdfExpand(<$cAEAD0.709, 
                             h(<$cHash0.710, m1.716, x.1411^(x.1412*inv(~xx.713))>), 'K_2e', '2'>,
                            hkdfExtract('emptyStr', x.1411^x.1412))⊕
                 sign(<
                       <$V.708, h(<$cHash0.710, m1.716, x.1411^(x.1412*inv(~xx.713))>), 
                        pk(x.1413)>, 
                       aeadEncrypt('emptyStr',
                                   hkdfExpand(<$cAEAD0.709, 
                                               h(<$cHash0.710, m1.716, x.1411^(x.1412*inv(~xx.713))>), 'K_2m'
                                              >,
                                              hkdfExtract('emptyStr', x.1411^x.1412)),
                                   <$V.708, h(<$cHash0.710, m1.716, x.1411^(x.1412*inv(~xx.713))>), 
                                    pk(x.1413)>,
                                   $cAEAD0.709)
                      >,
                      x.1413)
                )
        z.1   = x.1411^x.1412
        z.2   = true
    
    29. $V    = $V.708
        $cAEAD0
              = $cAEAD0.709
        $cHash0
              = $cHash0.710
        ~xx   = ~xx.713
        gy    = x.1411^(x.1412*inv((~xx.713*x.1413)))
        m1    = m1.716
        pkV   = pkV.718
        z     = z.720
        z.1   = x.1411^(x.1412*inv(x.1413))
        z.2   = verify((z.720⊕
                        hkdfExpand(<$cAEAD0.709, 
                                    h(<$cHash0.710, m1.716, x.1411^(x.1412*inv((~xx.713*x.1413)))>), 'K_2e', 
                                    '2'>,
                                   hkdfExtract('emptyStr', x.1411^(x.1412*inv(x.1413))))
                       ),
                       <
                        <$V.708, 
                         h(<$cHash0.710, m1.716, x.1411^(x.1412*inv((~xx.713*x.1413)))>), pkV.718
                        >, 
                        aeadEncrypt('emptyStr',
                                    hkdfExpand(<$cAEAD0.709, 
                                                h(<$cHash0.710, m1.716, x.1411^(x.1412*inv((~xx.713*x.1413)))
                                                  >), 
                                                'K_2m'>,
                                               hkdfExtract('emptyStr', x.1411^(x.1412*inv(x.1413)))),
                                    <$V.708, 
                                     h(<$cHash0.710, m1.716, x.1411^(x.1412*inv((~xx.713*x.1413)))>), pkV.718
                                    >,
                                    $cAEAD0.709)
                       >,
                       pkV.718)
    
    30. $V    = $V.709
        $cAEAD0
              = $cAEAD0.710
        $cHash0
              = $cHash0.711
        ~xx   = ~xx.714
        gy    = x.1412^(x.1413*inv((~xx.714*x.1414)))
        m1    = m1.717
        pkV   = pk(x.1415)
        z     = (
                 hkdfExpand(<$cAEAD0.710, 
                             h(<$cHash0.711, m1.717, x.1412^(x.1413*inv((~xx.714*x.1414)))>), 'K_2e', 
                             '2'>,
                            hkdfExtract('emptyStr', x.1412^(x.1413*inv(x.1414))))⊕
                 sign(<
                       <$V.709, 
                        h(<$cHash0.711, m1.717, x.1412^(x.1413*inv((~xx.714*x.1414)))>), 
                        pk(x.1415)>, 
                       aeadEncrypt('emptyStr',
                                   hkdfExpand(<$cAEAD0.710, 
                                               h(<$cHash0.711, m1.717, x.1412^(x.1413*inv((~xx.714*x.1414)))
                                                 >), 
                                               'K_2m'>,
                                              hkdfExtract('emptyStr', x.1412^(x.1413*inv(x.1414)))),
                                   <$V.709, 
                                    h(<$cHash0.711, m1.717, x.1412^(x.1413*inv((~xx.714*x.1414)))>), 
                                    pk(x.1415)>,
                                   $cAEAD0.710)
                      >,
                      x.1415)
                )
        z.1   = x.1412^(x.1413*inv(x.1414))
        z.2   = true
  */

rule (modulo E) R4_SIG_SIG:
   [
   StR2_SIG_SIG( $V, ~ltk, ~yy, prk_3e2m, TH_2, CIPHERTEXT_2, gxy, ~tid, m1,
                 m2
   ),
   !PK_SIG( $U, pkU ), !PK_SIG( $V, pkV ),
   In( <'emptyStr', 
        aeadEncrypt(<$U, authI>,
                    hkdfExpand(<$cAEAD0, h(<$cHash0, TH_2, CIPHERTEXT_2, 'emptyStr'>), 
                                'K_3ae'>,
                               prk_3e2m),
                    extAad3Outer, $cAEAD0)
       >
   )
   ]
  --[
  ExpCommitR( ~tid, $U, $V, gxy ), CommitR( ~tid, $U, $V, gxy ),
  R4( ~tid, $U, $V, m1, m2,
      <'emptyStr', 
       aeadEncrypt(<$U, authI>,
                   hkdfExpand(<$cAEAD0, h(<$cHash0, TH_2, CIPHERTEXT_2, 'emptyStr'>), 
                               'K_3ae'>,
                              prk_3e2m),
                   extAad3Outer, $cAEAD0)
      >
  ),
  Eq( verify(authI,
             <<$U, h(<$cHash0, TH_2, CIPHERTEXT_2, 'emptyStr'>), pkU>, 
              aeadEncrypt('emptyStr',
                          hkdfExpand(<$cAEAD0, h(<$cHash0, TH_2, CIPHERTEXT_2, 'emptyStr'>), 'K_3m'
                                     >,
                                     prk_3e2m),
                          <$U, h(<$cHash0, TH_2, CIPHERTEXT_2, 'emptyStr'>), pkU>, $cAEAD0)
             >,
             pkU),
      true
  )
  ]->
   [ ]

  /*
  rule (modulo AC) R4_SIG_SIG:
     [
     StR2_SIG_SIG( $V, ~ltk, ~yy, prk_3e2m, TH_2, CIPHERTEXT_2, gxy, ~tid, m1,
                   m2
     ),
     !PK_SIG( $U, pkU ), !PK_SIG( $V, pkV ),
     In( <'emptyStr', 
          aeadEncrypt(<$U, authI>,
                      hkdfExpand(<$cAEAD0, h(<$cHash0, TH_2, CIPHERTEXT_2, 'emptyStr'>), 
                                  'K_3ae'>,
                                 prk_3e2m),
                      extAad3Outer, $cAEAD0)
         >
     )
     ]
    --[
    ExpCommitR( ~tid, $U, $V, gxy ), CommitR( ~tid, $U, $V, gxy ),
    R4( ~tid, $U, $V, m1, m2,
        <'emptyStr', 
         aeadEncrypt(<$U, authI>,
                     hkdfExpand(<$cAEAD0, h(<$cHash0, TH_2, CIPHERTEXT_2, 'emptyStr'>), 
                                 'K_3ae'>,
                                prk_3e2m),
                     extAad3Outer, $cAEAD0)
        >
    ),
    Eq( z, true )
    ]->
     [ ]
    variants (modulo AC)
    1. $U    = $U.38
       $cAEAD0
             = $cAEAD0.40
       $cHash0
             = $cHash0.41
       CIPHERTEXT_2
             = CIPHERTEXT_2.45
       TH_2  = TH_2.46
       authI = authI.47
       pkU   = pkU.52
       prk_3e2m
             = prk_3e2m.54
       z     = verify(authI.47,
                      <<$U.38, h(<$cHash0.41, TH_2.46, CIPHERTEXT_2.45, 'emptyStr'>), pkU.52>, 
                       aeadEncrypt('emptyStr',
                                   hkdfExpand(<$cAEAD0.40, 
                                               h(<$cHash0.41, TH_2.46, CIPHERTEXT_2.45, 'emptyStr'>), 'K_3m'>,
                                              prk_3e2m.54),
                                   <$U.38, h(<$cHash0.41, TH_2.46, CIPHERTEXT_2.45, 'emptyStr'>), pkU.52>,
                                   $cAEAD0.40)
                      >,
                      pkU.52)
    
    2. $U    = $U.51
       $cAEAD0
             = $cAEAD0.53
       $cHash0
             = $cHash0.54
       CIPHERTEXT_2
             = CIPHERTEXT_2.58
       TH_2  = TH_2.59
       authI = sign(<
                     <$U.51, h(<$cHash0.54, TH_2.59, CIPHERTEXT_2.58, 'emptyStr'>), pk(x.100)
                     >, 
                     aeadEncrypt('emptyStr',
                                 hkdfExpand(<$cAEAD0.53, 
                                             h(<$cHash0.54, TH_2.59, CIPHERTEXT_2.58, 'emptyStr'>), 'K_3m'>,
                                            prk_3e2m.67),
                                 <$U.51, h(<$cHash0.54, TH_2.59, CIPHERTEXT_2.58, 'emptyStr'>), pk(x.100)
                                 >,
                                 $cAEAD0.53)
                    >,
                    x.100)
       pkU   = pk(x.100)
       prk_3e2m
             = prk_3e2m.67
       z     = true
  */

rule (modulo E) registerLTK_SIG:
   [ Fr( ~ltk ) ]
  --[ UniqLTK( $A, ~ltk ) ]->
   [ !LTK_SIG( $A, ~ltk ), !PK_SIG( $A, pk(~ltk) ), Out( <$A, pk(~ltk)> ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) registerLTK_STAT:
   [ Fr( ~ltk ) ]
  --[ UniqLTK( $A, 'g'^~ltk ) ]->
   [ !LTK_STAT( $A, ~ltk ), !PK_STAT( $A, 'g'^~ltk ), Out( <$A, 'g'^~ltk> )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) registerLTK_PSK:
   [ Fr( ~ltk ) ]
  --[ UniqLTK( <$A, $B>, ~ltk ) ]->
   [ !LTK_PSK( <$A, $B>, ~ltk ) ]

  /* has exactly the trivial AC variant */

restriction uniqLTKs:
  "∀ id k1 k2 #i #j.
    ((UniqLTK( id, k1 ) @ #i) ∧ (UniqLTK( id, k2 ) @ #j)) ⇒ (k1 = k2)"
  // safety formula

rule (modulo E) revealLTK_SIG:
   [ !LTK_SIG( $A, ~ltk ) ] --[ LTKRev( $A ) ]-> [ Out( ~ltk ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) revealLTK_STAT:
   [ !LTK_STAT( $A, ~ltk ) ] --[ LTKRev( $A ) ]-> [ Out( ~ltk ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) revealLTK_PSK:
   [ !LTK_PSK( <$A, $B>, ~ltk ) ] --[ LTKRev( <$A, $B> ) ]-> [ Out( ~ltk ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) revealSessionKeyI:
   [ CommitI( tid, u, v, sk ) ] --[ SKRev( sk ) ]-> [ Out( sk ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) revealSessionKeyR:
   [ CommitR( tid, u, v, sk ) ] --[ SKRev( sk ) ]-> [ Out( sk ) ]

  /* has exactly the trivial AC variant */

lemma sanityExecutableToTheEnd:
  exists-trace
  "∃ tidI tidR u v m1 m2 m3 sk sk2 #i #j #k #l.
    ((((((((((((I1( tidI, u, v, m1 ) @ #i) ∧ (R2( tidR, v, m1, m2 ) @ #j)) ∧
              (#i < #j)) ∧
             (I3( tidI, u, v, m1, m2, m3 ) @ #k)) ∧
            (#j < #k)) ∧
           (CommitI( tidI, u, v, sk ) @ #k)) ∧
          (ExpCommitI( tidI, u, v, sk2 ) @ #k)) ∧
         (RunningI( tidI, u, v, sk ) @ #k)) ∧
        (ExpRunningI( tidI, u, v, sk2 ) @ #k)) ∧
       (R4( tidR, u, v, m1, m2, m3 ) @ #l)) ∧
      (#k < #l)) ∧
     (CommitR( tidR, u, v, sk ) @ #l)) ∧
    (ExpCommitR( tidR, u, v, sk2 ) @ #l)"
/*
guarded formula characterizing all satisfying traces:
"∃ tidI tidR u v m1 m2 m3 sk sk2 #i #j #k #l.
  (I1( tidI, u, v, m1 ) @ #i) ∧
  (R2( tidR, v, m1, m2 ) @ #j) ∧
  (I3( tidI, u, v, m1, m2, m3 ) @ #k) ∧
  (CommitI( tidI, u, v, sk ) @ #k) ∧
  (ExpCommitI( tidI, u, v, sk2 ) @ #k) ∧
  (RunningI( tidI, u, v, sk ) @ #k) ∧
  (ExpRunningI( tidI, u, v, sk2 ) @ #k) ∧
  (R4( tidR, u, v, m1, m2, m3 ) @ #l) ∧
  (CommitR( tidR, u, v, sk ) @ #l) ∧
  (ExpCommitR( tidR, u, v, sk2 ) @ #l)
 ∧
  (#i < #j) ∧ (#j < #k) ∧ (#k < #l)"
*/
by sorry

lemma authInjAgreeGuaranteeForI:
  all-traces
  "∀ tidI u v expSk #i.
    (ExpCommitI( tidI, u, v, expSk ) @ #i) ⇒
    (((((∃ tidR #j. (ExpRunningR( tidR, v, expSk ) @ #j) ∧ (#j < #i)) ∧
        (¬(∃ tidI2 u2 v2 #i2.
            (ExpCommitI( tidI2, u2, v2, expSk ) @ #i2) ∧ (¬(#i = #i2))))) ∨
       (∃ #j. (LTKRev( <u, v> ) @ #j) ∧ (#j < #i))) ∨
      (∃ #j. (LTKRev( u ) @ #j) ∧ (#j < #i))) ∨
     (∃ #j. (LTKRev( v ) @ #j) ∧ (#j < #i)))"
/*
guarded formula characterizing all counter-examples:
"∃ tidI u v expSk #i.
  (ExpCommitI( tidI, u, v, expSk ) @ #i)
 ∧
  (((∀ tidR #j. (ExpRunningR( tidR, v, expSk ) @ #j) ⇒ ¬(#j < #i)) ∨
    (∃ tidI2 u2 v2 #i2.
      (ExpCommitI( tidI2, u2, v2, expSk ) @ #i2) ∧ ¬(#i = #i2)))) ∧
  (∀ #j. (LTKRev( <u, v> ) @ #j) ⇒ ¬(#j < #i)) ∧
  (∀ #j. (LTKRev( u ) @ #j) ⇒ ¬(#j < #i)) ∧
  (∀ #j. (LTKRev( v ) @ #j) ⇒ ¬(#j < #i))"
*/
simplify
solve( (∀ tidR #j. (ExpRunningR( tidR, $V, expSk ) @ #j) ⇒ ¬(#j < #i))  ∥
       (∃ tidI2 u2 v2 #i2.
         (ExpCommitI( tidI2, u2, v2, expSk ) @ #i2) ∧ ¬(#i = #i2)) )
  case case_1
  solve( StI1_SIG_SIG( $U, ~ltk, $V, ~xx, m1, ~tid ) ▶₀ #i )
    case I1_SIG_SIG
    solve( !PK_SIG( $V, pk(x) ) ▶₁ #i )
      case registerLTK_SIG
      solve( !PK_SIG( $U, pkU ) ▶₂ #i )
        case registerLTK_SIG
        solve( !KU( ($V⊕
                     hkdfExpand(<$cAEAD0, 
                                 h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,
                                hkdfExtract('emptyStr', expSk))
                    )
               ) @ #vk.3 )
          case c_xor
          solve( !KU( (
                       hkdfExpand(<$cAEAD0, 
                                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,
                                  hkdfExtract('emptyStr', expSk))⊕
                       sign(<
                             <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), pk(~ltk.1)>, 
                             aeadEncrypt('emptyStr',
                                         hkdfExpand(<$cAEAD0, 
                                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 
                                                     'K_2m'>,
                                                    hkdfExtract('emptyStr', expSk)),
                                         <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), pk(~ltk.1)
                                         >,
                                         $cAEAD0)
                            >,
                            ~ltk.1)
                      )
                 ) @ #vk.4 )
            case c_xor
            solve( !KU( sign(<
                              <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), pk(~ltk.1)>, 
                              aeadEncrypt('emptyStr',
                                          hkdfExpand(<$cAEAD0, 
                                                      h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 
                                                      'K_2m'>,
                                                     hkdfExtract('emptyStr', expSk)),
                                          <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), pk(~ltk.1)
                                          >,
                                          $cAEAD0)
                             >,
                             ~ltk.1)
                   ) @ #vk.7 )
              case R2_SIG_SIG
              by contradiction /* from formulas */
            next
              case c_sign
              solve( !KU( ~ltk.1 ) @ #vk.11 )
                case revealLTK_SIG
                by contradiction /* from formulas */
              qed
            qed
          next
            case coerce
            solve( !KD( (
                         hkdfExpand(<$cAEAD0, 
                                     h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,
                                    hkdfExtract('emptyStr', expSk))⊕
                         sign(<
                               <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), pk(~ltk.1)>, 
                               aeadEncrypt('emptyStr',
                                           hkdfExpand(<$cAEAD0, 
                                                       h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 
                                                       'K_2m'>,
                                                      hkdfExtract('emptyStr', expSk)),
                                           <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 
                                            pk(~ltk.1)>,
                                           $cAEAD0)
                              >,
                              ~ltk.1)
                        )
                   ) ▶₀ #vk.1 )
              case I1_SIG_SIG
              by contradiction /* impossible chain */
            next
              case I3_SIG_SIG
              solve( (#vl, 0) ~~> (#vk.1, 0) )
                case d_0_fst
                by contradiction /* forbidden KD-fact */
              next
                case d_0_snd
                solve( (#vr.4, 0) ~~> (#vk.1, 0) )
                  case d_1_aeadDecrypt
                  by solve( (#vr.5, 0) ~~> (#vk.1, 0) )
                next
                  case d_1_decrypt
                  by solve( (#vr.5, 0) ~~> (#vk.1, 0) )
                qed
              qed
            next
              case R2_SIG_SIG
              solve( (#vl, 0) ~~> (#vk.1, 0) )
                case d_0_fst
                by contradiction /* impossible chain */
              next
                case d_0_snd
                solve( (#vr.4, 0) ~~> (#vk.1, 0) )
                  case d_0_fst
                  solve( (#vr.5, 0) ~~> (#vk.1, 0) )
                    case d_xor_case_1
                    by solve( (#vr.6, 0) ~~> (#vk.1, 0) )
                  next
                    case d_xor_case_2
                    by solve( (#vr.6, 0) ~~> (#vk.1, 0) )
                  next
                    case d_xor_case_3
                    by contradiction /* forbidden KD-fact */
                  next
                    case d_xor_case_4
                    by solve( (#vr.6, 0) ~~> (#vk.1, 0) )
                  qed
                next
                  case d_0_snd
                  solve( (#vr.5, 0) ~~> (#vk.1, 0) )
                    case Xor
                    by contradiction /* from formulas */
                  next
                    case d_xor_case_1
                    solve( (#vr.6, 0) ~~> (#vk.1, 0) )
                      case Xor
                      solve( !LTK_SIG( $V.1, ~ltk.2 ) ▶₀ #vr.3 )
                        case registerLTK_SIG
                        solve( !PK_SIG( $V.1, pkV ) ▶₁ #vr.3 )
                          case registerLTK_SIG
                          solve( !KU( hkdfExpand(<$cAEAD0, 
                                                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 
                                                  'K_2e', '1'>,
                                                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))
                                 ) @ #vk.5 )
                            case R2_SIG_SIG
                            solve( !KU( (
                                         sign(<
                                               <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 
                                                pk(~ltk.1)>, 
                                               aeadEncrypt('emptyStr',
                                                           hkdfExpand(<$cAEAD0, 
                                                                       h(<$cHash0, 
                                                                          <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 
                                                                          'g'^~yy>), 
                                                                       'K_2m'>,
                                                                      hkdfExtract('emptyStr', 'g'^(~xx*~yy))),
                                                           <$V, 
                                                            h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 
                                                               'g'^~yy>), 
                                                            pk(~ltk.1)>,
                                                           $cAEAD0)
                                              >,
                                              ~ltk.1)⊕
                                         sign(<
                                               <$V.1, 
                                                h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 
                                                pk(~ltk.2)>, 
                                               aeadEncrypt('emptyStr',
                                                           hkdfExpand(<$cAEAD0, 
                                                                       h(<$cHash0, 
                                                                          <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 
                                                                          'g'^~yy>), 
                                                                       'K_2m'>,
                                                                      hkdfExtract('emptyStr', 'g'^(~xx*~yy))),
                                                           <$V.1, 
                                                            h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 
                                                               'g'^~yy>), 
                                                            pk(~ltk.2)>,
                                                           $cAEAD0)
                                              >,
                                              ~ltk.2)
                                        )
                                   ) @ #vk.13 )
                              case c_xor
                              solve( !KU( sign(<
                                                <$V.1, 
                                                 h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 
                                                 pk(~ltk.2)>, 
                                                aeadEncrypt('emptyStr',
                                                            hkdfExpand(<$cAEAD0, 
                                                                        h(<$cHash0, 
                                                                           <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 
                                                                           'g'^~yy>), 
                                                                        'K_2m'>,
                                                                       hkdfExtract('emptyStr',
                                                                                   'g'^(~xx*~yy))),
                                                            <$V.1, 
                                                             h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 
                                                                'g'^~yy>), 
                                                             pk(~ltk.2)>,
                                                            $cAEAD0)
                                               >,
                                               ~ltk.2)
                                     ) @ #vk.15 )
                                case R2_SIG_SIG
                                solve( !KU( sign(<
                                                  <$V, 
                                                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 
                                                   pk(~ltk.1)>, 
                                                  aeadEncrypt('emptyStr',
                                                              hkdfExpand(<$cAEAD0, 
                                                                          h(<$cHash0, 
                                                                             <'SIG', 'SIG', $cSUITE0, 'g'^~xx
                                                                             >, 
                                                                             'g'^~yy>), 
                                                                          'K_2m'>,
                                                                         hkdfExtract('emptyStr',
                                                                                     'g'^(~xx*~yy))),
                                                              <$V, 
                                                               h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 
                                                                  'g'^~yy>), 
                                                               pk(~ltk.1)>,
                                                              $cAEAD0)
                                                 >,
                                                 ~ltk.1)
                                       ) @ #vk.16 )
                                  case c_sign
                                  solve( !KU( ~ltk.1 ) @ #vk.20 )
                                    case revealLTK_SIG
                                    by contradiction /* from formulas */
                                  qed
                                qed
                              next
                                case c_sign
                                solve( !KU( ~ltk.2 ) @ #vk.19 )
                                  case revealLTK_SIG
                                  solve( !KU( h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>)
                                         ) @ #vk.21 )
                                    case c_h
                                    solve( !KU( sign(<
                                                      <$V, 
                                                       h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy
                                                         >), 
                                                       pk(~ltk.1)>, 
                                                      aeadEncrypt('emptyStr',
                                                                  hkdfExpand(<$cAEAD0, 
                                                                              h(<$cHash0, 
                                                                                 <'SIG', 'SIG', $cSUITE0, 
                                                                                  'g'^~xx>, 
                                                                                 'g'^~yy>), 
                                                                              'K_2m'>,
                                                                             hkdfExtract('emptyStr',
                                                                                         'g'^(~xx*~yy))),
                                                                  <$V, 
                                                                   h(<$cHash0, 
                                                                      <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 
                                                                      'g'^~yy>), 
                                                                   pk(~ltk.1)>,
                                                                  $cAEAD0)
                                                     >,
                                                     ~ltk.1)
                                           ) @ #vk.21 )
                                      case c_sign
                                      solve( !KU( ~ltk.1 ) @ #vk.30 )
                                        case revealLTK_SIG
                                        by contradiction /* from formulas */
                                      qed
                                    qed
                                  qed
                                qed
                              qed
                            next
                              case coerce
                              solve( !KD( (
                                           sign(<
                                                 <$V, 
                                                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 
                                                  pk(~ltk.1)>, 
                                                 aeadEncrypt('emptyStr',
                                                             hkdfExpand(<$cAEAD0, 
                                                                         h(<$cHash0, 
                                                                            <'SIG', 'SIG', $cSUITE0, 'g'^~xx
                                                                            >, 
                                                                            'g'^~yy>), 
                                                                         'K_2m'>,
                                                                        hkdfExtract('emptyStr',
                                                                                    'g'^(~xx*~yy))),
                                                             <$V, 
                                                              h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 
                                                                 'g'^~yy>), 
                                                              pk(~ltk.1)>,
                                                             $cAEAD0)
                                                >,
                                                ~ltk.1)⊕
                                           sign(<
                                                 <$V.1, 
                                                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 
                                                  pk(~ltk.2)>, 
                                                 aeadEncrypt('emptyStr',
                                                             hkdfExpand(<$cAEAD0, 
                                                                         h(<$cHash0, 
                                                                            <'SIG', 'SIG', $cSUITE0, 'g'^~xx
                                                                            >, 
                                                                            'g'^~yy>), 
                                                                         'K_2m'>,
                                                                        hkdfExtract('emptyStr',
                                                                                    'g'^(~xx*~yy))),
                                                             <$V.1, 
                                                              h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 
                                                                 'g'^~yy>), 
                                                              pk(~ltk.2)>,
                                                             $cAEAD0)
                                                >,
                                                ~ltk.2)
                                          )
                                     ) ▶₀ #vk.3 )
                                case I1_SIG_SIG
                                by contradiction /* impossible chain */
                              next
                                case I3_SIG_SIG
                                solve( (#vl.1, 0) ~~> (#vk.3, 0) )
                                  case d_0_fst
                                  by contradiction /* forbidden KD-fact */
                                next
                                  case d_0_snd
                                  solve( (#vr.11, 0) ~~> (#vk.3, 0) )
                                    case d_1_aeadDecrypt
                                    by solve( (#vr.12, 0) ~~> (#vk.3, 0) )
                                  next
                                    case d_1_decrypt
                                    by solve( (#vr.12, 0) ~~> (#vk.3, 0) )
                                  qed
                                qed
                              next
                                case R2_SIG_SIG
                                solve( (#vl.1, 0) ~~> (#vk.3, 0) )
                                  case d_0_fst
                                  by contradiction /* impossible chain */
                                next
                                  case d_0_snd
                                  solve( (#vr.11, 0) ~~> (#vk.3, 0) )
                                    case d_0_fst
                                    solve( (#vr.12, 0) ~~> (#vk.3, 0) )
                                      case d_xor_case_1
                                      by solve( (#vr.13, 0) ~~> (#vk.3, 0) )
                                    next
                                      case d_xor_case_2
                                      by solve( (#vr.13, 0) ~~> (#vk.3, 0) )
                                    next
                                      case d_xor_case_3
                                      by contradiction /* forbidden KD-fact */
                                    next
                                      case d_xor_case_4
                                      by solve( (#vr.13, 0) ~~> (#vk.3, 0) )
                                    qed
                                  next
                                    case d_0_snd
                                    solve( (#vr.12, 0) ~~> (#vk.3, 0) )
                                      case d_xor_case_1
                                      by solve( (#vr.13, 0) ~~> (#vk.3, 0) )
                                    next
                                      case d_xor_case_2
                                      solve( (#vr.13, 0) ~~> (#vk.3, 0) )
                                        case Xor
                                        by contradiction /* cyclic */
                                      qed
                                    next
                                      case d_xor_case_3
                                      by solve( (#vr.13, 0) ~~> (#vk.3, 0) )
                                    next
                                      case d_xor_case_4
                                      by solve( (#vr.13, 0) ~~> (#vk.3, 0) )
                                    qed
                                  qed
                                qed
                              next
                                case registerLTK_SIG
                                by contradiction /* impossible chain */
                              next
                                case registerLTK_STAT
                                by contradiction /* impossible chain */
                              next
                                case revealLTK_PSK
                                by contradiction /* impossible chain */
                              next
                                case revealLTK_SIG
                                by contradiction /* impossible chain */
                              next
                                case revealLTK_STAT
                                by contradiction /* impossible chain */
                              next
                                case revealSessionKeyI
                                by solve( CommitI( tid.2, u, v, t ) ▶₀ #vr.10 )
                              next
                                case revealSessionKeyR
                                by solve( CommitR( tid.2, u, v, t ) ▶₀ #vr.10 )
                              qed
                            qed
                          next
                            case c_hkdfExpand
                            solve( !KU( hkdfExtract('emptyStr', 'g'^(~xx*~yy)) ) @ #vk.15 )
                              case c_hkdfExtract
                              solve( !KU( h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>)
                                     ) @ #vk.18 )
                                case c_h
                                solve( !KU( 'g'^(~xx*~yy) ) @ #vk.24 )
                                  case I1_SIG_SIG
                                  by solve( !KU( ~yy ) @ #vk.27 )
                                next
                                  case R2_SIG_SIG
                                  by solve( !KU( ~xx ) @ #vk.27 )
                                next
                                  case c_exp
                                  by solve( !KU( ~xx ) @ #vk.29 )
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  next
                    case d_xor_case_2
                    by solve( (#vr.6, 0) ~~> (#vk.1, 0) )
                  next
                    case d_xor_case_3
                    by solve( (#vr.6, 0) ~~> (#vk.1, 0) )
                  next
                    case d_xor_case_4
                    by solve( (#vr.6, 0) ~~> (#vk.1, 0) )
                  qed
                qed
              qed
            next
              case registerLTK_SIG
              by contradiction /* impossible chain */
            next
              case registerLTK_STAT
              by contradiction /* impossible chain */
            next
              case revealLTK_PSK
              by contradiction /* impossible chain */
            next
              case revealLTK_SIG
              by contradiction /* impossible chain */
            next
              case revealLTK_STAT
              by contradiction /* impossible chain */
            next
              case revealSessionKeyI
              by solve( CommitI( tid.1, u, v, t ) ▶₀ #vr.3 )
            next
              case revealSessionKeyR
              by solve( CommitR( tid.1, u, v, t ) ▶₀ #vr.3 )
            qed
          qed
        next
          case coerce
          solve( !KD( ($V⊕
                       hkdfExpand(<$cAEAD0, 
                                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,
                                  hkdfExtract('emptyStr', expSk))
                      )
                 ) ▶₀ #vk )
            case I1_SIG_SIG
            by contradiction /* impossible chain */
          next
            case I3_SIG_SIG
            solve( (#vl, 0) ~~> (#vk, 0) )
              case d_0_fst
              by contradiction /* forbidden KD-fact */
            next
              case d_0_snd
              solve( (#vr.4, 0) ~~> (#vk, 0) )
                case d_1_aeadDecrypt
                by solve( (#vr.5, 0) ~~> (#vk, 0) )
              next
                case d_1_decrypt
                by solve( (#vr.5, 0) ~~> (#vk, 0) )
              qed
            qed
          next
            case R2_SIG_SIG
            solve( (#vl, 0) ~~> (#vk, 0) )
              case d_0_fst
              by contradiction /* impossible chain */
            next
              case d_0_snd
              solve( (#vr.4, 0) ~~> (#vk, 0) )
                case d_0_fst
                solve( (#vr.5, 0) ~~> (#vk, 0) )
                  case Xor
                  by contradiction /* from formulas */
                next
                  case d_xor_case_1
                  solve( (#vr.6, 0) ~~> (#vk, 0) )
                    case Xor
                    solve( !LTK_SIG( $V, ~ltk.2 ) ▶₀ #vr.3 )
                      case registerLTK_SIG
                      solve( !PK_SIG( $V, pkV ) ▶₁ #vr.3 )
                        case registerLTK_SIG
                        solve( !KU( (
                                     hkdfExpand(<$cAEAD0, 
                                                 h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', 
                                                 '2'>,
                                                hkdfExtract('emptyStr', expSk))⊕
                                     sign(<
                                           <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 
                                            pk(~ltk.1)>, 
                                           aeadEncrypt('emptyStr',
                                                       hkdfExpand(<$cAEAD0, 
                                                                   h(<$cHash0, 
                                                                      <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy
                                                                     >), 
                                                                   'K_2m'>,
                                                                  hkdfExtract('emptyStr', expSk)),
                                                       <$V, 
                                                        h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 
                                                        pk(~ltk.1)>,
                                                       $cAEAD0)
                                          >,
                                          ~ltk.1)
                                    )
                               ) @ #vk.4 )
                          case c_xor
                          solve( !KU( sign(<
                                            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 
                                             pk(~ltk.1)>, 
                                            aeadEncrypt('emptyStr',
                                                        hkdfExpand(<$cAEAD0, 
                                                                    h(<$cHash0, 
                                                                       <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy
                                                                      >), 
                                                                    'K_2m'>,
                                                                   hkdfExtract('emptyStr', expSk)),
                                                        <$V, 
                                                         h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 
                                                         pk(~ltk.1)>,
                                                        $cAEAD0)
                                           >,
                                           ~ltk.1)
                                 ) @ #vk.12 )
                            case R2_SIG_SIG
                            by contradiction /* from formulas */
                          next
                            case c_sign
                            solve( !KU( ~ltk.1 ) @ #vk.15 )
                              case revealLTK_SIG
                              by contradiction /* from formulas */
                            qed
                          qed
                        next
                          case coerce
                          solve( !KD( (
                                       hkdfExpand(<$cAEAD0, 
                                                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 
                                                   'K_2e', '2'>,
                                                  hkdfExtract('emptyStr', expSk))⊕
                                       sign(<
                                             <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 
                                              pk(~ltk.1)>, 
                                             aeadEncrypt('emptyStr',
                                                         hkdfExpand(<$cAEAD0, 
                                                                     h(<$cHash0, 
                                                                        <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy
                                                                       >), 
                                                                     'K_2m'>,
                                                                    hkdfExtract('emptyStr', expSk)),
                                                         <$V, 
                                                          h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy
                                                            >), 
                                                          pk(~ltk.1)>,
                                                         $cAEAD0)
                                            >,
                                            ~ltk.1)
                                      )
                                 ) ▶₀ #vk.1 )
                            case I1_SIG_SIG
                            by contradiction /* impossible chain */
                          next
                            case I3_SIG_SIG
                            solve( (#vl.1, 0) ~~> (#vk.1, 0) )
                              case d_0_fst
                              by contradiction /* forbidden KD-fact */
                            next
                              case d_0_snd
                              solve( (#vr.8, 0) ~~> (#vk.1, 0) )
                                case d_1_aeadDecrypt
                                by solve( (#vr.9, 0) ~~> (#vk.1, 0) )
                              next
                                case d_1_decrypt
                                by solve( (#vr.9, 0) ~~> (#vk.1, 0) )
                              qed
                            qed
                          next
                            case R2_SIG_SIG
                            solve( (#vl.1, 0) ~~> (#vk.1, 0) )
                              case d_0_fst
                              by contradiction /* impossible chain */
                            next
                              case d_0_snd
                              solve( (#vr.8, 0) ~~> (#vk.1, 0) )
                                case d_0_fst
                                solve( (#vr.9, 0) ~~> (#vk.1, 0) )
                                  case d_xor_case_1
                                  by solve( (#vr.10, 0) ~~> (#vk.1, 0) )
                                next
                                  case d_xor_case_2
                                  by solve( (#vr.10, 0) ~~> (#vk.1, 0) )
                                next
                                  case d_xor_case_3
                                  by contradiction /* forbidden KD-fact */
                                next
                                  case d_xor_case_4
                                  by solve( (#vr.10, 0) ~~> (#vk.1, 0) )
                                qed
                              next
                                case d_0_snd
                                solve( (#vr.9, 0) ~~> (#vk.1, 0) )
                                  case Xor
                                  by contradiction /* from formulas */
                                next
                                  case d_xor_case_1
                                  solve( (#vr.10, 0) ~~> (#vk.1, 0) )
                                    case Xor
                                    solve( !LTK_SIG( $V.1, ~ltk.2 ) ▶₀ #vr.7 )
                                      case registerLTK_SIG
                                      solve( !PK_SIG( $V.1, pkV ) ▶₁ #vr.7 )
                                        case registerLTK_SIG
                                        solve( !KU( (
                                                     hkdfExpand(<$cAEAD0, 
                                                                 h(<$cHash0, 
                                                                    <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy
                                                                   >), 
                                                                 'K_2e', '1'>,
                                                                hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕
                                                     hkdfExpand(<$cAEAD0.1, 
                                                                 h(<$cHash0.1, 
                                                                    <'SIG', 'SIG', $cSUITE0.1, gx>, 'g'^~yy.1
                                                                   >), 
                                                                 'K_2e', '1'>,
                                                                hkdfExtract('emptyStr', z))
                                                    )
                                               ) @ #vk.13 )
                                          case c_xor
                                          solve( !KU( (
                                                       sign(<
                                                             <$V, 
                                                              h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 
                                                                 'g'^~yy>), 
                                                              pk(~ltk.1)>, 
                                                             aeadEncrypt('emptyStr',
                                                                         hkdfExpand(<$cAEAD0, 
                                                                                     h(<$cHash0, 
                                                                                        <'SIG', 'SIG', 
                                                                                         $cSUITE0, 'g'^~xx>, 
                                                                                        'g'^~yy>), 
                                                                                     'K_2m'>,
                                                                                    hkdfExtract('emptyStr',
                                                                                                'g'^(~xx*~yy
                                                                                                    ))),
                                                                         <$V, 
                                                                          h(<$cHash0, 
                                                                             <'SIG', 'SIG', $cSUITE0, 'g'^~xx
                                                                             >, 
                                                                             'g'^~yy>), 
                                                                          pk(~ltk.1)>,
                                                                         $cAEAD0)
                                                            >,
                                                            ~ltk.1)⊕
                                                       sign(<
                                                             <$V.1, 
                                                              h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 
                                                                 'g'^~yy>), 
                                                              pk(~ltk.2)>, 
                                                             aeadEncrypt('emptyStr',
                                                                         hkdfExpand(<$cAEAD0, 
                                                                                     h(<$cHash0, 
                                                                                        <'SIG', 'SIG', 
                                                                                         $cSUITE0, 'g'^~xx>, 
                                                                                        'g'^~yy>), 
                                                                                     'K_2m'>,
                                                                                    hkdfExtract('emptyStr',
                                                                                                'g'^(~xx*~yy
                                                                                                    ))),
                                                                         <$V.1, 
                                                                          h(<$cHash0, 
                                                                             <'SIG', 'SIG', $cSUITE0, 'g'^~xx
                                                                             >, 
                                                                             'g'^~yy>), 
                                                                          pk(~ltk.2)>,
                                                                         $cAEAD0)
                                                            >,
                                                            ~ltk.2)
                                                      )
                                                 ) @ #vk.17 )
                                            case c_xor
                                            solve( !KU( sign(<
                                                              <$V.1, 
                                                               h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 
                                                                  'g'^~yy>), 
                                                               pk(~ltk.2)>, 
                                                              aeadEncrypt('emptyStr',
                                                                          hkdfExpand(<$cAEAD0, 
                                                                                      h(<$cHash0, 
                                                                                         <'SIG', 'SIG', 
                                                                                          $cSUITE0, 'g'^~xx>, 
                                                                                         'g'^~yy>), 
                                                                                      'K_2m'>,
                                                                                     hkdfExtract('emptyStr',
                                                                                                 'g'^(~xx*~yy
                                                                                                     ))),
                                                                          <$V.1, 
                                                                           h(<$cHash0, 
                                                                              <'SIG', 'SIG', $cSUITE0, 'g'^~xx
                                                                              >, 
                                                                              'g'^~yy>), 
                                                                           pk(~ltk.2)>,
                                                                          $cAEAD0)
                                                             >,
                                                             ~ltk.2)
                                                   ) @ #vk.20 )
                                              case R2_SIG_SIG
                                              solve( !KU( sign(<
                                                                <$V, 
                                                                 h(<$cHash0, 
                                                                    <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy
                                                                   >), 
                                                                 pk(~ltk.1)>, 
                                                                aeadEncrypt('emptyStr',
                                                                            hkdfExpand(<$cAEAD0, 
                                                                                        h(<$cHash0, 
                                                                                           <'SIG', 'SIG', 
                                                                                            $cSUITE0, 'g'^~xx
                                                                                           >, 
                                                                                           'g'^~yy>), 
                                                                                        'K_2m'>,
                                                                                       hkdfExtract('emptyStr',
                                                                                                   'g'^(~xx*
                                                                                                        ~yy
                                                                                                       ))),
                                                                            <$V, 
                                                                             h(<$cHash0, 
                                                                                <'SIG', 'SIG', $cSUITE0, 
                                                                                 'g'^~xx>, 
                                                                                'g'^~yy>), 
                                                                             pk(~ltk.1)>,
                                                                            $cAEAD0)
                                                               >,
                                                               ~ltk.1)
                                                     ) @ #vk.21 )
                                                case c_sign
                                                solve( !KU( ~ltk.1 ) @ #vk.24 )
                                                  case revealLTK_SIG
                                                  by contradiction /* from formulas */
                                                qed
                                              qed
                                            next
                                              case c_sign
                                              solve( !KU( ~ltk.2 ) @ #vk.23 )
                                                case revealLTK_SIG
                                                solve( !KU( h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 
                                                               'g'^~yy>)
                                                       ) @ #vk.27 )
                                                  case c_h
                                                  solve( !KU( sign(<
                                                                    <$V, 
                                                                     h(<$cHash0, 
                                                                        <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 
                                                                        'g'^~yy>), 
                                                                     pk(~ltk.1)>, 
                                                                    aeadEncrypt('emptyStr',
                                                                                hkdfExpand(<$cAEAD0, 
                                                                                            h(<$cHash0, 
                                                                                               <'SIG', 'SIG', 
                                                                                                $cSUITE0, 
                                                                                                'g'^~xx>, 
                                                                                               'g'^~yy>), 
                                                                                            'K_2m'>,
                                                                                           hkdfExtract('emptyStr',
                                                                                                       'g'^(
                                                                                                            ~xx*
                                                                                                            ~yy
                                                                                                           ))),
                                                                                <$V, 
                                                                                 h(<$cHash0, 
                                                                                    <'SIG', 'SIG', $cSUITE0, 
                                                                                     'g'^~xx>, 
                                                                                    'g'^~yy>), 
                                                                                 pk(~ltk.1)>,
                                                                                $cAEAD0)
                                                                   >,
                                                                   ~ltk.1)
                                                         ) @ #vk.24 )
                                                    case c_sign
                                                    solve( !KU( ~ltk.1 ) @ #vk.35 )
                                                      case revealLTK_SIG
                                                      by contradiction /* from formulas */
                                                    qed
                                                  qed
                                                qed
                                              qed
                                            qed
                                          next
                                            case coerce
                                            solve( !KD( (
                                                         sign(<
                                                               <$V, 
                                                                h(<$cHash0, 
                                                                   <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy
                                                                  >), 
                                                                pk(~ltk.1)>, 
                                                               aeadEncrypt('emptyStr',
                                                                           hkdfExpand(<$cAEAD0, 
                                                                                       h(<$cHash0, 
                                                                                          <'SIG', 'SIG', 
                                                                                           $cSUITE0, 'g'^~xx
                                                                                          >, 
                                                                                          'g'^~yy>), 
                                                                                       'K_2m'>,
                                                                                      hkdfExtract('emptyStr',
                                                                                                  'g'^(~xx*~yy
                                                                                                      ))),
                                                                           <$V, 
                                                                            h(<$cHash0, 
                                                                               <'SIG', 'SIG', $cSUITE0, 
                                                                                'g'^~xx>, 
                                                                               'g'^~yy>), 
                                                                            pk(~ltk.1)>,
                                                                           $cAEAD0)
                                                              >,
                                                              ~ltk.1)⊕
                                                         sign(<
                                                               <$V.1, 
                                                                h(<$cHash0, 
                                                                   <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy
                                                                  >), 
                                                                pk(~ltk.2)>, 
                                                               aeadEncrypt('emptyStr',
                                                                           hkdfExpand(<$cAEAD0, 
                                                                                       h(<$cHash0, 
                                                                                          <'SIG', 'SIG', 
                                                                                           $cSUITE0, 'g'^~xx
                                                                                          >, 
                                                                                          'g'^~yy>), 
                                                                                       'K_2m'>,
                                                                                      hkdfExtract('emptyStr',
                                                                                                  'g'^(~xx*~yy
                                                                                                      ))),
                                                                           <$V.1, 
                                                                            h(<$cHash0, 
                                                                               <'SIG', 'SIG', $cSUITE0, 
                                                                                'g'^~xx>, 
                                                                               'g'^~yy>), 
                                                                            pk(~ltk.2)>,
                                                                           $cAEAD0)
                                                              >,
                                                              ~ltk.2)
                                                        )
                                                   ) ▶₀ #vk.3 )
                                              case I1_SIG_SIG
                                              by contradiction /* impossible chain */
                                            next
                                              case I3_SIG_SIG
                                              solve( (#vl.2, 0) ~~> (#vk.3, 0) )
                                                case d_0_fst
                                                by contradiction /* forbidden KD-fact */
                                              next
                                                case d_0_snd
                                                solve( (#vr.13, 0) ~~> (#vk.3, 0) )
                                                  case d_1_aeadDecrypt
                                                  by solve( (#vr.14, 0) ~~> (#vk.3, 0) )
                                                next
                                                  case d_1_decrypt
                                                  by solve( (#vr.14, 0) ~~> (#vk.3, 0) )
                                                qed
                                              qed
                                            next
                                              case R2_SIG_SIG
                                              solve( (#vl.2, 0) ~~> (#vk.3, 0) )
                                                case d_0_fst
                                                by contradiction /* impossible chain */
                                              next
                                                case d_0_snd
                                                solve( (#vr.13, 0) ~~> (#vk.3, 0) )
                                                  case d_0_fst
                                                  solve( (#vr.14, 0) ~~> (#vk.3, 0) )
                                                    case d_xor_case_1
                                                    by solve( (#vr.15, 0) ~~> (#vk.3, 0) )
                                                  next
                                                    case d_xor_case_2
                                                    by solve( (#vr.15, 0) ~~> (#vk.3, 0) )
                                                  next
                                                    case d_xor_case_3
                                                    by contradiction /* forbidden KD-fact */
                                                  next
                                                    case d_xor_case_4
                                                    by solve( (#vr.15, 0) ~~> (#vk.3, 0) )
                                                  qed
                                                next
                                                  case d_0_snd
                                                  solve( (#vr.14, 0) ~~> (#vk.3, 0) )
                                                    case d_xor_case_1
                                                    by solve( (#vr.15, 0) ~~> (#vk.3, 0) )
                                                  next
                                                    case d_xor_case_2
                                                    solve( (#vr.15, 0) ~~> (#vk.3, 0) )
                                                      case Xor
                                                      by contradiction /* cyclic */
                                                    qed
                                                  next
                                                    case d_xor_case_3
                                                    by solve( (#vr.15, 0) ~~> (#vk.3, 0) )
                                                  next
                                                    case d_xor_case_4
                                                    by solve( (#vr.15, 0) ~~> (#vk.3, 0) )
                                                  qed
                                                qed
                                              qed
                                            next
                                              case registerLTK_SIG
                                              by contradiction /* impossible chain */
                                            next
                                              case registerLTK_STAT
                                              by contradiction /* impossible chain */
                                            next
                                              case revealLTK_PSK
                                              by contradiction /* impossible chain */
                                            next
                                              case revealLTK_SIG
                                              by contradiction /* impossible chain */
                                            next
                                              case revealLTK_STAT
                                              by contradiction /* impossible chain */
                                            next
                                              case revealSessionKeyI
                                              by solve( CommitI( tid.3, u, v, t ) ▶₀ #vr.12 )
                                            next
                                              case revealSessionKeyR
                                              by solve( CommitR( tid.3, u, v, t ) ▶₀ #vr.12 )
                                            qed
                                          qed
                                        next
                                          case coerce
                                          solve( !KD( (
                                                       hkdfExpand(<$cAEAD0, 
                                                                   h(<$cHash0, 
                                                                      <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 
                                                                      'g'^~yy>), 
                                                                   'K_2e', '1'>,
                                                                  hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕
                                                       hkdfExpand(<$cAEAD0.1, 
                                                                   h(<$cHash0.1, 
                                                                      <'SIG', 'SIG', $cSUITE0.1, gx>, 
                                                                      'g'^~yy.1>), 
                                                                   'K_2e', '1'>,
                                                                  hkdfExtract('emptyStr', z))
                                                      )
                                                 ) ▶₀ #vk.2 )
                                            case I1_SIG_SIG
                                            by contradiction /* impossible chain */
                                          next
                                            case I3_SIG_SIG
                                            solve( (#vl.2, 0) ~~> (#vk.2, 0) )
                                              case d_0_fst
                                              by contradiction /* forbidden KD-fact */
                                            next
                                              case d_0_snd
                                              solve( (#vr.13, 0) ~~> (#vk.2, 0) )
                                                case d_1_aeadDecrypt
                                                by solve( (#vr.14, 0) ~~> (#vk.2, 0) )
                                              next
                                                case d_1_decrypt
                                                by solve( (#vr.14, 0) ~~> (#vk.2, 0) )
                                              qed
                                            qed
                                          next
                                            case R2_SIG_SIG
                                            solve( (#vl.2, 0) ~~> (#vk.2, 0) )
                                              case d_0_fst
                                              by contradiction /* impossible chain */
                                            next
                                              case d_0_snd
                                              solve( (#vr.13, 0) ~~> (#vk.2, 0) )
                                                case d_0_fst
                                                solve( (#vr.14, 0) ~~> (#vk.2, 0) )
                                                  case d_xor_case_1
                                                  by solve( (#vr.15, 0) ~~> (#vk.2, 0) )
                                                next
                                                  case d_xor_case_2
                                                  solve( (#vr.15, 0) ~~> (#vk.2, 0) )
                                                    case Xor_case_1
                                                    by contradiction /* cyclic */
                                                  next
                                                    case Xor_case_2
                                                    solve( !KU( (
                                                                 sign(<
                                                                       <$V, 
                                                                        h(<$cHash0, 
                                                                           <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 
                                                                           'g'^~yy>), 
                                                                        pk(~ltk.1)>, 
                                                                       aeadEncrypt('emptyStr',
                                                                                   hkdfExpand(<$cAEAD0, 
                                                                                               h(<$cHash0, 
                                                                                                  <'SIG', 
                                                                                                   'SIG', 
                                                                                                   $cSUITE0, 
                                                                                                   'g'^~xx>, 
                                                                                                  'g'^~yy>), 
                                                                                               'K_2m'>,
                                                                                              hkdfExtract('emptyStr',
                                                                                                          'g'^(
                                                                                                               ~xx*
                                                                                                               ~yy
                                                                                                              ))),
                                                                                   <$V, 
                                                                                    h(<$cHash0, 
                                                                                       <'SIG', 'SIG', 
                                                                                        $cSUITE0, 'g'^~xx>, 
                                                                                       'g'^~yy>), 
                                                                                    pk(~ltk.1)>,
                                                                                   $cAEAD0)
                                                                      >,
                                                                      ~ltk.1)⊕
                                                                 sign(<
                                                                       <$V.1, 
                                                                        h(<$cHash0, 
                                                                           <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 
                                                                           'g'^~yy>), 
                                                                        pk(~ltk.2)>, 
                                                                       aeadEncrypt('emptyStr',
                                                                                   hkdfExpand(<$cAEAD0, 
                                                                                               h(<$cHash0, 
                                                                                                  <'SIG', 
                                                                                                   'SIG', 
                                                                                                   $cSUITE0, 
                                                                                                   'g'^~xx>, 
                                                                                                  'g'^~yy>), 
                                                                                               'K_2m'>,
                                                                                              hkdfExtract('emptyStr',
                                                                                                          'g'^(
                                                                                                               ~xx*
                                                                                                               ~yy
                                                                                                              ))),
                                                                                   <$V.1, 
                                                                                    h(<$cHash0, 
                                                                                       <'SIG', 'SIG', 
                                                                                        $cSUITE0, 'g'^~xx>, 
                                                                                       'g'^~yy>), 
                                                                                    pk(~ltk.2)>,
                                                                                   $cAEAD0)
                                                                      >,
                                                                      ~ltk.2)
                                                                )
                                                           ) @ #vk.17 )
                                                      case c_xor
                                                      solve( !KU( sign(<
                                                                        <$V.1, 
                                                                         h(<$cHash0, 
                                                                            <'SIG', 'SIG', $cSUITE0, 'g'^~xx
                                                                            >, 
                                                                            'g'^~yy>), 
                                                                         pk(~ltk.2)>, 
                                                                        aeadEncrypt('emptyStr',
                                                                                    hkdfExpand(<$cAEAD0, 
                                                                                                h(<$cHash0, 
                                                                                                   <'SIG', 
                                                                                                    'SIG', 
                                                                                                    $cSUITE0, 
                                                                                                    'g'^~xx>, 
                                                                                                   'g'^~yy>), 
                                                                                                'K_2m'>,
                                                                                               hkdfExtract('emptyStr',
                                                                                                           'g'^(
                                                                                                                ~xx*
                                                                                                                ~yy
                                                                                                               ))),
                                                                                    <$V.1, 
                                                                                     h(<$cHash0, 
                                                                                        <'SIG', 'SIG', 
                                                                                         $cSUITE0, 'g'^~xx>, 
                                                                                        'g'^~yy>), 
                                                                                     pk(~ltk.2)>,
                                                                                    $cAEAD0)
                                                                       >,
                                                                       ~ltk.2)
                                                             ) @ #vk.19 )
                                                        case R2_SIG_SIG
                                                        solve( !KU( sign(<
                                                                          <$V, 
                                                                           h(<$cHash0, 
                                                                              <'SIG', 'SIG', $cSUITE0, 'g'^~xx
                                                                              >, 
                                                                              'g'^~yy>), 
                                                                           pk(~ltk.1)>, 
                                                                          aeadEncrypt('emptyStr',
                                                                                      hkdfExpand(<$cAEAD0, 
                                                                                                  h(<$cHash0, 
                                                                                                     <'SIG', 
                                                                                                      'SIG', 
                                                                                                      $cSUITE0, 
                                                                                                      'g'^~xx
                                                                                                     >, 
                                                                                                     'g'^~yy
                                                                                                    >), 
                                                                                                  'K_2m'>,
                                                                                                 hkdfExtract('emptyStr',
                                                                                                             'g'^(
                                                                                                                  ~xx*
                                                                                                                  ~yy
                                                                                                                 ))),
                                                                                      <$V, 
                                                                                       h(<$cHash0, 
                                                                                          <'SIG', 'SIG', 
                                                                                           $cSUITE0, 'g'^~xx
                                                                                          >, 
                                                                                          'g'^~yy>), 
                                                                                       pk(~ltk.1)>,
                                                                                      $cAEAD0)
                                                                         >,
                                                                         ~ltk.1)
                                                               ) @ #vk.20 )
                                                          case c_sign
                                                          solve( !KU( ~ltk.1 ) @ #vk.23 )
                                                            case revealLTK_SIG
                                                            by contradiction /* from formulas */
                                                          qed
                                                        qed
                                                      next
                                                        case c_sign
                                                        solve( !KU( ~ltk.2 ) @ #vk.22 )
                                                          case revealLTK_SIG
                                                          solve( !KU( h(<$cHash0, 
                                                                         <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 
                                                                         'g'^~yy>)
                                                                 ) @ #vk.26 )
                                                            case c_h
                                                            solve( !KU( sign(<
                                                                              <$V, 
                                                                               h(<$cHash0, 
                                                                                  <'SIG', 'SIG', $cSUITE0, 
                                                                                   'g'^~xx>, 
                                                                                  'g'^~yy>), 
                                                                               pk(~ltk.1)>, 
                                                                              aeadEncrypt('emptyStr',
                                                                                          hkdfExpand(<
                                                                                                      $cAEAD0, 
                                                                                                      h(<
                                                                                                         $cHash0, 
                                                                                                         <
                                                                                                          'SIG', 
                                                                                                          'SIG', 
                                                                                                          $cSUITE0, 
                                                                                                          'g'^~xx
                                                                                                         >, 
                                                                                                         'g'^~yy
                                                                                                        >), 
                                                                                                      'K_2m'>,
                                                                                                     hkdfExtract('emptyStr',
                                                                                                                 'g'^(
                                                                                                                      ~xx*
                                                                                                                      ~yy
                                                                                                                     ))),
                                                                                          <$V, 
                                                                                           h(<$cHash0, 
                                                                                              <'SIG', 'SIG', 
                                                                                               $cSUITE0, 
                                                                                               'g'^~xx>, 
                                                                                              'g'^~yy>), 
                                                                                           pk(~ltk.1)>,
                                                                                          $cAEAD0)
                                                                             >,
                                                                             ~ltk.1)
                                                                   ) @ #vk.23 )
                                                              case c_sign
                                                              solve( !KU( ~ltk.1 ) @ #vk.34 )
                                                                case revealLTK_SIG
                                                                by contradiction /* from formulas */
                                                              qed
                                                            qed
                                                          qed
                                                        qed
                                                      qed
                                                    next
                                                      case coerce
                                                      solve( !KD( (
                                                                   sign(<
                                                                         <$V, 
                                                                          h(<$cHash0, 
                                                                             <'SIG', 'SIG', $cSUITE0, 'g'^~xx
                                                                             >, 
                                                                             'g'^~yy>), 
                                                                          pk(~ltk.1)>, 
                                                                         aeadEncrypt('emptyStr',
                                                                                     hkdfExpand(<$cAEAD0, 
                                                                                                 h(<$cHash0, 
                                                                                                    <'SIG', 
                                                                                                     'SIG', 
                                                                                                     $cSUITE0, 
                                                                                                     'g'^~xx
                                                                                                    >, 
                                                                                                    'g'^~yy
                                                                                                   >), 
                                                                                                 'K_2m'>,
                                                                                                hkdfExtract('emptyStr',
                                                                                                            'g'^(
                                                                                                                 ~xx*
                                                                                                                 ~yy
                                                                                                                ))),
                                                                                     <$V, 
                                                                                      h(<$cHash0, 
                                                                                         <'SIG', 'SIG', 
                                                                                          $cSUITE0, 'g'^~xx>, 
                                                                                         'g'^~yy>), 
                                                                                      pk(~ltk.1)>,
                                                                                     $cAEAD0)
                                                                        >,
                                                                        ~ltk.1)⊕
                                                                   sign(<
                                                                         <$V.1, 
                                                                          h(<$cHash0, 
                                                                             <'SIG', 'SIG', $cSUITE0, 'g'^~xx
                                                                             >, 
                                                                             'g'^~yy>), 
                                                                          pk(~ltk.2)>, 
                                                                         aeadEncrypt('emptyStr',
                                                                                     hkdfExpand(<$cAEAD0, 
                                                                                                 h(<$cHash0, 
                                                                                                    <'SIG', 
                                                                                                     'SIG', 
                                                                                                     $cSUITE0, 
                                                                                                     'g'^~xx
                                                                                                    >, 
                                                                                                    'g'^~yy
                                                                                                   >), 
                                                                                                 'K_2m'>,
                                                                                                hkdfExtract('emptyStr',
                                                                                                            'g'^(
                                                                                                                 ~xx*
                                                                                                                 ~yy
                                                                                                                ))),
                                                                                     <$V.1, 
                                                                                      h(<$cHash0, 
                                                                                         <'SIG', 'SIG', 
                                                                                          $cSUITE0, 'g'^~xx>, 
                                                                                         'g'^~yy>), 
                                                                                      pk(~ltk.2)>,
                                                                                     $cAEAD0)
                                                                        >,
                                                                        ~ltk.2)
                                                                  )
                                                             ) ▶₀ #vk.3 )
                                                        case I1_SIG_SIG
                                                        by contradiction /* impossible chain */
                                                      next
                                                        case I3_SIG_SIG
                                                        solve( (#vl.2, 0) ~~> (#vk.3, 0) )
                                                          case d_0_fst
                                                          by contradiction /* forbidden KD-fact */
                                                        next
                                                          case d_0_snd
                                                          solve( (#vr.15, 0) ~~> (#vk.3, 0) )
                                                            case d_1_aeadDecrypt
                                                            by solve( (#vr.16, 0) ~~> (#vk.3, 0) )
                                                          next
                                                            case d_1_decrypt
                                                            by solve( (#vr.16, 0) ~~> (#vk.3, 0) )
                                                          qed
                                                        qed
                                                      next
                                                        case R2_SIG_SIG
                                                        solve( (#vl.2, 0) ~~> (#vk.3, 0) )
                                                          case d_0_fst
                                                          by contradiction /* impossible chain */
                                                        next
                                                          case d_0_snd
                                                          solve( (#vr.15, 0) ~~> (#vk.3, 0) )
                                                            case d_0_fst
                                                            solve( (#vr.16, 0) ~~> (#vk.3, 0) )
                                                              case d_xor_case_1
                                                              by solve( (#vr.17, 0) ~~> (#vk.3, 0) )
                                                            next
                                                              case d_xor_case_2
                                                              by solve( (#vr.17, 0) ~~> (#vk.3, 0) )
                                                            next
                                                              case d_xor_case_3
                                                              by contradiction /* forbidden KD-fact */
                                                            next
                                                              case d_xor_case_4
                                                              by solve( (#vr.17, 0) ~~> (#vk.3, 0) )
                                                            qed
                                                          next
                                                            case d_0_snd
                                                            solve( (#vr.16, 0) ~~> (#vk.3, 0) )
                                                              case d_xor_case_1
                                                              by solve( (#vr.17, 0) ~~> (#vk.3, 0) )
                                                            next
                                                              case d_xor_case_2
                                                              solve( (#vr.17, 0) ~~> (#vk.3, 0) )
                                                                case Xor
                                                                by contradiction /* cyclic */
                                                              qed
                                                            next
                                                              case d_xor_case_3
                                                              by solve( (#vr.17, 0) ~~> (#vk.3, 0) )
                                                            next
                                                              case d_xor_case_4
                                                              by solve( (#vr.17, 0) ~~> (#vk.3, 0) )
                                                            qed
                                                          qed
                                                        qed
                                                      next
                                                        case registerLTK_SIG
                                                        by contradiction /* impossible chain */
                                                      next
                                                        case registerLTK_STAT
                                                        by contradiction /* impossible chain */
                                                      next
                                                        case revealLTK_PSK
                                                        by contradiction /* impossible chain */
                                                      next
                                                        case revealLTK_SIG
                                                        by contradiction /* impossible chain */
                                                      next
                                                        case revealLTK_STAT
                                                        by contradiction /* impossible chain */
                                                      next
                                                        case revealSessionKeyI
                                                        by solve( CommitI( tid.3, u, v, t ) ▶₀ #vr.14 )
                                                      next
                                                        case revealSessionKeyR
                                                        by solve( CommitR( tid.3, u, v, t ) ▶₀ #vr.14 )
                                                      qed
                                                    qed
                                                  qed
                                                next
                                                  case d_xor_case_3
                                                  by contradiction /* forbidden KD-fact */
                                                next
                                                  case d_xor_case_4
                                                  by solve( (#vr.15, 0) ~~> (#vk.2, 0) )
                                                qed
                                              next
                                                case d_0_snd
                                                solve( (#vr.14, 0) ~~> (#vk.2, 0) )
                                                  case d_xor_case_1
                                                  by solve( (#vr.15, 0) ~~> (#vk.2, 0) )
                                                next
                                                  case d_xor_case_2
                                                  by solve( (#vr.15, 0) ~~> (#vk.2, 0) )
                                                next
                                                  case d_xor_case_3
                                                  by solve( (#vr.15, 0) ~~> (#vk.2, 0) )
                                                next
                                                  case d_xor_case_4
                                                  by solve( (#vr.15, 0) ~~> (#vk.2, 0) )
                                                qed
                                              qed
                                            qed
                                          next
                                            case registerLTK_SIG
                                            by contradiction /* impossible chain */
                                          next
                                            case registerLTK_STAT
                                            by contradiction /* impossible chain */
                                          next
                                            case revealLTK_PSK
                                            by contradiction /* impossible chain */
                                          next
                                            case revealLTK_SIG
                                            by contradiction /* impossible chain */
                                          next
                                            case revealLTK_STAT
                                            by contradiction /* impossible chain */
                                          next
                                            case revealSessionKeyI
                                            by solve( CommitI( tid.3, u, v, t ) ▶₀ #vr.12 )
                                          next
                                            case revealSessionKeyR
                                            by solve( CommitR( tid.3, u, v, t ) ▶₀ #vr.12 )
                                          qed
                                        qed
                                      qed
                                    qed
                                  qed
                                next
                                  case d_xor_case_2
                                  by solve( (#vr.10, 0) ~~> (#vk.1, 0) )
                                next
                                  case d_xor_case_3
                                  by solve( (#vr.10, 0) ~~> (#vk.1, 0) )
                                next
                                  case d_xor_case_4
                                  by solve( (#vr.10, 0) ~~> (#vk.1, 0) )
                                qed
                              qed
                            qed
                          next
                            case registerLTK_SIG
                            by contradiction /* impossible chain */
                          next
                            case registerLTK_STAT
                            by contradiction /* impossible chain */
                          next
                            case revealLTK_PSK
                            by contradiction /* impossible chain */
                          next
                            case revealLTK_SIG
                            by contradiction /* impossible chain */
                          next
                            case revealLTK_STAT
                            by contradiction /* impossible chain */
                          next
                            case revealSessionKeyI
                            by solve( CommitI( tid.2, u, v, t ) ▶₀ #vr.7 )
                          next
                            case revealSessionKeyR
                            by solve( CommitR( tid.2, u, v, t ) ▶₀ #vr.7 )
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case d_xor_case_2
                  solve( (#vr.6, 0) ~~> (#vk, 0) )
                    case Xor
                    solve( !LTK_SIG( $V.1, ~ltk.2 ) ▶₀ #vr.3 )
                      case registerLTK_SIG
                      solve( !PK_SIG( $V.1, pkV ) ▶₁ #vr.3 )
                        case registerLTK_SIG
                        solve( !KU( (
                                     hkdfExpand(<$cAEAD0, 
                                                 h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 
                                                 'K_2e', '2'>,
                                                hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕
                                     sign(<
                                           <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 
                                            pk(~ltk.1)>, 
                                           aeadEncrypt('emptyStr',
                                                       hkdfExpand(<$cAEAD0, 
                                                                   h(<$cHash0, 
                                                                      <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 
                                                                      'g'^~yy>), 
                                                                   'K_2m'>,
                                                                  hkdfExtract('emptyStr', 'g'^(~xx*~yy))),
                                                       <$V, 
                                                        h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy
                                                          >), 
                                                        pk(~ltk.1)>,
                                                       $cAEAD0)
                                          >,
                                          ~ltk.1)
                                    )
                               ) @ #vk.4 )
                          case c_xor
                          solve( !KU( sign(<
                                            <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 
                                             pk(~ltk.1)>, 
                                            aeadEncrypt('emptyStr',
                                                        hkdfExpand(<$cAEAD0, 
                                                                    h(<$cHash0, 
                                                                       <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 
                                                                       'g'^~yy>), 
                                                                    'K_2m'>,
                                                                   hkdfExtract('emptyStr', 'g'^(~xx*~yy))),
                                                        <$V, 
                                                         h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 
                                                            'g'^~yy>), 
                                                         pk(~ltk.1)>,
                                                        $cAEAD0)
                                           >,
                                           ~ltk.1)
                                 ) @ #vk.12 )
                            case c_sign
                            solve( !KU( ~ltk.1 ) @ #vk.15 )
                              case revealLTK_SIG
                              by contradiction /* from formulas */
                            qed
                          qed
                        next
                          case coerce
                          solve( !KD( (
                                       hkdfExpand(<$cAEAD0, 
                                                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 
                                                   'K_2e', '2'>,
                                                  hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕
                                       sign(<
                                             <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 
                                              pk(~ltk.1)>, 
                                             aeadEncrypt('emptyStr',
                                                         hkdfExpand(<$cAEAD0, 
                                                                     h(<$cHash0, 
                                                                        <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 
                                                                        'g'^~yy>), 
                                                                     'K_2m'>,
                                                                    hkdfExtract('emptyStr', 'g'^(~xx*~yy))),
                                                         <$V, 
                                                          h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 
                                                             'g'^~yy>), 
                                                          pk(~ltk.1)>,
                                                         $cAEAD0)
                                            >,
                                            ~ltk.1)
                                      )
                                 ) ▶₀ #vk.1 )
                            case I1_SIG_SIG
                            by contradiction /* impossible chain */
                          next
                            case I3_SIG_SIG
                            solve( (#vl.1, 0) ~~> (#vk.1, 0) )
                              case d_0_fst
                              by contradiction /* forbidden KD-fact */
                            next
                              case d_0_snd
                              solve( (#vr.9, 0) ~~> (#vk.1, 0) )
                                case d_1_aeadDecrypt
                                by solve( (#vr.10, 0) ~~> (#vk.1, 0) )
                              next
                                case d_1_decrypt
                                by solve( (#vr.10, 0) ~~> (#vk.1, 0) )
                              qed
                            qed
                          next
                            case R2_SIG_SIG
                            solve( (#vl.1, 0) ~~> (#vk.1, 0) )
                              case d_0_fst
                              by contradiction /* impossible chain */
                            next
                              case d_0_snd
                              solve( (#vr.9, 0) ~~> (#vk.1, 0) )
                                case d_0_fst
                                solve( (#vr.10, 0) ~~> (#vk.1, 0) )
                                  case d_xor_case_1
                                  by solve( (#vr.11, 0) ~~> (#vk.1, 0) )
                                next
                                  case d_xor_case_2
                                  by solve( (#vr.11, 0) ~~> (#vk.1, 0) )
                                next
                                  case d_xor_case_3
                                  by contradiction /* forbidden KD-fact */
                                next
                                  case d_xor_case_4
                                  by solve( (#vr.11, 0) ~~> (#vk.1, 0) )
                                qed
                              next
                                case d_0_snd
                                solve( (#vr.10, 0) ~~> (#vk.1, 0) )
                                  case d_xor_case_1
                                  solve( (#vr.11, 0) ~~> (#vk.1, 0) )
                                    case Xor
                                    solve( !KU( (
                                                 sign(<
                                                       <$V, 
                                                        h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy
                                                          >), 
                                                        pk(~ltk.1)>, 
                                                       aeadEncrypt('emptyStr',
                                                                   hkdfExpand(<$cAEAD0, 
                                                                               h(<$cHash0, 
                                                                                  <'SIG', 'SIG', $cSUITE0, 
                                                                                   'g'^~xx>, 
                                                                                  'g'^~yy>), 
                                                                               'K_2m'>,
                                                                              hkdfExtract('emptyStr',
                                                                                          'g'^(~xx*~yy))),
                                                                   <$V, 
                                                                    h(<$cHash0, 
                                                                       <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 
                                                                       'g'^~yy>), 
                                                                    pk(~ltk.1)>,
                                                                   $cAEAD0)
                                                      >,
                                                      ~ltk.1)⊕
                                                 sign(<
                                                       <$V.1, 
                                                        h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy
                                                          >), 
                                                        pk(~ltk.2)>, 
                                                       aeadEncrypt('emptyStr',
                                                                   hkdfExpand(<$cAEAD0, 
                                                                               h(<$cHash0, 
                                                                                  <'SIG', 'SIG', $cSUITE0, 
                                                                                   'g'^~xx>, 
                                                                                  'g'^~yy>), 
                                                                               'K_2m'>,
                                                                              hkdfExtract('emptyStr',
                                                                                          'g'^(~xx*~yy))),
                                                                   <$V.1, 
                                                                    h(<$cHash0, 
                                                                       <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 
                                                                       'g'^~yy>), 
                                                                    pk(~ltk.2)>,
                                                                   $cAEAD0)
                                                      >,
                                                      ~ltk.2)
                                                )
                                           ) @ #vk.12 )
                                      case c_xor
                                      solve( !KU( sign(<
                                                        <$V.1, 
                                                         h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 
                                                            'g'^~yy>), 
                                                         pk(~ltk.2)>, 
                                                        aeadEncrypt('emptyStr',
                                                                    hkdfExpand(<$cAEAD0, 
                                                                                h(<$cHash0, 
                                                                                   <'SIG', 'SIG', $cSUITE0, 
                                                                                    'g'^~xx>, 
                                                                                   'g'^~yy>), 
                                                                                'K_2m'>,
                                                                               hkdfExtract('emptyStr',
                                                                                           'g'^(~xx*~yy))),
                                                                    <$V.1, 
                                                                     h(<$cHash0, 
                                                                        <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 
                                                                        'g'^~yy>), 
                                                                     pk(~ltk.2)>,
                                                                    $cAEAD0)
                                                       >,
                                                       ~ltk.2)
                                             ) @ #vk.13 )
                                        case R2_SIG_SIG
                                        solve( !KU( sign(<
                                                          <$V, 
                                                           h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 
                                                              'g'^~yy>), 
                                                           pk(~ltk.1)>, 
                                                          aeadEncrypt('emptyStr',
                                                                      hkdfExpand(<$cAEAD0, 
                                                                                  h(<$cHash0, 
                                                                                     <'SIG', 'SIG', $cSUITE0, 
                                                                                      'g'^~xx>, 
                                                                                     'g'^~yy>), 
                                                                                  'K_2m'>,
                                                                                 hkdfExtract('emptyStr',
                                                                                             'g'^(~xx*~yy))),
                                                                      <$V, 
                                                                       h(<$cHash0, 
                                                                          <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 
                                                                          'g'^~yy>), 
                                                                       pk(~ltk.1)>,
                                                                      $cAEAD0)
                                                         >,
                                                         ~ltk.1)
                                               ) @ #vk.14 )
                                          case c_sign
                                          solve( !KU( ~ltk.1 ) @ #vk.17 )
                                            case revealLTK_SIG
                                            by contradiction /* from formulas */
                                          qed
                                        qed
                                      next
                                        case c_sign
                                        solve( !KU( ~ltk.2 ) @ #vk.16 )
                                          case revealLTK_SIG
                                          solve( !KU( h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 'g'^~yy>)
                                                 ) @ #vk.20 )
                                            case c_h
                                            solve( !KU( sign(<
                                                              <$V, 
                                                               h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 
                                                                  'g'^~yy>), 
                                                               pk(~ltk.1)>, 
                                                              aeadEncrypt('emptyStr',
                                                                          hkdfExpand(<$cAEAD0, 
                                                                                      h(<$cHash0, 
                                                                                         <'SIG', 'SIG', 
                                                                                          $cSUITE0, 'g'^~xx>, 
                                                                                         'g'^~yy>), 
                                                                                      'K_2m'>,
                                                                                     hkdfExtract('emptyStr',
                                                                                                 'g'^(~xx*~yy
                                                                                                     ))),
                                                                          <$V, 
                                                                           h(<$cHash0, 
                                                                              <'SIG', 'SIG', $cSUITE0, 'g'^~xx
                                                                              >, 
                                                                              'g'^~yy>), 
                                                                           pk(~ltk.1)>,
                                                                          $cAEAD0)
                                                             >,
                                                             ~ltk.1)
                                                   ) @ #vk.17 )
                                              case c_sign
                                              solve( !KU( ~ltk.1 ) @ #vk.28 )
                                                case revealLTK_SIG
                                                by contradiction /* from formulas */
                                              qed
                                            qed
                                          qed
                                        qed
                                      qed
                                    next
                                      case coerce
                                      solve( !KD( (
                                                   sign(<
                                                         <$V, 
                                                          h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 
                                                             'g'^~yy>), 
                                                          pk(~ltk.1)>, 
                                                         aeadEncrypt('emptyStr',
                                                                     hkdfExpand(<$cAEAD0, 
                                                                                 h(<$cHash0, 
                                                                                    <'SIG', 'SIG', $cSUITE0, 
                                                                                     'g'^~xx>, 
                                                                                    'g'^~yy>), 
                                                                                 'K_2m'>,
                                                                                hkdfExtract('emptyStr',
                                                                                            'g'^(~xx*~yy))),
                                                                     <$V, 
                                                                      h(<$cHash0, 
                                                                         <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 
                                                                         'g'^~yy>), 
                                                                      pk(~ltk.1)>,
                                                                     $cAEAD0)
                                                        >,
                                                        ~ltk.1)⊕
                                                   sign(<
                                                         <$V.1, 
                                                          h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 
                                                             'g'^~yy>), 
                                                          pk(~ltk.2)>, 
                                                         aeadEncrypt('emptyStr',
                                                                     hkdfExpand(<$cAEAD0, 
                                                                                 h(<$cHash0, 
                                                                                    <'SIG', 'SIG', $cSUITE0, 
                                                                                     'g'^~xx>, 
                                                                                    'g'^~yy>), 
                                                                                 'K_2m'>,
                                                                                hkdfExtract('emptyStr',
                                                                                            'g'^(~xx*~yy))),
                                                                     <$V.1, 
                                                                      h(<$cHash0, 
                                                                         <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 
                                                                         'g'^~yy>), 
                                                                      pk(~ltk.2)>,
                                                                     $cAEAD0)
                                                        >,
                                                        ~ltk.2)
                                                  )
                                             ) ▶₀ #vk.2 )
                                        case I1_SIG_SIG
                                        by contradiction /* impossible chain */
                                      next
                                        case I3_SIG_SIG
                                        solve( (#vl.1, 0) ~~> (#vk.2, 0) )
                                          case d_0_fst
                                          by contradiction /* forbidden KD-fact */
                                        next
                                          case d_0_snd
                                          solve( (#vr.11, 0) ~~> (#vk.2, 0) )
                                            case d_1_aeadDecrypt
                                            by solve( (#vr.12, 0) ~~> (#vk.2, 0) )
                                          next
                                            case d_1_decrypt
                                            by solve( (#vr.12, 0) ~~> (#vk.2, 0) )
                                          qed
                                        qed
                                      next
                                        case R2_SIG_SIG
                                        solve( (#vl.1, 0) ~~> (#vk.2, 0) )
                                          case d_0_fst
                                          by contradiction /* impossible chain */
                                        next
                                          case d_0_snd
                                          solve( (#vr.11, 0) ~~> (#vk.2, 0) )
                                            case d_0_fst
                                            solve( (#vr.12, 0) ~~> (#vk.2, 0) )
                                              case d_xor_case_1
                                              by solve( (#vr.13, 0) ~~> (#vk.2, 0) )
                                            next
                                              case d_xor_case_2
                                              by solve( (#vr.13, 0) ~~> (#vk.2, 0) )
                                            next
                                              case d_xor_case_3
                                              by contradiction /* forbidden KD-fact */
                                            next
                                              case d_xor_case_4
                                              by solve( (#vr.13, 0) ~~> (#vk.2, 0) )
                                            qed
                                          next
                                            case d_0_snd
                                            solve( (#vr.12, 0) ~~> (#vk.2, 0) )
                                              case d_xor_case_1
                                              by solve( (#vr.13, 0) ~~> (#vk.2, 0) )
                                            next
                                              case d_xor_case_2
                                              solve( (#vr.13, 0) ~~> (#vk.2, 0) )
                                                case Xor
                                                by contradiction /* cyclic */
                                              qed
                                            next
                                              case d_xor_case_3
                                              by solve( (#vr.13, 0) ~~> (#vk.2, 0) )
                                            next
                                              case d_xor_case_4
                                              by solve( (#vr.13, 0) ~~> (#vk.2, 0) )
                                            qed
                                          qed
                                        qed
                                      next
                                        case registerLTK_SIG
                                        by contradiction /* impossible chain */
                                      next
                                        case registerLTK_STAT
                                        by contradiction /* impossible chain */
                                      next
                                        case revealLTK_PSK
                                        by contradiction /* impossible chain */
                                      next
                                        case revealLTK_SIG
                                        by contradiction /* impossible chain */
                                      next
                                        case revealLTK_STAT
                                        by contradiction /* impossible chain */
                                      next
                                        case revealSessionKeyI
                                        by solve( CommitI( tid.2, u, v, t ) ▶₀ #vr.10 )
                                      next
                                        case revealSessionKeyR
                                        by solve( CommitR( tid.2, u, v, t ) ▶₀ #vr.10 )
                                      qed
                                    qed
                                  qed
                                next
                                  case d_xor_case_2
                                  by solve( (#vr.11, 0) ~~> (#vk.1, 0) )
                                next
                                  case d_xor_case_3
                                  by solve( (#vr.11, 0) ~~> (#vk.1, 0) )
                                next
                                  case d_xor_case_4
                                  by solve( (#vr.11, 0) ~~> (#vk.1, 0) )
                                qed
                              qed
                            qed
                          next
                            case registerLTK_SIG
                            by contradiction /* impossible chain */
                          next
                            case registerLTK_STAT
                            by contradiction /* impossible chain */
                          next
                            case revealLTK_PSK
                            by contradiction /* impossible chain */
                          next
                            case revealLTK_SIG
                            by contradiction /* impossible chain */
                          next
                            case revealLTK_STAT
                            by contradiction /* impossible chain */
                          next
                            case revealSessionKeyI
                            by solve( CommitI( tid.2, u, v, t ) ▶₀ #vr.8 )
                          next
                            case revealSessionKeyR
                            by solve( CommitR( tid.2, u, v, t ) ▶₀ #vr.8 )
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case d_xor_case_3
                  by contradiction /* forbidden KD-fact */
                next
                  case d_xor_case_4
                  by solve( (#vr.6, 0) ~~> (#vk, 0) )
                qed
              next
                case d_0_snd
                solve( (#vr.5, 0) ~~> (#vk, 0) )
                  case d_xor_case_1
                  by solve( (#vr.6, 0) ~~> (#vk, 0) )
                next
                  case d_xor_case_2
                  by solve( (#vr.6, 0) ~~> (#vk, 0) )
                next
                  case d_xor_case_3
                  by solve( (#vr.6, 0) ~~> (#vk, 0) )
                next
                  case d_xor_case_4
                  by solve( (#vr.6, 0) ~~> (#vk, 0) )
                qed
              qed
            qed
          next
            case registerLTK_SIG
            by contradiction /* impossible chain */
          next
            case registerLTK_STAT
            by contradiction /* impossible chain */
          next
            case revealLTK_PSK
            by contradiction /* impossible chain */
          next
            case revealLTK_SIG
            by contradiction /* impossible chain */
          next
            case revealLTK_STAT
            by contradiction /* impossible chain */
          next
            case revealSessionKeyI
            by solve( CommitI( tid.1, u, v, t ) ▶₀ #vr.3 )
          next
            case revealSessionKeyR
            by solve( CommitR( tid.1, u, v, t ) ▶₀ #vr.3 )
          qed
        qed
      qed
    qed
  qed
next
  case case_2
  solve( (#i < #i2)  ∥ (#i2 < #i) )
    case case_1
    solve( StI1_SIG_SIG( $U, ~ltk, $V, ~xx, m1, ~tid ) ▶₀ #i )
      case I1_SIG_SIG
      solve( !PK_SIG( $V, pk(x) ) ▶₁ #i )
        case registerLTK_SIG
        solve( !PK_SIG( $U, pkU ) ▶₂ #i )
          case registerLTK_SIG
          solve( StI1_SIG_SIG( $U.1, ~ltk.2, $V.1, ~xx.1, m1, ~tid.1 ) ▶₀ #i2 )
            case I1_SIG_SIG
            solve( !PK_SIG( $V.1, pk(x) ) ▶₁ #i2 )
              case registerLTK_SIG
              solve( !PK_SIG( $U.1, pkU ) ▶₂ #i2 )
                case registerLTK_SIG
                solve( !KU( ($V⊕
                             hkdfExpand(<$cAEAD0, 
                                         h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,
                                        hkdfExtract('emptyStr', expSk))
                            )
                       ) @ #vk.3 )
                  case c_xor
                  solve( !KU( (
                               hkdfExpand(<$cAEAD0, 
                                           h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,
                                          hkdfExtract('emptyStr', expSk))⊕
                               sign(<
                                     <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), pk(~ltk.1)>, 
                                     aeadEncrypt('emptyStr',
                                                 hkdfExpand(<$cAEAD0, 
                                                             h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy
                                                               >), 
                                                             'K_2m'>,
                                                            hkdfExtract('emptyStr', expSk)),
                                                 <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 
                                                  pk(~ltk.1)>,
                                                 $cAEAD0)
                                    >,
                                    ~ltk.1)
                              )
                         ) @ #vk.4 )
                    case c_xor
                    solve( !KU( sign(<
                                      <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), pk(~ltk.1)>, 
                                      aeadEncrypt('emptyStr',
                                                  hkdfExpand(<$cAEAD0, 
                                                              h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 
                                                                 gy>), 
                                                              'K_2m'>,
                                                             hkdfExtract('emptyStr', expSk)),
                                                  <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 
                                                   pk(~ltk.1)>,
                                                  $cAEAD0)
                                     >,
                                     ~ltk.1)
                           ) @ #vk.12 )
                      case R2_SIG_SIG
                      solve( splitEqs(1) )
                        case split_case_1
                        by contradiction /* cyclic */
                      next
                        case split_case_2
                        solve( !KU( 'g'^(~xx*~yy*inv(~xx.1)) ) @ #vk.7 )
                          case I1_SIG_SIG
                          by solve( !KU( ~yy ) @ #vk.21 )
                        next
                          case R2_SIG_SIG
                          by solve( !KU( ~xx ) @ #vk.21 )
                        next
                          case c_exp
                          by solve( !KU( ~xx ) @ #vk.22 )
                        qed
                      qed
                    next
                      case c_sign
                      solve( !KU( ~ltk.1 ) @ #vk.16 )
                        case revealLTK_SIG
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case coerce
                    solve( !KD( (
                                 hkdfExpand(<$cAEAD0, 
                                             h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'
                                            >,
                                            hkdfExtract('emptyStr', expSk))⊕
                                 sign(<
                                       <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), pk(~ltk.1)>, 
                                       aeadEncrypt('emptyStr',
                                                   hkdfExpand(<$cAEAD0, 
                                                               h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 
                                                                  gy>), 
                                                               'K_2m'>,
                                                              hkdfExtract('emptyStr', expSk)),
                                                   <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 
                                                    pk(~ltk.1)>,
                                                   $cAEAD0)
                                      >,
                                      ~ltk.1)
                                )
                           ) ▶₀ #vk.1 )
                      case I1_SIG_SIG
                      by contradiction /* impossible chain */
                    next
                      case I3_SIG_SIG
                      solve( (#vl, 0) ~~> (#vk.1, 0) )
                        case d_0_fst
                        by contradiction /* forbidden KD-fact */
                      next
                        case d_0_snd
                        solve( (#vr.7, 0) ~~> (#vk.1, 0) )
                          case d_1_aeadDecrypt
                          by solve( (#vr.8, 0) ~~> (#vk.1, 0) )
                        next
                          case d_1_decrypt
                          by solve( (#vr.8, 0) ~~> (#vk.1, 0) )
                        qed
                      qed
                    next
                      case R2_SIG_SIG
                      solve( (#vl, 0) ~~> (#vk.1, 0) )
                        case d_0_fst
                        by contradiction /* impossible chain */
                      next
                        case d_0_snd
                        solve( (#vr.7, 0) ~~> (#vk.1, 0) )
                          case d_0_fst
                          solve( (#vr.8, 0) ~~> (#vk.1, 0) )
                            case d_xor_case_1
                            by solve( (#vr.9, 0) ~~> (#vk.1, 0) )
                          next
                            case d_xor_case_2
                            by solve( (#vr.9, 0) ~~> (#vk.1, 0) )
                          next
                            case d_xor_case_3
                            by contradiction /* forbidden KD-fact */
                          next
                            case d_xor_case_4
                            by solve( (#vr.9, 0) ~~> (#vk.1, 0) )
                          qed
                        next
                          case d_0_snd
                          solve( (#vr.8, 0) ~~> (#vk.1, 0) )
                            case Xor
                            solve( !LTK_SIG( $V, ~ltk.1 ) ▶₀ #vr.6 )
                              case registerLTK_SIG
                              solve( !PK_SIG( $V, pk(~ltk.1) ) ▶₁ #vr.6 )
                                case registerLTK_SIG
                                solve( splitEqs(1) )
                                  case split_case_1
                                  by contradiction /* cyclic */
                                next
                                  case split_case_2
                                  solve( !KU( 'g'^(~xx*~yy*inv(~xx.1)) ) @ #vk.6 )
                                    case I1_SIG_SIG
                                    by solve( !KU( ~yy ) @ #vk.19 )
                                  next
                                    case R2_SIG_SIG
                                    by solve( !KU( ~xx ) @ #vk.19 )
                                  next
                                    case c_exp
                                    by solve( !KU( ~xx ) @ #vk.20 )
                                  qed
                                qed
                              qed
                            qed
                          next
                            case d_xor_case_1
                            solve( (#vr.9, 0) ~~> (#vk.1, 0) )
                              case Xor
                              solve( !LTK_SIG( $V.2, ~ltk.4 ) ▶₀ #vr.6 )
                                case registerLTK_SIG
                                solve( !PK_SIG( $V.2, pkV ) ▶₁ #vr.6 )
                                  case registerLTK_SIG
                                  solve( splitEqs(1) )
                                    case split_case_1
                                    by contradiction /* cyclic */
                                  next
                                    case split_case_2
                                    solve( !KU( 'g'^(~xx*~yy*inv(~xx.1)) ) @ #vk.6 )
                                      case I1_SIG_SIG
                                      by solve( !KU( ~yy ) @ #vk.20 )
                                    next
                                      case R2_SIG_SIG
                                      by solve( !KU( ~xx ) @ #vk.20 )
                                    next
                                      case c_exp
                                      by solve( !KU( ~xx ) @ #vk.21 )
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          next
                            case d_xor_case_2
                            by solve( (#vr.9, 0) ~~> (#vk.1, 0) )
                          next
                            case d_xor_case_3
                            by solve( (#vr.9, 0) ~~> (#vk.1, 0) )
                          next
                            case d_xor_case_4
                            by solve( (#vr.9, 0) ~~> (#vk.1, 0) )
                          qed
                        qed
                      qed
                    next
                      case registerLTK_SIG
                      by contradiction /* impossible chain */
                    next
                      case registerLTK_STAT
                      by contradiction /* impossible chain */
                    next
                      case revealLTK_PSK
                      by contradiction /* impossible chain */
                    next
                      case revealLTK_SIG
                      by contradiction /* impossible chain */
                    next
                      case revealLTK_STAT
                      by contradiction /* impossible chain */
                    next
                      case revealSessionKeyI
                      by solve( CommitI( tid.2, u, v, t ) ▶₀ #vr.6 )
                    next
                      case revealSessionKeyR
                      by solve( CommitR( tid.2, u, v, t ) ▶₀ #vr.6 )
                    qed
                  qed
                next
                  case coerce
                  solve( !KD( ($V⊕
                               hkdfExpand(<$cAEAD0, 
                                           h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,
                                          hkdfExtract('emptyStr', expSk))
                              )
                         ) ▶₀ #vk )
                    case I1_SIG_SIG
                    by contradiction /* impossible chain */
                  next
                    case I3_SIG_SIG
                    solve( (#vl, 0) ~~> (#vk, 0) )
                      case d_0_fst
                      by contradiction /* forbidden KD-fact */
                    next
                      case d_0_snd
                      solve( (#vr.7, 0) ~~> (#vk, 0) )
                        case d_1_aeadDecrypt
                        by solve( (#vr.8, 0) ~~> (#vk, 0) )
                      next
                        case d_1_decrypt
                        by solve( (#vr.8, 0) ~~> (#vk, 0) )
                      qed
                    qed
                  next
                    case R2_SIG_SIG
                    solve( (#vl, 0) ~~> (#vk, 0) )
                      case d_0_fst
                      by contradiction /* impossible chain */
                    next
                      case d_0_snd
                      solve( (#vr.7, 0) ~~> (#vk, 0) )
                        case d_0_fst
                        solve( (#vr.8, 0) ~~> (#vk, 0) )
                          case Xor
                          solve( !LTK_SIG( $V, ~ltk.4 ) ▶₀ #vr.6 )
                            case registerLTK_SIG
                            solve( !PK_SIG( $V, pkV ) ▶₁ #vr.6 )
                              case registerLTK_SIG
                              solve( splitEqs(1) )
                                case split_case_1
                                by contradiction /* cyclic */
                              next
                                case split_case_2
                                solve( !KU( 'g'^(~xx*~yy*inv(~xx.1)) ) @ #vk.6 )
                                  case I1_SIG_SIG
                                  by solve( !KU( ~yy ) @ #vk.17 )
                                next
                                  case R2_SIG_SIG
                                  by solve( !KU( ~xx ) @ #vk.17 )
                                next
                                  case c_exp
                                  by solve( !KU( ~xx ) @ #vk.18 )
                                qed
                              qed
                            qed
                          qed
                        next
                          case d_xor_case_1
                          solve( (#vr.9, 0) ~~> (#vk, 0) )
                            case Xor
                            solve( !LTK_SIG( $V, ~ltk.4 ) ▶₀ #vr.6 )
                              case registerLTK_SIG
                              solve( !PK_SIG( $V, pkV ) ▶₁ #vr.6 )
                                case registerLTK_SIG
                                solve( !KU( (
                                             hkdfExpand(<$cAEAD0, 
                                                         h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 
                                                         'K_2e', '2'>,
                                                        hkdfExtract('emptyStr', expSk))⊕
                                             sign(<
                                                   <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 
                                                    pk(~ltk.1)>, 
                                                   aeadEncrypt('emptyStr',
                                                               hkdfExpand(<$cAEAD0, 
                                                                           h(<$cHash0, 
                                                                              <'SIG', 'SIG', $cSUITE0, 'g'^~xx
                                                                              >, 
                                                                              gy>), 
                                                                           'K_2m'>,
                                                                          hkdfExtract('emptyStr', expSk)),
                                                               <$V, 
                                                                h(<$cHash0, 
                                                                   <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 
                                                                pk(~ltk.1)>,
                                                               $cAEAD0)
                                                  >,
                                                  ~ltk.1)
                                            )
                                       ) @ #vk.4 )
                                  case c_xor
                                  solve( !KU( sign(<
                                                    <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 
                                                     pk(~ltk.1)>, 
                                                    aeadEncrypt('emptyStr',
                                                                hkdfExpand(<$cAEAD0, 
                                                                            h(<$cHash0, 
                                                                               <'SIG', 'SIG', $cSUITE0, 
                                                                                'g'^~xx>, 
                                                                               gy>), 
                                                                            'K_2m'>,
                                                                           hkdfExtract('emptyStr', expSk)),
                                                                <$V, 
                                                                 h(<$cHash0, 
                                                                    <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 
                                                                 pk(~ltk.1)>,
                                                                $cAEAD0)
                                                   >,
                                                   ~ltk.1)
                                         ) @ #vk.17 )
                                    case R2_SIG_SIG
                                    solve( splitEqs(1) )
                                      case split_case_1
                                      by contradiction /* cyclic */
                                    next
                                      case split_case_2
                                      solve( !KU( 'g'^(~xx*~yy*inv(~xx.1)) ) @ #vk.7 )
                                        case I1_SIG_SIG
                                        by solve( !KU( ~yy ) @ #vk.25 )
                                      next
                                        case R2_SIG_SIG
                                        by solve( !KU( ~xx ) @ #vk.25 )
                                      next
                                        case c_exp
                                        by solve( !KU( ~xx ) @ #vk.26 )
                                      qed
                                    qed
                                  next
                                    case c_sign
                                    solve( !KU( ~ltk.1 ) @ #vk.20 )
                                      case revealLTK_SIG
                                      by contradiction /* from formulas */
                                    qed
                                  qed
                                next
                                  case coerce
                                  solve( !KD( (
                                               hkdfExpand(<$cAEAD0, 
                                                           h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy
                                                             >), 
                                                           'K_2e', '2'>,
                                                          hkdfExtract('emptyStr', expSk))⊕
                                               sign(<
                                                     <$V, 
                                                      h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 
                                                      pk(~ltk.1)>, 
                                                     aeadEncrypt('emptyStr',
                                                                 hkdfExpand(<$cAEAD0, 
                                                                             h(<$cHash0, 
                                                                                <'SIG', 'SIG', $cSUITE0, 
                                                                                 'g'^~xx>, 
                                                                                gy>), 
                                                                             'K_2m'>,
                                                                            hkdfExtract('emptyStr', expSk)),
                                                                 <$V, 
                                                                  h(<$cHash0, 
                                                                     <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 
                                                                  pk(~ltk.1)>,
                                                                 $cAEAD0)
                                                    >,
                                                    ~ltk.1)
                                              )
                                         ) ▶₀ #vk.1 )
                                    case I1_SIG_SIG
                                    by contradiction /* impossible chain */
                                  next
                                    case I3_SIG_SIG
                                    solve( (#vl.1, 0) ~~> (#vk.1, 0) )
                                      case d_0_fst
                                      by contradiction /* forbidden KD-fact */
                                    next
                                      case d_0_snd
                                      solve( (#vr.11, 0) ~~> (#vk.1, 0) )
                                        case d_1_aeadDecrypt
                                        by solve( (#vr.12, 0) ~~> (#vk.1, 0) )
                                      next
                                        case d_1_decrypt
                                        by solve( (#vr.12, 0) ~~> (#vk.1, 0) )
                                      qed
                                    qed
                                  next
                                    case R2_SIG_SIG
                                    solve( (#vl.1, 0) ~~> (#vk.1, 0) )
                                      case d_0_fst
                                      by contradiction /* impossible chain */
                                    next
                                      case d_0_snd
                                      solve( (#vr.11, 0) ~~> (#vk.1, 0) )
                                        case d_0_fst
                                        solve( (#vr.12, 0) ~~> (#vk.1, 0) )
                                          case d_xor_case_1
                                          by solve( (#vr.13, 0) ~~> (#vk.1, 0) )
                                        next
                                          case d_xor_case_2
                                          by solve( (#vr.13, 0) ~~> (#vk.1, 0) )
                                        next
                                          case d_xor_case_3
                                          by contradiction /* forbidden KD-fact */
                                        next
                                          case d_xor_case_4
                                          by solve( (#vr.13, 0) ~~> (#vk.1, 0) )
                                        qed
                                      next
                                        case d_0_snd
                                        solve( (#vr.12, 0) ~~> (#vk.1, 0) )
                                          case Xor
                                          solve( !LTK_SIG( $V, ~ltk.1 ) ▶₀ #vr.10 )
                                            case registerLTK_SIG
                                            solve( !PK_SIG( $V, pk(~ltk.1) ) ▶₁ #vr.10 )
                                              case registerLTK_SIG
                                              solve( splitEqs(1) )
                                                case split_case_1
                                                by contradiction /* cyclic */
                                              next
                                                case split_case_2
                                                solve( !KU( 'g'^(~xx*~yy*inv(~xx.1)) ) @ #vk.6 )
                                                  case I1_SIG_SIG
                                                  by solve( !KU( ~yy ) @ #vk.23 )
                                                next
                                                  case R2_SIG_SIG
                                                  by solve( !KU( ~xx ) @ #vk.23 )
                                                next
                                                  case c_exp
                                                  by solve( !KU( ~xx ) @ #vk.24 )
                                                qed
                                              qed
                                            qed
                                          qed
                                        next
                                          case d_xor_case_1
                                          solve( (#vr.13, 0) ~~> (#vk.1, 0) )
                                            case Xor
                                            solve( !LTK_SIG( $V.2, ~ltk.4 ) ▶₀ #vr.10 )
                                              case registerLTK_SIG
                                              solve( !PK_SIG( $V.2, pkV ) ▶₁ #vr.10 )
                                                case registerLTK_SIG
                                                solve( splitEqs(1) )
                                                  case split_case_1
                                                  by contradiction /* cyclic */
                                                next
                                                  case split_case_2
                                                  solve( !KU( 'g'^(~xx*~yy*inv(~xx.1)) ) @ #vk.6 )
                                                    case I1_SIG_SIG
                                                    by solve( !KU( ~yy ) @ #vk.24 )
                                                  next
                                                    case R2_SIG_SIG
                                                    by solve( !KU( ~xx ) @ #vk.24 )
                                                  next
                                                    case c_exp
                                                    by solve( !KU( ~xx ) @ #vk.25 )
                                                  qed
                                                qed
                                              qed
                                            qed
                                          qed
                                        next
                                          case d_xor_case_2
                                          by solve( (#vr.13, 0) ~~> (#vk.1, 0) )
                                        next
                                          case d_xor_case_3
                                          by solve( (#vr.13, 0) ~~> (#vk.1, 0) )
                                        next
                                          case d_xor_case_4
                                          by solve( (#vr.13, 0) ~~> (#vk.1, 0) )
                                        qed
                                      qed
                                    qed
                                  next
                                    case registerLTK_SIG
                                    by contradiction /* impossible chain */
                                  next
                                    case registerLTK_STAT
                                    by contradiction /* impossible chain */
                                  next
                                    case revealLTK_PSK
                                    by contradiction /* impossible chain */
                                  next
                                    case revealLTK_SIG
                                    by contradiction /* impossible chain */
                                  next
                                    case revealLTK_STAT
                                    by contradiction /* impossible chain */
                                  next
                                    case revealSessionKeyI
                                    by solve( CommitI( tid.3, u, v, t ) ▶₀ #vr.10 )
                                  next
                                    case revealSessionKeyR
                                    by solve( CommitR( tid.3, u, v, t ) ▶₀ #vr.10 )
                                  qed
                                qed
                              qed
                            qed
                          qed
                        next
                          case d_xor_case_2
                          solve( (#vr.9, 0) ~~> (#vk, 0) )
                            case Xor
                            solve( !LTK_SIG( $V.2, ~ltk.4 ) ▶₀ #vr.6 )
                              case registerLTK_SIG
                              solve( !PK_SIG( $V.2, pkV ) ▶₁ #vr.6 )
                                case registerLTK_SIG
                                solve( splitEqs(1) )
                                  case split_case_1
                                  by contradiction /* cyclic */
                                next
                                  case split_case_2
                                  solve( !KU( 'g'^(~xx*~yy*inv(~xx.1)) ) @ #vk.6 )
                                    case I1_SIG_SIG
                                    by solve( !KU( ~yy ) @ #vk.18 )
                                  next
                                    case R2_SIG_SIG
                                    by solve( !KU( ~xx ) @ #vk.18 )
                                  next
                                    case c_exp
                                    by solve( !KU( ~xx ) @ #vk.19 )
                                  qed
                                qed
                              qed
                            qed
                          qed
                        next
                          case d_xor_case_3
                          by contradiction /* forbidden KD-fact */
                        next
                          case d_xor_case_4
                          by solve( (#vr.9, 0) ~~> (#vk, 0) )
                        qed
                      next
                        case d_0_snd
                        solve( (#vr.8, 0) ~~> (#vk, 0) )
                          case d_xor_case_1
                          by solve( (#vr.9, 0) ~~> (#vk, 0) )
                        next
                          case d_xor_case_2
                          by solve( (#vr.9, 0) ~~> (#vk, 0) )
                        next
                          case d_xor_case_3
                          by solve( (#vr.9, 0) ~~> (#vk, 0) )
                        next
                          case d_xor_case_4
                          by solve( (#vr.9, 0) ~~> (#vk, 0) )
                        qed
                      qed
                    qed
                  next
                    case registerLTK_SIG
                    by contradiction /* impossible chain */
                  next
                    case registerLTK_STAT
                    by contradiction /* impossible chain */
                  next
                    case revealLTK_PSK
                    by contradiction /* impossible chain */
                  next
                    case revealLTK_SIG
                    by contradiction /* impossible chain */
                  next
                    case revealLTK_STAT
                    by contradiction /* impossible chain */
                  next
                    case revealSessionKeyI
                    by solve( CommitI( tid.2, u, v, t ) ▶₀ #vr.6 )
                  next
                    case revealSessionKeyR
                    by solve( CommitR( tid.2, u, v, t ) ▶₀ #vr.6 )
                  qed
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  next
    case case_2
    solve( StI1_SIG_SIG( $U, ~ltk, $V, ~xx, m1, ~tid ) ▶₀ #i )
      case I1_SIG_SIG
      solve( !PK_SIG( $V, pk(x) ) ▶₁ #i )
        case registerLTK_SIG
        solve( !PK_SIG( $U, pkU ) ▶₂ #i )
          case registerLTK_SIG
          solve( StI1_SIG_SIG( $U.1, ~ltk.2, $V.1, ~xx.1, m1, ~tid.1 ) ▶₀ #i2 )
            case I1_SIG_SIG
            solve( !PK_SIG( $V.1, pk(x) ) ▶₁ #i2 )
              case registerLTK_SIG
              solve( !PK_SIG( $U.1, pkU ) ▶₂ #i2 )
                case registerLTK_SIG
                solve( !KU( ($V⊕
                             hkdfExpand(<$cAEAD0, 
                                         h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,
                                        hkdfExtract('emptyStr', expSk))
                            )
                       ) @ #vk.3 )
                  case c_xor
                  solve( !KU( (
                               hkdfExpand(<$cAEAD0, 
                                           h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,
                                          hkdfExtract('emptyStr', expSk))⊕
                               sign(<
                                     <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), pk(~ltk.1)>, 
                                     aeadEncrypt('emptyStr',
                                                 hkdfExpand(<$cAEAD0, 
                                                             h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy
                                                               >), 
                                                             'K_2m'>,
                                                            hkdfExtract('emptyStr', expSk)),
                                                 <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 
                                                  pk(~ltk.1)>,
                                                 $cAEAD0)
                                    >,
                                    ~ltk.1)
                              )
                         ) @ #vk.4 )
                    case c_xor
                    solve( !KU( sign(<
                                      <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), pk(~ltk.1)>, 
                                      aeadEncrypt('emptyStr',
                                                  hkdfExpand(<$cAEAD0, 
                                                              h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 
                                                                 gy>), 
                                                              'K_2m'>,
                                                             hkdfExtract('emptyStr', expSk)),
                                                  <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 
                                                   pk(~ltk.1)>,
                                                  $cAEAD0)
                                     >,
                                     ~ltk.1)
                           ) @ #vk.12 )
                      case R2_SIG_SIG
                      solve( splitEqs(1) )
                        case split_case_1
                        by contradiction /* cyclic */
                      next
                        case split_case_2
                        solve( !KU( 'g'^(~xx*~yy*inv(~xx.1)) ) @ #vk.7 )
                          case I1_SIG_SIG
                          by solve( !KU( ~yy ) @ #vk.21 )
                        next
                          case R2_SIG_SIG
                          by solve( !KU( ~xx ) @ #vk.21 )
                        next
                          case c_exp
                          by solve( !KU( ~xx ) @ #vk.22 )
                        qed
                      qed
                    next
                      case c_sign
                      solve( !KU( ~ltk.1 ) @ #vk.16 )
                        case revealLTK_SIG
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case coerce
                    solve( !KD( (
                                 hkdfExpand(<$cAEAD0, 
                                             h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'
                                            >,
                                            hkdfExtract('emptyStr', expSk))⊕
                                 sign(<
                                       <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), pk(~ltk.1)>, 
                                       aeadEncrypt('emptyStr',
                                                   hkdfExpand(<$cAEAD0, 
                                                               h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, 
                                                                  gy>), 
                                                               'K_2m'>,
                                                              hkdfExtract('emptyStr', expSk)),
                                                   <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 
                                                    pk(~ltk.1)>,
                                                   $cAEAD0)
                                      >,
                                      ~ltk.1)
                                )
                           ) ▶₀ #vk.1 )
                      case I1_SIG_SIG
                      by contradiction /* impossible chain */
                    next
                      case I3_SIG_SIG
                      solve( (#vl, 0) ~~> (#vk.1, 0) )
                        case d_0_fst
                        by contradiction /* forbidden KD-fact */
                      next
                        case d_0_snd
                        solve( (#vr.7, 0) ~~> (#vk.1, 0) )
                          case d_1_aeadDecrypt
                          by solve( (#vr.8, 0) ~~> (#vk.1, 0) )
                        next
                          case d_1_decrypt
                          by solve( (#vr.8, 0) ~~> (#vk.1, 0) )
                        qed
                      qed
                    next
                      case R2_SIG_SIG
                      solve( (#vl, 0) ~~> (#vk.1, 0) )
                        case d_0_fst
                        by contradiction /* impossible chain */
                      next
                        case d_0_snd
                        solve( (#vr.7, 0) ~~> (#vk.1, 0) )
                          case d_0_fst
                          solve( (#vr.8, 0) ~~> (#vk.1, 0) )
                            case d_xor_case_1
                            by solve( (#vr.9, 0) ~~> (#vk.1, 0) )
                          next
                            case d_xor_case_2
                            by solve( (#vr.9, 0) ~~> (#vk.1, 0) )
                          next
                            case d_xor_case_3
                            by contradiction /* forbidden KD-fact */
                          next
                            case d_xor_case_4
                            by solve( (#vr.9, 0) ~~> (#vk.1, 0) )
                          qed
                        next
                          case d_0_snd
                          solve( (#vr.8, 0) ~~> (#vk.1, 0) )
                            case Xor
                            solve( !LTK_SIG( $V, ~ltk.1 ) ▶₀ #vr.6 )
                              case registerLTK_SIG
                              solve( !PK_SIG( $V, pk(~ltk.1) ) ▶₁ #vr.6 )
                                case registerLTK_SIG
                                solve( splitEqs(1) )
                                  case split_case_1
                                  by contradiction /* cyclic */
                                next
                                  case split_case_2
                                  solve( !KU( 'g'^(~xx*~yy*inv(~xx.1)) ) @ #vk.6 )
                                    case I1_SIG_SIG
                                    by solve( !KU( ~yy ) @ #vk.19 )
                                  next
                                    case R2_SIG_SIG
                                    by solve( !KU( ~xx ) @ #vk.19 )
                                  next
                                    case c_exp
                                    by solve( !KU( ~xx ) @ #vk.20 )
                                  qed
                                qed
                              qed
                            qed
                          next
                            case d_xor_case_1
                            solve( (#vr.9, 0) ~~> (#vk.1, 0) )
                              case Xor
                              solve( !LTK_SIG( $V.2, ~ltk.4 ) ▶₀ #vr.6 )
                                case registerLTK_SIG
                                solve( !PK_SIG( $V.2, pkV ) ▶₁ #vr.6 )
                                  case registerLTK_SIG
                                  solve( splitEqs(1) )
                                    case split_case_1
                                    by contradiction /* cyclic */
                                  next
                                    case split_case_2
                                    solve( !KU( 'g'^(~xx*~yy*inv(~xx.1)) ) @ #vk.6 )
                                      case I1_SIG_SIG
                                      by solve( !KU( ~yy ) @ #vk.20 )
                                    next
                                      case R2_SIG_SIG
                                      by solve( !KU( ~xx ) @ #vk.20 )
                                    next
                                      case c_exp
                                      by solve( !KU( ~xx ) @ #vk.21 )
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          next
                            case d_xor_case_2
                            by solve( (#vr.9, 0) ~~> (#vk.1, 0) )
                          next
                            case d_xor_case_3
                            by solve( (#vr.9, 0) ~~> (#vk.1, 0) )
                          next
                            case d_xor_case_4
                            by solve( (#vr.9, 0) ~~> (#vk.1, 0) )
                          qed
                        qed
                      qed
                    next
                      case registerLTK_SIG
                      by contradiction /* impossible chain */
                    next
                      case registerLTK_STAT
                      by contradiction /* impossible chain */
                    next
                      case revealLTK_PSK
                      by contradiction /* impossible chain */
                    next
                      case revealLTK_SIG
                      by contradiction /* impossible chain */
                    next
                      case revealLTK_STAT
                      by contradiction /* impossible chain */
                    next
                      case revealSessionKeyI
                      by solve( CommitI( tid.2, u, v, t ) ▶₀ #vr.6 )
                    next
                      case revealSessionKeyR
                      by solve( CommitR( tid.2, u, v, t ) ▶₀ #vr.6 )
                    qed
                  qed
                next
                  case coerce
                  solve( !KD( ($V⊕
                               hkdfExpand(<$cAEAD0, 
                                           h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,
                                          hkdfExtract('emptyStr', expSk))
                              )
                         ) ▶₀ #vk )
                    case I1_SIG_SIG
                    by contradiction /* impossible chain */
                  next
                    case I3_SIG_SIG
                    solve( (#vl, 0) ~~> (#vk, 0) )
                      case d_0_fst
                      by contradiction /* forbidden KD-fact */
                    next
                      case d_0_snd
                      solve( (#vr.7, 0) ~~> (#vk, 0) )
                        case d_1_aeadDecrypt
                        by solve( (#vr.8, 0) ~~> (#vk, 0) )
                      next
                        case d_1_decrypt
                        by solve( (#vr.8, 0) ~~> (#vk, 0) )
                      qed
                    qed
                  next
                    case R2_SIG_SIG
                    solve( (#vl, 0) ~~> (#vk, 0) )
                      case d_0_fst
                      by contradiction /* impossible chain */
                    next
                      case d_0_snd
                      solve( (#vr.7, 0) ~~> (#vk, 0) )
                        case d_0_fst
                        solve( (#vr.8, 0) ~~> (#vk, 0) )
                          case Xor
                          solve( !LTK_SIG( $V, ~ltk.4 ) ▶₀ #vr.6 )
                            case registerLTK_SIG
                            solve( !PK_SIG( $V, pkV ) ▶₁ #vr.6 )
                              case registerLTK_SIG
                              solve( splitEqs(1) )
                                case split_case_1
                                by contradiction /* cyclic */
                              next
                                case split_case_2
                                solve( !KU( 'g'^(~xx*~yy*inv(~xx.1)) ) @ #vk.6 )
                                  case I1_SIG_SIG
                                  by solve( !KU( ~yy ) @ #vk.17 )
                                next
                                  case R2_SIG_SIG
                                  by solve( !KU( ~xx ) @ #vk.17 )
                                next
                                  case c_exp
                                  by solve( !KU( ~xx ) @ #vk.18 )
                                qed
                              qed
                            qed
                          qed
                        next
                          case d_xor_case_1
                          solve( (#vr.9, 0) ~~> (#vk, 0) )
                            case Xor
                            solve( !LTK_SIG( $V, ~ltk.4 ) ▶₀ #vr.6 )
                              case registerLTK_SIG
                              solve( !PK_SIG( $V, pkV ) ▶₁ #vr.6 )
                                case registerLTK_SIG
                                solve( !KU( (
                                             hkdfExpand(<$cAEAD0, 
                                                         h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 
                                                         'K_2e', '2'>,
                                                        hkdfExtract('emptyStr', expSk))⊕
                                             sign(<
                                                   <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 
                                                    pk(~ltk.1)>, 
                                                   aeadEncrypt('emptyStr',
                                                               hkdfExpand(<$cAEAD0, 
                                                                           h(<$cHash0, 
                                                                              <'SIG', 'SIG', $cSUITE0, 'g'^~xx
                                                                              >, 
                                                                              gy>), 
                                                                           'K_2m'>,
                                                                          hkdfExtract('emptyStr', expSk)),
                                                               <$V, 
                                                                h(<$cHash0, 
                                                                   <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 
                                                                pk(~ltk.1)>,
                                                               $cAEAD0)
                                                  >,
                                                  ~ltk.1)
                                            )
                                       ) @ #vk.4 )
                                  case c_xor
                                  solve( !KU( sign(<
                                                    <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 
                                                     pk(~ltk.1)>, 
                                                    aeadEncrypt('emptyStr',
                                                                hkdfExpand(<$cAEAD0, 
                                                                            h(<$cHash0, 
                                                                               <'SIG', 'SIG', $cSUITE0, 
                                                                                'g'^~xx>, 
                                                                               gy>), 
                                                                            'K_2m'>,
                                                                           hkdfExtract('emptyStr', expSk)),
                                                                <$V, 
                                                                 h(<$cHash0, 
                                                                    <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 
                                                                 pk(~ltk.1)>,
                                                                $cAEAD0)
                                                   >,
                                                   ~ltk.1)
                                         ) @ #vk.17 )
                                    case R2_SIG_SIG
                                    solve( splitEqs(1) )
                                      case split_case_1
                                      by contradiction /* cyclic */
                                    next
                                      case split_case_2
                                      solve( !KU( 'g'^(~xx*~yy*inv(~xx.1)) ) @ #vk.7 )
                                        case I1_SIG_SIG
                                        by solve( !KU( ~yy ) @ #vk.25 )
                                      next
                                        case R2_SIG_SIG
                                        by solve( !KU( ~xx ) @ #vk.25 )
                                      next
                                        case c_exp
                                        by solve( !KU( ~xx ) @ #vk.26 )
                                      qed
                                    qed
                                  next
                                    case c_sign
                                    solve( !KU( ~ltk.1 ) @ #vk.20 )
                                      case revealLTK_SIG
                                      by contradiction /* from formulas */
                                    qed
                                  qed
                                next
                                  case coerce
                                  solve( !KD( (
                                               hkdfExpand(<$cAEAD0, 
                                                           h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy
                                                             >), 
                                                           'K_2e', '2'>,
                                                          hkdfExtract('emptyStr', expSk))⊕
                                               sign(<
                                                     <$V, 
                                                      h(<$cHash0, <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 
                                                      pk(~ltk.1)>, 
                                                     aeadEncrypt('emptyStr',
                                                                 hkdfExpand(<$cAEAD0, 
                                                                             h(<$cHash0, 
                                                                                <'SIG', 'SIG', $cSUITE0, 
                                                                                 'g'^~xx>, 
                                                                                gy>), 
                                                                             'K_2m'>,
                                                                            hkdfExtract('emptyStr', expSk)),
                                                                 <$V, 
                                                                  h(<$cHash0, 
                                                                     <'SIG', 'SIG', $cSUITE0, 'g'^~xx>, gy>), 
                                                                  pk(~ltk.1)>,
                                                                 $cAEAD0)
                                                    >,
                                                    ~ltk.1)
                                              )
                                         ) ▶₀ #vk.1 )
                                    case I1_SIG_SIG
                                    by contradiction /* impossible chain */
                                  next
                                    case I3_SIG_SIG
                                    solve( (#vl.1, 0) ~~> (#vk.1, 0) )
                                      case d_0_fst
                                      by contradiction /* forbidden KD-fact */
                                    next
                                      case d_0_snd
                                      solve( (#vr.11, 0) ~~> (#vk.1, 0) )
                                        case d_1_aeadDecrypt
                                        by solve( (#vr.12, 0) ~~> (#vk.1, 0) )
                                      next
                                        case d_1_decrypt
                                        by solve( (#vr.12, 0) ~~> (#vk.1, 0) )
                                      qed
                                    qed
                                  next
                                    case R2_SIG_SIG
                                    solve( (#vl.1, 0) ~~> (#vk.1, 0) )
                                      case d_0_fst
                                      by contradiction /* impossible chain */
                                    next
                                      case d_0_snd
                                      solve( (#vr.11, 0) ~~> (#vk.1, 0) )
                                        case d_0_fst
                                        solve( (#vr.12, 0) ~~> (#vk.1, 0) )
                                          case d_xor_case_1
                                          by solve( (#vr.13, 0) ~~> (#vk.1, 0) )
                                        next
                                          case d_xor_case_2
                                          by solve( (#vr.13, 0) ~~> (#vk.1, 0) )
                                        next
                                          case d_xor_case_3
                                          by contradiction /* forbidden KD-fact */
                                        next
                                          case d_xor_case_4
                                          by solve( (#vr.13, 0) ~~> (#vk.1, 0) )
                                        qed
                                      next
                                        case d_0_snd
                                        solve( (#vr.12, 0) ~~> (#vk.1, 0) )
                                          case Xor
                                          solve( !LTK_SIG( $V, ~ltk.1 ) ▶₀ #vr.10 )
                                            case registerLTK_SIG
                                            solve( !PK_SIG( $V, pk(~ltk.1) ) ▶₁ #vr.10 )
                                              case registerLTK_SIG
                                              solve( splitEqs(1) )
                                                case split_case_1
                                                by contradiction /* cyclic */
                                              next
                                                case split_case_2
                                                solve( !KU( 'g'^(~xx*~yy*inv(~xx.1)) ) @ #vk.6 )
                                                  case I1_SIG_SIG
                                                  by solve( !KU( ~yy ) @ #vk.23 )
                                                next
                                                  case R2_SIG_SIG
                                                  by solve( !KU( ~xx ) @ #vk.23 )
                                                next
                                                  case c_exp
                                                  by solve( !KU( ~xx ) @ #vk.24 )
                                                qed
                                              qed
                                            qed
                                          qed
                                        next
                                          case d_xor_case_1
                                          solve( (#vr.13, 0) ~~> (#vk.1, 0) )
                                            case Xor
                                            solve( !LTK_SIG( $V.2, ~ltk.4 ) ▶₀ #vr.10 )
                                              case registerLTK_SIG
                                              solve( !PK_SIG( $V.2, pkV ) ▶₁ #vr.10 )
                                                case registerLTK_SIG
                                                solve( splitEqs(1) )
                                                  case split_case_1
                                                  by contradiction /* cyclic */
                                                next
                                                  case split_case_2
                                                  solve( !KU( 'g'^(~xx*~yy*inv(~xx.1)) ) @ #vk.6 )
                                                    case I1_SIG_SIG
                                                    by solve( !KU( ~yy ) @ #vk.24 )
                                                  next
                                                    case R2_SIG_SIG
                                                    by solve( !KU( ~xx ) @ #vk.24 )
                                                  next
                                                    case c_exp
                                                    by solve( !KU( ~xx ) @ #vk.25 )
                                                  qed
                                                qed
                                              qed
                                            qed
                                          qed
                                        next
                                          case d_xor_case_2
                                          by solve( (#vr.13, 0) ~~> (#vk.1, 0) )
                                        next
                                          case d_xor_case_3
                                          by solve( (#vr.13, 0) ~~> (#vk.1, 0) )
                                        next
                                          case d_xor_case_4
                                          by solve( (#vr.13, 0) ~~> (#vk.1, 0) )
                                        qed
                                      qed
                                    qed
                                  next
                                    case registerLTK_SIG
                                    by contradiction /* impossible chain */
                                  next
                                    case registerLTK_STAT
                                    by contradiction /* impossible chain */
                                  next
                                    case revealLTK_PSK
                                    by contradiction /* impossible chain */
                                  next
                                    case revealLTK_SIG
                                    by contradiction /* impossible chain */
                                  next
                                    case revealLTK_STAT
                                    by contradiction /* impossible chain */
                                  next
                                    case revealSessionKeyI
                                    by solve( CommitI( tid.3, u, v, t ) ▶₀ #vr.10 )
                                  next
                                    case revealSessionKeyR
                                    by solve( CommitR( tid.3, u, v, t ) ▶₀ #vr.10 )
                                  qed
                                qed
                              qed
                            qed
                          qed
                        next
                          case d_xor_case_2
                          solve( (#vr.9, 0) ~~> (#vk, 0) )
                            case Xor
                            solve( !LTK_SIG( $V.2, ~ltk.4 ) ▶₀ #vr.6 )
                              case registerLTK_SIG
                              solve( !PK_SIG( $V.2, pkV ) ▶₁ #vr.6 )
                                case registerLTK_SIG
                                solve( splitEqs(1) )
                                  case split_case_1
                                  by contradiction /* cyclic */
                                next
                                  case split_case_2
                                  solve( !KU( 'g'^(~xx*~yy*inv(~xx.1)) ) @ #vk.6 )
                                    case I1_SIG_SIG
                                    by solve( !KU( ~yy ) @ #vk.18 )
                                  next
                                    case R2_SIG_SIG
                                    by solve( !KU( ~xx ) @ #vk.18 )
                                  next
                                    case c_exp
                                    by solve( !KU( ~xx ) @ #vk.19 )
                                  qed
                                qed
                              qed
                            qed
                          qed
                        next
                          case d_xor_case_3
                          by contradiction /* forbidden KD-fact */
                        next
                          case d_xor_case_4
                          by solve( (#vr.9, 0) ~~> (#vk, 0) )
                        qed
                      next
                        case d_0_snd
                        solve( (#vr.8, 0) ~~> (#vk, 0) )
                          case d_xor_case_1
                          by solve( (#vr.9, 0) ~~> (#vk, 0) )
                        next
                          case d_xor_case_2
                          by solve( (#vr.9, 0) ~~> (#vk, 0) )
                        next
                          case d_xor_case_3
                          by solve( (#vr.9, 0) ~~> (#vk, 0) )
                        next
                          case d_xor_case_4
                          by solve( (#vr.9, 0) ~~> (#vk, 0) )
                        qed
                      qed
                    qed
                  next
                    case registerLTK_SIG
                    by contradiction /* impossible chain */
                  next
                    case registerLTK_STAT
                    by contradiction /* impossible chain */
                  next
                    case revealLTK_PSK
                    by contradiction /* impossible chain */
                  next
                    case revealLTK_SIG
                    by contradiction /* impossible chain */
                  next
                    case revealLTK_STAT
                    by contradiction /* impossible chain */
                  next
                    case revealSessionKeyI
                    by solve( CommitI( tid.2, u, v, t ) ▶₀ #vr.6 )
                  next
                    case revealSessionKeyR
                    by solve( CommitR( tid.2, u, v, t ) ▶₀ #vr.6 )
                  qed
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  qed
qed

lemma authInjAgreeGuaranteeForR:
  all-traces
  "∀ tidR u v sk #i.
    (CommitR( tidR, u, v, sk ) @ #i) ⇒
    (((((∃ tidI #j. (RunningI( tidI, u, v, sk ) @ #j) ∧ (#j < #i)) ∧
        (¬(∃ tidR2 u2 v2 #i2.
            (CommitR( tidR2, u2, v2, sk ) @ #i2) ∧ (¬(#i = #i2))))) ∨
       (∃ #j. (LTKRev( <u, v> ) @ #j) ∧ (#j < #i))) ∨
      (∃ #j. (LTKRev( u ) @ #j) ∧ (#j < #i))) ∨
     (∃ #j. (LTKRev( v ) @ #j) ∧ (#j < #i)))"
/*
guarded formula characterizing all counter-examples:
"∃ tidR u v sk #i.
  (CommitR( tidR, u, v, sk ) @ #i)
 ∧
  (((∀ tidI #j. (RunningI( tidI, u, v, sk ) @ #j) ⇒ ¬(#j < #i)) ∨
    (∃ tidR2 u2 v2 #i2.
      (CommitR( tidR2, u2, v2, sk ) @ #i2) ∧ ¬(#i = #i2)))) ∧
  (∀ #j. (LTKRev( <u, v> ) @ #j) ⇒ ¬(#j < #i)) ∧
  (∀ #j. (LTKRev( u ) @ #j) ⇒ ¬(#j < #i)) ∧
  (∀ #j. (LTKRev( v ) @ #j) ⇒ ¬(#j < #i))"
*/
simplify
solve( (∀ tidI #j. (RunningI( tidI, $U, $V, sk ) @ #j) ⇒ ¬(#j < #i))  ∥
       (∃ tidR2 u2 v2 #i2. (CommitR( tidR2, u2, v2, sk ) @ #i2) ∧ ¬(#i = #i2)) )
  case case_1
  solve( StR2_SIG_SIG( $V, ~ltk, ~yy, prk_3e2m, TH_2, CIPHERTEXT_2, sk,
                       ~tid, m1, m2
         ) ▶₀ #i )
    case R2_SIG_SIG
    solve( !PK_SIG( $U, pk(x) ) ▶₁ #i )
      case registerLTK_SIG
      solve( !PK_SIG( $V, pkV ) ▶₂ #i )
        case registerLTK_SIG
        solve( !KU( aeadEncrypt(<$U, 
                                 sign(<
                                       <$U, 
                                        h(<$cHash0.1, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 
                                           <
                                            ($V⊕
                                             hkdfExpand(<$cAEAD0, 
                                                         h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 
                                                         'K_2e', '1'>,
                                                        hkdfExtract('emptyStr', sk))
                                            ), 
                                            (
                                             hkdfExpand(<$cAEAD0, 
                                                         h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 
                                                         'K_2e', '2'>,
                                                        hkdfExtract('emptyStr', sk))⊕
                                             sign(<
                                                   <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 
                                                    pk(~ltk)>, 
                                                   aeadEncrypt('emptyStr',
                                                               hkdfExpand(<$cAEAD0, 
                                                                           h(<$cHash0, 
                                                                              <'SIG', 'SIG', $cSUITE0, gx>, 
                                                                              'g'^~yy>), 
                                                                           'K_2m'>,
                                                                          hkdfExtract('emptyStr', sk)),
                                                               <$V, 
                                                                h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 
                                                                   'g'^~yy>), 
                                                                pk(~ltk)>,
                                                               $cAEAD0)
                                                  >,
                                                  ~ltk)
                                            )
                                           >, 
                                           'emptyStr'>), 
                                        pk(~ltk.1)>, 
                                       aeadEncrypt('emptyStr',
                                                   hkdfExpand(<$cAEAD0.1, 
                                                               h(<$cHash0.1, 
                                                                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 
                                                                     'g'^~yy>), 
                                                                  <
                                                                   ($V⊕
                                                                    hkdfExpand(<$cAEAD0, 
                                                                                h(<$cHash0, 
                                                                                   <'SIG', 'SIG', $cSUITE0, gx
                                                                                   >, 
                                                                                   'g'^~yy>), 
                                                                                'K_2e', '1'>,
                                                                               hkdfExtract('emptyStr', sk))
                                                                   ), 
                                                                   (
                                                                    hkdfExpand(<$cAEAD0, 
                                                                                h(<$cHash0, 
                                                                                   <'SIG', 'SIG', $cSUITE0, gx
                                                                                   >, 
                                                                                   'g'^~yy>), 
                                                                                'K_2e', '2'>,
                                                                               hkdfExtract('emptyStr', sk))⊕
                                                                    sign(<
                                                                          <$V, 
                                                                           h(<$cHash0, 
                                                                              <'SIG', 'SIG', $cSUITE0, gx>, 
                                                                              'g'^~yy>), 
                                                                           pk(~ltk)>, 
                                                                          aeadEncrypt('emptyStr',
                                                                                      hkdfExpand(<$cAEAD0, 
                                                                                                  h(<$cHash0, 
                                                                                                     <'SIG', 
                                                                                                      'SIG', 
                                                                                                      $cSUITE0, 
                                                                                                      gx>, 
                                                                                                     'g'^~yy
                                                                                                    >), 
                                                                                                  'K_2m'>,
                                                                                                 hkdfExtract('emptyStr',
                                                                                                             sk)),
                                                                                      <$V, 
                                                                                       h(<$cHash0, 
                                                                                          <'SIG', 'SIG', 
                                                                                           $cSUITE0, gx>, 
                                                                                          'g'^~yy>), 
                                                                                       pk(~ltk)>,
                                                                                      $cAEAD0)
                                                                         >,
                                                                         ~ltk)
                                                                   )
                                                                  >, 
                                                                  'emptyStr'>), 
                                                               'K_3m'>,
                                                              hkdfExtract('emptyStr', sk)),
                                                   <$U, 
                                                    h(<$cHash0.1, 
                                                       h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 
                                                       <
                                                        ($V⊕
                                                         hkdfExpand(<$cAEAD0, 
                                                                     h(<$cHash0, 
                                                                        <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy
                                                                       >), 
                                                                     'K_2e', '1'>,
                                                                    hkdfExtract('emptyStr', sk))
                                                        ), 
                                                        (
                                                         hkdfExpand(<$cAEAD0, 
                                                                     h(<$cHash0, 
                                                                        <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy
                                                                       >), 
                                                                     'K_2e', '2'>,
                                                                    hkdfExtract('emptyStr', sk))⊕
                                                         sign(<
                                                               <$V, 
                                                                h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 
                                                                   'g'^~yy>), 
                                                                pk(~ltk)>, 
                                                               aeadEncrypt('emptyStr',
                                                                           hkdfExpand(<$cAEAD0, 
                                                                                       h(<$cHash0, 
                                                                                          <'SIG', 'SIG', 
                                                                                           $cSUITE0, gx>, 
                                                                                          'g'^~yy>), 
                                                                                       'K_2m'>,
                                                                                      hkdfExtract('emptyStr',
                                                                                                  sk)),
                                                                           <$V, 
                                                                            h(<$cHash0, 
                                                                               <'SIG', 'SIG', $cSUITE0, gx>, 
                                                                               'g'^~yy>), 
                                                                            pk(~ltk)>,
                                                                           $cAEAD0)
                                                              >,
                                                              ~ltk)
                                                        )
                                                       >, 
                                                       'emptyStr'>), 
                                                    pk(~ltk.1)>,
                                                   $cAEAD0.1)
                                      >,
                                      ~ltk.1)
                                >,
                                hkdfExpand(<$cAEAD0.1, 
                                            h(<$cHash0.1, 
                                               h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 
                                               <
                                                ($V⊕
                                                 hkdfExpand(<$cAEAD0, 
                                                             h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy
                                                               >), 
                                                             'K_2e', '1'>,
                                                            hkdfExtract('emptyStr', sk))
                                                ), 
                                                (
                                                 hkdfExpand(<$cAEAD0, 
                                                             h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy
                                                               >), 
                                                             'K_2e', '2'>,
                                                            hkdfExtract('emptyStr', sk))⊕
                                                 sign(<
                                                       <$V, 
                                                        h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 
                                                        pk(~ltk)>, 
                                                       aeadEncrypt('emptyStr',
                                                                   hkdfExpand(<$cAEAD0, 
                                                                               h(<$cHash0, 
                                                                                  <'SIG', 'SIG', $cSUITE0, gx
                                                                                  >, 
                                                                                  'g'^~yy>), 
                                                                               'K_2m'>,
                                                                              hkdfExtract('emptyStr', sk)),
                                                                   <$V, 
                                                                    h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 
                                                                       'g'^~yy>), 
                                                                    pk(~ltk)>,
                                                                   $cAEAD0)
                                                      >,
                                                      ~ltk)
                                                )
                                               >, 
                                               'emptyStr'>), 
                                            'K_3ae'>,
                                           hkdfExtract('emptyStr', sk)),
                                extAad3Outer, $cAEAD0.1)
               ) @ #vk.2 )
          case I3_SIG_SIG
          by contradiction /* from formulas */
        next
          case c_aeadEncrypt
          solve( !KU( sign(<
                            <$U, 
                             h(<$cHash0.1, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 
                                <
                                 ($V⊕
                                  hkdfExpand(<$cAEAD0, 
                                              h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 'K_2e', '1'
                                             >,
                                             hkdfExtract('emptyStr', sk))
                                 ), 
                                 (
                                  hkdfExpand(<$cAEAD0, 
                                              h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 'K_2e', '2'
                                             >,
                                             hkdfExtract('emptyStr', sk))⊕
                                  sign(<
                                        <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>), pk(~ltk)>, 
                                        aeadEncrypt('emptyStr',
                                                    hkdfExpand(<$cAEAD0, 
                                                                h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 
                                                                   'g'^~yy>), 
                                                                'K_2m'>,
                                                               hkdfExtract('emptyStr', sk)),
                                                    <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 
                                                     pk(~ltk)>,
                                                    $cAEAD0)
                                       >,
                                       ~ltk)
                                 )
                                >, 
                                'emptyStr'>), 
                             pk(~ltk.1)>, 
                            aeadEncrypt('emptyStr',
                                        hkdfExpand(<$cAEAD0.1, 
                                                    h(<$cHash0.1, 
                                                       h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 
                                                       <
                                                        ($V⊕
                                                         hkdfExpand(<$cAEAD0, 
                                                                     h(<$cHash0, 
                                                                        <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy
                                                                       >), 
                                                                     'K_2e', '1'>,
                                                                    hkdfExtract('emptyStr', sk))
                                                        ), 
                                                        (
                                                         hkdfExpand(<$cAEAD0, 
                                                                     h(<$cHash0, 
                                                                        <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy
                                                                       >), 
                                                                     'K_2e', '2'>,
                                                                    hkdfExtract('emptyStr', sk))⊕
                                                         sign(<
                                                               <$V, 
                                                                h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 
                                                                   'g'^~yy>), 
                                                                pk(~ltk)>, 
                                                               aeadEncrypt('emptyStr',
                                                                           hkdfExpand(<$cAEAD0, 
                                                                                       h(<$cHash0, 
                                                                                          <'SIG', 'SIG', 
                                                                                           $cSUITE0, gx>, 
                                                                                          'g'^~yy>), 
                                                                                       'K_2m'>,
                                                                                      hkdfExtract('emptyStr',
                                                                                                  sk)),
                                                                           <$V, 
                                                                            h(<$cHash0, 
                                                                               <'SIG', 'SIG', $cSUITE0, gx>, 
                                                                               'g'^~yy>), 
                                                                            pk(~ltk)>,
                                                                           $cAEAD0)
                                                              >,
                                                              ~ltk)
                                                        )
                                                       >, 
                                                       'emptyStr'>), 
                                                    'K_3m'>,
                                                   hkdfExtract('emptyStr', sk)),
                                        <$U, 
                                         h(<$cHash0.1, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 
                                            <
                                             ($V⊕
                                              hkdfExpand(<$cAEAD0, 
                                                          h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy
                                                            >), 
                                                          'K_2e', '1'>,
                                                         hkdfExtract('emptyStr', sk))
                                             ), 
                                             (
                                              hkdfExpand(<$cAEAD0, 
                                                          h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy
                                                            >), 
                                                          'K_2e', '2'>,
                                                         hkdfExtract('emptyStr', sk))⊕
                                              sign(<
                                                    <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 
                                                     pk(~ltk)>, 
                                                    aeadEncrypt('emptyStr',
                                                                hkdfExpand(<$cAEAD0, 
                                                                            h(<$cHash0, 
                                                                               <'SIG', 'SIG', $cSUITE0, gx>, 
                                                                               'g'^~yy>), 
                                                                            'K_2m'>,
                                                                           hkdfExtract('emptyStr', sk)),
                                                                <$V, 
                                                                 h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 
                                                                    'g'^~yy>), 
                                                                 pk(~ltk)>,
                                                                $cAEAD0)
                                                   >,
                                                   ~ltk)
                                             )
                                            >, 
                                            'emptyStr'>), 
                                         pk(~ltk.1)>,
                                        $cAEAD0.1)
                           >,
                           ~ltk.1)
                 ) @ #vk.14 )
            case c_sign
            solve( !KU( ~ltk.1 ) @ #vk.17 )
              case revealLTK_SIG
              by contradiction /* from formulas */
            qed
          qed
        qed
      qed
    qed
  qed
next
  case case_2
  solve( (#i < #i2)  ∥ (#i2 < #i) )
    case case_1
    solve( StR2_SIG_SIG( $V, ~ltk, ~yy, prk_3e2m, TH_2, CIPHERTEXT_2, sk,
                         ~tid, m1, m2
           ) ▶₀ #i )
      case R2_SIG_SIG
      solve( !PK_SIG( $U, pk(x) ) ▶₁ #i )
        case registerLTK_SIG
        solve( !PK_SIG( $V, pkV ) ▶₂ #i )
          case registerLTK_SIG
          solve( StR2_SIG_SIG( $V.1, ~ltk.2, ~yy.1, prk_3e2m, TH_2, CIPHERTEXT_2,
                               sk, ~tid.1, m1, m2
                 ) ▶₀ #i2 )
            case R2_SIG_SIG
            solve( !PK_SIG( $U.1, pk(x) ) ▶₁ #i2 )
              case registerLTK_SIG
              solve( !PK_SIG( $V.1, pkV ) ▶₂ #i2 )
                case registerLTK_SIG
                solve( !KU( aeadEncrypt(<$U, 
                                         sign(<
                                               <$U, 
                                                h(<$cHash0.1, 
                                                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 
                                                   <
                                                    ($V⊕
                                                     hkdfExpand(<$cAEAD0, 
                                                                 h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 
                                                                    'g'^~yy>), 
                                                                 'K_2e', '1'>,
                                                                hkdfExtract('emptyStr', sk))
                                                    ), 
                                                    (
                                                     hkdfExpand(<$cAEAD0, 
                                                                 h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 
                                                                    'g'^~yy>), 
                                                                 'K_2e', '2'>,
                                                                hkdfExtract('emptyStr', sk))⊕
                                                     sign(<
                                                           <$V, 
                                                            h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy
                                                              >), 
                                                            pk(~ltk)>, 
                                                           aeadEncrypt('emptyStr',
                                                                       hkdfExpand(<$cAEAD0, 
                                                                                   h(<$cHash0, 
                                                                                      <'SIG', 'SIG', 
                                                                                       $cSUITE0, gx>, 
                                                                                      'g'^~yy>), 
                                                                                   'K_2m'>,
                                                                                  hkdfExtract('emptyStr',
                                                                                              sk)),
                                                                       <$V, 
                                                                        h(<$cHash0, 
                                                                           <'SIG', 'SIG', $cSUITE0, gx>, 
                                                                           'g'^~yy>), 
                                                                        pk(~ltk)>,
                                                                       $cAEAD0)
                                                          >,
                                                          ~ltk)
                                                    )
                                                   >, 
                                                   'emptyStr'>), 
                                                pk(~ltk.1)>, 
                                               aeadEncrypt('emptyStr',
                                                           hkdfExpand(<$cAEAD0.1, 
                                                                       h(<$cHash0.1, 
                                                                          h(<$cHash0, 
                                                                             <'SIG', 'SIG', $cSUITE0, gx>, 
                                                                             'g'^~yy>), 
                                                                          <
                                                                           ($V⊕
                                                                            hkdfExpand(<$cAEAD0, 
                                                                                        h(<$cHash0, 
                                                                                           <'SIG', 'SIG', 
                                                                                            $cSUITE0, gx>, 
                                                                                           'g'^~yy>), 
                                                                                        'K_2e', '1'>,
                                                                                       hkdfExtract('emptyStr',
                                                                                                   sk))
                                                                           ), 
                                                                           (
                                                                            hkdfExpand(<$cAEAD0, 
                                                                                        h(<$cHash0, 
                                                                                           <'SIG', 'SIG', 
                                                                                            $cSUITE0, gx>, 
                                                                                           'g'^~yy>), 
                                                                                        'K_2e', '2'>,
                                                                                       hkdfExtract('emptyStr',
                                                                                                   sk))⊕
                                                                            sign(<
                                                                                  <$V, 
                                                                                   h(<$cHash0, 
                                                                                      <'SIG', 'SIG', 
                                                                                       $cSUITE0, gx>, 
                                                                                      'g'^~yy>), 
                                                                                   pk(~ltk)>, 
                                                                                  aeadEncrypt('emptyStr',
                                                                                              hkdfExpand(<
                                                                                                          $cAEAD0, 
                                                                                                          h(<
                                                                                                             $cHash0, 
                                                                                                             <
                                                                                                              'SIG', 
                                                                                                              'SIG', 
                                                                                                              $cSUITE0, 
                                                                                                              gx
                                                                                                             >, 
                                                                                                             'g'^~yy
                                                                                                            >), 
                                                                                                          'K_2m'
                                                                                                         >,
                                                                                                         hkdfExtract('emptyStr',
                                                                                                                     sk)),
                                                                                              <$V, 
                                                                                               h(<$cHash0, 
                                                                                                  <'SIG', 
                                                                                                   'SIG', 
                                                                                                   $cSUITE0, 
                                                                                                   gx>, 
                                                                                                  'g'^~yy>), 
                                                                                               pk(~ltk)>,
                                                                                              $cAEAD0)
                                                                                 >,
                                                                                 ~ltk)
                                                                           )
                                                                          >, 
                                                                          'emptyStr'>), 
                                                                       'K_3m'>,
                                                                      hkdfExtract('emptyStr', sk)),
                                                           <$U, 
                                                            h(<$cHash0.1, 
                                                               h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 
                                                                  'g'^~yy>), 
                                                               <
                                                                ($V⊕
                                                                 hkdfExpand(<$cAEAD0, 
                                                                             h(<$cHash0, 
                                                                                <'SIG', 'SIG', $cSUITE0, gx>, 
                                                                                'g'^~yy>), 
                                                                             'K_2e', '1'>,
                                                                            hkdfExtract('emptyStr', sk))
                                                                ), 
                                                                (
                                                                 hkdfExpand(<$cAEAD0, 
                                                                             h(<$cHash0, 
                                                                                <'SIG', 'SIG', $cSUITE0, gx>, 
                                                                                'g'^~yy>), 
                                                                             'K_2e', '2'>,
                                                                            hkdfExtract('emptyStr', sk))⊕
                                                                 sign(<
                                                                       <$V, 
                                                                        h(<$cHash0, 
                                                                           <'SIG', 'SIG', $cSUITE0, gx>, 
                                                                           'g'^~yy>), 
                                                                        pk(~ltk)>, 
                                                                       aeadEncrypt('emptyStr',
                                                                                   hkdfExpand(<$cAEAD0, 
                                                                                               h(<$cHash0, 
                                                                                                  <'SIG', 
                                                                                                   'SIG', 
                                                                                                   $cSUITE0, 
                                                                                                   gx>, 
                                                                                                  'g'^~yy>), 
                                                                                               'K_2m'>,
                                                                                              hkdfExtract('emptyStr',
                                                                                                          sk)),
                                                                                   <$V, 
                                                                                    h(<$cHash0, 
                                                                                       <'SIG', 'SIG', 
                                                                                        $cSUITE0, gx>, 
                                                                                       'g'^~yy>), 
                                                                                    pk(~ltk)>,
                                                                                   $cAEAD0)
                                                                      >,
                                                                      ~ltk)
                                                                )
                                                               >, 
                                                               'emptyStr'>), 
                                                            pk(~ltk.1)>,
                                                           $cAEAD0.1)
                                              >,
                                              ~ltk.1)
                                        >,
                                        hkdfExpand(<$cAEAD0.1, 
                                                    h(<$cHash0.1, 
                                                       h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 
                                                       <
                                                        ($V⊕
                                                         hkdfExpand(<$cAEAD0, 
                                                                     h(<$cHash0, 
                                                                        <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy
                                                                       >), 
                                                                     'K_2e', '1'>,
                                                                    hkdfExtract('emptyStr', sk))
                                                        ), 
                                                        (
                                                         hkdfExpand(<$cAEAD0, 
                                                                     h(<$cHash0, 
                                                                        <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy
                                                                       >), 
                                                                     'K_2e', '2'>,
                                                                    hkdfExtract('emptyStr', sk))⊕
                                                         sign(<
                                                               <$V, 
                                                                h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 
                                                                   'g'^~yy>), 
                                                                pk(~ltk)>, 
                                                               aeadEncrypt('emptyStr',
                                                                           hkdfExpand(<$cAEAD0, 
                                                                                       h(<$cHash0, 
                                                                                          <'SIG', 'SIG', 
                                                                                           $cSUITE0, gx>, 
                                                                                          'g'^~yy>), 
                                                                                       'K_2m'>,
                                                                                      hkdfExtract('emptyStr',
                                                                                                  sk)),
                                                                           <$V, 
                                                                            h(<$cHash0, 
                                                                               <'SIG', 'SIG', $cSUITE0, gx>, 
                                                                               'g'^~yy>), 
                                                                            pk(~ltk)>,
                                                                           $cAEAD0)
                                                              >,
                                                              ~ltk)
                                                        )
                                                       >, 
                                                       'emptyStr'>), 
                                                    'K_3ae'>,
                                                   hkdfExtract('emptyStr', sk)),
                                        extAad3Outer, $cAEAD0.1)
                       ) @ #vk.3 )
                  case I3_SIG_SIG
                  solve( splitEqs(3) )
                    case split_case_1
                    by contradiction /* cyclic */
                  next
                    case split_case_2
                    solve( !KU( 'g'^(~xx*~yy*inv(~yy.1)) ) @ #vk.15 )
                      case I1_SIG_SIG
                      by solve( !KU( ~yy ) @ #vk.22 )
                    next
                      case R2_SIG_SIG
                      by solve( !KU( ~xx ) @ #vk.22 )
                    next
                      case c_exp
                      by solve( !KU( ~xx ) @ #vk.23 )
                    qed
                  qed
                next
                  case c_aeadEncrypt
                  solve( !KU( sign(<
                                    <$U, 
                                     h(<$cHash0.1, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 
                                        <
                                         ($V⊕
                                          hkdfExpand(<$cAEAD0, 
                                                      h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 
                                                      'K_2e', '1'>,
                                                     hkdfExtract('emptyStr', sk))
                                         ), 
                                         (
                                          hkdfExpand(<$cAEAD0, 
                                                      h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 
                                                      'K_2e', '2'>,
                                                     hkdfExtract('emptyStr', sk))⊕
                                          sign(<
                                                <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 
                                                 pk(~ltk)>, 
                                                aeadEncrypt('emptyStr',
                                                            hkdfExpand(<$cAEAD0, 
                                                                        h(<$cHash0, 
                                                                           <'SIG', 'SIG', $cSUITE0, gx>, 
                                                                           'g'^~yy>), 
                                                                        'K_2m'>,
                                                                       hkdfExtract('emptyStr', sk)),
                                                            <$V, 
                                                             h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy
                                                               >), 
                                                             pk(~ltk)>,
                                                            $cAEAD0)
                                               >,
                                               ~ltk)
                                         )
                                        >, 
                                        'emptyStr'>), 
                                     pk(~ltk.1)>, 
                                    aeadEncrypt('emptyStr',
                                                hkdfExpand(<$cAEAD0.1, 
                                                            h(<$cHash0.1, 
                                                               h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 
                                                                  'g'^~yy>), 
                                                               <
                                                                ($V⊕
                                                                 hkdfExpand(<$cAEAD0, 
                                                                             h(<$cHash0, 
                                                                                <'SIG', 'SIG', $cSUITE0, gx>, 
                                                                                'g'^~yy>), 
                                                                             'K_2e', '1'>,
                                                                            hkdfExtract('emptyStr', sk))
                                                                ), 
                                                                (
                                                                 hkdfExpand(<$cAEAD0, 
                                                                             h(<$cHash0, 
                                                                                <'SIG', 'SIG', $cSUITE0, gx>, 
                                                                                'g'^~yy>), 
                                                                             'K_2e', '2'>,
                                                                            hkdfExtract('emptyStr', sk))⊕
                                                                 sign(<
                                                                       <$V, 
                                                                        h(<$cHash0, 
                                                                           <'SIG', 'SIG', $cSUITE0, gx>, 
                                                                           'g'^~yy>), 
                                                                        pk(~ltk)>, 
                                                                       aeadEncrypt('emptyStr',
                                                                                   hkdfExpand(<$cAEAD0, 
                                                                                               h(<$cHash0, 
                                                                                                  <'SIG', 
                                                                                                   'SIG', 
                                                                                                   $cSUITE0, 
                                                                                                   gx>, 
                                                                                                  'g'^~yy>), 
                                                                                               'K_2m'>,
                                                                                              hkdfExtract('emptyStr',
                                                                                                          sk)),
                                                                                   <$V, 
                                                                                    h(<$cHash0, 
                                                                                       <'SIG', 'SIG', 
                                                                                        $cSUITE0, gx>, 
                                                                                       'g'^~yy>), 
                                                                                    pk(~ltk)>,
                                                                                   $cAEAD0)
                                                                      >,
                                                                      ~ltk)
                                                                )
                                                               >, 
                                                               'emptyStr'>), 
                                                            'K_3m'>,
                                                           hkdfExtract('emptyStr', sk)),
                                                <$U, 
                                                 h(<$cHash0.1, 
                                                    h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 
                                                    <
                                                     ($V⊕
                                                      hkdfExpand(<$cAEAD0, 
                                                                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 
                                                                     'g'^~yy>), 
                                                                  'K_2e', '1'>,
                                                                 hkdfExtract('emptyStr', sk))
                                                     ), 
                                                     (
                                                      hkdfExpand(<$cAEAD0, 
                                                                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 
                                                                     'g'^~yy>), 
                                                                  'K_2e', '2'>,
                                                                 hkdfExtract('emptyStr', sk))⊕
                                                      sign(<
                                                            <$V, 
                                                             h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy
                                                               >), 
                                                             pk(~ltk)>, 
                                                            aeadEncrypt('emptyStr',
                                                                        hkdfExpand(<$cAEAD0, 
                                                                                    h(<$cHash0, 
                                                                                       <'SIG', 'SIG', 
                                                                                        $cSUITE0, gx>, 
                                                                                       'g'^~yy>), 
                                                                                    'K_2m'>,
                                                                                   hkdfExtract('emptyStr',
                                                                                               sk)),
                                                                        <$V, 
                                                                         h(<$cHash0, 
                                                                            <'SIG', 'SIG', $cSUITE0, gx>, 
                                                                            'g'^~yy>), 
                                                                         pk(~ltk)>,
                                                                        $cAEAD0)
                                                           >,
                                                           ~ltk)
                                                     )
                                                    >, 
                                                    'emptyStr'>), 
                                                 pk(~ltk.1)>,
                                                $cAEAD0.1)
                                   >,
                                   ~ltk.1)
                         ) @ #vk.21 )
                    case c_sign
                    solve( !KU( ~ltk.1 ) @ #vk.24 )
                      case revealLTK_SIG
                      by contradiction /* from formulas */
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  next
    case case_2
    solve( StR2_SIG_SIG( $V, ~ltk, ~yy, prk_3e2m, TH_2, CIPHERTEXT_2, sk,
                         ~tid, m1, m2
           ) ▶₀ #i )
      case R2_SIG_SIG
      solve( !PK_SIG( $U, pk(x) ) ▶₁ #i )
        case registerLTK_SIG
        solve( !PK_SIG( $V, pkV ) ▶₂ #i )
          case registerLTK_SIG
          solve( StR2_SIG_SIG( $V.1, ~ltk.2, ~yy.1, prk_3e2m, TH_2, CIPHERTEXT_2,
                               sk, ~tid.1, m1, m2
                 ) ▶₀ #i2 )
            case R2_SIG_SIG
            solve( !PK_SIG( $U.1, pk(x) ) ▶₁ #i2 )
              case registerLTK_SIG
              solve( !PK_SIG( $V.1, pkV ) ▶₂ #i2 )
                case registerLTK_SIG
                solve( !KU( aeadEncrypt(<$U, 
                                         sign(<
                                               <$U, 
                                                h(<$cHash0.1, 
                                                   h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 
                                                   <
                                                    ($V⊕
                                                     hkdfExpand(<$cAEAD0, 
                                                                 h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 
                                                                    'g'^~yy>), 
                                                                 'K_2e', '1'>,
                                                                hkdfExtract('emptyStr', sk))
                                                    ), 
                                                    (
                                                     hkdfExpand(<$cAEAD0, 
                                                                 h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 
                                                                    'g'^~yy>), 
                                                                 'K_2e', '2'>,
                                                                hkdfExtract('emptyStr', sk))⊕
                                                     sign(<
                                                           <$V, 
                                                            h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy
                                                              >), 
                                                            pk(~ltk)>, 
                                                           aeadEncrypt('emptyStr',
                                                                       hkdfExpand(<$cAEAD0, 
                                                                                   h(<$cHash0, 
                                                                                      <'SIG', 'SIG', 
                                                                                       $cSUITE0, gx>, 
                                                                                      'g'^~yy>), 
                                                                                   'K_2m'>,
                                                                                  hkdfExtract('emptyStr',
                                                                                              sk)),
                                                                       <$V, 
                                                                        h(<$cHash0, 
                                                                           <'SIG', 'SIG', $cSUITE0, gx>, 
                                                                           'g'^~yy>), 
                                                                        pk(~ltk)>,
                                                                       $cAEAD0)
                                                          >,
                                                          ~ltk)
                                                    )
                                                   >, 
                                                   'emptyStr'>), 
                                                pk(~ltk.1)>, 
                                               aeadEncrypt('emptyStr',
                                                           hkdfExpand(<$cAEAD0.1, 
                                                                       h(<$cHash0.1, 
                                                                          h(<$cHash0, 
                                                                             <'SIG', 'SIG', $cSUITE0, gx>, 
                                                                             'g'^~yy>), 
                                                                          <
                                                                           ($V⊕
                                                                            hkdfExpand(<$cAEAD0, 
                                                                                        h(<$cHash0, 
                                                                                           <'SIG', 'SIG', 
                                                                                            $cSUITE0, gx>, 
                                                                                           'g'^~yy>), 
                                                                                        'K_2e', '1'>,
                                                                                       hkdfExtract('emptyStr',
                                                                                                   sk))
                                                                           ), 
                                                                           (
                                                                            hkdfExpand(<$cAEAD0, 
                                                                                        h(<$cHash0, 
                                                                                           <'SIG', 'SIG', 
                                                                                            $cSUITE0, gx>, 
                                                                                           'g'^~yy>), 
                                                                                        'K_2e', '2'>,
                                                                                       hkdfExtract('emptyStr',
                                                                                                   sk))⊕
                                                                            sign(<
                                                                                  <$V, 
                                                                                   h(<$cHash0, 
                                                                                      <'SIG', 'SIG', 
                                                                                       $cSUITE0, gx>, 
                                                                                      'g'^~yy>), 
                                                                                   pk(~ltk)>, 
                                                                                  aeadEncrypt('emptyStr',
                                                                                              hkdfExpand(<
                                                                                                          $cAEAD0, 
                                                                                                          h(<
                                                                                                             $cHash0, 
                                                                                                             <
                                                                                                              'SIG', 
                                                                                                              'SIG', 
                                                                                                              $cSUITE0, 
                                                                                                              gx
                                                                                                             >, 
                                                                                                             'g'^~yy
                                                                                                            >), 
                                                                                                          'K_2m'
                                                                                                         >,
                                                                                                         hkdfExtract('emptyStr',
                                                                                                                     sk)),
                                                                                              <$V, 
                                                                                               h(<$cHash0, 
                                                                                                  <'SIG', 
                                                                                                   'SIG', 
                                                                                                   $cSUITE0, 
                                                                                                   gx>, 
                                                                                                  'g'^~yy>), 
                                                                                               pk(~ltk)>,
                                                                                              $cAEAD0)
                                                                                 >,
                                                                                 ~ltk)
                                                                           )
                                                                          >, 
                                                                          'emptyStr'>), 
                                                                       'K_3m'>,
                                                                      hkdfExtract('emptyStr', sk)),
                                                           <$U, 
                                                            h(<$cHash0.1, 
                                                               h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 
                                                                  'g'^~yy>), 
                                                               <
                                                                ($V⊕
                                                                 hkdfExpand(<$cAEAD0, 
                                                                             h(<$cHash0, 
                                                                                <'SIG', 'SIG', $cSUITE0, gx>, 
                                                                                'g'^~yy>), 
                                                                             'K_2e', '1'>,
                                                                            hkdfExtract('emptyStr', sk))
                                                                ), 
                                                                (
                                                                 hkdfExpand(<$cAEAD0, 
                                                                             h(<$cHash0, 
                                                                                <'SIG', 'SIG', $cSUITE0, gx>, 
                                                                                'g'^~yy>), 
                                                                             'K_2e', '2'>,
                                                                            hkdfExtract('emptyStr', sk))⊕
                                                                 sign(<
                                                                       <$V, 
                                                                        h(<$cHash0, 
                                                                           <'SIG', 'SIG', $cSUITE0, gx>, 
                                                                           'g'^~yy>), 
                                                                        pk(~ltk)>, 
                                                                       aeadEncrypt('emptyStr',
                                                                                   hkdfExpand(<$cAEAD0, 
                                                                                               h(<$cHash0, 
                                                                                                  <'SIG', 
                                                                                                   'SIG', 
                                                                                                   $cSUITE0, 
                                                                                                   gx>, 
                                                                                                  'g'^~yy>), 
                                                                                               'K_2m'>,
                                                                                              hkdfExtract('emptyStr',
                                                                                                          sk)),
                                                                                   <$V, 
                                                                                    h(<$cHash0, 
                                                                                       <'SIG', 'SIG', 
                                                                                        $cSUITE0, gx>, 
                                                                                       'g'^~yy>), 
                                                                                    pk(~ltk)>,
                                                                                   $cAEAD0)
                                                                      >,
                                                                      ~ltk)
                                                                )
                                                               >, 
                                                               'emptyStr'>), 
                                                            pk(~ltk.1)>,
                                                           $cAEAD0.1)
                                              >,
                                              ~ltk.1)
                                        >,
                                        hkdfExpand(<$cAEAD0.1, 
                                                    h(<$cHash0.1, 
                                                       h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 
                                                       <
                                                        ($V⊕
                                                         hkdfExpand(<$cAEAD0, 
                                                                     h(<$cHash0, 
                                                                        <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy
                                                                       >), 
                                                                     'K_2e', '1'>,
                                                                    hkdfExtract('emptyStr', sk))
                                                        ), 
                                                        (
                                                         hkdfExpand(<$cAEAD0, 
                                                                     h(<$cHash0, 
                                                                        <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy
                                                                       >), 
                                                                     'K_2e', '2'>,
                                                                    hkdfExtract('emptyStr', sk))⊕
                                                         sign(<
                                                               <$V, 
                                                                h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 
                                                                   'g'^~yy>), 
                                                                pk(~ltk)>, 
                                                               aeadEncrypt('emptyStr',
                                                                           hkdfExpand(<$cAEAD0, 
                                                                                       h(<$cHash0, 
                                                                                          <'SIG', 'SIG', 
                                                                                           $cSUITE0, gx>, 
                                                                                          'g'^~yy>), 
                                                                                       'K_2m'>,
                                                                                      hkdfExtract('emptyStr',
                                                                                                  sk)),
                                                                           <$V, 
                                                                            h(<$cHash0, 
                                                                               <'SIG', 'SIG', $cSUITE0, gx>, 
                                                                               'g'^~yy>), 
                                                                            pk(~ltk)>,
                                                                           $cAEAD0)
                                                              >,
                                                              ~ltk)
                                                        )
                                                       >, 
                                                       'emptyStr'>), 
                                                    'K_3ae'>,
                                                   hkdfExtract('emptyStr', sk)),
                                        extAad3Outer, $cAEAD0.1)
                       ) @ #vk.3 )
                  case I3_SIG_SIG
                  solve( splitEqs(3) )
                    case split_case_1
                    by contradiction /* cyclic */
                  next
                    case split_case_2
                    solve( !KU( 'g'^(~xx*~yy*inv(~yy.1)) ) @ #vk.15 )
                      case I1_SIG_SIG
                      by solve( !KU( ~yy ) @ #vk.22 )
                    next
                      case R2_SIG_SIG
                      by solve( !KU( ~xx ) @ #vk.22 )
                    next
                      case c_exp
                      by solve( !KU( ~xx ) @ #vk.23 )
                    qed
                  qed
                next
                  case c_aeadEncrypt
                  solve( !KU( sign(<
                                    <$U, 
                                     h(<$cHash0.1, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 
                                        <
                                         ($V⊕
                                          hkdfExpand(<$cAEAD0, 
                                                      h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 
                                                      'K_2e', '1'>,
                                                     hkdfExtract('emptyStr', sk))
                                         ), 
                                         (
                                          hkdfExpand(<$cAEAD0, 
                                                      h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 
                                                      'K_2e', '2'>,
                                                     hkdfExtract('emptyStr', sk))⊕
                                          sign(<
                                                <$V, h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 
                                                 pk(~ltk)>, 
                                                aeadEncrypt('emptyStr',
                                                            hkdfExpand(<$cAEAD0, 
                                                                        h(<$cHash0, 
                                                                           <'SIG', 'SIG', $cSUITE0, gx>, 
                                                                           'g'^~yy>), 
                                                                        'K_2m'>,
                                                                       hkdfExtract('emptyStr', sk)),
                                                            <$V, 
                                                             h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy
                                                               >), 
                                                             pk(~ltk)>,
                                                            $cAEAD0)
                                               >,
                                               ~ltk)
                                         )
                                        >, 
                                        'emptyStr'>), 
                                     pk(~ltk.1)>, 
                                    aeadEncrypt('emptyStr',
                                                hkdfExpand(<$cAEAD0.1, 
                                                            h(<$cHash0.1, 
                                                               h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 
                                                                  'g'^~yy>), 
                                                               <
                                                                ($V⊕
                                                                 hkdfExpand(<$cAEAD0, 
                                                                             h(<$cHash0, 
                                                                                <'SIG', 'SIG', $cSUITE0, gx>, 
                                                                                'g'^~yy>), 
                                                                             'K_2e', '1'>,
                                                                            hkdfExtract('emptyStr', sk))
                                                                ), 
                                                                (
                                                                 hkdfExpand(<$cAEAD0, 
                                                                             h(<$cHash0, 
                                                                                <'SIG', 'SIG', $cSUITE0, gx>, 
                                                                                'g'^~yy>), 
                                                                             'K_2e', '2'>,
                                                                            hkdfExtract('emptyStr', sk))⊕
                                                                 sign(<
                                                                       <$V, 
                                                                        h(<$cHash0, 
                                                                           <'SIG', 'SIG', $cSUITE0, gx>, 
                                                                           'g'^~yy>), 
                                                                        pk(~ltk)>, 
                                                                       aeadEncrypt('emptyStr',
                                                                                   hkdfExpand(<$cAEAD0, 
                                                                                               h(<$cHash0, 
                                                                                                  <'SIG', 
                                                                                                   'SIG', 
                                                                                                   $cSUITE0, 
                                                                                                   gx>, 
                                                                                                  'g'^~yy>), 
                                                                                               'K_2m'>,
                                                                                              hkdfExtract('emptyStr',
                                                                                                          sk)),
                                                                                   <$V, 
                                                                                    h(<$cHash0, 
                                                                                       <'SIG', 'SIG', 
                                                                                        $cSUITE0, gx>, 
                                                                                       'g'^~yy>), 
                                                                                    pk(~ltk)>,
                                                                                   $cAEAD0)
                                                                      >,
                                                                      ~ltk)
                                                                )
                                                               >, 
                                                               'emptyStr'>), 
                                                            'K_3m'>,
                                                           hkdfExtract('emptyStr', sk)),
                                                <$U, 
                                                 h(<$cHash0.1, 
                                                    h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy>), 
                                                    <
                                                     ($V⊕
                                                      hkdfExpand(<$cAEAD0, 
                                                                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 
                                                                     'g'^~yy>), 
                                                                  'K_2e', '1'>,
                                                                 hkdfExtract('emptyStr', sk))
                                                     ), 
                                                     (
                                                      hkdfExpand(<$cAEAD0, 
                                                                  h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 
                                                                     'g'^~yy>), 
                                                                  'K_2e', '2'>,
                                                                 hkdfExtract('emptyStr', sk))⊕
                                                      sign(<
                                                            <$V, 
                                                             h(<$cHash0, <'SIG', 'SIG', $cSUITE0, gx>, 'g'^~yy
                                                               >), 
                                                             pk(~ltk)>, 
                                                            aeadEncrypt('emptyStr',
                                                                        hkdfExpand(<$cAEAD0, 
                                                                                    h(<$cHash0, 
                                                                                       <'SIG', 'SIG', 
                                                                                        $cSUITE0, gx>, 
                                                                                       'g'^~yy>), 
                                                                                    'K_2m'>,
                                                                                   hkdfExtract('emptyStr',
                                                                                               sk)),
                                                                        <$V, 
                                                                         h(<$cHash0, 
                                                                            <'SIG', 'SIG', $cSUITE0, gx>, 
                                                                            'g'^~yy>), 
                                                                         pk(~ltk)>,
                                                                        $cAEAD0)
                                                           >,
                                                           ~ltk)
                                                     )
                                                    >, 
                                                    'emptyStr'>), 
                                                 pk(~ltk.1)>,
                                                $cAEAD0.1)
                                   >,
                                   ~ltk.1)
                         ) @ #vk.21 )
                    case c_sign
                    solve( !KU( ~ltk.1 ) @ #vk.24 )
                      case revealLTK_SIG
                      by contradiction /* from formulas */
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  qed
qed

lemma authGIYImplicitAuthGuaranteeForI:
  all-traces
  "∀ tidI u v impSk #i.
    (CommitI( tidI, u, v, impSk ) @ #i) ⇒
    ((((((∀ tidR u2 v2 #j.
           (CommitR( tidR, u2, v2, impSk ) @ #j) ⇒ ((u = u2) ∧ (v = v2))) ∧
         (¬(∃ #k. K( impSk ) @ #k))) ∧
        (¬(∃ tidR u.1 v.1 #j tidR2 u2 v2 #j2.
            ((CommitR( tidR, u.1, v.1, impSk ) @ #j) ∧
             (CommitR( tidR2, u2, v2, impSk ) @ #j2)) ∧
            (¬(#j = #j2))))) ∨
       (∃ #k. LTKRev( u ) @ #k)) ∨
      (∃ #k. LTKRev( v ) @ #k)) ∨
     (∃ #k. LTKRev( <u, v> ) @ #k))"
/*
guarded formula characterizing all counter-examples:
"∃ tidI u v impSk #i.
  (CommitI( tidI, u, v, impSk ) @ #i)
 ∧
  (((∃ tidR u2 v2 #j.
      (CommitR( tidR, u2, v2, impSk ) @ #j) ∧ ((¬(u = u2)) ∨ (¬(v = v2)))) ∨
    (∃ #k. (K( impSk ) @ #k)) ∨
    (∃ tidR u.1 v.1 #j tidR2 u2 v2 #j2.
      (CommitR( tidR, u.1, v.1, impSk ) @ #j) ∧
      (CommitR( tidR2, u2, v2, impSk ) @ #j2)
     ∧
      ¬(#j = #j2)))) ∧
  (∀ #k. (LTKRev( u ) @ #k) ⇒ ⊥) ∧
  (∀ #k. (LTKRev( v ) @ #k) ⇒ ⊥) ∧
  (∀ #k. (LTKRev( <u, v> ) @ #k) ⇒ ⊥)"
*/
by sorry

lemma authGIYImplicitAuthGuaranteeForI2:
  all-traces
  "∀ tidI u v impSk #i.
    (CommitI( tidI, u, v, impSk ) @ #i) ⇒
    ((((∀ tidR u2 v2 #j.
         (CommitR( tidR, u2, v2, impSk ) @ #j) ⇒
         ((((u = u2) ∧ (v = v2)) ∧
           (∀ tidR2 u3 v3 #j2.
             (CommitR( tidR2, u3, v3, impSk ) @ #j2) ⇒ (#j = #j2))) ∧
          (¬(∃ #k. K( impSk ) @ #k)))) ∨
       (∃ #k. LTKRev( u ) @ #k)) ∨
      (∃ #k. LTKRev( v ) @ #k)) ∨
     (∃ #k. LTKRev( <u, v> ) @ #k))"
/*
guarded formula characterizing all counter-examples:
"∃ tidI u v impSk #i.
  (CommitI( tidI, u, v, impSk ) @ #i)
 ∧
  (∃ tidR u2 v2 #j.
    (CommitR( tidR, u2, v2, impSk ) @ #j)
   ∧
    ((¬(u = u2)) ∨
     (¬(v = v2)) ∨
     (∃ tidR2 u3 v3 #j2.
       (CommitR( tidR2, u3, v3, impSk ) @ #j2) ∧ ¬(#j = #j2)) ∨
     (∃ #k. (K( impSk ) @ #k)))) ∧
  (∀ #k. (LTKRev( u ) @ #k) ⇒ ⊥) ∧
  (∀ #k. (LTKRev( v ) @ #k) ⇒ ⊥) ∧
  (∀ #k. (LTKRev( <u, v> ) @ #k) ⇒ ⊥)"
*/
by sorry

lemma secrecyPFSGIYSessionKey:
  all-traces
  "(∀ tid u v sk #i #j.
     ((K( sk ) @ #i) ∧ (CommitI( tid, u, v, sk ) @ #j)) ⇒
     (((∃ #l. (LTKRev( u ) @ #l) ∧ (#l < #j)) ∨
       (∃ #l. (LTKRev( v ) @ #l) ∧ (#l < #j))) ∨
      (∃ #l. SKRev( sk ) @ #l))) ∧
   (∀ tid u v sk #i #j.
     ((K( sk ) @ #i) ∧ (CommitR( tid, u, v, sk ) @ #j)) ⇒
     (((∃ #l. (LTKRev( u ) @ #l) ∧ (#l < #j)) ∨
       (∃ #l. (LTKRev( v ) @ #l) ∧ (#l < #j))) ∨
      (∃ #l. SKRev( sk ) @ #l)))"
/*
guarded formula characterizing all counter-examples:
"((∃ tid u v sk #i #j.
    (K( sk ) @ #i) ∧ (CommitI( tid, u, v, sk ) @ #j)
   ∧
    (∀ #l. (LTKRev( u ) @ #l) ⇒ ¬(#l < #j)) ∧
    (∀ #l. (LTKRev( v ) @ #l) ⇒ ¬(#l < #j)) ∧
    (∀ #l. (SKRev( sk ) @ #l) ⇒ ⊥)) ∨
  (∃ tid u v sk #i #j.
    (K( sk ) @ #i) ∧ (CommitR( tid, u, v, sk ) @ #j)
   ∧
    (∀ #l. (LTKRev( u ) @ #l) ⇒ ¬(#l < #j)) ∧
    (∀ #l. (LTKRev( v ) @ #l) ⇒ ¬(#l < #j)) ∧
    (∀ #l. (SKRev( sk ) @ #l) ⇒ ⊥)))"
*/
by sorry

/* All well-formedness checks were successful. */

end

==============================================================================
summary of summaries:

analyzed: TMP_edhoc_SIG_SIG.spthy

  sanityExecutableToTheEnd (exists-trace): analysis incomplete (1 steps)
  authInjAgreeGuaranteeForI (all-traces): verified (644 steps)
  authInjAgreeGuaranteeForR (all-traces): verified (43 steps)
  authGIYImplicitAuthGuaranteeForI (all-traces): analysis incomplete (1 steps)
  authGIYImplicitAuthGuaranteeForI2 (all-traces): analysis incomplete (1 steps)
  secrecyPFSGIYSessionKey (all-traces): analysis incomplete (1 steps)

==============================================================================

real	1m13,899s
user	2m59,424s
sys	0m29,887s
