maude tool: 'maude'
 checking version: 2.7.1. OK.
 checking installation: OK.
SAPIC tool: 'sapic'
Checking availablity ...  solved goal nr. 0 (directly):
    CommitI( tidI, u.1, v.2, impSk.3 ) @ #i.4
  solved goal nr. 0 (directly):
    CommitI( tidI, u.1, v.2, impSk.3 ) @ #i.4
  solved goal nr. 1 (directly):
    CommitR( tidR.5, u2.6, v2.7, impSk.3 ) @ #j.8
  solved goal nr. 0 (directly): !LTK_PSK( t.1, t.2 ) ▶₀ #i
  solved goal nr. 0 (directly): !LTK_SIG( t.1, t.2 ) ▶₀ #i
  solved goal nr. 0 (directly): !LTK_STAT( t.1, t.2 ) ▶₀ #i
  solved goal nr. 0 (directly): !PK_SIG( t.1, t.2 ) ▶₀ #i
  solved goal nr. 0 (directly): CommitI( t.1, t.2, t.3, t.4 ) ▶₀ #i
  solved goal nr. 0 (directly):
    StI1_PSK_PSK( t.1, t.2, t.3, t.4, t.5, t.6 ) ▶₀ #i
  solved goal nr. 0 (directly): !PK_STAT( t.1, t.2 ) ▶₀ #i
  solved goal nr. 0 (directly):
    StR2_PSK_PSK( t.1, t.2, t.3, t.4, t.5, t.6, t.7, t.8, t.9, t.10,
                  t.11
    ) ▶₀ #i
  solved goal nr. 0 (directly): !KU( ~t.1 ) @ #i
  solved goal nr. 2 (directly):
    !LTK_PSK( <$U.8, $V.8>, ~ltk.8 ) ▶₀ #vr.7
  solved goal nr. 2 (directly):
    !LTK_PSK( <$U.13, $V.13>, ~ltk.13 ) ▶₀ #vr.12
  solved goal nr. 0 (directly):
    !KU( aeadDecrypt(t.1, t.2, t.3, t.4) ) @ #i
  solved goal nr. 0 (directly):
    !KU( aeadEncrypt(t.1, t.2, t.3, t.4) ) @ #i
  solved goal nr. 0 (directly): !KU( decrypt(t.1, t.2, t.3) ) @ #i
  solved goal nr. 0 (directly): !KU( t.1^t.2 ) @ #i
  solved goal nr. 0 (directly): !KU( fst(t.1) ) @ #i
  solved goal nr. 0 (directly): !KU( h(t.1) ) @ #i
  solved goal nr. 4 (directly):
    !LTK_PSK( <$U.16, $V.16>, ~ltk.16 ) ▶₀ #vr.15
  solved goal nr. 0 (directly): !KU( hkdfExpand(t.1, t.2) ) @ #i
  solved goal nr. 0 (directly): !KU( hkdfExtract(t.1, t.2) ) @ #i
  solved goal nr. 0 (directly): !KU( pk(t.1) ) @ #i
  solved goal nr. 0 (directly): !KU( sign(t.1, t.2) ) @ #i
  solved goal nr. 0 (directly): !KU( snd(t.1) ) @ #i
  solved goal nr. 4 (directly):
    !LTK_PSK( <$U.10, $V.10>, ~ltk.10 ) ▶₀ #vr.9
  solved goal nr. 4 (directly):
    !LTK_PSK( <$U.10, $V.10>, ~ltk.10 ) ▶₀ #vr.9
  solved goal nr. 0 (directly): !KU( verify(t.1, t.2, t.3) ) @ #i
  solved goal nr. 4 (directly): !LTK_SIG( $A.7, ~t.1 ) ▶₀ #vr.6
  solved goal nr. 4 (directly):
    CommitI( tid.16, u.16, v.16, t.14 ) ▶₀ #vr.15
  solved goal nr. 4 (directly): !LTK_STAT( $A.7, ~t.1 ) ▶₀ #vr.6
  solved goal nr. 4 (directly):
    !LTK_PSK( <$A.7, $B.7>, ~t.1 ) ▶₀ #vr.6
  solved goal nr. 4 (directly):
    CommitI( tid.7, u.7, v.7, t.5 ) ▶₀ #vr.6
  solved goal nr. 4 (directly):
    CommitI( tid.13, u.13, v.13, t.11 ) ▶₀ #vr.12
  solved goal nr. 4 (directly):
    !LTK_PSK( <$U.10, $V.10>, ~ltk.10 ) ▶₀ #vr.9
  solved goal nr. 4 (directly):
    !LTK_PSK( <$U.10, $V.10>, ~ltk.10 ) ▶₀ #vr.9
  solved goal nr. 4 (directly):
    StI1_PSK_PSK( $U.16, ~ltk.16, $V.16, ~xx.16, m1.16, ~tid.16
    ) ▶₀ #vr.15
  solved goal nr. 4 (directly):
    CommitI( tid.7, u.7, v.7, t.5 ) ▶₀ #vr.6
  solved goal nr. 11 (directly):
    !LTK_PSK( <$U.16, $V.16>, ~ltk.16 ) ▶₀ #vr.24
  solved goal nr. 4 (directly):
    CommitI( tid.7, u.7, v.7, t.5 ) ▶₀ #vr.6
  solved goal nr. 4 (directly):
    CommitI( tid.16, u.16, v.16, t.14 ) ▶₀ #vr.15
  solved goal nr. 4 (directly):
    CommitI( tid.10, u.10, v.10, t.8 ) ▶₀ #vr.9
  solved goal nr. 4 (directly):
    CommitI( tid.7, u.7, v.7, t.5 ) ▶₀ #vr.6
  solved goal nr. 4 (directly):
    !LTK_PSK( <$U.10, $V.10>, ~ltk.10 ) ▶₀ #vr.9
  solved goal nr. 4 (directly):
    CommitI( tid.10, u.10, v.10, t.8 ) ▶₀ #vr.9
  solved goal nr. 4 (directly):
    CommitI( tid.7, u.7, v.7, t.5 ) ▶₀ #vr.6
  solved goal nr. 4 (directly):
    CommitI( tid.13, u.13, v.13, t.11 ) ▶₀ #vr.12
  solved goal nr. 4 (directly):
    CommitI( tid.10, u.10, v.10, t.8 ) ▶₀ #vr.9
  solved goal nr. 24 (precomputed):
    !KU( h(<$cHash0.10, 
            <'PSK', 'PSK', $cSUITE0.10, gx.10, $U.10, $V.10>, 'g'^~yy.10>)
    ) @ #vk.31
  solved goal nr. 4 (directly):
    !LTK_PSK( <$U.10, $V.10>, ~ltk.10 ) ▶₀ #vr.9
  solved goal nr. 4 (directly):
    StI1_PSK_PSK( $U.10, ~ltk.10, $V.10, ~xx.10, m1.10, ~tid.10
    ) ▶₀ #vr.9
  solved goal nr. 19 (directly):
    !LTK_PSK( <$U.10, $V.10>, ~ltk.10 ) ▶₀ #vr.23
  solved goal nr. 4 (directly):
    StI1_PSK_PSK( $U.10, ~ltk.10, $V.10, ~xx.10, m1.10, ~tid.10
    ) ▶₀ #vr.9
  solved goal nr. 16 (directly):
    !LTK_PSK( <$U.10, $V.10>, ~ltk.10 ) ▶₀ #vr.22
  solved goal nr. 4 (directly):
    CommitI( tid.10, u.10, v.10, t.8 ) ▶₀ #vr.9
  solved goal nr. 16 (precomputed):
    !KU( h(<$cHash0.10, 
            h(<$cHash0.10, 
               <'PSK', 'PSK', $cSUITE0.24, 'g'^~xx.10, $U.10, $V.10>, gy.10>), 
            aeadEncrypt('emptyStr',
                        hkdfExpand(<$cAEAD0.10, 
                                    h(<$cHash0.10, 
                                       <'PSK', 'PSK', $cSUITE0.24, 'g'^~xx.10, $U.10, $V.10>, gy.10
                                      >), 
                                    'K_2ae'>,
                                   hkdfExtract(~ltk.10, z.10)),
                        h(<$cHash0.10, 
                           <'PSK', 'PSK', $cSUITE0.24, 'g'^~xx.10, $U.10, $V.10>, gy.10>),
                        $cAEAD0.10), 
            'emptyStr'>)
    ) @ #vk.21
  solved goal nr. 25 (precomputed):
    !KU( h(<$cHash0.10, 
            <'PSK', 'PSK', $cSUITE0.24, 'g'^~xx.10, $U.10, $V.10>, gy.10>)
    ) @ #vk.39
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0:  (∃ tidR u2 v2 #j.   (CommitR( tidR, u2, v2, impSk ) @ #j)  ∧   ((¬($U = u2)) ∨ (¬($V = v2))))  ∥ (∃ #k. (K( impSk ) @ #k))  ∥ (∃ tidR u v #j tidR2 u2 v2 #j2.   (CommitR( tidR, u, v, impSk ) @ #j) ∧   (CommitR( tidR2, u2, v2, impSk ) @ #j2)  ∧   ¬(#j = #j2))
1: StI1_PSK_PSK( $U, ~ltk, $V, ~xx, m1, ~tid ) ▶₀ #i
2: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0, h(<$cHash0, m1, gy>), 'K_2ae'>,                            hkdfExtract(~ltk, impSk)),                 h(<$cHash0, m1, gy>), $cAEAD0)) @ #vk.2
3: splitEqs(0)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 1 (directly):
     (∃ tidR u2 v2 #j.
       (CommitR( tidR, u2, v2, impSk ) @ #j)
      ∧
       ((¬($U = u2)) ∨ (¬($V = v2))))  ∥
     (∃ #k. (K( impSk ) @ #k))  ∥
     (∃ tidR u v #j tidR2 u2 v2 #j2.
       (CommitR( tidR, u, v, impSk ) @ #j) ∧
       (CommitR( tidR2, u2, v2, impSk ) @ #j2)
      ∧
       ¬(#j = #j2))
  solved goal nr. 7 (directly):
    CommitR( tidR.3, u2.4, v2.5, impSk ) @ #j.6
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0:  (¬($U = $U.1))  ∥ (¬($V = $V.1))  ∥ (∃ tidR2 u3 v3 #j2.   (CommitR( tidR2, u3, v3, impSk ) @ #j2) ∧ ¬(#j = #j2))  ∥ (∃ #k. (K( impSk ) @ #k))
1: StI1_PSK_PSK( $U, ~ltk, $V, ~xx, m1, ~tid ) ▶₀ #i
2: StR2_PSK_PSK( $U.1, $V.1, ~ltk.1, ~yy, prk_3e2m, TH_2,              CIPHERTEXT_2, impSk, ~tid.1, m1.1, m2) ▶₀ #j
3: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0, h(<$cHash0, m1, gy>), 'K_2ae'>,                            hkdfExtract(~ltk, impSk)),                 h(<$cHash0, m1, gy>), $cAEAD0)) @ #vk.2
4: splitEqs(0)
5: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1, TH_2, CIPHERTEXT_2, 'emptyStr'>), 'K_3ae'>,                            prk_3e2m),                 h(<$cHash0.1, TH_2, CIPHERTEXT_2, 'emptyStr'>), $cAEAD0.1)) @ #vk.5

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 2 (directly):
     (¬($U = $U.1))  ∥ (¬($V = $V.1))  ∥
     (∃ tidR2 u3 v3 #j2.
       (CommitR( tidR2, u3, v3, impSk ) @ #j2) ∧ ¬(#j = #j2))  ∥
     (∃ #k. (K( impSk ) @ #k))
  solved goal nr. 13 (directly):
    CommitR( tidR2.6, u3.7, v3.8, impSk ) @ #j2.9
  solved goal nr. 7 (directly): K( impSk ) @ #k.3
  solved goal nr. 13 (directly): K( impSk ) @ #k.6
  solved goal nr. 7 (directly):
    CommitR( tidR.3, u.4, v.5, impSk ) @ #j.6
  solved goal nr. 8 (directly):
    CommitR( tidR2.7, u2.8, v2.9, impSk ) @ #j2.10
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: StI1_PSK_PSK( $U, ~ltk, $V, ~xx, m1, ~tid ) ▶₀ #i
1: StR2_PSK_PSK( $U.1, $V.1, ~ltk.1, ~yy, prk_3e2m, TH_2,              CIPHERTEXT_2, impSk, ~tid.1, m1.1, m2) ▶₀ #j
2: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0, h(<$cHash0, m1, gy>), 'K_2ae'>,                            hkdfExtract(~ltk, impSk)),                 h(<$cHash0, m1, gy>), $cAEAD0)) @ #vk.2
3: splitEqs(0)
4: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1, TH_2, CIPHERTEXT_2, 'emptyStr'>), 'K_3ae'>,                            prk_3e2m),                 h(<$cHash0.1, TH_2, CIPHERTEXT_2, 'emptyStr'>), $cAEAD0.1)) @ #vk.5

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 4 (precomputed):
    StI1_PSK_PSK( $U, ~ltk, $V, ~xx, m1, ~tid ) ▶₀ #i
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: StI1_PSK_PSK( $U, ~ltk, $V, ~xx, m1, ~tid ) ▶₀ #i
1: StR2_PSK_PSK( $U.1, $V.1, ~ltk.1, ~yy, prk_3e2m, TH_2,              CIPHERTEXT_2, impSk, ~tid.1, m1.1, m2) ▶₀ #j
2: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0, h(<$cHash0, m1, gy>), 'K_2ae'>,                            hkdfExtract(~ltk, impSk)),                 h(<$cHash0, m1, gy>), $cAEAD0)) @ #vk.2
3: splitEqs(0)
4: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1, TH_2, CIPHERTEXT_2, 'emptyStr'>), 'K_3ae'>,                            prk_3e2m),                 h(<$cHash0.1, TH_2, CIPHERTEXT_2, 'emptyStr'>), $cAEAD0.1)) @ #vk.5

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 4 (precomputed):
    StI1_PSK_PSK( $U, ~ltk, $V, ~xx, m1, ~tid ) ▶₀ #i
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: StI1_PSK_PSK( $U, ~ltk, $V, ~xx, m1, ~tid ) ▶₀ #i
1: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0, h(<$cHash0, m1, gy>), 'K_2ae'>,                            hkdfExtract(~ltk, impSk)),                 h(<$cHash0, m1, gy>), $cAEAD0)) @ #vk.2
2: splitEqs(0)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 3 (precomputed):
    StI1_PSK_PSK( $U, ~ltk, $V, ~xx, m1, ~tid ) ▶₀ #i
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0:  (#j < #j2)  ∥ (#j2 < #j)
1: StI1_PSK_PSK( $U, ~ltk, $V, ~xx, m1, ~tid ) ▶₀ #i
2: StR2_PSK_PSK( $U.1, $V.1, ~ltk.1, ~yy, prk_3e2m, TH_2,              CIPHERTEXT_2, impSk, ~tid.1, m1.1, m2) ▶₀ #j
3: StR2_PSK_PSK( $U.2, $V.2, ~ltk.2, ~yy.1, prk_3e2m.1, TH_2.1,              CIPHERTEXT_2.1, impSk, ~tid.2, m1.2, m2.1) ▶₀ #j2
4: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0, h(<$cHash0, m1, gy>), 'K_2ae'>,                            hkdfExtract(~ltk, impSk)),                 h(<$cHash0, m1, gy>), $cAEAD0)) @ #vk.2
5: splitEqs(0)
6: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1, TH_2, CIPHERTEXT_2, 'emptyStr'>), 'K_3ae'>,                            prk_3e2m),                 h(<$cHash0.1, TH_2, CIPHERTEXT_2, 'emptyStr'>), $cAEAD0.1)) @ #vk.6
7: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.2,                              h(<$cHash0.2, TH_2.1, CIPHERTEXT_2.1, 'emptyStr'>), 'K_3ae'>,                            prk_3e2m.1),                 h(<$cHash0.2, TH_2.1, CIPHERTEXT_2.1, 'emptyStr'>), $cAEAD0.2)) @ #vk.7

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 14 (directly): (#j < #j2)  ∥ (#j2 < #j)
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: StI1_PSK_PSK( $U, ~ltk, $V, ~xx, m1, ~tid ) ▶₀ #i
1: StR2_PSK_PSK( $U.1, $V.1, ~ltk.1, ~yy, prk_3e2m, TH_2,              CIPHERTEXT_2, impSk, ~tid.1, m1.1, m2) ▶₀ #j
2: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0, h(<$cHash0, m1, gy>), 'K_2ae'>,                            hkdfExtract(~ltk, impSk)),                 h(<$cHash0, m1, gy>), $cAEAD0)) @ #vk.2
3: splitEqs(0)
4: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1, TH_2, CIPHERTEXT_2, 'emptyStr'>), 'K_3ae'>,                            prk_3e2m),                 h(<$cHash0.1, TH_2, CIPHERTEXT_2, 'emptyStr'>), $cAEAD0.1)) @ #vk.5

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 4 (precomputed):
    StI1_PSK_PSK( $U, ~ltk, $V, ~xx, m1, ~tid ) ▶₀ #i
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0:  (¬($U = $U.1))  ∥ (¬($V = $V.1))
1: StI1_PSK_PSK( $U, ~ltk, $V, ~xx, m1, ~tid ) ▶₀ #i
2: StR2_PSK_PSK( $U.1, $V.1, ~ltk.1, ~yy, prk_3e2m, TH_2,              CIPHERTEXT_2, impSk, ~tid.1, m1.1, m2) ▶₀ #j
3: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0, h(<$cHash0, m1, gy>), 'K_2ae'>,                            hkdfExtract(~ltk, impSk)),                 h(<$cHash0, m1, gy>), $cAEAD0)) @ #vk.2
4: splitEqs(0)
5: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1, TH_2, CIPHERTEXT_2, 'emptyStr'>), 'K_3ae'>,                            prk_3e2m),                 h(<$cHash0.1, TH_2, CIPHERTEXT_2, 'emptyStr'>), $cAEAD0.1)) @ #vk.5

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 8 (directly): (¬($U = $U.1))  ∥ (¬($V = $V.1))
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0:  (#j < #j2)  ∥ (#j2 < #j)
1: StI1_PSK_PSK( $U, ~ltk, $V, ~xx, m1, ~tid ) ▶₀ #i
2: StR2_PSK_PSK( $U.1, $V.1, ~ltk.1, ~yy, prk_3e2m, TH_2,              CIPHERTEXT_2, impSk, ~tid.1, m1.1, m2) ▶₀ #j
3: StR2_PSK_PSK( $U.2, $V.2, ~ltk.2, ~yy.1, prk_3e2m.1, TH_2.1,              CIPHERTEXT_2.1, impSk, ~tid.2, m1.2, m2.1) ▶₀ #j2
4: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0, h(<$cHash0, m1, gy>), 'K_2ae'>,                            hkdfExtract(~ltk, impSk)),                 h(<$cHash0, m1, gy>), $cAEAD0)) @ #vk.2
5: splitEqs(0)
6: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1, TH_2, CIPHERTEXT_2, 'emptyStr'>), 'K_3ae'>,                            prk_3e2m),                 h(<$cHash0.1, TH_2, CIPHERTEXT_2, 'emptyStr'>), $cAEAD0.1)) @ #vk.6
7: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.2,                              h(<$cHash0.2, TH_2.1, CIPHERTEXT_2.1, 'emptyStr'>), 'K_3ae'>,                            prk_3e2m.1),                 h(<$cHash0.2, TH_2.1, CIPHERTEXT_2.1, 'emptyStr'>), $cAEAD0.2)) @ #vk.7

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 9 (directly): (#j < #j2)  ∥ (#j2 < #j)
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: StR2_PSK_PSK( $U.1, $V.1, ~ltk.1, ~yy, prk_3e2m, TH_2,              CIPHERTEXT_2, impSk, ~tid.1, m1, m2) ▶₀ #j
1: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0,                              h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, gy>),                              'K_2ae'>,                            hkdfExtract(~ltk, impSk)),                 h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, gy>),                 $cAEAD0)) @ #vk.2
2: splitEqs(0)
3: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1, TH_2, CIPHERTEXT_2, 'emptyStr'>), 'K_3ae'>,                            prk_3e2m),                 h(<$cHash0.1, TH_2, CIPHERTEXT_2, 'emptyStr'>), $cAEAD0.1)) @ #vk.5

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 9 (precomputed):
    StR2_PSK_PSK( $U.1, $V.1, ~ltk.1, ~yy, prk_3e2m, TH_2,
                  CIPHERTEXT_2, impSk, ~tid.1, m1, m2
    ) ▶₀ #j
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: StI1_PSK_PSK( $U, ~ltk, $V, ~xx, m1, ~tid ) ▶₀ #i
1: StR2_PSK_PSK( $U.1, $V.1, ~ltk.1, ~yy, prk_3e2m, TH_2,              CIPHERTEXT_2, impSk, ~tid.1, m1.1, m2) ▶₀ #j
2: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0, h(<$cHash0, m1, gy>), 'K_2ae'>,                            hkdfExtract(~ltk, impSk)),                 h(<$cHash0, m1, gy>), $cAEAD0)) @ #vk.2
3: splitEqs(0)
4: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1, TH_2, CIPHERTEXT_2, 'emptyStr'>), 'K_3ae'>,                            prk_3e2m),                 h(<$cHash0.1, TH_2, CIPHERTEXT_2, 'emptyStr'>), $cAEAD0.1)) @ #vk.5

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: StI1_PSK_PSK( $U, ~ltk, $V, ~xx, m1, ~tid ) ▶₀ #i
1: StR2_PSK_PSK( $U.1, $V.1, ~ltk.1, ~yy, prk_3e2m, TH_2,              CIPHERTEXT_2, impSk, ~tid.1, m1.1, m2) ▶₀ #j
2: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0, h(<$cHash0, m1, gy>), 'K_2ae'>,                            hkdfExtract(~ltk, impSk)),                 h(<$cHash0, m1, gy>), $cAEAD0)) @ #vk.2
3: splitEqs(0)
4: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1, TH_2, CIPHERTEXT_2, 'emptyStr'>), 'K_3ae'>,                            prk_3e2m),                 h(<$cHash0.1, TH_2, CIPHERTEXT_2, 'emptyStr'>), $cAEAD0.1)) @ #vk.5

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 3 (precomputed):
    StI1_PSK_PSK( $U, ~ltk, $V, ~xx, m1, ~tid ) ▶₀ #i
  solved goal nr. 3 (precomputed):
    StI1_PSK_PSK( $U, ~ltk, $V, ~xx, m1, ~tid ) ▶₀ #i
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0,                              h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, gy>),                              'K_2ae'>,                            hkdfExtract(~ltk, impSk)),                 h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, gy>),                 $cAEAD0)) @ #vk.2
1: splitEqs(0)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 6 (precomputed):
    !KU( aeadEncrypt('emptyStr',
                     hkdfExpand(<$cAEAD0, 
                                 h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, gy>), 
                                 'K_2ae'>,
                                hkdfExtract(~ltk, impSk)),
                     h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, gy>),
                     $cAEAD0)
    ) @ #vk.2
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: StR2_PSK_PSK( $U.1, $V.1, ~ltk.1, ~yy, prk_3e2m, TH_2,              CIPHERTEXT_2, impSk, ~tid.1, m1, m2) ▶₀ #j
1: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0,                              h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, gy>),                              'K_2ae'>,                            hkdfExtract(~ltk, impSk)),                 h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, gy>),                 $cAEAD0)) @ #vk.2
2: splitEqs(0)
3: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1, TH_2, CIPHERTEXT_2, 'emptyStr'>), 'K_3ae'>,                            prk_3e2m),                 h(<$cHash0.1, TH_2, CIPHERTEXT_2, 'emptyStr'>), $cAEAD0.1)) @ #vk.5

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 9 (precomputed):
    StR2_PSK_PSK( $U.1, $V.1, ~ltk.1, ~yy, prk_3e2m, TH_2,
                  CIPHERTEXT_2, impSk, ~tid.1, m1, m2
    ) ▶₀ #j
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: StI1_PSK_PSK( $U, ~ltk, $V, ~xx, m1, ~tid ) ▶₀ #i
1: StR2_PSK_PSK( $U.1, $V.1, ~ltk.1, ~yy, prk_3e2m, TH_2,              CIPHERTEXT_2, impSk, ~tid.1, m1.1, m2) ▶₀ #j
2: StR2_PSK_PSK( $U.2, $V.2, ~ltk.2, ~yy.1, prk_3e2m.1, TH_2.1,              CIPHERTEXT_2.1, impSk, ~tid.2, m1.2, m2.1) ▶₀ #j2
3: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0, h(<$cHash0, m1, gy>), 'K_2ae'>,                            hkdfExtract(~ltk, impSk)),                 h(<$cHash0, m1, gy>), $cAEAD0)) @ #vk.2
4: splitEqs(0)
5: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1, TH_2, CIPHERTEXT_2, 'emptyStr'>), 'K_3ae'>,                            prk_3e2m),                 h(<$cHash0.1, TH_2, CIPHERTEXT_2, 'emptyStr'>), $cAEAD0.1)) @ #vk.6
6: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.2,                              h(<$cHash0.2, TH_2.1, CIPHERTEXT_2.1, 'emptyStr'>), 'K_3ae'>,                            prk_3e2m.1),                 h(<$cHash0.2, TH_2.1, CIPHERTEXT_2.1, 'emptyStr'>), $cAEAD0.2)) @ #vk.7

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 3 (precomputed):
    StI1_PSK_PSK( $U, ~ltk, $V, ~xx, m1, ~tid ) ▶₀ #i
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: StI1_PSK_PSK( $U, ~ltk, $V, ~xx, m1, ~tid ) ▶₀ #i
1: StR2_PSK_PSK( $U.1, $V.1, ~ltk.1, ~yy, prk_3e2m, TH_2,              CIPHERTEXT_2, impSk, ~tid.1, m1.1, m2) ▶₀ #j
2: StR2_PSK_PSK( $U.2, $V.2, ~ltk.2, ~yy.1, prk_3e2m.1, TH_2.1,              CIPHERTEXT_2.1, impSk, ~tid.2, m1.2, m2.1) ▶₀ #j2
3: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0, h(<$cHash0, m1, gy>), 'K_2ae'>,                            hkdfExtract(~ltk, impSk)),                 h(<$cHash0, m1, gy>), $cAEAD0)) @ #vk.2
4: splitEqs(0)
5: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1, TH_2, CIPHERTEXT_2, 'emptyStr'>), 'K_3ae'>,                            prk_3e2m),                 h(<$cHash0.1, TH_2, CIPHERTEXT_2, 'emptyStr'>), $cAEAD0.1)) @ #vk.6
6: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.2,                              h(<$cHash0.2, TH_2.1, CIPHERTEXT_2.1, 'emptyStr'>), 'K_3ae'>,                            prk_3e2m.1),                 h(<$cHash0.2, TH_2.1, CIPHERTEXT_2.1, 'emptyStr'>), $cAEAD0.2)) @ #vk.7

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 3 (precomputed):
    StI1_PSK_PSK( $U, ~ltk, $V, ~xx, m1, ~tid ) ▶₀ #i
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: StI1_PSK_PSK( $U, ~ltk, $V, ~xx, m1, ~tid ) ▶₀ #i
1: StR2_PSK_PSK( $U.1, $V.1, ~ltk.1, ~yy, prk_3e2m, TH_2,              CIPHERTEXT_2, impSk, ~tid.1, m1.1, m2) ▶₀ #j
2: StR2_PSK_PSK( $U.2, $V.2, ~ltk.2, ~yy.1, prk_3e2m.1, TH_2.1,              CIPHERTEXT_2.1, impSk, ~tid.2, m1.2, m2.1) ▶₀ #j2
3: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0, h(<$cHash0, m1, gy>), 'K_2ae'>,                            hkdfExtract(~ltk, impSk)),                 h(<$cHash0, m1, gy>), $cAEAD0)) @ #vk.2
4: splitEqs(0)
5: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1, TH_2, CIPHERTEXT_2, 'emptyStr'>), 'K_3ae'>,                            prk_3e2m),                 h(<$cHash0.1, TH_2, CIPHERTEXT_2, 'emptyStr'>), $cAEAD0.1)) @ #vk.6
6: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.2,                              h(<$cHash0.2, TH_2.1, CIPHERTEXT_2.1, 'emptyStr'>), 'K_3ae'>,                            prk_3e2m.1),                 h(<$cHash0.2, TH_2.1, CIPHERTEXT_2.1, 'emptyStr'>), $cAEAD0.2)) @ #vk.7

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 4 (precomputed):
    StI1_PSK_PSK( $U, ~ltk, $V, ~xx, m1, ~tid ) ▶₀ #i
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: StI1_PSK_PSK( $U, ~ltk, $V, ~xx, m1, ~tid ) ▶₀ #i
1: StR2_PSK_PSK( $U.1, $V.1, ~ltk.1, ~yy, prk_3e2m, TH_2,              CIPHERTEXT_2, impSk, ~tid.1, m1.1, m2) ▶₀ #j
2: StR2_PSK_PSK( $U.2, $V.2, ~ltk.2, ~yy.1, prk_3e2m.1, TH_2.1,              CIPHERTEXT_2.1, impSk, ~tid.2, m1.2, m2.1) ▶₀ #j2
3: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0, h(<$cHash0, m1, gy>), 'K_2ae'>,                            hkdfExtract(~ltk, impSk)),                 h(<$cHash0, m1, gy>), $cAEAD0)) @ #vk.2
4: splitEqs(0)
5: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1, TH_2, CIPHERTEXT_2, 'emptyStr'>), 'K_3ae'>,                            prk_3e2m),                 h(<$cHash0.1, TH_2, CIPHERTEXT_2, 'emptyStr'>), $cAEAD0.1)) @ #vk.6
6: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.2,                              h(<$cHash0.2, TH_2.1, CIPHERTEXT_2.1, 'emptyStr'>), 'K_3ae'>,                            prk_3e2m.1),                 h(<$cHash0.2, TH_2.1, CIPHERTEXT_2.1, 'emptyStr'>), $cAEAD0.2)) @ #vk.7

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 4 (precomputed):
    StI1_PSK_PSK( $U, ~ltk, $V, ~xx, m1, ~tid ) ▶₀ #i
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: StR2_PSK_PSK( $U.1, $V.1, ~ltk.1, ~yy, prk_3e2m, TH_2,              CIPHERTEXT_2, impSk, ~tid.1, m1, m2) ▶₀ #j
1: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0,                              h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, gy>),                              'K_2ae'>,                            hkdfExtract(~ltk, impSk)),                 h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, gy>),                 $cAEAD0)) @ #vk.2
2: splitEqs(0)
3: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1, TH_2, CIPHERTEXT_2, 'emptyStr'>), 'K_3ae'>,                            prk_3e2m),                 h(<$cHash0.1, TH_2, CIPHERTEXT_2, 'emptyStr'>), $cAEAD0.1)) @ #vk.5

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 10 (precomputed):
    StR2_PSK_PSK( $U.1, $V.1, ~ltk.1, ~yy, prk_3e2m, TH_2,
                  CIPHERTEXT_2, impSk, ~tid.1, m1, m2
    ) ▶₀ #j
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: StR2_PSK_PSK( $U.1, $V.1, ~ltk.1, ~yy, prk_3e2m, TH_2,              CIPHERTEXT_2, impSk, ~tid.1, m1, m2) ▶₀ #j
1: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0,                              h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, gy>),                              'K_2ae'>,                            hkdfExtract(~ltk, impSk)),                 h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, gy>),                 $cAEAD0)) @ #vk.2
2: splitEqs(0)
3: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1, TH_2, CIPHERTEXT_2, 'emptyStr'>), 'K_3ae'>,                            prk_3e2m),                 h(<$cHash0.1, TH_2, CIPHERTEXT_2, 'emptyStr'>), $cAEAD0.1)) @ #vk.5

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 9 (precomputed):
    StR2_PSK_PSK( $U.1, $V.1, ~ltk.1, ~yy, prk_3e2m, TH_2,
                  CIPHERTEXT_2, impSk, ~tid.1, m1, m2
    ) ▶₀ #j
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: StR2_PSK_PSK( $U.1, $V.1, ~ltk.1, ~yy, prk_3e2m, TH_2,              CIPHERTEXT_2, impSk, ~tid.1, m1, m2) ▶₀ #j
1: StR2_PSK_PSK( $U.2, $V.2, ~ltk.2, ~yy.1, prk_3e2m.1, TH_2.1,              CIPHERTEXT_2.1, impSk, ~tid.2, m1.1, m2.1) ▶₀ #j2
2: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0,                              h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, gy>),                              'K_2ae'>,                            hkdfExtract(~ltk, impSk)),                 h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, gy>),                 $cAEAD0)) @ #vk.2
3: splitEqs(0)
4: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1, TH_2, CIPHERTEXT_2, 'emptyStr'>), 'K_3ae'>,                            prk_3e2m),                 h(<$cHash0.1, TH_2, CIPHERTEXT_2, 'emptyStr'>), $cAEAD0.1)) @ #vk.6
5: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.2,                              h(<$cHash0.2, TH_2.1, CIPHERTEXT_2.1, 'emptyStr'>), 'K_3ae'>,                            prk_3e2m.1),                 h(<$cHash0.2, TH_2.1, CIPHERTEXT_2.1, 'emptyStr'>), $cAEAD0.2)) @ #vk.7

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 9 (precomputed):
    StR2_PSK_PSK( $U.1, $V.1, ~ltk.1, ~yy, prk_3e2m, TH_2,
                  CIPHERTEXT_2, impSk, ~tid.1, m1, m2
    ) ▶₀ #j
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0,                              h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, gy>),                              'K_2ae'>,                            hkdfExtract(~ltk, impSk)),                 h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, gy>),                 $cAEAD0)) @ #vk.2
1: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.2,                              h(<$cHash0.2,                                 h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                  >),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0.1,                                                         h(<$cHash0.1,                                                            <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1                                                           >,                                                            'g'^~yy>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk.1, impSk)),                                            h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                              >),                                            $cAEAD0.1),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk.1, impSk)),                 h(<$cHash0.2,                     h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                      >),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                              >),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, impSk)),                                h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                  >),                                $cAEAD0.1),                     'emptyStr'>),                 $cAEAD0.2)) @ #vk.5
2: splitEqs(0)
3: splitEqs(2)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 6 (precomputed):
    !KU( aeadEncrypt('emptyStr',
                     hkdfExpand(<$cAEAD0, 
                                 h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, gy>), 
                                 'K_2ae'>,
                                hkdfExtract(~ltk, impSk)),
                     h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, gy>),
                     $cAEAD0)
    ) @ #vk.2
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0,                              h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, gy>),                              'K_2ae'>,                            hkdfExtract(~ltk, impSk)),                 h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, gy>),                 $cAEAD0)) @ #vk.2
1: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.2,                              h(<$cHash0.2,                                 h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                  >),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0.1,                                                         h(<$cHash0.1,                                                            <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1                                                           >,                                                            'g'^~yy>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk.1, impSk)),                                            h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                              >),                                            $cAEAD0.1),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk.1, impSk)),                 h(<$cHash0.2,                     h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                      >),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                              >),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, impSk)),                                h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                  >),                                $cAEAD0.1),                     'emptyStr'>),                 $cAEAD0.2)) @ #vk.5
2: splitEqs(0)
3: splitEqs(2)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 7 (precomputed):
    !KU( aeadEncrypt('emptyStr',
                     hkdfExpand(<$cAEAD0, 
                                 h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, gy>), 
                                 'K_2ae'>,
                                hkdfExtract(~ltk, impSk)),
                     h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, gy>),
                     $cAEAD0)
    ) @ #vk.2
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, gy>)) @ #vk.17
1: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.2,                              h(<$cHash0.2,                                 h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                  >),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0.1,                                                         h(<$cHash0.1,                                                            <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1                                                           >,                                                            'g'^~yy>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk.1, impSk)),                                            h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                              >),                                            $cAEAD0.1),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk.1, impSk)),                 h(<$cHash0.2,                     h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                      >),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                              >),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, impSk)),                                h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                  >),                                $cAEAD0.1),                     'emptyStr'>),                 $cAEAD0.2)) @ #vk.5
2: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, gy>),                  'K_2ae'>,                hkdfExtract(~ltk, impSk))) @ #vk.16
3: splitEqs(0)
4: splitEqs(2)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 32 (precomputed):
    !KU( h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, gy>)
    ) @ #vk.17
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: splitEqs(2)
1: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.2,                              h(<$cHash0.2,                                 h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                                    'g'^~yy.1>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0.1,                                                         h(<$cHash0.1,                                                            <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1,                                                             $V.1>,                                                            'g'^~yy.1>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                            h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                                                'g'^~yy.1>),                                            $cAEAD0.1),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.2,                     h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                 $cAEAD0.2)) @ #vk.5
2: !KU( 'g'^x ) @ #vk.14
3: !KU( 'g'^~xx ) @ #vk.21
4: !KU( 'g'^~yy ) @ #vk.2

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 28 (directly): splitEqs(2)
  simplified formula:
      "¬($U = $U)"
    to
      "⊥"
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, gy>)) @ #vk.17
1: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.2,                              h(<$cHash0.2,                                 h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                  >),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0.1,                                                         h(<$cHash0.1,                                                            <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1                                                           >,                                                            'g'^~yy>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk.1, impSk)),                                            h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                              >),                                            $cAEAD0.1),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk.1, impSk)),                 h(<$cHash0.2,                     h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                      >),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                              >),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, impSk)),                                h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                  >),                                $cAEAD0.1),                     'emptyStr'>),                 $cAEAD0.2)) @ #vk.5
2: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, gy>),                  'K_2ae'>,                hkdfExtract(~ltk, impSk))) @ #vk.16
3: splitEqs(0)
4: splitEqs(2)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 31 (precomputed):
    !KU( h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, gy>)
    ) @ #vk.17
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: splitEqs(2)
1: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.2,                              h(<$cHash0.2,                                 h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                                    'g'^~yy.1>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0.1,                                                         h(<$cHash0.1,                                                            <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1,                                                             $V.1>,                                                            'g'^~yy.1>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                            h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                                                'g'^~yy.1>),                                            $cAEAD0.1),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.2,                     h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                 $cAEAD0.2)) @ #vk.5
2: !KU( 'g'^x ) @ #vk.14
3: !KU( 'g'^~xx ) @ #vk.21
4: !KU( 'g'^~yy ) @ #vk.2

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 27 (directly): splitEqs(2)
  simplified formula:
      "¬($U = $U)"
    to
      "⊥"
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( 'g'^(~xx*~yy*inv(~yy.1)) ) @ #vk.14
1: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.2,                              h(<$cHash0.2,                                 h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0.1,                                                         h(<$cHash0.1,                                                            <'PSK', 'PSK', $cSUITE0.1,                                                             'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                                            'g'^~yy.1>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                            h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                            $cAEAD0.1),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                 $cAEAD0.2)) @ #vk.5
2: !KU( 'g'^~xx ) @ #vk.21
3: !KU( 'g'^~yy ) @ #vk.2

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 42 (precomputed):
    !KU( 'g'^(~xx*~yy*inv(~yy.1)) ) @ #vk.14
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( 'g'^(~xx*~yy*inv(~yy.1)) ) @ #vk.14
1: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.2,                              h(<$cHash0.2,                                 h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0.1,                                                         h(<$cHash0.1,                                                            <'PSK', 'PSK', $cSUITE0.1,                                                             'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                                            'g'^~yy.1>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                            h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                            $cAEAD0.1),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                 $cAEAD0.2)) @ #vk.5
2: !KU( 'g'^~xx ) @ #vk.21
3: !KU( 'g'^~yy ) @ #vk.2

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 41 (precomputed):
    !KU( 'g'^(~xx*~yy*inv(~yy.1)) ) @ #vk.14
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.2,                              h(<$cHash0.2,                                 h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                  >),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0.1,                                                         h(<$cHash0.1,                                                            <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1                                                           >,                                                            'g'^~yy>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk.1, impSk)),                                            h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                              >),                                            $cAEAD0.1),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk.1, impSk)),                 h(<$cHash0.2,                     h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                      >),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                              >),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, impSk)),                                h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                  >),                                $cAEAD0.1),                     'emptyStr'>),                 $cAEAD0.2)) @ #vk.7
1: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, gy>),                  'K_2ae'>,                hkdfExtract(~ltk, impSk))) @ #vk.20
2: splitEqs(0)
3: splitEqs(2)
4: !KU( 'g'^~xx ) @ #vk.27

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 13 (precomputed):
    !KU( aeadEncrypt('emptyStr',
                     hkdfExpand(<$cAEAD0.2, 
                                 h(<$cHash0.2, 
                                    h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 
                                       'g'^~yy>), 
                                    aeadEncrypt('emptyStr',
                                                hkdfExpand(<$cAEAD0.1, 
                                                            h(<$cHash0.1, 
                                                               <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, 
                                                                $V.1>, 
                                                               'g'^~yy>), 
                                                            'K_2ae'>,
                                                           hkdfExtract(~ltk.1, impSk)),
                                                h(<$cHash0.1, 
                                                   <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 
                                                   'g'^~yy>),
                                                $cAEAD0.1), 
                                    'emptyStr'>), 
                                 'K_3ae'>,
                                hkdfExtract(~ltk.1, impSk)),
                     h(<$cHash0.2, 
                        h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy
                          >), 
                        aeadEncrypt('emptyStr',
                                    hkdfExpand(<$cAEAD0.1, 
                                                h(<$cHash0.1, 
                                                   <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 
                                                   'g'^~yy>), 
                                                'K_2ae'>,
                                               hkdfExtract(~ltk.1, impSk)),
                                    h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 
                                       'g'^~yy>),
                                    $cAEAD0.1), 
                        'emptyStr'>),
                     $cAEAD0.2)
    ) @ #vk.7
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.26
1: !KU( ~yy.1 ) @ #vk.28
2: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.2,                              h(<$cHash0.2,                                 h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0.1,                                                         h(<$cHash0.1,                                                            <'PSK', 'PSK', $cSUITE0.1,                                                             'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                                            'g'^~yy.1>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                            h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                            $cAEAD0.1),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                 $cAEAD0.2)) @ #vk.6
3: !KU( 'g'^~xx ) @ #vk.21
4: !KU( 'g'^~yy ) @ #vk.3

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 54 (precomputed): !KU( ~xx ) @ #vk.26
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.27
1: !KU( ~yy ) @ #vk.28
2: !KU( ~yy.1 ) @ #vk.30
3: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.2,                              h(<$cHash0.2,                                 h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0.1,                                                         h(<$cHash0.1,                                                            <'PSK', 'PSK', $cSUITE0.1,                                                             'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                                            'g'^~yy.1>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                            h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                            $cAEAD0.1),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                 $cAEAD0.2)) @ #vk.6
4: !KU( 'g'^~xx ) @ #vk.21
5: !KU( 'g'^~yy ) @ #vk.3

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 45 (precomputed): !KU( ~xx ) @ #vk.27
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~yy ) @ #vk.26
1: !KU( ~yy.1 ) @ #vk.28
2: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.2,                              h(<$cHash0.2,                                 h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0.1,                                                         h(<$cHash0.1,                                                            <'PSK', 'PSK', $cSUITE0.1,                                                             'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                                            'g'^~yy.1>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                            h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                            $cAEAD0.1),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                 $cAEAD0.2)) @ #vk.6
3: !KU( 'g'^~xx ) @ #vk.21
4: !KU( 'g'^~yy ) @ #vk.3

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 44 (precomputed): !KU( ~yy ) @ #vk.26
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: StR2_PSK_PSK( $U.1, $V.1, ~ltk.1, ~yy, prk_3e2m, TH_2,              CIPHERTEXT_2, impSk, ~tid.1, m1, m2) ▶₀ #j
1: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0,                              h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, gy>),                              'K_2ae'>,                            hkdfExtract(~ltk, impSk)),                 h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, gy>),                 $cAEAD0)) @ #vk.2
2: splitEqs(0)
3: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1, TH_2, CIPHERTEXT_2, 'emptyStr'>), 'K_3ae'>,                            prk_3e2m),                 h(<$cHash0.1, TH_2, CIPHERTEXT_2, 'emptyStr'>), $cAEAD0.1)) @ #vk.5

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 10 (precomputed):
    StR2_PSK_PSK( $U.1, $V.1, ~ltk.1, ~yy, prk_3e2m, TH_2,
                  CIPHERTEXT_2, impSk, ~tid.1, m1, m2
    ) ▶₀ #j
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.2,                              h(<$cHash0.2,                                 h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                  >),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0.1,                                                         h(<$cHash0.1,                                                            <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1                                                           >,                                                            'g'^~yy>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk.1, impSk)),                                            h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                              >),                                            $cAEAD0.1),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk.1, impSk)),                 h(<$cHash0.2,                     h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                      >),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                              >),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, impSk)),                                h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                  >),                                $cAEAD0.1),                     'emptyStr'>),                 $cAEAD0.2)) @ #vk.7
1: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, gy>),                  'K_2ae'>,                hkdfExtract(~ltk, impSk))) @ #vk.20
2: splitEqs(0)
3: splitEqs(2)
4: !KU( 'g'^~xx ) @ #vk.27

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 12 (precomputed):
    !KU( aeadEncrypt('emptyStr',
                     hkdfExpand(<$cAEAD0.2, 
                                 h(<$cHash0.2, 
                                    h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 
                                       'g'^~yy>), 
                                    aeadEncrypt('emptyStr',
                                                hkdfExpand(<$cAEAD0.1, 
                                                            h(<$cHash0.1, 
                                                               <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, 
                                                                $V.1>, 
                                                               'g'^~yy>), 
                                                            'K_2ae'>,
                                                           hkdfExtract(~ltk.1, impSk)),
                                                h(<$cHash0.1, 
                                                   <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 
                                                   'g'^~yy>),
                                                $cAEAD0.1), 
                                    'emptyStr'>), 
                                 'K_3ae'>,
                                hkdfExtract(~ltk.1, impSk)),
                     h(<$cHash0.2, 
                        h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy
                          >), 
                        aeadEncrypt('emptyStr',
                                    hkdfExpand(<$cAEAD0.1, 
                                                h(<$cHash0.1, 
                                                   <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 
                                                   'g'^~yy>), 
                                                'K_2ae'>,
                                               hkdfExtract(~ltk.1, impSk)),
                                    h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 
                                       'g'^~yy>),
                                    $cAEAD0.1), 
                        'emptyStr'>),
                     $cAEAD0.2)
    ) @ #vk.7
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0,                              h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, gy>),                              'K_2ae'>,                            hkdfExtract(~ltk, impSk)),                 h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, gy>),                 $cAEAD0)) @ #vk.2
1: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.2,                              h(<$cHash0.2,                                 h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                  >),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0.1,                                                         h(<$cHash0.1,                                                            <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1                                                           >,                                                            'g'^~yy>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk.1, impSk)),                                            h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                              >),                                            $cAEAD0.1),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk.1, impSk)),                 h(<$cHash0.2,                     h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                      >),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                              >),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, impSk)),                                h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                  >),                                $cAEAD0.1),                     'emptyStr'>),                 $cAEAD0.2)) @ #vk.5
2: splitEqs(0)
3: splitEqs(2)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 6 (precomputed):
    !KU( aeadEncrypt('emptyStr',
                     hkdfExpand(<$cAEAD0, 
                                 h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, gy>), 
                                 'K_2ae'>,
                                hkdfExtract(~ltk, impSk)),
                     h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, gy>),
                     $cAEAD0)
    ) @ #vk.2
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, gy>)) @ #vk.17
1: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.2,                              h(<$cHash0.2,                                 h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                  >),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0.1,                                                         h(<$cHash0.1,                                                            <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1                                                           >,                                                            'g'^~yy>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk.1, impSk)),                                            h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                              >),                                            $cAEAD0.1),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk.1, impSk)),                 h(<$cHash0.2,                     h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                      >),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                              >),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, impSk)),                                h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                  >),                                $cAEAD0.1),                     'emptyStr'>),                 $cAEAD0.2)) @ #vk.5
2: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, gy>),                  'K_2ae'>,                hkdfExtract(~ltk, impSk))) @ #vk.16
3: splitEqs(0)
4: splitEqs(2)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 32 (precomputed):
    !KU( h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, gy>)
    ) @ #vk.17
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( h(<$cHash0.2,         h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy          >),         aeadEncrypt('emptyStr',                    hkdfExpand(<$cAEAD0.1,                                 h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                  >),                                 'K_2ae'>,                               hkdfExtract(~ltk.1, impSk)),                    h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                      >),                    $cAEAD0.1),         'emptyStr'>)) @ #vk.32
1: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, gy>),                  'K_2ae'>,                hkdfExtract(~ltk, impSk))) @ #vk.21
2: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                      >),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                              >),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, impSk)),                                h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                  >),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, impSk))) @ #vk.31
3: splitEqs(0)
4: splitEqs(2)
5: !KU( 'g'^~xx ) @ #vk.27

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 52 (precomputed):
    !KU( h(<$cHash0.2, 
            h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy
              >), 
            aeadEncrypt('emptyStr',
                        hkdfExpand(<$cAEAD0.1, 
                                    h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 
                                       'g'^~yy>), 
                                    'K_2ae'>,
                                   hkdfExtract(~ltk.1, impSk)),
                        h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy
                          >),
                        $cAEAD0.1), 
            'emptyStr'>)
    ) @ #vk.32
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: splitEqs(2)
1: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.2,                              h(<$cHash0.2,                                 h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                                    'g'^~yy.1>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0.1,                                                         h(<$cHash0.1,                                                            <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1,                                                             $V.1>,                                                            'g'^~yy.1>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                            h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                                                'g'^~yy.1>),                                            $cAEAD0.1),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.2,                     h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                 $cAEAD0.2)) @ #vk.5
2: !KU( 'g'^x ) @ #vk.14
3: !KU( 'g'^~xx ) @ #vk.21
4: !KU( 'g'^~yy ) @ #vk.2

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 28 (directly): splitEqs(2)
  simplified formula:
      "¬($V = $V)"
    to
      "⊥"
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: splitEqs(0)
1: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^x>),                  'K_2ae'>,                hkdfExtract(~ltk, 'g'^(~yy*~xx.1)))) @ #vk.21
2: !KU( 'g'^x ) @ #vk.4
3: !KU( 'g'^~xx ) @ #vk.27
4: !KU( 'g'^~yy ) @ #vk.32
5: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^~xx.1, $U.1, $V.1>,                                 'g'^~yy>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~yy*~xx.1))),                 h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^~xx.1, $U.1, $V.1>,                     'g'^~yy>),                 $cAEAD0.1)) @ #vk.33
6: !KU( 'g'^~xx.1 ) @ #vk.17

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 3 (directly): splitEqs(0)
  simplified formula:
      "¬($U = $U)"
    to
      "⊥"
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( 'g'^(~xx*~yy*inv(~yy.1)) ) @ #vk.14
1: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.2,                              h(<$cHash0.2,                                 h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0.1,                                                         h(<$cHash0.1,                                                            <'PSK', 'PSK', $cSUITE0.1,                                                             'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                                            'g'^~yy.1>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                            h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                            $cAEAD0.1),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                 $cAEAD0.2)) @ #vk.5
2: !KU( 'g'^~xx ) @ #vk.21
3: !KU( 'g'^~yy ) @ #vk.2

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 42 (precomputed):
    !KU( 'g'^(~xx*~yy*inv(~yy.1)) ) @ #vk.14
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0,                              h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, gy>),                              'K_2ae'>,                            hkdfExtract(~ltk, impSk)),                 h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, gy>),                 $cAEAD0)) @ #vk.2
1: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.2,                              h(<$cHash0.2,                                 h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                  >),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0.1,                                                         h(<$cHash0.1,                                                            <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1                                                           >,                                                            'g'^~yy>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk.1, impSk)),                                            h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                              >),                                            $cAEAD0.1),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk.1, impSk)),                 h(<$cHash0.2,                     h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                      >),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                              >),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, impSk)),                                h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                  >),                                $cAEAD0.1),                     'emptyStr'>),                 $cAEAD0.2)) @ #vk.5
2: splitEqs(0)
3: splitEqs(2)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 7 (precomputed):
    !KU( aeadEncrypt('emptyStr',
                     hkdfExpand(<$cAEAD0, 
                                 h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, gy>), 
                                 'K_2ae'>,
                                hkdfExtract(~ltk, impSk)),
                     h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, gy>),
                     $cAEAD0)
    ) @ #vk.2
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, gy>)) @ #vk.17
1: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.2,                              h(<$cHash0.2,                                 h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                  >),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0.1,                                                         h(<$cHash0.1,                                                            <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1                                                           >,                                                            'g'^~yy>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk.1, impSk)),                                            h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                              >),                                            $cAEAD0.1),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk.1, impSk)),                 h(<$cHash0.2,                     h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                      >),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                              >),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, impSk)),                                h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                  >),                                $cAEAD0.1),                     'emptyStr'>),                 $cAEAD0.2)) @ #vk.5
2: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, gy>),                  'K_2ae'>,                hkdfExtract(~ltk, impSk))) @ #vk.16
3: splitEqs(0)
4: splitEqs(2)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 31 (precomputed):
    !KU( h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, gy>)
    ) @ #vk.17
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: splitEqs(2)
1: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.2,                              h(<$cHash0.2,                                 h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                                    'g'^~yy.1>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0.1,                                                         h(<$cHash0.1,                                                            <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1,                                                             $V.1>,                                                            'g'^~yy.1>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                            h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                                                'g'^~yy.1>),                                            $cAEAD0.1),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.2,                     h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                 $cAEAD0.2)) @ #vk.5
2: !KU( 'g'^x ) @ #vk.14
3: !KU( 'g'^~xx ) @ #vk.21
4: !KU( 'g'^~yy ) @ #vk.2

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 27 (directly): splitEqs(2)
  simplified formula:
      "¬($V = $V)"
    to
      "⊥"
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.2,                              h(<$cHash0.2,                                 h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                  >),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0.1,                                                         h(<$cHash0.1,                                                            <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1                                                           >,                                                            'g'^~yy>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk.1, impSk)),                                            h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                              >),                                            $cAEAD0.1),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk.1, impSk)),                 h(<$cHash0.2,                     h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                      >),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                              >),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, impSk)),                                h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                  >),                                $cAEAD0.1),                     'emptyStr'>),                 $cAEAD0.2)) @ #vk.7
1: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, gy>),                  'K_2ae'>,                hkdfExtract(~ltk, impSk))) @ #vk.20
2: splitEqs(0)
3: splitEqs(2)
4: !KU( 'g'^~xx ) @ #vk.27

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 13 (precomputed):
    !KU( aeadEncrypt('emptyStr',
                     hkdfExpand(<$cAEAD0.2, 
                                 h(<$cHash0.2, 
                                    h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 
                                       'g'^~yy>), 
                                    aeadEncrypt('emptyStr',
                                                hkdfExpand(<$cAEAD0.1, 
                                                            h(<$cHash0.1, 
                                                               <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, 
                                                                $V.1>, 
                                                               'g'^~yy>), 
                                                            'K_2ae'>,
                                                           hkdfExtract(~ltk.1, impSk)),
                                                h(<$cHash0.1, 
                                                   <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 
                                                   'g'^~yy>),
                                                $cAEAD0.1), 
                                    'emptyStr'>), 
                                 'K_3ae'>,
                                hkdfExtract(~ltk.1, impSk)),
                     h(<$cHash0.2, 
                        h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy
                          >), 
                        aeadEncrypt('emptyStr',
                                    hkdfExpand(<$cAEAD0.1, 
                                                h(<$cHash0.1, 
                                                   <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 
                                                   'g'^~yy>), 
                                                'K_2ae'>,
                                               hkdfExtract(~ltk.1, impSk)),
                                    h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 
                                       'g'^~yy>),
                                    $cAEAD0.1), 
                        'emptyStr'>),
                     $cAEAD0.2)
    ) @ #vk.7
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( 'g'^(~xx*~yy*inv(~yy.1)) ) @ #vk.14
1: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.2,                              h(<$cHash0.2,                                 h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0.1,                                                         h(<$cHash0.1,                                                            <'PSK', 'PSK', $cSUITE0.1,                                                             'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                                            'g'^~yy.1>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                            h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                            $cAEAD0.1),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                 $cAEAD0.2)) @ #vk.5
2: !KU( 'g'^~xx ) @ #vk.21
3: !KU( 'g'^~yy ) @ #vk.2

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 41 (precomputed):
    !KU( 'g'^(~xx*~yy*inv(~yy.1)) ) @ #vk.14
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, gy>)) @ #vk.6
1: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, gy>),                  'K_2ae'>,                hkdfExtract(~ltk, impSk))) @ #vk.5
2: splitEqs(0)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 15 (precomputed):
    !KU( h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, gy>)
    ) @ #vk.6
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( 'g'^(~xx*~yy) ) @ #vk.3
1: !KU( 'g'^~xx ) @ #vk.10
2: !KU( 'g'^~yy ) @ #vk.2

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 25 (precomputed): !KU( 'g'^(~xx*~yy) ) @ #vk.3
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~yy ) @ #vk.14
1: !KU( 'g'^~xx ) @ #vk.10
2: !KU( 'g'^~yy ) @ #vk.3

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 27 (precomputed): !KU( ~yy ) @ #vk.14
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.26
1: !KU( ~yy.1 ) @ #vk.28
2: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.2,                              h(<$cHash0.2,                                 h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0.1,                                                         h(<$cHash0.1,                                                            <'PSK', 'PSK', $cSUITE0.1,                                                             'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                                            'g'^~yy.1>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                            h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                            $cAEAD0.1),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                 $cAEAD0.2)) @ #vk.6
3: !KU( 'g'^~xx ) @ #vk.21
4: !KU( 'g'^~yy ) @ #vk.3

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 54 (precomputed): !KU( ~xx ) @ #vk.26
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~yy ) @ #vk.26
1: !KU( ~yy.1 ) @ #vk.28
2: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.2,                              h(<$cHash0.2,                                 h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0.1,                                                         h(<$cHash0.1,                                                            <'PSK', 'PSK', $cSUITE0.1,                                                             'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                                            'g'^~yy.1>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                            h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                            $cAEAD0.1),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                 $cAEAD0.2)) @ #vk.6
3: !KU( 'g'^~xx ) @ #vk.21
4: !KU( 'g'^~yy ) @ #vk.3

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 44 (precomputed): !KU( ~yy ) @ #vk.26
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.14
1: !KU( 'g'^~xx ) @ #vk.10
2: !KU( 'g'^~yy ) @ #vk.3

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 37 (precomputed): !KU( ~xx ) @ #vk.14
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.27
1: !KU( ~yy ) @ #vk.28
2: !KU( ~yy.1 ) @ #vk.30
3: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.2,                              h(<$cHash0.2,                                 h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0.1,                                                         h(<$cHash0.1,                                                            <'PSK', 'PSK', $cSUITE0.1,                                                             'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                                            'g'^~yy.1>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                            h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                            $cAEAD0.1),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                 $cAEAD0.2)) @ #vk.6
4: !KU( 'g'^~xx ) @ #vk.21
5: !KU( 'g'^~yy ) @ #vk.3

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 45 (precomputed): !KU( ~xx ) @ #vk.27
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.16
1: !KU( ~yy ) @ #vk.17
2: !KU( 'g'^~xx ) @ #vk.10
3: !KU( 'g'^~yy ) @ #vk.3

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 29 (precomputed): !KU( ~xx ) @ #vk.16
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.2,                              h(<$cHash0.2,                                 h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                  >),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0.1,                                                         h(<$cHash0.1,                                                            <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1                                                           >,                                                            'g'^~yy>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk.1, impSk)),                                            h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                              >),                                            $cAEAD0.1),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk.1, impSk)),                 h(<$cHash0.2,                     h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                      >),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                              >),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, impSk)),                                h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                  >),                                $cAEAD0.1),                     'emptyStr'>),                 $cAEAD0.2)) @ #vk.7
1: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, gy>),                  'K_2ae'>,                hkdfExtract(~ltk, impSk))) @ #vk.20
2: splitEqs(0)
3: splitEqs(2)
4: !KU( 'g'^~xx ) @ #vk.27

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 12 (precomputed):
    !KU( aeadEncrypt('emptyStr',
                     hkdfExpand(<$cAEAD0.2, 
                                 h(<$cHash0.2, 
                                    h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 
                                       'g'^~yy>), 
                                    aeadEncrypt('emptyStr',
                                                hkdfExpand(<$cAEAD0.1, 
                                                            h(<$cHash0.1, 
                                                               <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, 
                                                                $V.1>, 
                                                               'g'^~yy>), 
                                                            'K_2ae'>,
                                                           hkdfExtract(~ltk.1, impSk)),
                                                h(<$cHash0.1, 
                                                   <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 
                                                   'g'^~yy>),
                                                $cAEAD0.1), 
                                    'emptyStr'>), 
                                 'K_3ae'>,
                                hkdfExtract(~ltk.1, impSk)),
                     h(<$cHash0.2, 
                        h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy
                          >), 
                        aeadEncrypt('emptyStr',
                                    hkdfExpand(<$cAEAD0.1, 
                                                h(<$cHash0.1, 
                                                   <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 
                                                   'g'^~yy>), 
                                                'K_2ae'>,
                                               hkdfExtract(~ltk.1, impSk)),
                                    h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 
                                       'g'^~yy>),
                                    $cAEAD0.1), 
                        'emptyStr'>),
                     $cAEAD0.2)
    ) @ #vk.7
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, gy>),                  'K_2ae'>,                hkdfExtract(~ltk, impSk))) @ #vk.7
1: splitEqs(0)
2: !KU( 'g'^~xx ) @ #vk.17

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 14 (precomputed):
    !KU( hkdfExpand(<$cAEAD0, 
                     h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, gy>), 
                     'K_2ae'>,
                    hkdfExtract(~ltk, impSk))
    ) @ #vk.7
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( 'g'^(~xx*~yy) ) @ #vk.7
1: !KU( 'g'^~xx ) @ #vk.17
2: !KU( 'g'^~yy ) @ #vk.4

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 48 (precomputed): !KU( 'g'^(~xx*~yy) ) @ #vk.7
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( 'g'^(~xx*~yy) ) @ #vk.7
1: !KU( 'g'^~xx ) @ #vk.17
2: !KU( 'g'^~yy ) @ #vk.4

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 53 (precomputed): !KU( 'g'^(~xx*~yy) ) @ #vk.7
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( h(<$cHash0.2,         h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy          >),         aeadEncrypt('emptyStr',                    hkdfExpand(<$cAEAD0.1,                                 h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                  >),                                 'K_2ae'>,                               hkdfExtract(~ltk.1, impSk)),                    h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                      >),                    $cAEAD0.1),         'emptyStr'>)) @ #vk.32
1: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, gy>),                  'K_2ae'>,                hkdfExtract(~ltk, impSk))) @ #vk.21
2: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                      >),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                              >),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, impSk)),                                h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                  >),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, impSk))) @ #vk.31
3: splitEqs(0)
4: splitEqs(2)
5: !KU( 'g'^~xx ) @ #vk.27

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 52 (precomputed):
    !KU( h(<$cHash0.2, 
            h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy
              >), 
            aeadEncrypt('emptyStr',
                        hkdfExpand(<$cAEAD0.1, 
                                    h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 
                                       'g'^~yy>), 
                                    'K_2ae'>,
                                   hkdfExtract(~ltk.1, impSk)),
                        h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy
                          >),
                        $cAEAD0.1), 
            'emptyStr'>)
    ) @ #vk.32
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: splitEqs(0)
1: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^x>),                  'K_2ae'>,                hkdfExtract(~ltk, 'g'^(~yy*~xx.1)))) @ #vk.21
2: !KU( 'g'^x ) @ #vk.4
3: !KU( 'g'^~xx ) @ #vk.27
4: !KU( 'g'^~yy ) @ #vk.32
5: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^~xx.1, $U.1, $V.1>,                                 'g'^~yy>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~yy*~xx.1))),                 h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^~xx.1, $U.1, $V.1>,                     'g'^~yy>),                 $cAEAD0.1)) @ #vk.33
6: !KU( 'g'^~xx.1 ) @ #vk.17

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 3 (directly): splitEqs(0)
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( hkdfExtract(~ltk, impSk) ) @ #vk.23
1: splitEqs(0)
2: !KU( 'g'^~xx ) @ #vk.19

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 35 (precomputed):
    !KU( hkdfExtract(~ltk, impSk) ) @ #vk.23
  simplified formula:
      "¬($V = $V)"
    to
      "⊥"
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: StR2_PSK_PSK( $U.2, $V.2, ~ltk.2, ~yy.1, prk_3e2m, TH_2,              CIPHERTEXT_2, impSk, ~tid.2, m1, m2) ▶₀ #j2
1: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0,                              h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, gy>),                              'K_2ae'>,                            hkdfExtract(~ltk, impSk)),                 h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, gy>),                 $cAEAD0)) @ #vk.2
2: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.2,                              h(<$cHash0.2,                                 h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                  >),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0.1,                                                         h(<$cHash0.1,                                                            <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1                                                           >,                                                            'g'^~yy>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk.1, impSk)),                                            h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                              >),                                            $cAEAD0.1),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk.1, impSk)),                 h(<$cHash0.2,                     h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                      >),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                              >),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, impSk)),                                h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                  >),                                $cAEAD0.1),                     'emptyStr'>),                 $cAEAD0.2)) @ #vk.6
3: splitEqs(0)
4: splitEqs(3)
5: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.3,                              h(<$cHash0.3, TH_2, CIPHERTEXT_2, 'emptyStr'>), 'K_3ae'>,                            prk_3e2m),                 h(<$cHash0.3, TH_2, CIPHERTEXT_2, 'emptyStr'>), $cAEAD0.3)) @ #vk.7

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 16 (precomputed):
    StR2_PSK_PSK( $U.2, $V.2, ~ltk.2, ~yy.1, prk_3e2m, TH_2,
                  CIPHERTEXT_2, impSk, ~tid.2, m1, m2
    ) ▶₀ #j2
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.23
1: !KU( ~yy ) @ #vk.24
2: !KU( 'g'^~xx ) @ #vk.17
3: !KU( 'g'^~yy ) @ #vk.5

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 57 (precomputed): !KU( ~xx ) @ #vk.23
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.21
1: !KU( 'g'^~xx ) @ #vk.17
2: !KU( 'g'^~yy ) @ #vk.5

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 65 (precomputed): !KU( ~xx ) @ #vk.21
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~yy ) @ #vk.21
1: !KU( 'g'^~xx ) @ #vk.17
2: !KU( 'g'^~yy ) @ #vk.5

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 55 (precomputed): !KU( ~yy ) @ #vk.21
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~yy ) @ #vk.22
1: !KU( 'g'^~xx ) @ #vk.17
2: !KU( 'g'^~yy ) @ #vk.5

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 50 (precomputed): !KU( ~yy ) @ #vk.22
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.22
1: !KU( 'g'^~xx ) @ #vk.17
2: !KU( 'g'^~yy ) @ #vk.5

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.24
1: !KU( ~yy ) @ #vk.25
2: !KU( 'g'^~xx ) @ #vk.17
3: !KU( 'g'^~yy ) @ #vk.5

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 60 (precomputed): !KU( ~xx ) @ #vk.22
  solved goal nr. 52 (precomputed): !KU( ~xx ) @ #vk.24
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0,                              h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, gy>),                              'K_2ae'>,                            hkdfExtract(~ltk, impSk)),                 h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, gy>),                 $cAEAD0)) @ #vk.2
1: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.2,                              h(<$cHash0.2,                                 h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                  >),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0.1,                                                         h(<$cHash0.1,                                                            <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1                                                           >,                                                            'g'^~yy>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk.1, impSk)),                                            h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                              >),                                            $cAEAD0.1),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk.1, impSk)),                 h(<$cHash0.2,                     h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                      >),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                              >),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, impSk)),                                h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                  >),                                $cAEAD0.1),                     'emptyStr'>),                 $cAEAD0.2)) @ #vk.6
2: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.4,                              h(<$cHash0.4,                                 h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                                    'g'^~yy.1>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0.3,                                                         h(<$cHash0.3,                                                            <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2,                                                             $V.2>,                                                            'g'^~yy.1>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk.2, impSk)),                                            h(<$cHash0.3,                                                <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                                                'g'^~yy.1>),                                            $cAEAD0.3),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk.2, impSk)),                 h(<$cHash0.4,                     h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.3,                                             h(<$cHash0.3,                                                <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.2, impSk)),                                h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                                    'g'^~yy.1>),                                $cAEAD0.3),                     'emptyStr'>),                 $cAEAD0.4)) @ #vk.7
3: splitEqs(0)
4: splitEqs(3)
5: splitEqs(4)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 7 (precomputed):
    !KU( aeadEncrypt('emptyStr',
                     hkdfExpand(<$cAEAD0, 
                                 h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, gy>), 
                                 'K_2ae'>,
                                hkdfExtract(~ltk, impSk)),
                     h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, gy>),
                     $cAEAD0)
    ) @ #vk.2
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~ltk ) @ #vk.25
1: splitEqs(0)
2: !KU( 'g'^~xx ) @ #vk.20

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 41 (precomputed): !KU( ~ltk ) @ #vk.25
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: StR2_PSK_PSK( $U.1, $V.1, ~ltk.1, ~yy, prk_3e2m, TH_2,              CIPHERTEXT_2, impSk, ~tid.1, m1, m2) ▶₀ #j
1: StR2_PSK_PSK( $U.2, $V.2, ~ltk.2, ~yy.1, prk_3e2m.1, TH_2.1,              CIPHERTEXT_2.1, impSk, ~tid.2, m1.1, m2.1) ▶₀ #j2
2: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0,                              h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, gy>),                              'K_2ae'>,                            hkdfExtract(~ltk, impSk)),                 h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, gy>),                 $cAEAD0)) @ #vk.2
3: splitEqs(0)
4: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1, TH_2, CIPHERTEXT_2, 'emptyStr'>), 'K_3ae'>,                            prk_3e2m),                 h(<$cHash0.1, TH_2, CIPHERTEXT_2, 'emptyStr'>), $cAEAD0.1)) @ #vk.6
5: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.2,                              h(<$cHash0.2, TH_2.1, CIPHERTEXT_2.1, 'emptyStr'>), 'K_3ae'>,                            prk_3e2m.1),                 h(<$cHash0.2, TH_2.1, CIPHERTEXT_2.1, 'emptyStr'>), $cAEAD0.2)) @ #vk.7

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 11 (precomputed):
    StR2_PSK_PSK( $U.1, $V.1, ~ltk.1, ~yy, prk_3e2m, TH_2,
                  CIPHERTEXT_2, impSk, ~tid.1, m1, m2
    ) ▶₀ #j
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, gy>)) @ #vk.28
1: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.2,                              h(<$cHash0.2,                                 h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                  >),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0.1,                                                         h(<$cHash0.1,                                                            <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1                                                           >,                                                            'g'^~yy>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk.1, impSk)),                                            h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                              >),                                            $cAEAD0.1),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk.1, impSk)),                 h(<$cHash0.2,                     h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                      >),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                              >),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, impSk)),                                h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                  >),                                $cAEAD0.1),                     'emptyStr'>),                 $cAEAD0.2)) @ #vk.6
2: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.4,                              h(<$cHash0.4,                                 h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                                    'g'^~yy.1>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0.3,                                                         h(<$cHash0.3,                                                            <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2,                                                             $V.2>,                                                            'g'^~yy.1>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk.2, impSk)),                                            h(<$cHash0.3,                                                <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                                                'g'^~yy.1>),                                            $cAEAD0.3),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk.2, impSk)),                 h(<$cHash0.4,                     h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.3,                                             h(<$cHash0.3,                                                <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.2, impSk)),                                h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                                    'g'^~yy.1>),                                $cAEAD0.3),                     'emptyStr'>),                 $cAEAD0.4)) @ #vk.7
3: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, gy>),                  'K_2ae'>,                hkdfExtract(~ltk, impSk))) @ #vk.27
4: splitEqs(0)
5: splitEqs(3)
6: splitEqs(4)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 51 (precomputed):
    !KU( h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, gy>)
    ) @ #vk.28
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: splitEqs(3)
1: splitEqs(4)
2: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.2,                              h(<$cHash0.2,                                 h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                                    'g'^~yy.1>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0.1,                                                         h(<$cHash0.1,                                                            <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1,                                                             $V.1>,                                                            'g'^~yy.1>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                            h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                                                'g'^~yy.1>),                                            $cAEAD0.1),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.2,                     h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                 $cAEAD0.2)) @ #vk.6
3: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.4,                              h(<$cHash0.4,                                 h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, 'g'^x.1, $U.2, $V.2>,                                    'g'^~yy.2>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0.3,                                                         h(<$cHash0.3,                                                            <'PSK', 'PSK', $cSUITE0.2, 'g'^x.1,                                                             $U.2, $V.2>,                                                            'g'^~yy.2>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk.2, 'g'^(~xx*~yy))),                                            h(<$cHash0.3,                                                <'PSK', 'PSK', $cSUITE0.2, 'g'^x.1, $U.2, $V.2>,                                                'g'^~yy.2>),                                            $cAEAD0.3),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk.2, 'g'^(~xx*~yy))),                 h(<$cHash0.4,                     h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, 'g'^x.1, $U.2, $V.2>,                        'g'^~yy.2>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.3,                                             h(<$cHash0.3,                                                <'PSK', 'PSK', $cSUITE0.2, 'g'^x.1, $U.2, $V.2>,                                                'g'^~yy.2>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.2, 'g'^(~xx*~yy))),                                h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, 'g'^x.1, $U.2, $V.2>,                                    'g'^~yy.2>),                                $cAEAD0.3),                     'emptyStr'>),                 $cAEAD0.4)) @ #vk.7
4: !KU( 'g'^x ) @ #vk.18
5: !KU( 'g'^x.1 ) @ #vk.25
6: !KU( 'g'^~xx ) @ #vk.32
7: !KU( 'g'^~yy ) @ #vk.2

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 34 (directly): splitEqs(3)
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: StR2_PSK_PSK( $U.2, $V.2, ~ltk.2, ~yy.1, prk_3e2m, TH_2,              CIPHERTEXT_2, impSk, ~tid.2, m1, m2) ▶₀ #j2
1: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0,                              h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, gy>),                              'K_2ae'>,                            hkdfExtract(~ltk, impSk)),                 h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, gy>),                 $cAEAD0)) @ #vk.2
2: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.2,                              h(<$cHash0.2,                                 h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                  >),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0.1,                                                         h(<$cHash0.1,                                                            <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1                                                           >,                                                            'g'^~yy>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk.1, impSk)),                                            h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                              >),                                            $cAEAD0.1),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk.1, impSk)),                 h(<$cHash0.2,                     h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                      >),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                              >),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, impSk)),                                h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                  >),                                $cAEAD0.1),                     'emptyStr'>),                 $cAEAD0.2)) @ #vk.6
3: splitEqs(0)
4: splitEqs(3)
5: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.3,                              h(<$cHash0.3, TH_2, CIPHERTEXT_2, 'emptyStr'>), 'K_3ae'>,                            prk_3e2m),                 h(<$cHash0.3, TH_2, CIPHERTEXT_2, 'emptyStr'>), $cAEAD0.3)) @ #vk.7

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 16 (precomputed):
    StR2_PSK_PSK( $U.2, $V.2, ~ltk.2, ~yy.1, prk_3e2m, TH_2,
                  CIPHERTEXT_2, impSk, ~tid.2, m1, m2
    ) ▶₀ #j2
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: StR2_PSK_PSK( $U.1, $V.1, ~ltk.1, ~yy, prk_3e2m, TH_2,              CIPHERTEXT_2, impSk, ~tid.1, m1, m2) ▶₀ #j
1: StR2_PSK_PSK( $U.2, $V.2, ~ltk.2, ~yy.1, prk_3e2m.1, TH_2.1,              CIPHERTEXT_2.1, impSk, ~tid.2, m1.1, m2.1) ▶₀ #j2
2: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0,                              h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, gy>),                              'K_2ae'>,                            hkdfExtract(~ltk, impSk)),                 h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, gy>),                 $cAEAD0)) @ #vk.2
3: splitEqs(0)
4: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1, TH_2, CIPHERTEXT_2, 'emptyStr'>), 'K_3ae'>,                            prk_3e2m),                 h(<$cHash0.1, TH_2, CIPHERTEXT_2, 'emptyStr'>), $cAEAD0.1)) @ #vk.6
5: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.2,                              h(<$cHash0.2, TH_2.1, CIPHERTEXT_2.1, 'emptyStr'>), 'K_3ae'>,                            prk_3e2m.1),                 h(<$cHash0.2, TH_2.1, CIPHERTEXT_2.1, 'emptyStr'>), $cAEAD0.2)) @ #vk.7

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 9 (precomputed):
    StR2_PSK_PSK( $U.1, $V.1, ~ltk.1, ~yy, prk_3e2m, TH_2,
                  CIPHERTEXT_2, impSk, ~tid.1, m1, m2
    ) ▶₀ #j
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0,                              h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, gy>),                              'K_2ae'>,                            hkdfExtract(~ltk, impSk)),                 h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, gy>),                 $cAEAD0)) @ #vk.2
1: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.2,                              h(<$cHash0.2,                                 h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                  >),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0.1,                                                         h(<$cHash0.1,                                                            <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1                                                           >,                                                            'g'^~yy>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk.1, impSk)),                                            h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                              >),                                            $cAEAD0.1),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk.1, impSk)),                 h(<$cHash0.2,                     h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                      >),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                              >),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, impSk)),                                h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                  >),                                $cAEAD0.1),                     'emptyStr'>),                 $cAEAD0.2)) @ #vk.6
2: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.4,                              h(<$cHash0.4,                                 h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                                    'g'^~yy.1>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0.3,                                                         h(<$cHash0.3,                                                            <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2,                                                             $V.2>,                                                            'g'^~yy.1>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk.2, impSk)),                                            h(<$cHash0.3,                                                <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                                                'g'^~yy.1>),                                            $cAEAD0.3),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk.2, impSk)),                 h(<$cHash0.4,                     h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.3,                                             h(<$cHash0.3,                                                <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.2, impSk)),                                h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                                    'g'^~yy.1>),                                $cAEAD0.3),                     'emptyStr'>),                 $cAEAD0.4)) @ #vk.7
3: splitEqs(0)
4: splitEqs(3)
5: splitEqs(4)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 6 (precomputed):
    !KU( aeadEncrypt('emptyStr',
                     hkdfExpand(<$cAEAD0, 
                                 h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, gy>), 
                                 'K_2ae'>,
                                hkdfExtract(~ltk, impSk)),
                     h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, gy>),
                     $cAEAD0)
    ) @ #vk.2
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: StR2_PSK_PSK( $U.2, $V.2, ~ltk.2, ~yy.1, prk_3e2m, TH_2,              CIPHERTEXT_2, impSk, ~tid.2, m1, m2) ▶₀ #j2
1: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0,                              h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, gy>),                              'K_2ae'>,                            hkdfExtract(~ltk, impSk)),                 h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, gy>),                 $cAEAD0)) @ #vk.2
2: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.2,                              h(<$cHash0.2,                                 h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                  >),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0.1,                                                         h(<$cHash0.1,                                                            <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1                                                           >,                                                            'g'^~yy>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk.1, impSk)),                                            h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                              >),                                            $cAEAD0.1),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk.1, impSk)),                 h(<$cHash0.2,                     h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                      >),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                              >),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, impSk)),                                h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                  >),                                $cAEAD0.1),                     'emptyStr'>),                 $cAEAD0.2)) @ #vk.6
3: splitEqs(0)
4: splitEqs(3)
5: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.3,                              h(<$cHash0.3, TH_2, CIPHERTEXT_2, 'emptyStr'>), 'K_3ae'>,                            prk_3e2m),                 h(<$cHash0.3, TH_2, CIPHERTEXT_2, 'emptyStr'>), $cAEAD0.3)) @ #vk.7

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 16 (precomputed):
    StR2_PSK_PSK( $U.2, $V.2, ~ltk.2, ~yy.1, prk_3e2m, TH_2,
                  CIPHERTEXT_2, impSk, ~tid.2, m1, m2
    ) ▶₀ #j2
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, gy>)) @ #vk.28
1: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.2,                              h(<$cHash0.2,                                 h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                  >),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0.1,                                                         h(<$cHash0.1,                                                            <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1                                                           >,                                                            'g'^~yy>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk.1, impSk)),                                            h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                              >),                                            $cAEAD0.1),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk.1, impSk)),                 h(<$cHash0.2,                     h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                      >),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                              >),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, impSk)),                                h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                  >),                                $cAEAD0.1),                     'emptyStr'>),                 $cAEAD0.2)) @ #vk.6
2: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.4,                              h(<$cHash0.4,                                 h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                                    'g'^~yy.1>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0.3,                                                         h(<$cHash0.3,                                                            <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2,                                                             $V.2>,                                                            'g'^~yy.1>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk.2, impSk)),                                            h(<$cHash0.3,                                                <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                                                'g'^~yy.1>),                                            $cAEAD0.3),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk.2, impSk)),                 h(<$cHash0.4,                     h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.3,                                             h(<$cHash0.3,                                                <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.2, impSk)),                                h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                                    'g'^~yy.1>),                                $cAEAD0.3),                     'emptyStr'>),                 $cAEAD0.4)) @ #vk.7
3: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, gy>),                  'K_2ae'>,                hkdfExtract(~ltk, impSk))) @ #vk.27
4: splitEqs(0)
5: splitEqs(3)
6: splitEqs(4)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 51 (precomputed):
    !KU( h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, gy>)
    ) @ #vk.28
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0,                              h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, gy>),                              'K_2ae'>,                            hkdfExtract(~ltk, impSk)),                 h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, gy>),                 $cAEAD0)) @ #vk.2
1: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.2,                              h(<$cHash0.2,                                 h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                  >),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0.1,                                                         h(<$cHash0.1,                                                            <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1                                                           >,                                                            'g'^~yy>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk.1, impSk)),                                            h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                              >),                                            $cAEAD0.1),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk.1, impSk)),                 h(<$cHash0.2,                     h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                      >),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                              >),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, impSk)),                                h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                  >),                                $cAEAD0.1),                     'emptyStr'>),                 $cAEAD0.2)) @ #vk.6
2: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.4,                              h(<$cHash0.4,                                 h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                                    'g'^~yy.1>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0.3,                                                         h(<$cHash0.3,                                                            <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2,                                                             $V.2>,                                                            'g'^~yy.1>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk.2, impSk)),                                            h(<$cHash0.3,                                                <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                                                'g'^~yy.1>),                                            $cAEAD0.3),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk.2, impSk)),                 h(<$cHash0.4,                     h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.3,                                             h(<$cHash0.3,                                                <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.2, impSk)),                                h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                                    'g'^~yy.1>),                                $cAEAD0.3),                     'emptyStr'>),                 $cAEAD0.4)) @ #vk.7
3: splitEqs(0)
4: splitEqs(3)
5: splitEqs(4)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 7 (precomputed):
    !KU( aeadEncrypt('emptyStr',
                     hkdfExpand(<$cAEAD0, 
                                 h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, gy>), 
                                 'K_2ae'>,
                                hkdfExtract(~ltk, impSk)),
                     h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, gy>),
                     $cAEAD0)
    ) @ #vk.2
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: splitEqs(3)
1: splitEqs(4)
2: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.2,                              h(<$cHash0.2,                                 h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                                    'g'^~yy.1>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0.1,                                                         h(<$cHash0.1,                                                            <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1,                                                             $V.1>,                                                            'g'^~yy.1>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                            h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                                                'g'^~yy.1>),                                            $cAEAD0.1),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.2,                     h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                 $cAEAD0.2)) @ #vk.6
3: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.4,                              h(<$cHash0.4,                                 h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, 'g'^x.1, $U.2, $V.2>,                                    'g'^~yy.2>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0.3,                                                         h(<$cHash0.3,                                                            <'PSK', 'PSK', $cSUITE0.2, 'g'^x.1,                                                             $U.2, $V.2>,                                                            'g'^~yy.2>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk.2, 'g'^(~xx*~yy))),                                            h(<$cHash0.3,                                                <'PSK', 'PSK', $cSUITE0.2, 'g'^x.1, $U.2, $V.2>,                                                'g'^~yy.2>),                                            $cAEAD0.3),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk.2, 'g'^(~xx*~yy))),                 h(<$cHash0.4,                     h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, 'g'^x.1, $U.2, $V.2>,                        'g'^~yy.2>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.3,                                             h(<$cHash0.3,                                                <'PSK', 'PSK', $cSUITE0.2, 'g'^x.1, $U.2, $V.2>,                                                'g'^~yy.2>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.2, 'g'^(~xx*~yy))),                                h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, 'g'^x.1, $U.2, $V.2>,                                    'g'^~yy.2>),                                $cAEAD0.3),                     'emptyStr'>),                 $cAEAD0.4)) @ #vk.7
4: !KU( 'g'^x ) @ #vk.18
5: !KU( 'g'^x.1 ) @ #vk.25
6: !KU( 'g'^~xx ) @ #vk.32
7: !KU( 'g'^~yy ) @ #vk.2

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 34 (directly): splitEqs(3)
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, gy>)) @ #vk.28
1: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.2,                              h(<$cHash0.2,                                 h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                  >),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0.1,                                                         h(<$cHash0.1,                                                            <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1                                                           >,                                                            'g'^~yy>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk.1, impSk)),                                            h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                              >),                                            $cAEAD0.1),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk.1, impSk)),                 h(<$cHash0.2,                     h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                      >),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                              >),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, impSk)),                                h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                  >),                                $cAEAD0.1),                     'emptyStr'>),                 $cAEAD0.2)) @ #vk.6
2: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.4,                              h(<$cHash0.4,                                 h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                                    'g'^~yy.1>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0.3,                                                         h(<$cHash0.3,                                                            <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2,                                                             $V.2>,                                                            'g'^~yy.1>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk.2, impSk)),                                            h(<$cHash0.3,                                                <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                                                'g'^~yy.1>),                                            $cAEAD0.3),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk.2, impSk)),                 h(<$cHash0.4,                     h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.3,                                             h(<$cHash0.3,                                                <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.2, impSk)),                                h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                                    'g'^~yy.1>),                                $cAEAD0.3),                     'emptyStr'>),                 $cAEAD0.4)) @ #vk.7
3: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, gy>),                  'K_2ae'>,                hkdfExtract(~ltk, impSk))) @ #vk.27
4: splitEqs(0)
5: splitEqs(3)
6: splitEqs(4)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 51 (precomputed):
    !KU( h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, gy>)
    ) @ #vk.28
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: splitEqs(3)
1: splitEqs(4)
2: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.2,                              h(<$cHash0.2,                                 h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                                    'g'^~yy.1>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0.1,                                                         h(<$cHash0.1,                                                            <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1,                                                             $V.1>,                                                            'g'^~yy.1>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                            h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                                                'g'^~yy.1>),                                            $cAEAD0.1),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.2,                     h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                 $cAEAD0.2)) @ #vk.6
3: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.4,                              h(<$cHash0.4,                                 h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, 'g'^x.1, $U.2, $V.2>,                                    'g'^~yy.2>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0.3,                                                         h(<$cHash0.3,                                                            <'PSK', 'PSK', $cSUITE0.2, 'g'^x.1,                                                             $U.2, $V.2>,                                                            'g'^~yy.2>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk.2, 'g'^(~xx*~yy))),                                            h(<$cHash0.3,                                                <'PSK', 'PSK', $cSUITE0.2, 'g'^x.1, $U.2, $V.2>,                                                'g'^~yy.2>),                                            $cAEAD0.3),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk.2, 'g'^(~xx*~yy))),                 h(<$cHash0.4,                     h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, 'g'^x.1, $U.2, $V.2>,                        'g'^~yy.2>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.3,                                             h(<$cHash0.3,                                                <'PSK', 'PSK', $cSUITE0.2, 'g'^x.1, $U.2, $V.2>,                                                'g'^~yy.2>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.2, 'g'^(~xx*~yy))),                                h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, 'g'^x.1, $U.2, $V.2>,                                    'g'^~yy.2>),                                $cAEAD0.3),                     'emptyStr'>),                 $cAEAD0.4)) @ #vk.7
4: !KU( 'g'^x ) @ #vk.18
5: !KU( 'g'^x.1 ) @ #vk.25
6: !KU( 'g'^~xx ) @ #vk.32
7: !KU( 'g'^~yy ) @ #vk.2

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 34 (directly): splitEqs(3)
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: StR2_PSK_PSK( $U.1, $V.1, ~ltk.1, ~yy, prk_3e2m, TH_2,              CIPHERTEXT_2, impSk, ~tid.1, m1, m2) ▶₀ #j
1: StR2_PSK_PSK( $U.2, $V.2, ~ltk.2, ~yy.1, prk_3e2m.1, TH_2.1,              CIPHERTEXT_2.1, impSk, ~tid.2, m1.1, m2.1) ▶₀ #j2
2: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0,                              h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, gy>),                              'K_2ae'>,                            hkdfExtract(~ltk, impSk)),                 h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, gy>),                 $cAEAD0)) @ #vk.2
3: splitEqs(0)
4: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1, TH_2, CIPHERTEXT_2, 'emptyStr'>), 'K_3ae'>,                            prk_3e2m),                 h(<$cHash0.1, TH_2, CIPHERTEXT_2, 'emptyStr'>), $cAEAD0.1)) @ #vk.6
5: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.2,                              h(<$cHash0.2, TH_2.1, CIPHERTEXT_2.1, 'emptyStr'>), 'K_3ae'>,                            prk_3e2m.1),                 h(<$cHash0.2, TH_2.1, CIPHERTEXT_2.1, 'emptyStr'>), $cAEAD0.2)) @ #vk.7

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 11 (precomputed):
    StR2_PSK_PSK( $U.1, $V.1, ~ltk.1, ~yy, prk_3e2m, TH_2,
                  CIPHERTEXT_2, impSk, ~tid.1, m1, m2
    ) ▶₀ #j
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: StR2_PSK_PSK( $U.2, $V.2, ~ltk.2, ~yy.1, prk_3e2m, TH_2,              CIPHERTEXT_2, impSk, ~tid.2, m1, m2) ▶₀ #j2
1: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0,                              h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, gy>),                              'K_2ae'>,                            hkdfExtract(~ltk, impSk)),                 h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, gy>),                 $cAEAD0)) @ #vk.2
2: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.2,                              h(<$cHash0.2,                                 h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                  >),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0.1,                                                         h(<$cHash0.1,                                                            <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1                                                           >,                                                            'g'^~yy>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk.1, impSk)),                                            h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                              >),                                            $cAEAD0.1),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk.1, impSk)),                 h(<$cHash0.2,                     h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                      >),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                              >),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, impSk)),                                h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                  >),                                $cAEAD0.1),                     'emptyStr'>),                 $cAEAD0.2)) @ #vk.6
3: splitEqs(0)
4: splitEqs(3)
5: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.3,                              h(<$cHash0.3, TH_2, CIPHERTEXT_2, 'emptyStr'>), 'K_3ae'>,                            prk_3e2m),                 h(<$cHash0.3, TH_2, CIPHERTEXT_2, 'emptyStr'>), $cAEAD0.3)) @ #vk.7

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 16 (precomputed):
    StR2_PSK_PSK( $U.2, $V.2, ~ltk.2, ~yy.1, prk_3e2m, TH_2,
                  CIPHERTEXT_2, impSk, ~tid.2, m1, m2
    ) ▶₀ #j2
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0,                              h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, gy>),                              'K_2ae'>,                            hkdfExtract(~ltk, impSk)),                 h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, gy>),                 $cAEAD0)) @ #vk.2
1: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.2,                              h(<$cHash0.2,                                 h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                  >),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0.1,                                                         h(<$cHash0.1,                                                            <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1                                                           >,                                                            'g'^~yy>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk.1, impSk)),                                            h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                              >),                                            $cAEAD0.1),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk.1, impSk)),                 h(<$cHash0.2,                     h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                      >),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                              >),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, impSk)),                                h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                  >),                                $cAEAD0.1),                     'emptyStr'>),                 $cAEAD0.2)) @ #vk.5
2: splitEqs(0)
3: splitEqs(2)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 7 (precomputed):
    !KU( aeadEncrypt('emptyStr',
                     hkdfExpand(<$cAEAD0, 
                                 h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, gy>), 
                                 'K_2ae'>,
                                hkdfExtract(~ltk, impSk)),
                     h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, gy>),
                     $cAEAD0)
    ) @ #vk.2
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0,                              h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, gy>),                              'K_2ae'>,                            hkdfExtract(~ltk, impSk)),                 h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, gy>),                 $cAEAD0)) @ #vk.2
1: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.2,                              h(<$cHash0.2,                                 h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                  >),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0.1,                                                         h(<$cHash0.1,                                                            <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1                                                           >,                                                            'g'^~yy>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk.1, impSk)),                                            h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                              >),                                            $cAEAD0.1),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk.1, impSk)),                 h(<$cHash0.2,                     h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                      >),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                              >),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, impSk)),                                h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                  >),                                $cAEAD0.1),                     'emptyStr'>),                 $cAEAD0.2)) @ #vk.6
2: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.4,                              h(<$cHash0.4,                                 h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                                    'g'^~yy.1>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0.3,                                                         h(<$cHash0.3,                                                            <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2,                                                             $V.2>,                                                            'g'^~yy.1>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk.2, impSk)),                                            h(<$cHash0.3,                                                <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                                                'g'^~yy.1>),                                            $cAEAD0.3),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk.2, impSk)),                 h(<$cHash0.4,                     h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.3,                                             h(<$cHash0.3,                                                <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.2, impSk)),                                h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                                    'g'^~yy.1>),                                $cAEAD0.3),                     'emptyStr'>),                 $cAEAD0.4)) @ #vk.7
3: splitEqs(0)
4: splitEqs(3)
5: splitEqs(4)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 6 (precomputed):
    !KU( aeadEncrypt('emptyStr',
                     hkdfExpand(<$cAEAD0, 
                                 h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, gy>), 
                                 'K_2ae'>,
                                hkdfExtract(~ltk, impSk)),
                     h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, gy>),
                     $cAEAD0)
    ) @ #vk.2
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, gy>)) @ #vk.18
1: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.2,                              h(<$cHash0.2,                                 h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                  >),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0.1,                                                         h(<$cHash0.1,                                                            <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1                                                           >,                                                            'g'^~yy>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk.1, impSk)),                                            h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                              >),                                            $cAEAD0.1),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk.1, impSk)),                 h(<$cHash0.2,                     h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                      >),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                              >),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, impSk)),                                h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                  >),                                $cAEAD0.1),                     'emptyStr'>),                 $cAEAD0.2)) @ #vk.5
2: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, gy>),                  'K_2ae'>,                hkdfExtract(~ltk, impSk))) @ #vk.17
3: splitEqs(0)
4: splitEqs(2)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 34 (precomputed):
    !KU( h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, gy>)
    ) @ #vk.18
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: splitEqs(2)
1: !KU( 'g'^(~xx*~yy) ) @ #vk.6
2: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.2,                              h(<$cHash0.2,                                 h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                                    'g'^~yy.1>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0.1,                                                         h(<$cHash0.1,                                                            <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1,                                                             $V.1>,                                                            'g'^~yy.1>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                            h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                                                'g'^~yy.1>),                                            $cAEAD0.1),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.2,                     h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                 $cAEAD0.2)) @ #vk.5
3: !KU( 'g'^x ) @ #vk.15
4: !KU( 'g'^~xx ) @ #vk.22
5: !KU( 'g'^~yy ) @ #vk.2

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 30 (directly): splitEqs(2)
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, gy>)) @ #vk.28
1: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.2,                              h(<$cHash0.2,                                 h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                  >),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0.1,                                                         h(<$cHash0.1,                                                            <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1                                                           >,                                                            'g'^~yy>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk.1, impSk)),                                            h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                              >),                                            $cAEAD0.1),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk.1, impSk)),                 h(<$cHash0.2,                     h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                      >),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                              >),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, impSk)),                                h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                  >),                                $cAEAD0.1),                     'emptyStr'>),                 $cAEAD0.2)) @ #vk.6
2: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.4,                              h(<$cHash0.4,                                 h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                                    'g'^~yy.1>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0.3,                                                         h(<$cHash0.3,                                                            <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2,                                                             $V.2>,                                                            'g'^~yy.1>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk.2, impSk)),                                            h(<$cHash0.3,                                                <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                                                'g'^~yy.1>),                                            $cAEAD0.3),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk.2, impSk)),                 h(<$cHash0.4,                     h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.3,                                             h(<$cHash0.3,                                                <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.2, impSk)),                                h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                                    'g'^~yy.1>),                                $cAEAD0.3),                     'emptyStr'>),                 $cAEAD0.4)) @ #vk.7
3: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, gy>),                  'K_2ae'>,                hkdfExtract(~ltk, impSk))) @ #vk.27
4: splitEqs(0)
5: splitEqs(3)
6: splitEqs(4)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 51 (precomputed):
    !KU( h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, gy>)
    ) @ #vk.28
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: splitEqs(3)
1: splitEqs(4)
2: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.2,                              h(<$cHash0.2,                                 h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                                    'g'^~yy.1>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0.1,                                                         h(<$cHash0.1,                                                            <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1,                                                             $V.1>,                                                            'g'^~yy.1>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                            h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                                                'g'^~yy.1>),                                            $cAEAD0.1),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.2,                     h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                 $cAEAD0.2)) @ #vk.6
3: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.4,                              h(<$cHash0.4,                                 h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, 'g'^x.1, $U.2, $V.2>,                                    'g'^~yy.2>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0.3,                                                         h(<$cHash0.3,                                                            <'PSK', 'PSK', $cSUITE0.2, 'g'^x.1,                                                             $U.2, $V.2>,                                                            'g'^~yy.2>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk.2, 'g'^(~xx*~yy))),                                            h(<$cHash0.3,                                                <'PSK', 'PSK', $cSUITE0.2, 'g'^x.1, $U.2, $V.2>,                                                'g'^~yy.2>),                                            $cAEAD0.3),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk.2, 'g'^(~xx*~yy))),                 h(<$cHash0.4,                     h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, 'g'^x.1, $U.2, $V.2>,                        'g'^~yy.2>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.3,                                             h(<$cHash0.3,                                                <'PSK', 'PSK', $cSUITE0.2, 'g'^x.1, $U.2, $V.2>,                                                'g'^~yy.2>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.2, 'g'^(~xx*~yy))),                                h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, 'g'^x.1, $U.2, $V.2>,                                    'g'^~yy.2>),                                $cAEAD0.3),                     'emptyStr'>),                 $cAEAD0.4)) @ #vk.7
4: !KU( 'g'^x ) @ #vk.18
5: !KU( 'g'^x.1 ) @ #vk.25
6: !KU( 'g'^~xx ) @ #vk.32
7: !KU( 'g'^~yy ) @ #vk.2

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 34 (directly): splitEqs(3)
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( 'g'^(~xx*~yy) ) @ #vk.6
1: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1,                                 h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0,                                                         h(<$cHash0,                                                            <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V                                                           >,                                                            'g'^~yy>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk, 'g'^(~xx*~yy))),                                            h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                                                'g'^~yy>),                                            $cAEAD0),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk, 'g'^(~xx*~yy))),                 h(<$cHash0.1,                     h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0,                                             h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                                                'g'^~yy>),                                             'K_2ae'>,                                           hkdfExtract(~ltk, 'g'^(~xx*~yy))),                                h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                                $cAEAD0),                     'emptyStr'>),                 $cAEAD0.1)) @ #vk.5
2: !KU( 'g'^~xx ) @ #vk.13
3: !KU( 'g'^~yy ) @ #vk.2

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 44 (precomputed): !KU( 'g'^(~xx*~yy) ) @ #vk.6
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( 'g'^(~xx*~yy) ) @ #vk.6
1: !KU( 'g'^(~xx*~yy*inv(~yy.1)) ) @ #vk.15
2: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.2,                              h(<$cHash0.2,                                 h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0.1,                                                         h(<$cHash0.1,                                                            <'PSK', 'PSK', $cSUITE0.1,                                                             'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                                            'g'^~yy.1>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                            h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                            $cAEAD0.1),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                 $cAEAD0.2)) @ #vk.5
3: !KU( 'g'^~xx ) @ #vk.22
4: !KU( 'g'^~yy ) @ #vk.2

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 44 (precomputed): !KU( 'g'^(~xx*~yy) ) @ #vk.6
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~yy ) @ #vk.17
1: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1,                                 h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0,                                                         h(<$cHash0,                                                            <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V                                                           >,                                                            'g'^~yy>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk, 'g'^(~xx*~yy))),                                            h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                                                'g'^~yy>),                                            $cAEAD0),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk, 'g'^(~xx*~yy))),                 h(<$cHash0.1,                     h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0,                                             h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                                                'g'^~yy>),                                             'K_2ae'>,                                           hkdfExtract(~ltk, 'g'^(~xx*~yy))),                                h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                                $cAEAD0),                     'emptyStr'>),                 $cAEAD0.1)) @ #vk.6
2: !KU( 'g'^~xx ) @ #vk.13
3: !KU( 'g'^~yy ) @ #vk.3

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 47 (precomputed): !KU( ~yy ) @ #vk.17
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.17
1: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1,                                 h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0,                                                         h(<$cHash0,                                                            <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V                                                           >,                                                            'g'^~yy>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk, 'g'^(~xx*~yy))),                                            h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                                                'g'^~yy>),                                            $cAEAD0),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk, 'g'^(~xx*~yy))),                 h(<$cHash0.1,                     h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0,                                             h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                                                'g'^~yy>),                                             'K_2ae'>,                                           hkdfExtract(~ltk, 'g'^(~xx*~yy))),                                h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                                $cAEAD0),                     'emptyStr'>),                 $cAEAD0.1)) @ #vk.6
2: !KU( 'g'^~xx ) @ #vk.13
3: !KU( 'g'^~yy ) @ #vk.3

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 57 (precomputed): !KU( ~xx ) @ #vk.17
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~yy ) @ #vk.26
1: !KU( ~yy.1 ) @ #vk.28
2: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.2,                              h(<$cHash0.2,                                 h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0.1,                                                         h(<$cHash0.1,                                                            <'PSK', 'PSK', $cSUITE0.1,                                                             'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                                            'g'^~yy.1>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                            h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                            $cAEAD0.1),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                 $cAEAD0.2)) @ #vk.6
3: !KU( 'g'^~xx ) @ #vk.21
4: !KU( 'g'^~yy ) @ #vk.3

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 45 (precomputed): !KU( ~yy ) @ #vk.26
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.19
1: !KU( ~yy ) @ #vk.20
2: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1,                                 h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0,                                                         h(<$cHash0,                                                            <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V                                                           >,                                                            'g'^~yy>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk, 'g'^(~xx*~yy))),                                            h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                                                'g'^~yy>),                                            $cAEAD0),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk, 'g'^(~xx*~yy))),                 h(<$cHash0.1,                     h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0,                                             h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                                                'g'^~yy>),                                             'K_2ae'>,                                           hkdfExtract(~ltk, 'g'^(~xx*~yy))),                                h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                                $cAEAD0),                     'emptyStr'>),                 $cAEAD0.1)) @ #vk.6
3: !KU( 'g'^~xx ) @ #vk.13
4: !KU( 'g'^~yy ) @ #vk.3

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 49 (precomputed): !KU( ~xx ) @ #vk.19
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.26
1: !KU( ~yy.1 ) @ #vk.28
2: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.2,                              h(<$cHash0.2,                                 h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0.1,                                                         h(<$cHash0.1,                                                            <'PSK', 'PSK', $cSUITE0.1,                                                             'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                                            'g'^~yy.1>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                            h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                            $cAEAD0.1),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                 $cAEAD0.2)) @ #vk.6
3: !KU( 'g'^~xx ) @ #vk.21
4: !KU( 'g'^~yy ) @ #vk.3

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 55 (precomputed): !KU( ~xx ) @ #vk.26
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.27
1: !KU( ~yy ) @ #vk.28
2: !KU( ~yy.1 ) @ #vk.30
3: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.2,                              h(<$cHash0.2,                                 h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0.1,                                                         h(<$cHash0.1,                                                            <'PSK', 'PSK', $cSUITE0.1,                                                             'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                                            'g'^~yy.1>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                            h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                            $cAEAD0.1),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                 $cAEAD0.2)) @ #vk.6
4: !KU( 'g'^~xx ) @ #vk.21
5: !KU( 'g'^~yy ) @ #vk.3

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 46 (precomputed): !KU( ~xx ) @ #vk.27
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.26
1: !KU( 'g'^(~xx*~yy*inv(~yy.1)) ) @ #vk.15
2: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.2,                              h(<$cHash0.2,                                 h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0.1,                                                         h(<$cHash0.1,                                                            <'PSK', 'PSK', $cSUITE0.1,                                                             'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                                            'g'^~yy.1>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                            h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                            $cAEAD0.1),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                 $cAEAD0.2)) @ #vk.6
3: !KU( 'g'^~xx ) @ #vk.22
4: !KU( 'g'^~yy ) @ #vk.3

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 57 (precomputed): !KU( ~xx ) @ #vk.26
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~yy ) @ #vk.26
1: !KU( 'g'^(~xx*~yy*inv(~yy.1)) ) @ #vk.15
2: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.2,                              h(<$cHash0.2,                                 h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0.1,                                                         h(<$cHash0.1,                                                            <'PSK', 'PSK', $cSUITE0.1,                                                             'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                                            'g'^~yy.1>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                            h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                            $cAEAD0.1),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                 $cAEAD0.2)) @ #vk.6
3: !KU( 'g'^~xx ) @ #vk.22
4: !KU( 'g'^~yy ) @ #vk.3

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 47 (precomputed): !KU( ~yy ) @ #vk.26
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.28
1: !KU( ~yy ) @ #vk.29
2: !KU( 'g'^(~xx*~yy*inv(~yy.1)) ) @ #vk.15
3: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.2,                              h(<$cHash0.2,                                 h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0.1,                                                         h(<$cHash0.1,                                                            <'PSK', 'PSK', $cSUITE0.1,                                                             'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                                            'g'^~yy.1>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                            h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                            $cAEAD0.1),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                 $cAEAD0.2)) @ #vk.6
4: !KU( 'g'^~xx ) @ #vk.22
5: !KU( 'g'^~yy ) @ #vk.3

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 49 (precomputed): !KU( ~xx ) @ #vk.28
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( h(<$cHash0.2,         h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy          >),         aeadEncrypt('emptyStr',                    hkdfExpand(<$cAEAD0.1,                                 h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                  >),                                 'K_2ae'>,                               hkdfExtract(~ltk.1, impSk)),                    h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                      >),                    $cAEAD0.1),         'emptyStr'>)) @ #vk.32
1: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, gy>),                  'K_2ae'>,                hkdfExtract(~ltk, impSk))) @ #vk.21
2: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                      >),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                              >),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, impSk)),                                h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                  >),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, impSk))) @ #vk.31
3: splitEqs(0)
4: splitEqs(2)
5: !KU( 'g'^~xx ) @ #vk.27

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 53 (precomputed):
    !KU( h(<$cHash0.2, 
            h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy
              >), 
            aeadEncrypt('emptyStr',
                        hkdfExpand(<$cAEAD0.1, 
                                    h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 
                                       'g'^~yy>), 
                                    'K_2ae'>,
                                   hkdfExtract(~ltk.1, impSk)),
                        h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy
                          >),
                        $cAEAD0.1), 
            'emptyStr'>)
    ) @ #vk.32
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: splitEqs(0)
1: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^x>),                  'K_2ae'>,                hkdfExtract(~ltk, 'g'^(~yy*~xx.1)))) @ #vk.21
2: !KU( 'g'^x ) @ #vk.4
3: !KU( 'g'^~xx ) @ #vk.27
4: !KU( 'g'^~yy ) @ #vk.32
5: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^~xx.1, $U.1, $V.1>,                                 'g'^~yy>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~yy*~xx.1))),                 h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^~xx.1, $U.1, $V.1>,                     'g'^~yy>),                 $cAEAD0.1)) @ #vk.33
6: !KU( 'g'^~xx.1 ) @ #vk.17

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 2 (directly): splitEqs(0)
  simplified formula:
      "¬($U = $U)"
    to
      "⊥"
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.2,                              h(<$cHash0.2,                                 h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                  >),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0.1,                                                         h(<$cHash0.1,                                                            <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1                                                           >,                                                            'g'^~yy>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk.1, impSk)),                                            h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                              >),                                            $cAEAD0.1),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk.1, impSk)),                 h(<$cHash0.2,                     h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                      >),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                              >),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, impSk)),                                h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                  >),                                $cAEAD0.1),                     'emptyStr'>),                 $cAEAD0.2)) @ #vk.7
1: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, gy>),                  'K_2ae'>,                hkdfExtract(~ltk, impSk))) @ #vk.21
2: splitEqs(0)
3: splitEqs(2)
4: !KU( 'g'^~xx ) @ #vk.28

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 12 (precomputed):
    !KU( aeadEncrypt('emptyStr',
                     hkdfExpand(<$cAEAD0.2, 
                                 h(<$cHash0.2, 
                                    h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 
                                       'g'^~yy>), 
                                    aeadEncrypt('emptyStr',
                                                hkdfExpand(<$cAEAD0.1, 
                                                            h(<$cHash0.1, 
                                                               <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, 
                                                                $V.1>, 
                                                               'g'^~yy>), 
                                                            'K_2ae'>,
                                                           hkdfExtract(~ltk.1, impSk)),
                                                h(<$cHash0.1, 
                                                   <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 
                                                   'g'^~yy>),
                                                $cAEAD0.1), 
                                    'emptyStr'>), 
                                 'K_3ae'>,
                                hkdfExtract(~ltk.1, impSk)),
                     h(<$cHash0.2, 
                        h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy
                          >), 
                        aeadEncrypt('emptyStr',
                                    hkdfExpand(<$cAEAD0.1, 
                                                h(<$cHash0.1, 
                                                   <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 
                                                   'g'^~yy>), 
                                                'K_2ae'>,
                                               hkdfExtract(~ltk.1, impSk)),
                                    h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 
                                       'g'^~yy>),
                                    $cAEAD0.1), 
                        'emptyStr'>),
                     $cAEAD0.2)
    ) @ #vk.7
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( 'g'^(~yy*~xx.1*inv(~xx)) ) @ #vk.5
1: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                     'g'^(~yy*~xx.1*inv(~xx))>),                  'K_2ae'>,                hkdfExtract(~ltk, 'g'^(~yy*~xx.1)))) @ #vk.21
2: !KU( 'g'^~xx ) @ #vk.27
3: !KU( 'g'^~yy ) @ #vk.32
4: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^~xx.1, $U.1, $V.1>,                                 'g'^~yy>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~yy*~xx.1))),                 h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^~xx.1, $U.1, $V.1>,                     'g'^~yy>),                 $cAEAD0.1)) @ #vk.33
5: !KU( 'g'^~xx.1 ) @ #vk.17

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 56 (precomputed):
    !KU( 'g'^(~yy*~xx.1*inv(~xx)) ) @ #vk.5
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( h(<$cHash0.2,         h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy          >),         aeadEncrypt('emptyStr',                    hkdfExpand(<$cAEAD0.1,                                 h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                  >),                                 'K_2ae'>,                               hkdfExtract(~ltk.1, impSk)),                    h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                      >),                    $cAEAD0.1),         'emptyStr'>)) @ #vk.33
1: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, gy>),                  'K_2ae'>,                hkdfExtract(~ltk, impSk))) @ #vk.22
2: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                      >),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                              >),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, impSk)),                                h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                  >),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, impSk))) @ #vk.32
3: splitEqs(0)
4: splitEqs(2)
5: !KU( 'g'^~xx ) @ #vk.28

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 55 (precomputed):
    !KU( h(<$cHash0.2, 
            h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy
              >), 
            aeadEncrypt('emptyStr',
                        hkdfExpand(<$cAEAD0.1, 
                                    h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 
                                       'g'^~yy>), 
                                    'K_2ae'>,
                                   hkdfExtract(~ltk.1, impSk)),
                        h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy
                          >),
                        $cAEAD0.1), 
            'emptyStr'>)
    ) @ #vk.33
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: splitEqs(0)
1: !KU( 'g'^(~yy*~xx.1) ) @ #vk.9
2: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^x>),                  'K_2ae'>,                hkdfExtract(~ltk, 'g'^(~yy*~xx.1)))) @ #vk.22
3: !KU( 'g'^x ) @ #vk.4
4: !KU( 'g'^~xx ) @ #vk.28
5: !KU( 'g'^~yy ) @ #vk.33
6: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^~xx.1, $U.1, $V.1>,                                 'g'^~yy>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~yy*~xx.1))),                 h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^~xx.1, $U.1, $V.1>,                     'g'^~yy>),                 $cAEAD0.1)) @ #vk.34
7: !KU( 'g'^~xx.1 ) @ #vk.18

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 3 (directly): splitEqs(0)
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( 'g'^(~yy*~xx.1*inv(~xx)) ) @ #vk.5
1: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                     'g'^(~yy*~xx.1*inv(~xx))>),                  'K_2ae'>,                hkdfExtract(~ltk, 'g'^(~yy*~xx.1)))) @ #vk.21
2: !KU( 'g'^~xx ) @ #vk.27
3: !KU( 'g'^~yy ) @ #vk.32
4: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^~xx.1, $U.1, $V.1>,                                 'g'^~yy>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~yy*~xx.1))),                 h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^~xx.1, $U.1, $V.1>,                     'g'^~yy>),                 $cAEAD0.1)) @ #vk.33
5: !KU( 'g'^~xx.1 ) @ #vk.17

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 55 (precomputed):
    !KU( 'g'^(~yy*~xx.1*inv(~xx)) ) @ #vk.5
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx.1 ) @ #vk.35
1: !KU( ~xx ) @ #vk.37
2: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                     'g'^(~yy*~xx.1*inv(~xx))>),                  'K_2ae'>,                hkdfExtract(~ltk, 'g'^(~yy*~xx.1)))) @ #vk.21
3: !KU( 'g'^~xx ) @ #vk.27
4: !KU( 'g'^~yy ) @ #vk.32
5: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^~xx.1, $U.1, $V.1>,                                 'g'^~yy>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~yy*~xx.1))),                 h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^~xx.1, $U.1, $V.1>,                     'g'^~yy>),                 $cAEAD0.1)) @ #vk.33
6: !KU( 'g'^~xx.1 ) @ #vk.17

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 70 (precomputed): !KU( ~xx.1 ) @ #vk.35
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~yy ) @ #vk.36
1: !KU( ~xx.1 ) @ #vk.37
2: !KU( ~xx ) @ #vk.39
3: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                     'g'^(~yy*~xx.1*inv(~xx))>),                  'K_2ae'>,                hkdfExtract(~ltk, 'g'^(~yy*~xx.1)))) @ #vk.21
4: !KU( 'g'^~xx ) @ #vk.27
5: !KU( 'g'^~yy ) @ #vk.32
6: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^~xx.1, $U.1, $V.1>,                                 'g'^~yy>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~yy*~xx.1))),                 h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^~xx.1, $U.1, $V.1>,                     'g'^~yy>),                 $cAEAD0.1)) @ #vk.33
7: !KU( 'g'^~xx.1 ) @ #vk.17

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 61 (precomputed): !KU( ~yy ) @ #vk.36
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~yy ) @ #vk.35
1: !KU( ~xx ) @ #vk.37
2: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                     'g'^(~yy*~xx.1*inv(~xx))>),                  'K_2ae'>,                hkdfExtract(~ltk, 'g'^(~yy*~xx.1)))) @ #vk.21
3: !KU( 'g'^~xx ) @ #vk.27
4: !KU( 'g'^~yy ) @ #vk.32
5: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^~xx.1, $U.1, $V.1>,                                 'g'^~yy>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~yy*~xx.1))),                 h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^~xx.1, $U.1, $V.1>,                     'g'^~yy>),                 $cAEAD0.1)) @ #vk.33
6: !KU( 'g'^~xx.1 ) @ #vk.17

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 60 (precomputed): !KU( ~yy ) @ #vk.35
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>,         'g'^~yy>)) @ #vk.38
1: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, gy>),                  'K_2ae'>,                hkdfExtract(~ltk, impSk))) @ #vk.23
2: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                      >),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                              >),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, impSk)),                                h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                  >),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, impSk))) @ #vk.33
3: splitEqs(0)
4: splitEqs(2)
5: !KU( 'g'^~xx ) @ #vk.29
6: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                               >),                              'K_2ae'>,                            hkdfExtract(~ltk.1, impSk)),                 h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                   >),                 $cAEAD0.1)) @ #vk.39

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 59 (precomputed):
    !KU( h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 
            'g'^~yy>)
    ) @ #vk.38
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~yy ) @ #vk.36
1: !KU( ~xx.1 ) @ #vk.37
2: !KU( ~xx ) @ #vk.39
3: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                     'g'^(~yy*~xx.1*inv(~xx))>),                  'K_2ae'>,                hkdfExtract(~ltk, 'g'^(~yy*~xx.1)))) @ #vk.21
4: !KU( 'g'^~xx ) @ #vk.27
5: !KU( 'g'^~yy ) @ #vk.32
6: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^~xx.1, $U.1, $V.1>,                                 'g'^~yy>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~yy*~xx.1))),                 h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^~xx.1, $U.1, $V.1>,                     'g'^~yy>),                 $cAEAD0.1)) @ #vk.33
7: !KU( 'g'^~xx.1 ) @ #vk.17

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 60 (precomputed): !KU( ~yy ) @ #vk.36
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~yy ) @ #vk.35
1: !KU( ~xx ) @ #vk.37
2: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                     'g'^(~yy*~xx.1*inv(~xx))>),                  'K_2ae'>,                hkdfExtract(~ltk, 'g'^(~yy*~xx.1)))) @ #vk.21
3: !KU( 'g'^~xx ) @ #vk.27
4: !KU( 'g'^~yy ) @ #vk.32
5: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^~xx.1, $U.1, $V.1>,                                 'g'^~yy>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~yy*~xx.1))),                 h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^~xx.1, $U.1, $V.1>,                     'g'^~yy>),                 $cAEAD0.1)) @ #vk.33
6: !KU( 'g'^~xx.1 ) @ #vk.17

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 59 (precomputed): !KU( ~yy ) @ #vk.35
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx.1 ) @ #vk.35
1: !KU( ~xx ) @ #vk.37
2: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                     'g'^(~yy*~xx.1*inv(~xx))>),                  'K_2ae'>,                hkdfExtract(~ltk, 'g'^(~yy*~xx.1)))) @ #vk.21
3: !KU( 'g'^~xx ) @ #vk.27
4: !KU( 'g'^~yy ) @ #vk.32
5: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^~xx.1, $U.1, $V.1>,                                 'g'^~yy>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~yy*~xx.1))),                 h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^~xx.1, $U.1, $V.1>,                     'g'^~yy>),                 $cAEAD0.1)) @ #vk.33
6: !KU( 'g'^~xx.1 ) @ #vk.17

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 69 (precomputed): !KU( ~xx.1 ) @ #vk.35
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, gy>),                  'K_2ae'>,                hkdfExtract(~ltk, impSk))) @ #vk.26
1: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                      >),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                              >),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, impSk)),                                h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                  >),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, impSk))) @ #vk.36
2: splitEqs(0)
3: splitEqs(2)
4: !KU( 'g'^~xx ) @ #vk.32
5: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                               >),                              'K_2ae'>,                            hkdfExtract(~ltk.1, impSk)),                 h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                   >),                 $cAEAD0.1)) @ #vk.40
6: !KU( 'g'^~yy ) @ #vk.43

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 31 (precomputed):
    !KU( hkdfExpand(<$cAEAD0, 
                     h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, gy>), 
                     'K_2ae'>,
                    hkdfExtract(~ltk, impSk))
    ) @ #vk.26
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>,         'g'^~yy>)) @ #vk.38
1: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, gy>),                  'K_2ae'>,                hkdfExtract(~ltk, impSk))) @ #vk.23
2: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                      >),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                              >),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, impSk)),                                h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                  >),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, impSk))) @ #vk.33
3: splitEqs(0)
4: splitEqs(2)
5: !KU( 'g'^~xx ) @ #vk.29
6: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                               >),                              'K_2ae'>,                            hkdfExtract(~ltk.1, impSk)),                 h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                   >),                 $cAEAD0.1)) @ #vk.39

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 58 (precomputed):
    !KU( h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 
            'g'^~yy>)
    ) @ #vk.38
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, gy>),                  'K_2ae'>,                hkdfExtract(~ltk, impSk))) @ #vk.26
1: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                      >),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                              >),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, impSk)),                                h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                  >),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, impSk))) @ #vk.36
2: splitEqs(0)
3: splitEqs(2)
4: !KU( 'g'^~xx ) @ #vk.32
5: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                               >),                              'K_2ae'>,                            hkdfExtract(~ltk.1, impSk)),                 h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                   >),                 $cAEAD0.1)) @ #vk.40
6: !KU( 'g'^~yy ) @ #vk.43

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 30 (precomputed):
    !KU( hkdfExpand(<$cAEAD0, 
                     h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, gy>), 
                     'K_2ae'>,
                    hkdfExtract(~ltk, impSk))
    ) @ #vk.26
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( hkdfExtract(~ltk, impSk) ) @ #vk.46
1: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                      >),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                              >),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, impSk)),                                h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                  >),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, impSk))) @ #vk.40
2: splitEqs(0)
3: splitEqs(2)
4: !KU( 'g'^~xx ) @ #vk.36
5: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                               >),                              'K_2ae'>,                            hkdfExtract(~ltk.1, impSk)),                 h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                   >),                 $cAEAD0.1)) @ #vk.43
6: !KU( 'g'^~yy ) @ #vk.45

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 81 (precomputed):
    !KU( hkdfExtract(~ltk, impSk) ) @ #vk.46
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: splitEqs(2)
1: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~xx*~yy)))) @ #vk.38
2: !KU( 'g'^x ) @ #vk.25
3: !KU( 'g'^~xx ) @ #vk.34
4: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                     'g'^~yy.1>),                 $cAEAD0.1)) @ #vk.41
5: !KU( 'g'^~yy.1 ) @ #vk.43
6: !KU( 'g'^~yy ) @ #vk.9

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 28 (directly): splitEqs(2)
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: splitEqs(2)
1: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~xx*~yy)))) @ #vk.38
2: !KU( 'g'^x ) @ #vk.25
3: !KU( 'g'^~xx ) @ #vk.34
4: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                     'g'^~yy.1>),                 $cAEAD0.1)) @ #vk.41
5: !KU( 'g'^~yy.1 ) @ #vk.43
6: !KU( 'g'^~yy ) @ #vk.9

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 28 (directly): splitEqs(2)
  simplified formula:
      "¬($U = $U)"
    to
      "⊥"
  simplified formula:
      "¬($U = $U)"
    to
      "⊥"
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( 'g'^(~xx*~yy*inv(~yy.1)) ) @ #vk.25
1: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~xx*~yy)))) @ #vk.38
2: !KU( 'g'^~xx ) @ #vk.34
3: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1,                                 <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.1,                     <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                     'g'^~yy.1>),                 $cAEAD0.1)) @ #vk.41
4: !KU( 'g'^~yy.1 ) @ #vk.43
5: !KU( 'g'^~yy ) @ #vk.10

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 99 (precomputed):
    !KU( 'g'^(~xx*~yy*inv(~yy.1)) ) @ #vk.25
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( hkdfExtract(~ltk, impSk) ) @ #vk.46
1: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                      >),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                              >),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, impSk)),                                h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                  >),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, impSk))) @ #vk.40
2: splitEqs(0)
3: splitEqs(2)
4: !KU( 'g'^~xx ) @ #vk.36
5: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                               >),                              'K_2ae'>,                            hkdfExtract(~ltk.1, impSk)),                 h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                   >),                 $cAEAD0.1)) @ #vk.43
6: !KU( 'g'^~yy ) @ #vk.45

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 80 (precomputed):
    !KU( hkdfExtract(~ltk, impSk) ) @ #vk.46
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: splitEqs(2)
1: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~xx*~yy)))) @ #vk.38
2: !KU( 'g'^x ) @ #vk.25
3: !KU( 'g'^~xx ) @ #vk.34
4: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                     'g'^~yy.1>),                 $cAEAD0.1)) @ #vk.41
5: !KU( 'g'^~yy.1 ) @ #vk.43
6: !KU( 'g'^~yy ) @ #vk.9

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 27 (directly): splitEqs(2)
  simplified formula:
      "¬($U = $U)"
    to
      "⊥"
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: splitEqs(2)
1: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~xx*~yy)))) @ #vk.38
2: !KU( 'g'^x ) @ #vk.25
3: !KU( 'g'^~xx ) @ #vk.34
4: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                     'g'^~yy.1>),                 $cAEAD0.1)) @ #vk.41
5: !KU( 'g'^~yy.1 ) @ #vk.43
6: !KU( 'g'^~yy ) @ #vk.9

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 27 (directly): splitEqs(2)
  simplified formula:
      "¬($U = $U)"
    to
      "⊥"
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( 'g'^(~xx*~yy*inv(~yy.1)) ) @ #vk.25
1: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~xx*~yy)))) @ #vk.38
2: !KU( 'g'^~xx ) @ #vk.34
3: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1,                                 <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.1,                     <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                     'g'^~yy.1>),                 $cAEAD0.1)) @ #vk.41
4: !KU( 'g'^~yy.1 ) @ #vk.43
5: !KU( 'g'^~yy ) @ #vk.10

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 98 (precomputed):
    !KU( 'g'^(~xx*~yy*inv(~yy.1)) ) @ #vk.25
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.46
1: !KU( ~yy ) @ #vk.47
2: !KU( ~yy.1 ) @ #vk.49
3: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~xx*~yy)))) @ #vk.38
4: !KU( 'g'^~xx ) @ #vk.34
5: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1,                                 <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.1,                     <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                     'g'^~yy.1>),                 $cAEAD0.1)) @ #vk.41
6: !KU( 'g'^~yy.1 ) @ #vk.43
7: !KU( 'g'^~yy ) @ #vk.11

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 103 (precomputed): !KU( ~xx ) @ #vk.46
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~yy ) @ #vk.45
1: !KU( ~yy.1 ) @ #vk.47
2: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~xx*~yy)))) @ #vk.38
3: !KU( 'g'^~xx ) @ #vk.34
4: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1,                                 <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.1,                     <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                     'g'^~yy.1>),                 $cAEAD0.1)) @ #vk.41
5: !KU( 'g'^~yy.1 ) @ #vk.43
6: !KU( 'g'^~yy ) @ #vk.11

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 102 (precomputed): !KU( ~yy ) @ #vk.45
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.45
1: !KU( ~yy.1 ) @ #vk.47
2: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~xx*~yy)))) @ #vk.38
3: !KU( 'g'^~xx ) @ #vk.34
4: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1,                                 <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.1,                     <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                     'g'^~yy.1>),                 $cAEAD0.1)) @ #vk.41
5: !KU( 'g'^~yy.1 ) @ #vk.43
6: !KU( 'g'^~yy ) @ #vk.11

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 112 (precomputed): !KU( ~xx ) @ #vk.45
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( 'g'^(~xx*~yy*inv(~yy.1)) ) @ #vk.25
1: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~xx*~yy)))) @ #vk.38
2: !KU( 'g'^~xx ) @ #vk.34
3: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1,                                 <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.1,                     <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                     'g'^~yy.1>),                 $cAEAD0.1)) @ #vk.41
4: !KU( 'g'^~yy.1 ) @ #vk.43
5: !KU( 'g'^~yy ) @ #vk.10

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 94 (precomputed):
    !KU( 'g'^(~xx*~yy*inv(~yy.1)) ) @ #vk.25
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.46
1: !KU( ~yy ) @ #vk.47
2: !KU( ~yy.1 ) @ #vk.49
3: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~xx*~yy)))) @ #vk.38
4: !KU( 'g'^~xx ) @ #vk.34
5: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1,                                 <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.1,                     <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                     'g'^~yy.1>),                 $cAEAD0.1)) @ #vk.41
6: !KU( 'g'^~yy.1 ) @ #vk.43
7: !KU( 'g'^~yy ) @ #vk.11

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 102 (precomputed): !KU( ~xx ) @ #vk.46
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~yy ) @ #vk.45
1: !KU( ~yy.1 ) @ #vk.47
2: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~xx*~yy)))) @ #vk.38
3: !KU( 'g'^~xx ) @ #vk.34
4: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1,                                 <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.1,                     <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                     'g'^~yy.1>),                 $cAEAD0.1)) @ #vk.41
5: !KU( 'g'^~yy.1 ) @ #vk.43
6: !KU( 'g'^~yy ) @ #vk.11

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 101 (precomputed): !KU( ~yy ) @ #vk.45
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.45
1: !KU( ~yy.1 ) @ #vk.47
2: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~xx*~yy)))) @ #vk.38
3: !KU( 'g'^~xx ) @ #vk.34
4: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1,                                 <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.1,                     <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                     'g'^~yy.1>),                 $cAEAD0.1)) @ #vk.41
5: !KU( 'g'^~yy.1 ) @ #vk.43
6: !KU( 'g'^~yy ) @ #vk.11

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 111 (precomputed): !KU( ~xx ) @ #vk.45
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( 'g'^(~xx*~yy*inv(~yy.1)) ) @ #vk.25
1: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~xx*~yy)))) @ #vk.38
2: !KU( 'g'^~xx ) @ #vk.34
3: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1,                                 <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.1,                     <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                     'g'^~yy.1>),                 $cAEAD0.1)) @ #vk.41
4: !KU( 'g'^~yy.1 ) @ #vk.43
5: !KU( 'g'^~yy ) @ #vk.10

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 93 (precomputed):
    !KU( 'g'^(~xx*~yy*inv(~yy.1)) ) @ #vk.25
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.46
1: !KU( ~yy.1 ) @ #vk.48
2: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~xx*~yy)))) @ #vk.38
3: !KU( 'g'^~xx ) @ #vk.34
4: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1,                                 <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.1,                     <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                     'g'^~yy.1>),                 $cAEAD0.1)) @ #vk.41
5: !KU( 'g'^~yy.1 ) @ #vk.43
6: !KU( 'g'^~yy ) @ #vk.11

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 107 (precomputed): !KU( ~xx ) @ #vk.46
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~yy ) @ #vk.46
1: !KU( ~yy.1 ) @ #vk.48
2: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~xx*~yy)))) @ #vk.38
3: !KU( 'g'^~xx ) @ #vk.34
4: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1,                                 <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.1,                     <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                     'g'^~yy.1>),                 $cAEAD0.1)) @ #vk.41
5: !KU( 'g'^~yy.1 ) @ #vk.43
6: !KU( 'g'^~yy ) @ #vk.11

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 97 (precomputed): !KU( ~yy ) @ #vk.46
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.47
1: !KU( ~yy ) @ #vk.48
2: !KU( ~yy.1 ) @ #vk.50
3: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~xx*~yy)))) @ #vk.38
4: !KU( 'g'^~xx ) @ #vk.34
5: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1,                                 <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.1,                     <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                     'g'^~yy.1>),                 $cAEAD0.1)) @ #vk.41
6: !KU( 'g'^~yy.1 ) @ #vk.43
7: !KU( 'g'^~yy ) @ #vk.11

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 98 (precomputed): !KU( ~xx ) @ #vk.47
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~ltk ) @ #vk.48
1: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                      >),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                              >),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, impSk)),                                h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                  >),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, impSk))) @ #vk.41
2: splitEqs(0)
3: splitEqs(2)
4: !KU( 'g'^~xx ) @ #vk.37
5: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                               >),                              'K_2ae'>,                            hkdfExtract(~ltk.1, impSk)),                 h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                   >),                 $cAEAD0.1)) @ #vk.44
6: !KU( 'g'^~yy ) @ #vk.46

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 87 (precomputed): !KU( ~ltk ) @ #vk.48
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.47
1: !KU( ~yy ) @ #vk.48
2: !KU( ~yy.1 ) @ #vk.50
3: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~xx*~yy)))) @ #vk.38
4: !KU( 'g'^~xx ) @ #vk.34
5: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1,                                 <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.1,                     <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                     'g'^~yy.1>),                 $cAEAD0.1)) @ #vk.41
6: !KU( 'g'^~yy.1 ) @ #vk.43
7: !KU( 'g'^~yy ) @ #vk.11

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 97 (precomputed): !KU( ~xx ) @ #vk.47
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.46
1: !KU( ~yy.1 ) @ #vk.48
2: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~xx*~yy)))) @ #vk.38
3: !KU( 'g'^~xx ) @ #vk.34
4: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1,                                 <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.1,                     <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                     'g'^~yy.1>),                 $cAEAD0.1)) @ #vk.41
5: !KU( 'g'^~yy.1 ) @ #vk.43
6: !KU( 'g'^~yy ) @ #vk.11

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 106 (precomputed): !KU( ~xx ) @ #vk.46
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~yy ) @ #vk.46
1: !KU( ~yy.1 ) @ #vk.48
2: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~xx*~yy)))) @ #vk.38
3: !KU( 'g'^~xx ) @ #vk.34
4: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1,                                 <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.1,                     <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                     'g'^~yy.1>),                 $cAEAD0.1)) @ #vk.41
5: !KU( 'g'^~yy.1 ) @ #vk.43
6: !KU( 'g'^~yy ) @ #vk.11

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 96 (precomputed): !KU( ~yy ) @ #vk.46
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~ltk ) @ #vk.48
1: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                      >),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                              >),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, impSk)),                                h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                  >),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, impSk))) @ #vk.41
2: splitEqs(0)
3: splitEqs(2)
4: !KU( 'g'^~xx ) @ #vk.37
5: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                               >),                              'K_2ae'>,                            hkdfExtract(~ltk.1, impSk)),                 h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                   >),                 $cAEAD0.1)) @ #vk.44
6: !KU( 'g'^~yy ) @ #vk.46

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 86 (precomputed): !KU( ~ltk ) @ #vk.48
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.27
1: !KU( ~yy ) @ #vk.28
2: !KU( ~yy.1 ) @ #vk.30
3: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.2,                              h(<$cHash0.2,                                 h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0.1,                                                         h(<$cHash0.1,                                                            <'PSK', 'PSK', $cSUITE0.1,                                                             'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                                            'g'^~yy.1>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                            h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                            $cAEAD0.1),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                 $cAEAD0.2)) @ #vk.6
4: !KU( 'g'^~xx ) @ #vk.21
5: !KU( 'g'^~yy ) @ #vk.3

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 46 (precomputed): !KU( ~xx ) @ #vk.27
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~yy ) @ #vk.26
1: !KU( ~yy.1 ) @ #vk.28
2: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.2,                              h(<$cHash0.2,                                 h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0.1,                                                         h(<$cHash0.1,                                                            <'PSK', 'PSK', $cSUITE0.1,                                                             'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                                            'g'^~yy.1>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                            h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                            $cAEAD0.1),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                 $cAEAD0.2)) @ #vk.6
3: !KU( 'g'^~xx ) @ #vk.21
4: !KU( 'g'^~yy ) @ #vk.3

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 45 (precomputed): !KU( ~yy ) @ #vk.26
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.26
1: !KU( ~yy.1 ) @ #vk.28
2: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.2,                              h(<$cHash0.2,                                 h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0.1,                                                         h(<$cHash0.1,                                                            <'PSK', 'PSK', $cSUITE0.1,                                                             'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                                            'g'^~yy.1>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                            h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                            $cAEAD0.1),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                 $cAEAD0.2)) @ #vk.6
3: !KU( 'g'^~xx ) @ #vk.21
4: !KU( 'g'^~yy ) @ #vk.3

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 55 (precomputed): !KU( ~xx ) @ #vk.26
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( h(<$cHash0.2,         h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy          >),         aeadEncrypt('emptyStr',                    hkdfExpand(<$cAEAD0.1,                                 h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                  >),                                 'K_2ae'>,                               hkdfExtract(~ltk.1, impSk)),                    h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                      >),                    $cAEAD0.1),         'emptyStr'>)) @ #vk.32
1: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, gy>),                  'K_2ae'>,                hkdfExtract(~ltk, impSk))) @ #vk.21
2: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                      >),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                              >),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, impSk)),                                h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                  >),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, impSk))) @ #vk.31
3: splitEqs(0)
4: splitEqs(2)
5: !KU( 'g'^~xx ) @ #vk.27

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 53 (precomputed):
    !KU( h(<$cHash0.2, 
            h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy
              >), 
            aeadEncrypt('emptyStr',
                        hkdfExpand(<$cAEAD0.1, 
                                    h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 
                                       'g'^~yy>), 
                                    'K_2ae'>,
                                   hkdfExtract(~ltk.1, impSk)),
                        h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy
                          >),
                        $cAEAD0.1), 
            'emptyStr'>)
    ) @ #vk.32
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: splitEqs(0)
1: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^x>),                  'K_2ae'>,                hkdfExtract(~ltk, 'g'^(~yy*~xx.1)))) @ #vk.21
2: !KU( 'g'^x ) @ #vk.4
3: !KU( 'g'^~xx ) @ #vk.27
4: !KU( 'g'^~yy ) @ #vk.32
5: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^~xx.1, $U.1, $V.1>,                                 'g'^~yy>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~yy*~xx.1))),                 h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^~xx.1, $U.1, $V.1>,                     'g'^~yy>),                 $cAEAD0.1)) @ #vk.33
6: !KU( 'g'^~xx.1 ) @ #vk.17

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 2 (directly): splitEqs(0)
  simplified formula:
      "¬($V = $V)"
    to
      "⊥"
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( 'g'^(~yy*~xx.1*inv(~xx)) ) @ #vk.5
1: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                     'g'^(~yy*~xx.1*inv(~xx))>),                  'K_2ae'>,                hkdfExtract(~ltk, 'g'^(~yy*~xx.1)))) @ #vk.21
2: !KU( 'g'^~xx ) @ #vk.27
3: !KU( 'g'^~yy ) @ #vk.32
4: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^~xx.1, $U.1, $V.1>,                                 'g'^~yy>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~yy*~xx.1))),                 h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^~xx.1, $U.1, $V.1>,                     'g'^~yy>),                 $cAEAD0.1)) @ #vk.33
5: !KU( 'g'^~xx.1 ) @ #vk.17

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 55 (precomputed):
    !KU( 'g'^(~yy*~xx.1*inv(~xx)) ) @ #vk.5
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( 'g'^(~yy*~xx.1*inv(~xx)) ) @ #vk.5
1: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                     'g'^(~yy*~xx.1*inv(~xx))>),                  'K_2ae'>,                hkdfExtract(~ltk, 'g'^(~yy*~xx.1)))) @ #vk.21
2: !KU( 'g'^~xx ) @ #vk.27
3: !KU( 'g'^~yy ) @ #vk.32
4: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^~xx.1, $U.1, $V.1>,                                 'g'^~yy>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~yy*~xx.1))),                 h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^~xx.1, $U.1, $V.1>,                     'g'^~yy>),                 $cAEAD0.1)) @ #vk.33
5: !KU( 'g'^~xx.1 ) @ #vk.17

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 56 (precomputed):
    !KU( 'g'^(~yy*~xx.1*inv(~xx)) ) @ #vk.5
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx.1 ) @ #vk.35
1: !KU( ~xx ) @ #vk.37
2: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                     'g'^(~yy*~xx.1*inv(~xx))>),                  'K_2ae'>,                hkdfExtract(~ltk, 'g'^(~yy*~xx.1)))) @ #vk.21
3: !KU( 'g'^~xx ) @ #vk.27
4: !KU( 'g'^~yy ) @ #vk.32
5: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^~xx.1, $U.1, $V.1>,                                 'g'^~yy>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~yy*~xx.1))),                 h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^~xx.1, $U.1, $V.1>,                     'g'^~yy>),                 $cAEAD0.1)) @ #vk.33
6: !KU( 'g'^~xx.1 ) @ #vk.17

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 69 (precomputed): !KU( ~xx.1 ) @ #vk.35
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~yy ) @ #vk.36
1: !KU( ~xx.1 ) @ #vk.37
2: !KU( ~xx ) @ #vk.39
3: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                     'g'^(~yy*~xx.1*inv(~xx))>),                  'K_2ae'>,                hkdfExtract(~ltk, 'g'^(~yy*~xx.1)))) @ #vk.21
4: !KU( 'g'^~xx ) @ #vk.27
5: !KU( 'g'^~yy ) @ #vk.32
6: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^~xx.1, $U.1, $V.1>,                                 'g'^~yy>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~yy*~xx.1))),                 h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^~xx.1, $U.1, $V.1>,                     'g'^~yy>),                 $cAEAD0.1)) @ #vk.33
7: !KU( 'g'^~xx.1 ) @ #vk.17

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 60 (precomputed): !KU( ~yy ) @ #vk.36
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~yy ) @ #vk.35
1: !KU( ~xx ) @ #vk.37
2: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                     'g'^(~yy*~xx.1*inv(~xx))>),                  'K_2ae'>,                hkdfExtract(~ltk, 'g'^(~yy*~xx.1)))) @ #vk.21
3: !KU( 'g'^~xx ) @ #vk.27
4: !KU( 'g'^~yy ) @ #vk.32
5: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^~xx.1, $U.1, $V.1>,                                 'g'^~yy>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~yy*~xx.1))),                 h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^~xx.1, $U.1, $V.1>,                     'g'^~yy>),                 $cAEAD0.1)) @ #vk.33
6: !KU( 'g'^~xx.1 ) @ #vk.17

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 59 (precomputed): !KU( ~yy ) @ #vk.35
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~yy ) @ #vk.36
1: !KU( ~xx.1 ) @ #vk.37
2: !KU( ~xx ) @ #vk.39
3: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                     'g'^(~yy*~xx.1*inv(~xx))>),                  'K_2ae'>,                hkdfExtract(~ltk, 'g'^(~yy*~xx.1)))) @ #vk.21
4: !KU( 'g'^~xx ) @ #vk.27
5: !KU( 'g'^~yy ) @ #vk.32
6: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^~xx.1, $U.1, $V.1>,                                 'g'^~yy>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~yy*~xx.1))),                 h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^~xx.1, $U.1, $V.1>,                     'g'^~yy>),                 $cAEAD0.1)) @ #vk.33
7: !KU( 'g'^~xx.1 ) @ #vk.17

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 61 (precomputed): !KU( ~yy ) @ #vk.36
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~yy ) @ #vk.35
1: !KU( ~xx ) @ #vk.37
2: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                     'g'^(~yy*~xx.1*inv(~xx))>),                  'K_2ae'>,                hkdfExtract(~ltk, 'g'^(~yy*~xx.1)))) @ #vk.21
3: !KU( 'g'^~xx ) @ #vk.27
4: !KU( 'g'^~yy ) @ #vk.32
5: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^~xx.1, $U.1, $V.1>,                                 'g'^~yy>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~yy*~xx.1))),                 h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^~xx.1, $U.1, $V.1>,                     'g'^~yy>),                 $cAEAD0.1)) @ #vk.33
6: !KU( 'g'^~xx.1 ) @ #vk.17

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 60 (precomputed): !KU( ~yy ) @ #vk.35
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx.1 ) @ #vk.35
1: !KU( ~xx ) @ #vk.37
2: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                     'g'^(~yy*~xx.1*inv(~xx))>),                  'K_2ae'>,                hkdfExtract(~ltk, 'g'^(~yy*~xx.1)))) @ #vk.21
3: !KU( 'g'^~xx ) @ #vk.27
4: !KU( 'g'^~yy ) @ #vk.32
5: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^~xx.1, $U.1, $V.1>,                                 'g'^~yy>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~yy*~xx.1))),                 h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^~xx.1, $U.1, $V.1>,                     'g'^~yy>),                 $cAEAD0.1)) @ #vk.33
6: !KU( 'g'^~xx.1 ) @ #vk.17

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>,         'g'^~yy>)) @ #vk.38
1: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, gy>),                  'K_2ae'>,                hkdfExtract(~ltk, impSk))) @ #vk.23
2: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                      >),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                              >),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, impSk)),                                h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                  >),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, impSk))) @ #vk.33
3: splitEqs(0)
4: splitEqs(2)
5: !KU( 'g'^~xx ) @ #vk.29
6: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                               >),                              'K_2ae'>,                            hkdfExtract(~ltk.1, impSk)),                 h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                   >),                 $cAEAD0.1)) @ #vk.39

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 70 (precomputed): !KU( ~xx.1 ) @ #vk.35
  solved goal nr. 58 (precomputed):
    !KU( h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 
            'g'^~yy>)
    ) @ #vk.38
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>,         'g'^~yy>)) @ #vk.38
1: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, gy>),                  'K_2ae'>,                hkdfExtract(~ltk, impSk))) @ #vk.23
2: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                      >),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                              >),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, impSk)),                                h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                  >),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, impSk))) @ #vk.33
3: splitEqs(0)
4: splitEqs(2)
5: !KU( 'g'^~xx ) @ #vk.29
6: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                               >),                              'K_2ae'>,                            hkdfExtract(~ltk.1, impSk)),                 h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                   >),                 $cAEAD0.1)) @ #vk.39

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 59 (precomputed):
    !KU( h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 
            'g'^~yy>)
    ) @ #vk.38
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, gy>),                  'K_2ae'>,                hkdfExtract(~ltk, impSk))) @ #vk.26
1: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                      >),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                              >),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, impSk)),                                h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                  >),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, impSk))) @ #vk.36
2: splitEqs(0)
3: splitEqs(2)
4: !KU( 'g'^~xx ) @ #vk.32
5: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                               >),                              'K_2ae'>,                            hkdfExtract(~ltk.1, impSk)),                 h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                   >),                 $cAEAD0.1)) @ #vk.40
6: !KU( 'g'^~yy ) @ #vk.43

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 30 (precomputed):
    !KU( hkdfExpand(<$cAEAD0, 
                     h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, gy>), 
                     'K_2ae'>,
                    hkdfExtract(~ltk, impSk))
    ) @ #vk.26
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, gy>),                  'K_2ae'>,                hkdfExtract(~ltk, impSk))) @ #vk.26
1: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                      >),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                              >),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, impSk)),                                h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                  >),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, impSk))) @ #vk.36
2: splitEqs(0)
3: splitEqs(2)
4: !KU( 'g'^~xx ) @ #vk.32
5: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                               >),                              'K_2ae'>,                            hkdfExtract(~ltk.1, impSk)),                 h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                   >),                 $cAEAD0.1)) @ #vk.40
6: !KU( 'g'^~yy ) @ #vk.43

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 31 (precomputed):
    !KU( hkdfExpand(<$cAEAD0, 
                     h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, gy>), 
                     'K_2ae'>,
                    hkdfExtract(~ltk, impSk))
    ) @ #vk.26
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: splitEqs(2)
1: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~xx*~yy)))) @ #vk.38
2: !KU( 'g'^x ) @ #vk.25
3: !KU( 'g'^~xx ) @ #vk.34
4: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                     'g'^~yy.1>),                 $cAEAD0.1)) @ #vk.41
5: !KU( 'g'^~yy.1 ) @ #vk.43
6: !KU( 'g'^~yy ) @ #vk.9

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( hkdfExtract(~ltk, impSk) ) @ #vk.46
1: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                      >),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                              >),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, impSk)),                                h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                  >),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, impSk))) @ #vk.40
2: splitEqs(0)
3: splitEqs(2)
4: !KU( 'g'^~xx ) @ #vk.36
5: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                               >),                              'K_2ae'>,                            hkdfExtract(~ltk.1, impSk)),                 h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                   >),                 $cAEAD0.1)) @ #vk.43
6: !KU( 'g'^~yy ) @ #vk.45

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 27 (directly): splitEqs(2)
  solved goal nr. 80 (precomputed):
    !KU( hkdfExtract(~ltk, impSk) ) @ #vk.46
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: splitEqs(2)
1: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~xx*~yy)))) @ #vk.38
2: !KU( 'g'^x ) @ #vk.25
3: !KU( 'g'^~xx ) @ #vk.34
4: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                     'g'^~yy.1>),                 $cAEAD0.1)) @ #vk.41
5: !KU( 'g'^~yy.1 ) @ #vk.43
6: !KU( 'g'^~yy ) @ #vk.9

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 27 (directly): splitEqs(2)
  simplified formula:
      "¬($V = $V)"
    to
      "⊥"
  simplified formula:
      "¬($V = $V)"
    to
      "⊥"
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: splitEqs(2)
1: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~xx*~yy)))) @ #vk.38
2: !KU( 'g'^x ) @ #vk.25
3: !KU( 'g'^~xx ) @ #vk.34
4: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                     'g'^~yy.1>),                 $cAEAD0.1)) @ #vk.41
5: !KU( 'g'^~yy.1 ) @ #vk.43
6: !KU( 'g'^~yy ) @ #vk.9

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 28 (directly): splitEqs(2)
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: splitEqs(2)
1: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~xx*~yy)))) @ #vk.38
2: !KU( 'g'^x ) @ #vk.25
3: !KU( 'g'^~xx ) @ #vk.34
4: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                     'g'^~yy.1>),                 $cAEAD0.1)) @ #vk.41
5: !KU( 'g'^~yy.1 ) @ #vk.43
6: !KU( 'g'^~yy ) @ #vk.9

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 28 (directly): splitEqs(2)
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( hkdfExtract(~ltk, impSk) ) @ #vk.46
1: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                      >),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                              >),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, impSk)),                                h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                  >),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, impSk))) @ #vk.40
2: splitEqs(0)
3: splitEqs(2)
4: !KU( 'g'^~xx ) @ #vk.36
5: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                               >),                              'K_2ae'>,                            hkdfExtract(~ltk.1, impSk)),                 h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                   >),                 $cAEAD0.1)) @ #vk.43
6: !KU( 'g'^~yy ) @ #vk.45

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 81 (precomputed):
    !KU( hkdfExtract(~ltk, impSk) ) @ #vk.46
  simplified formula:
      "¬($V = $V)"
    to
      "⊥"
  simplified formula:
      "¬($V = $V)"
    to
      "⊥"
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( 'g'^(~xx*~yy*inv(~yy.1)) ) @ #vk.25
1: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~xx*~yy)))) @ #vk.38
2: !KU( 'g'^~xx ) @ #vk.34
3: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1,                                 <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.1,                     <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                     'g'^~yy.1>),                 $cAEAD0.1)) @ #vk.41
4: !KU( 'g'^~yy.1 ) @ #vk.43
5: !KU( 'g'^~yy ) @ #vk.10

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 98 (precomputed):
    !KU( 'g'^(~xx*~yy*inv(~yy.1)) ) @ #vk.25
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( 'g'^(~xx*~yy*inv(~yy.1)) ) @ #vk.25
1: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~xx*~yy)))) @ #vk.38
2: !KU( 'g'^~xx ) @ #vk.34
3: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1,                                 <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.1,                     <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                     'g'^~yy.1>),                 $cAEAD0.1)) @ #vk.41
4: !KU( 'g'^~yy.1 ) @ #vk.43
5: !KU( 'g'^~yy ) @ #vk.10

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 99 (precomputed):
    !KU( 'g'^(~xx*~yy*inv(~yy.1)) ) @ #vk.25
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.46
1: !KU( ~yy ) @ #vk.47
2: !KU( ~yy.1 ) @ #vk.49
3: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~xx*~yy)))) @ #vk.38
4: !KU( 'g'^~xx ) @ #vk.34
5: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1,                                 <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.1,                     <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                     'g'^~yy.1>),                 $cAEAD0.1)) @ #vk.41
6: !KU( 'g'^~yy.1 ) @ #vk.43
7: !KU( 'g'^~yy ) @ #vk.11

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 102 (precomputed): !KU( ~xx ) @ #vk.46
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~yy ) @ #vk.45
1: !KU( ~yy.1 ) @ #vk.47
2: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~xx*~yy)))) @ #vk.38
3: !KU( 'g'^~xx ) @ #vk.34
4: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1,                                 <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.1,                     <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                     'g'^~yy.1>),                 $cAEAD0.1)) @ #vk.41
5: !KU( 'g'^~yy.1 ) @ #vk.43
6: !KU( 'g'^~yy ) @ #vk.11

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 101 (precomputed): !KU( ~yy ) @ #vk.45
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.45
1: !KU( ~yy.1 ) @ #vk.47
2: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~xx*~yy)))) @ #vk.38
3: !KU( 'g'^~xx ) @ #vk.34
4: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1,                                 <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.1,                     <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                     'g'^~yy.1>),                 $cAEAD0.1)) @ #vk.41
5: !KU( 'g'^~yy.1 ) @ #vk.43
6: !KU( 'g'^~yy ) @ #vk.11

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 111 (precomputed): !KU( ~xx ) @ #vk.45
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( 'g'^(~xx*~yy*inv(~yy.1)) ) @ #vk.25
1: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~xx*~yy)))) @ #vk.38
2: !KU( 'g'^~xx ) @ #vk.34
3: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1,                                 <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.1,                     <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                     'g'^~yy.1>),                 $cAEAD0.1)) @ #vk.41
4: !KU( 'g'^~yy.1 ) @ #vk.43
5: !KU( 'g'^~yy ) @ #vk.10

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 93 (precomputed):
    !KU( 'g'^(~xx*~yy*inv(~yy.1)) ) @ #vk.25
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~yy ) @ #vk.45
1: !KU( ~yy.1 ) @ #vk.47
2: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~xx*~yy)))) @ #vk.38
3: !KU( 'g'^~xx ) @ #vk.34
4: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1,                                 <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.1,                     <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                     'g'^~yy.1>),                 $cAEAD0.1)) @ #vk.41
5: !KU( 'g'^~yy.1 ) @ #vk.43
6: !KU( 'g'^~yy ) @ #vk.11

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 102 (precomputed): !KU( ~yy ) @ #vk.45
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.45
1: !KU( ~yy.1 ) @ #vk.47
2: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~xx*~yy)))) @ #vk.38
3: !KU( 'g'^~xx ) @ #vk.34
4: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1,                                 <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.1,                     <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                     'g'^~yy.1>),                 $cAEAD0.1)) @ #vk.41
5: !KU( 'g'^~yy.1 ) @ #vk.43
6: !KU( 'g'^~yy ) @ #vk.11

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 112 (precomputed): !KU( ~xx ) @ #vk.45
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.46
1: !KU( ~yy ) @ #vk.47
2: !KU( ~yy.1 ) @ #vk.49
3: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~xx*~yy)))) @ #vk.38
4: !KU( 'g'^~xx ) @ #vk.34
5: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1,                                 <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.1,                     <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                     'g'^~yy.1>),                 $cAEAD0.1)) @ #vk.41
6: !KU( 'g'^~yy.1 ) @ #vk.43
7: !KU( 'g'^~yy ) @ #vk.11

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 103 (precomputed): !KU( ~xx ) @ #vk.46
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( 'g'^(~xx*~yy*inv(~yy.1)) ) @ #vk.25
1: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~xx*~yy)))) @ #vk.38
2: !KU( 'g'^~xx ) @ #vk.34
3: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1,                                 <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.1,                     <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                     'g'^~yy.1>),                 $cAEAD0.1)) @ #vk.41
4: !KU( 'g'^~yy.1 ) @ #vk.43
5: !KU( 'g'^~yy ) @ #vk.10

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 94 (precomputed):
    !KU( 'g'^(~xx*~yy*inv(~yy.1)) ) @ #vk.25
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.47
1: !KU( ~yy ) @ #vk.48
2: !KU( ~yy.1 ) @ #vk.50
3: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~xx*~yy)))) @ #vk.38
4: !KU( 'g'^~xx ) @ #vk.34
5: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1,                                 <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.1,                     <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                     'g'^~yy.1>),                 $cAEAD0.1)) @ #vk.41
6: !KU( 'g'^~yy.1 ) @ #vk.43
7: !KU( 'g'^~yy ) @ #vk.11

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 97 (precomputed): !KU( ~xx ) @ #vk.47
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.46
1: !KU( ~yy.1 ) @ #vk.48
2: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~xx*~yy)))) @ #vk.38
3: !KU( 'g'^~xx ) @ #vk.34
4: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1,                                 <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.1,                     <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                     'g'^~yy.1>),                 $cAEAD0.1)) @ #vk.41
5: !KU( 'g'^~yy.1 ) @ #vk.43
6: !KU( 'g'^~yy ) @ #vk.11

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 106 (precomputed): !KU( ~xx ) @ #vk.46
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~yy ) @ #vk.46
1: !KU( ~yy.1 ) @ #vk.48
2: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~xx*~yy)))) @ #vk.38
3: !KU( 'g'^~xx ) @ #vk.34
4: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1,                                 <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.1,                     <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                     'g'^~yy.1>),                 $cAEAD0.1)) @ #vk.41
5: !KU( 'g'^~yy.1 ) @ #vk.43
6: !KU( 'g'^~yy ) @ #vk.11

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 96 (precomputed): !KU( ~yy ) @ #vk.46
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~ltk ) @ #vk.48
1: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                      >),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                              >),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, impSk)),                                h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                  >),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, impSk))) @ #vk.41
2: splitEqs(0)
3: splitEqs(2)
4: !KU( 'g'^~xx ) @ #vk.37
5: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                               >),                              'K_2ae'>,                            hkdfExtract(~ltk.1, impSk)),                 h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                   >),                 $cAEAD0.1)) @ #vk.44
6: !KU( 'g'^~yy ) @ #vk.46

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 86 (precomputed): !KU( ~ltk ) @ #vk.48
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.47
1: !KU( ~yy ) @ #vk.48
2: !KU( ~yy.1 ) @ #vk.50
3: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~xx*~yy)))) @ #vk.38
4: !KU( 'g'^~xx ) @ #vk.34
5: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1,                                 <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.1,                     <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                     'g'^~yy.1>),                 $cAEAD0.1)) @ #vk.41
6: !KU( 'g'^~yy.1 ) @ #vk.43
7: !KU( 'g'^~yy ) @ #vk.11

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 98 (precomputed): !KU( ~xx ) @ #vk.47
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~yy ) @ #vk.46
1: !KU( ~yy.1 ) @ #vk.48
2: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~xx*~yy)))) @ #vk.38
3: !KU( 'g'^~xx ) @ #vk.34
4: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1,                                 <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.1,                     <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                     'g'^~yy.1>),                 $cAEAD0.1)) @ #vk.41
5: !KU( 'g'^~yy.1 ) @ #vk.43
6: !KU( 'g'^~yy ) @ #vk.11

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 97 (precomputed): !KU( ~yy ) @ #vk.46
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.46
1: !KU( ~yy.1 ) @ #vk.48
2: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~xx*~yy)))) @ #vk.38
3: !KU( 'g'^~xx ) @ #vk.34
4: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1,                                 <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.1,                     <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                     'g'^~yy.1>),                 $cAEAD0.1)) @ #vk.41
5: !KU( 'g'^~yy.1 ) @ #vk.43
6: !KU( 'g'^~yy ) @ #vk.11

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 107 (precomputed): !KU( ~xx ) @ #vk.46
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~ltk ) @ #vk.48
1: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                      >),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                              >),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, impSk)),                                h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                  >),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, impSk))) @ #vk.41
2: splitEqs(0)
3: splitEqs(2)
4: !KU( 'g'^~xx ) @ #vk.37
5: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                               >),                              'K_2ae'>,                            hkdfExtract(~ltk.1, impSk)),                 h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                   >),                 $cAEAD0.1)) @ #vk.44
6: !KU( 'g'^~yy ) @ #vk.46

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 87 (precomputed): !KU( ~ltk ) @ #vk.48
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: splitEqs(4)
1: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1,                                 h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0,                                                         h(<$cHash0,                                                            <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V                                                           >,                                                            'g'^~yy>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk, 'g'^(~xx*~yy))),                                            h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                                                'g'^~yy>),                                            $cAEAD0),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk, 'g'^(~xx*~yy))),                 h(<$cHash0.1,                     h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0,                                             h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                                                'g'^~yy>),                                             'K_2ae'>,                                           hkdfExtract(~ltk, 'g'^(~xx*~yy))),                                h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                                $cAEAD0),                     'emptyStr'>),                 $cAEAD0.1)) @ #vk.6
2: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.3,                              h(<$cHash0.3,                                 h(<$cHash0.2, <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                                    'g'^~yy.1>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0.2,                                                         h(<$cHash0.2,                                                            <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1,                                                             $V.1>,                                                            'g'^~yy.1>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                            h(<$cHash0.2,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                                                'g'^~yy.1>),                                            $cAEAD0.2),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.3,                     h(<$cHash0.2, <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.2,                                             h(<$cHash0.2,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.2, <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                                    'g'^~yy.1>),                                $cAEAD0.2),                     'emptyStr'>),                 $cAEAD0.3)) @ #vk.7
3: !KU( 'g'^x ) @ #vk.23
4: !KU( 'g'^~xx ) @ #vk.16
5: !KU( 'g'^~yy ) @ #vk.2

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 47 (directly): splitEqs(4)
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: splitEqs(4)
1: !KU( 'g'^(~xx*~yy*inv(~yy.1)) ) @ #vk.18
2: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.2,                              h(<$cHash0.2,                                 h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0.1,                                                         h(<$cHash0.1,                                                            <'PSK', 'PSK', $cSUITE0.1,                                                             'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                                            'g'^~yy.1>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                            h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                            $cAEAD0.1),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                 $cAEAD0.2)) @ #vk.6
3: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.4,                              h(<$cHash0.4,                                 h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, 'g'^x, $U.2, $V.2>,                                    'g'^~yy.2>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0.3,                                                         h(<$cHash0.3,                                                            <'PSK', 'PSK', $cSUITE0.2, 'g'^x, $U.2,                                                             $V.2>,                                                            'g'^~yy.2>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk.2, 'g'^(~xx*~yy))),                                            h(<$cHash0.3,                                                <'PSK', 'PSK', $cSUITE0.2, 'g'^x, $U.2, $V.2>,                                                'g'^~yy.2>),                                            $cAEAD0.3),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk.2, 'g'^(~xx*~yy))),                 h(<$cHash0.4,                     h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, 'g'^x, $U.2, $V.2>,                        'g'^~yy.2>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.3,                                             h(<$cHash0.3,                                                <'PSK', 'PSK', $cSUITE0.2, 'g'^x, $U.2, $V.2>,                                                'g'^~yy.2>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.2, 'g'^(~xx*~yy))),                                h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, 'g'^x, $U.2, $V.2>,                                    'g'^~yy.2>),                                $cAEAD0.3),                     'emptyStr'>),                 $cAEAD0.4)) @ #vk.7
4: !KU( 'g'^x ) @ #vk.25
5: !KU( 'g'^~xx ) @ #vk.32
6: !KU( 'g'^~yy ) @ #vk.2

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 47 (directly): splitEqs(4)
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: splitEqs(4)
1: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1,                                 h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0,                                                         h(<$cHash0,                                                            <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V                                                           >,                                                            'g'^~yy>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk, 'g'^(~xx*~yy))),                                            h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                                                'g'^~yy>),                                            $cAEAD0),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk, 'g'^(~xx*~yy))),                 h(<$cHash0.1,                     h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0,                                             h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                                                'g'^~yy>),                                             'K_2ae'>,                                           hkdfExtract(~ltk, 'g'^(~xx*~yy))),                                h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                                $cAEAD0),                     'emptyStr'>),                 $cAEAD0.1)) @ #vk.6
2: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.3,                              h(<$cHash0.3,                                 h(<$cHash0.2, <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                                    'g'^~yy.1>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0.2,                                                         h(<$cHash0.2,                                                            <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1,                                                             $V.1>,                                                            'g'^~yy.1>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                            h(<$cHash0.2,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                                                'g'^~yy.1>),                                            $cAEAD0.2),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.3,                     h(<$cHash0.2, <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.2,                                             h(<$cHash0.2,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.2, <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                                    'g'^~yy.1>),                                $cAEAD0.2),                     'emptyStr'>),                 $cAEAD0.3)) @ #vk.7
3: !KU( 'g'^x ) @ #vk.23
4: !KU( 'g'^~xx ) @ #vk.16
5: !KU( 'g'^~yy ) @ #vk.2

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 47 (directly): splitEqs(4)
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( 'g'^(~xx*~yy*inv(~yy.1)) ) @ #vk.23
1: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1,                                 h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0,                                                         h(<$cHash0,                                                            <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V                                                           >,                                                            'g'^~yy>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk, 'g'^(~xx*~yy))),                                            h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                                                'g'^~yy>),                                            $cAEAD0),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk, 'g'^(~xx*~yy))),                 h(<$cHash0.1,                     h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0,                                             h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                                                'g'^~yy>),                                             'K_2ae'>,                                           hkdfExtract(~ltk, 'g'^(~xx*~yy))),                                h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                                $cAEAD0),                     'emptyStr'>),                 $cAEAD0.1)) @ #vk.6
2: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.3,                              h(<$cHash0.3,                                 h(<$cHash0.2,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0.2,                                                         h(<$cHash0.2,                                                            <'PSK', 'PSK', $cSUITE0.1,                                                             'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                                            'g'^~yy.1>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                            h(<$cHash0.2,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                            $cAEAD0.2),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.3,                     h(<$cHash0.2,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.2,                                             h(<$cHash0.2,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.2,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.2),                     'emptyStr'>),                 $cAEAD0.3)) @ #vk.7
3: !KU( 'g'^~xx ) @ #vk.16
4: !KU( 'g'^~yy ) @ #vk.2

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 62 (precomputed):
    !KU( 'g'^(~xx*~yy*inv(~yy.1)) ) @ #vk.23
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: splitEqs(4)
1: !KU( 'g'^(~xx*~yy*inv(~yy.1)) ) @ #vk.18
2: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.2,                              h(<$cHash0.2,                                 h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0.1,                                                         h(<$cHash0.1,                                                            <'PSK', 'PSK', $cSUITE0.1,                                                             'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                                            'g'^~yy.1>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                            h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                            $cAEAD0.1),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                 $cAEAD0.2)) @ #vk.6
3: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.4,                              h(<$cHash0.4,                                 h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, 'g'^x, $U.2, $V.2>,                                    'g'^~yy.2>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0.3,                                                         h(<$cHash0.3,                                                            <'PSK', 'PSK', $cSUITE0.2, 'g'^x, $U.2,                                                             $V.2>,                                                            'g'^~yy.2>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk.2, 'g'^(~xx*~yy))),                                            h(<$cHash0.3,                                                <'PSK', 'PSK', $cSUITE0.2, 'g'^x, $U.2, $V.2>,                                                'g'^~yy.2>),                                            $cAEAD0.3),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk.2, 'g'^(~xx*~yy))),                 h(<$cHash0.4,                     h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, 'g'^x, $U.2, $V.2>,                        'g'^~yy.2>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.3,                                             h(<$cHash0.3,                                                <'PSK', 'PSK', $cSUITE0.2, 'g'^x, $U.2, $V.2>,                                                'g'^~yy.2>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.2, 'g'^(~xx*~yy))),                                h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, 'g'^x, $U.2, $V.2>,                                    'g'^~yy.2>),                                $cAEAD0.3),                     'emptyStr'>),                 $cAEAD0.4)) @ #vk.7
4: !KU( 'g'^x ) @ #vk.25
5: !KU( 'g'^~xx ) @ #vk.32
6: !KU( 'g'^~yy ) @ #vk.2

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 47 (directly): splitEqs(4)
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( 'g'^(~xx*~yy*inv(~yy.1)) ) @ #vk.23
1: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1,                                 h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0,                                                         h(<$cHash0,                                                            <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V                                                           >,                                                            'g'^~yy>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk, 'g'^(~xx*~yy))),                                            h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                                                'g'^~yy>),                                            $cAEAD0),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk, 'g'^(~xx*~yy))),                 h(<$cHash0.1,                     h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0,                                             h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                                                'g'^~yy>),                                             'K_2ae'>,                                           hkdfExtract(~ltk, 'g'^(~xx*~yy))),                                h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                                $cAEAD0),                     'emptyStr'>),                 $cAEAD0.1)) @ #vk.6
2: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.3,                              h(<$cHash0.3,                                 h(<$cHash0.2,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0.2,                                                         h(<$cHash0.2,                                                            <'PSK', 'PSK', $cSUITE0.1,                                                             'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                                            'g'^~yy.1>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                            h(<$cHash0.2,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                            $cAEAD0.2),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.3,                     h(<$cHash0.2,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.2,                                             h(<$cHash0.2,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.2,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.2),                     'emptyStr'>),                 $cAEAD0.3)) @ #vk.7
3: !KU( 'g'^~xx ) @ #vk.16
4: !KU( 'g'^~yy ) @ #vk.2

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 62 (precomputed):
    !KU( 'g'^(~xx*~yy*inv(~yy.1)) ) @ #vk.23
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.29
1: !KU( ~yy ) @ #vk.30
2: !KU( ~yy.1 ) @ #vk.32
3: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1,                                 h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0,                                                         h(<$cHash0,                                                            <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V                                                           >,                                                            'g'^~yy>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk, 'g'^(~xx*~yy))),                                            h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                                                'g'^~yy>),                                            $cAEAD0),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk, 'g'^(~xx*~yy))),                 h(<$cHash0.1,                     h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0,                                             h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                                                'g'^~yy>),                                             'K_2ae'>,                                           hkdfExtract(~ltk, 'g'^(~xx*~yy))),                                h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                                $cAEAD0),                     'emptyStr'>),                 $cAEAD0.1)) @ #vk.7
4: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.3,                              h(<$cHash0.3,                                 h(<$cHash0.2,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0.2,                                                         h(<$cHash0.2,                                                            <'PSK', 'PSK', $cSUITE0.1,                                                             'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                                            'g'^~yy.1>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                            h(<$cHash0.2,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                            $cAEAD0.2),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.3,                     h(<$cHash0.2,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.2,                                             h(<$cHash0.2,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.2,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.2),                     'emptyStr'>),                 $cAEAD0.3)) @ #vk.8
5: !KU( 'g'^~xx ) @ #vk.17
6: !KU( 'g'^~yy ) @ #vk.3

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 66 (precomputed): !KU( ~xx ) @ #vk.29
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~yy ) @ #vk.28
1: !KU( ~yy.1 ) @ #vk.30
2: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1,                                 h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0,                                                         h(<$cHash0,                                                            <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V                                                           >,                                                            'g'^~yy>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk, 'g'^(~xx*~yy))),                                            h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                                                'g'^~yy>),                                            $cAEAD0),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk, 'g'^(~xx*~yy))),                 h(<$cHash0.1,                     h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0,                                             h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                                                'g'^~yy>),                                             'K_2ae'>,                                           hkdfExtract(~ltk, 'g'^(~xx*~yy))),                                h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                                $cAEAD0),                     'emptyStr'>),                 $cAEAD0.1)) @ #vk.7
3: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.3,                              h(<$cHash0.3,                                 h(<$cHash0.2,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0.2,                                                         h(<$cHash0.2,                                                            <'PSK', 'PSK', $cSUITE0.1,                                                             'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                                            'g'^~yy.1>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                            h(<$cHash0.2,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                            $cAEAD0.2),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.3,                     h(<$cHash0.2,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.2,                                             h(<$cHash0.2,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.2,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.2),                     'emptyStr'>),                 $cAEAD0.3)) @ #vk.8
4: !KU( 'g'^~xx ) @ #vk.17
5: !KU( 'g'^~yy ) @ #vk.3

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 65 (precomputed): !KU( ~yy ) @ #vk.28
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.28
1: !KU( ~yy.1 ) @ #vk.30
2: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1,                                 h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0,                                                         h(<$cHash0,                                                            <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V                                                           >,                                                            'g'^~yy>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk, 'g'^(~xx*~yy))),                                            h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                                                'g'^~yy>),                                            $cAEAD0),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk, 'g'^(~xx*~yy))),                 h(<$cHash0.1,                     h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0,                                             h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                                                'g'^~yy>),                                             'K_2ae'>,                                           hkdfExtract(~ltk, 'g'^(~xx*~yy))),                                h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                                $cAEAD0),                     'emptyStr'>),                 $cAEAD0.1)) @ #vk.7
3: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.3,                              h(<$cHash0.3,                                 h(<$cHash0.2,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0.2,                                                         h(<$cHash0.2,                                                            <'PSK', 'PSK', $cSUITE0.1,                                                             'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                                            'g'^~yy.1>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                            h(<$cHash0.2,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                            $cAEAD0.2),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.3,                     h(<$cHash0.2,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.2,                                             h(<$cHash0.2,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.2,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.2),                     'emptyStr'>),                 $cAEAD0.3)) @ #vk.8
4: !KU( 'g'^~xx ) @ #vk.17
5: !KU( 'g'^~yy ) @ #vk.3

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 75 (precomputed): !KU( ~xx ) @ #vk.28
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( 'g'^(~xx*~yy*inv(~yy.1)) ) @ #vk.16
1: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.2,                              h(<$cHash0.2,                                 h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0.1,                                                         h(<$cHash0.1,                                                            <'PSK', 'PSK', $cSUITE0.1,                                                             'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                                            'g'^~yy.1>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                            h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                            $cAEAD0.1),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                 $cAEAD0.2)) @ #vk.6
2: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.3,                              h(<$cHash0.3,                                 h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0,                                                         h(<$cHash0,                                                            <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V                                                           >,                                                            'g'^~yy>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk, 'g'^(~xx*~yy))),                                            h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                                                'g'^~yy>),                                            $cAEAD0),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk, 'g'^(~xx*~yy))),                 h(<$cHash0.3,                     h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0,                                             h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                                                'g'^~yy>),                                             'K_2ae'>,                                           hkdfExtract(~ltk, 'g'^(~xx*~yy))),                                h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                                $cAEAD0),                     'emptyStr'>),                 $cAEAD0.3)) @ #vk.7
3: !KU( 'g'^~xx ) @ #vk.23
4: !KU( 'g'^~yy ) @ #vk.2

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 61 (precomputed):
    !KU( 'g'^(~xx*~yy*inv(~yy.1)) ) @ #vk.16
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~yy ) @ #vk.28
1: !KU( ~yy.1 ) @ #vk.30
2: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1,                                 h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0,                                                         h(<$cHash0,                                                            <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V                                                           >,                                                            'g'^~yy>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk, 'g'^(~xx*~yy))),                                            h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                                                'g'^~yy>),                                            $cAEAD0),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk, 'g'^(~xx*~yy))),                 h(<$cHash0.1,                     h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0,                                             h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                                                'g'^~yy>),                                             'K_2ae'>,                                           hkdfExtract(~ltk, 'g'^(~xx*~yy))),                                h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                                $cAEAD0),                     'emptyStr'>),                 $cAEAD0.1)) @ #vk.7
3: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.3,                              h(<$cHash0.3,                                 h(<$cHash0.2,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0.2,                                                         h(<$cHash0.2,                                                            <'PSK', 'PSK', $cSUITE0.1,                                                             'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                                            'g'^~yy.1>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                            h(<$cHash0.2,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                            $cAEAD0.2),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.3,                     h(<$cHash0.2,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.2,                                             h(<$cHash0.2,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.2,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.2),                     'emptyStr'>),                 $cAEAD0.3)) @ #vk.8
4: !KU( 'g'^~xx ) @ #vk.17
5: !KU( 'g'^~yy ) @ #vk.3

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 65 (precomputed): !KU( ~yy ) @ #vk.28
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( 'g'^(~xx*~yy*inv(~yy.1)) ) @ #vk.18
1: !KU( 'g'^(~xx*~yy*inv(~yy.2)) ) @ #vk.25
2: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.2,                              h(<$cHash0.2,                                 h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0.1,                                                         h(<$cHash0.1,                                                            <'PSK', 'PSK', $cSUITE0.1,                                                             'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                                            'g'^~yy.1>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                            h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                            $cAEAD0.1),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                 $cAEAD0.2)) @ #vk.6
3: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.4,                              h(<$cHash0.4,                                 h(<$cHash0.3,                                    <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)), $U.2, $V.2                                   >,                                    'g'^~yy.2>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0.3,                                                         h(<$cHash0.3,                                                            <'PSK', 'PSK', $cSUITE0.2,                                                             'g'^(~xx*~yy*inv(~yy.2)), $U.2, $V.2>,                                                            'g'^~yy.2>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk.2, 'g'^(~xx*~yy))),                                            h(<$cHash0.3,                                                <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)),                                                 $U.2, $V.2>,                                                'g'^~yy.2>),                                            $cAEAD0.3),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk.2, 'g'^(~xx*~yy))),                 h(<$cHash0.4,                     h(<$cHash0.3,                        <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)), $U.2, $V.2>,                        'g'^~yy.2>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.3,                                             h(<$cHash0.3,                                                <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)),                                                 $U.2, $V.2>,                                                'g'^~yy.2>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.2, 'g'^(~xx*~yy))),                                h(<$cHash0.3,                                    <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)), $U.2, $V.2                                   >,                                    'g'^~yy.2>),                                $cAEAD0.3),                     'emptyStr'>),                 $cAEAD0.4)) @ #vk.7
4: !KU( 'g'^~xx ) @ #vk.32
5: !KU( 'g'^~yy ) @ #vk.2

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 61 (precomputed):
    !KU( 'g'^(~xx*~yy*inv(~yy.1)) ) @ #vk.18
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.28
1: !KU( ~yy.1 ) @ #vk.30
2: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1,                                 h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0,                                                         h(<$cHash0,                                                            <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V                                                           >,                                                            'g'^~yy>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk, 'g'^(~xx*~yy))),                                            h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                                                'g'^~yy>),                                            $cAEAD0),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk, 'g'^(~xx*~yy))),                 h(<$cHash0.1,                     h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0,                                             h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                                                'g'^~yy>),                                             'K_2ae'>,                                           hkdfExtract(~ltk, 'g'^(~xx*~yy))),                                h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                                $cAEAD0),                     'emptyStr'>),                 $cAEAD0.1)) @ #vk.7
3: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.3,                              h(<$cHash0.3,                                 h(<$cHash0.2,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0.2,                                                         h(<$cHash0.2,                                                            <'PSK', 'PSK', $cSUITE0.1,                                                             'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                                            'g'^~yy.1>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                            h(<$cHash0.2,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                            $cAEAD0.2),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.3,                     h(<$cHash0.2,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.2,                                             h(<$cHash0.2,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.2,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.2),                     'emptyStr'>),                 $cAEAD0.3)) @ #vk.8
4: !KU( 'g'^~xx ) @ #vk.17
5: !KU( 'g'^~yy ) @ #vk.3

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 75 (precomputed): !KU( ~xx ) @ #vk.28
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.29
1: !KU( ~yy ) @ #vk.30
2: !KU( ~yy.1 ) @ #vk.32
3: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1,                                 h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0,                                                         h(<$cHash0,                                                            <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V                                                           >,                                                            'g'^~yy>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk, 'g'^(~xx*~yy))),                                            h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                                                'g'^~yy>),                                            $cAEAD0),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk, 'g'^(~xx*~yy))),                 h(<$cHash0.1,                     h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0,                                             h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                                                'g'^~yy>),                                             'K_2ae'>,                                           hkdfExtract(~ltk, 'g'^(~xx*~yy))),                                h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                                $cAEAD0),                     'emptyStr'>),                 $cAEAD0.1)) @ #vk.7
4: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.3,                              h(<$cHash0.3,                                 h(<$cHash0.2,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0.2,                                                         h(<$cHash0.2,                                                            <'PSK', 'PSK', $cSUITE0.1,                                                             'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                                            'g'^~yy.1>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                            h(<$cHash0.2,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                            $cAEAD0.2),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.3,                     h(<$cHash0.2,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.2,                                             h(<$cHash0.2,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.2,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.2),                     'emptyStr'>),                 $cAEAD0.3)) @ #vk.8
5: !KU( 'g'^~xx ) @ #vk.17
6: !KU( 'g'^~yy ) @ #vk.3

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 66 (precomputed): !KU( ~xx ) @ #vk.29
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( 'g'^(~xx*~yy*inv(~yy.1)) ) @ #vk.18
1: !KU( 'g'^(~xx*~yy*inv(~yy.2)) ) @ #vk.25
2: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.2,                              h(<$cHash0.2,                                 h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0.1,                                                         h(<$cHash0.1,                                                            <'PSK', 'PSK', $cSUITE0.1,                                                             'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                                            'g'^~yy.1>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                            h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                            $cAEAD0.1),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                 $cAEAD0.2)) @ #vk.6
3: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.4,                              h(<$cHash0.4,                                 h(<$cHash0.3,                                    <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)), $U.2, $V.2                                   >,                                    'g'^~yy.2>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0.3,                                                         h(<$cHash0.3,                                                            <'PSK', 'PSK', $cSUITE0.2,                                                             'g'^(~xx*~yy*inv(~yy.2)), $U.2, $V.2>,                                                            'g'^~yy.2>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk.2, 'g'^(~xx*~yy))),                                            h(<$cHash0.3,                                                <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)),                                                 $U.2, $V.2>,                                                'g'^~yy.2>),                                            $cAEAD0.3),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk.2, 'g'^(~xx*~yy))),                 h(<$cHash0.4,                     h(<$cHash0.3,                        <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)), $U.2, $V.2>,                        'g'^~yy.2>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.3,                                             h(<$cHash0.3,                                                <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)),                                                 $U.2, $V.2>,                                                'g'^~yy.2>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.2, 'g'^(~xx*~yy))),                                h(<$cHash0.3,                                    <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)), $U.2, $V.2                                   >,                                    'g'^~yy.2>),                                $cAEAD0.3),                     'emptyStr'>),                 $cAEAD0.4)) @ #vk.7
4: !KU( 'g'^~xx ) @ #vk.32
5: !KU( 'g'^~yy ) @ #vk.2

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 61 (precomputed):
    !KU( 'g'^(~xx*~yy*inv(~yy.1)) ) @ #vk.18
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( 'g'^(~xx*~yy*inv(~yy.1)) ) @ #vk.16
1: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.2,                              h(<$cHash0.2,                                 h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0.1,                                                         h(<$cHash0.1,                                                            <'PSK', 'PSK', $cSUITE0.1,                                                             'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                                            'g'^~yy.1>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                            h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                            $cAEAD0.1),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                 $cAEAD0.2)) @ #vk.6
2: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.3,                              h(<$cHash0.3,                                 h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0,                                                         h(<$cHash0,                                                            <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V                                                           >,                                                            'g'^~yy>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk, 'g'^(~xx*~yy))),                                            h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                                                'g'^~yy>),                                            $cAEAD0),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk, 'g'^(~xx*~yy))),                 h(<$cHash0.3,                     h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0,                                             h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                                                'g'^~yy>),                                             'K_2ae'>,                                           hkdfExtract(~ltk, 'g'^(~xx*~yy))),                                h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                                $cAEAD0),                     'emptyStr'>),                 $cAEAD0.3)) @ #vk.7
3: !KU( 'g'^~xx ) @ #vk.23
4: !KU( 'g'^~yy ) @ #vk.2

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 61 (precomputed):
    !KU( 'g'^(~xx*~yy*inv(~yy.1)) ) @ #vk.16
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~yy ) @ #vk.28
1: !KU( ~yy.1 ) @ #vk.30
2: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.2,                              h(<$cHash0.2,                                 h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0.1,                                                         h(<$cHash0.1,                                                            <'PSK', 'PSK', $cSUITE0.1,                                                             'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                                            'g'^~yy.1>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                            h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                            $cAEAD0.1),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                 $cAEAD0.2)) @ #vk.7
3: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.3,                              h(<$cHash0.3,                                 h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0,                                                         h(<$cHash0,                                                            <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V                                                           >,                                                            'g'^~yy>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk, 'g'^(~xx*~yy))),                                            h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                                                'g'^~yy>),                                            $cAEAD0),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk, 'g'^(~xx*~yy))),                 h(<$cHash0.3,                     h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0,                                             h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                                                'g'^~yy>),                                             'K_2ae'>,                                           hkdfExtract(~ltk, 'g'^(~xx*~yy))),                                h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                                $cAEAD0),                     'emptyStr'>),                 $cAEAD0.3)) @ #vk.8
4: !KU( 'g'^~xx ) @ #vk.23
5: !KU( 'g'^~yy ) @ #vk.3

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 65 (precomputed): !KU( ~yy ) @ #vk.28
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.28
1: !KU( ~yy.1 ) @ #vk.30
2: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.2,                              h(<$cHash0.2,                                 h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0.1,                                                         h(<$cHash0.1,                                                            <'PSK', 'PSK', $cSUITE0.1,                                                             'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                                            'g'^~yy.1>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                            h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                            $cAEAD0.1),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                 $cAEAD0.2)) @ #vk.7
3: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.3,                              h(<$cHash0.3,                                 h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0,                                                         h(<$cHash0,                                                            <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V                                                           >,                                                            'g'^~yy>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk, 'g'^(~xx*~yy))),                                            h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                                                'g'^~yy>),                                            $cAEAD0),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk, 'g'^(~xx*~yy))),                 h(<$cHash0.3,                     h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0,                                             h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                                                'g'^~yy>),                                             'K_2ae'>,                                           hkdfExtract(~ltk, 'g'^(~xx*~yy))),                                h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                                $cAEAD0),                     'emptyStr'>),                 $cAEAD0.3)) @ #vk.8
4: !KU( 'g'^~xx ) @ #vk.23
5: !KU( 'g'^~yy ) @ #vk.3

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 75 (precomputed): !KU( ~xx ) @ #vk.28
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.29
1: !KU( ~yy ) @ #vk.30
2: !KU( ~yy.1 ) @ #vk.32
3: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.2,                              h(<$cHash0.2,                                 h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0.1,                                                         h(<$cHash0.1,                                                            <'PSK', 'PSK', $cSUITE0.1,                                                             'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                                            'g'^~yy.1>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                            h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                            $cAEAD0.1),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                 $cAEAD0.2)) @ #vk.7
4: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.3,                              h(<$cHash0.3,                                 h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0,                                                         h(<$cHash0,                                                            <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V                                                           >,                                                            'g'^~yy>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk, 'g'^(~xx*~yy))),                                            h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                                                'g'^~yy>),                                            $cAEAD0),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk, 'g'^(~xx*~yy))),                 h(<$cHash0.3,                     h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0,                                             h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                                                'g'^~yy>),                                             'K_2ae'>,                                           hkdfExtract(~ltk, 'g'^(~xx*~yy))),                                h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                                $cAEAD0),                     'emptyStr'>),                 $cAEAD0.3)) @ #vk.8
5: !KU( 'g'^~xx ) @ #vk.23
6: !KU( 'g'^~yy ) @ #vk.3

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 66 (precomputed): !KU( ~xx ) @ #vk.29
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.37
1: !KU( ~yy.1 ) @ #vk.39
2: !KU( 'g'^(~xx*~yy*inv(~yy.2)) ) @ #vk.25
3: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.2,                              h(<$cHash0.2,                                 h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0.1,                                                         h(<$cHash0.1,                                                            <'PSK', 'PSK', $cSUITE0.1,                                                             'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                                            'g'^~yy.1>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                            h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                            $cAEAD0.1),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                 $cAEAD0.2)) @ #vk.7
4: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.4,                              h(<$cHash0.4,                                 h(<$cHash0.3,                                    <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)), $U.2, $V.2                                   >,                                    'g'^~yy.2>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0.3,                                                         h(<$cHash0.3,                                                            <'PSK', 'PSK', $cSUITE0.2,                                                             'g'^(~xx*~yy*inv(~yy.2)), $U.2, $V.2>,                                                            'g'^~yy.2>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk.2, 'g'^(~xx*~yy))),                                            h(<$cHash0.3,                                                <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)),                                                 $U.2, $V.2>,                                                'g'^~yy.2>),                                            $cAEAD0.3),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk.2, 'g'^(~xx*~yy))),                 h(<$cHash0.4,                     h(<$cHash0.3,                        <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)), $U.2, $V.2>,                        'g'^~yy.2>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.3,                                             h(<$cHash0.3,                                                <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)),                                                 $U.2, $V.2>,                                                'g'^~yy.2>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.2, 'g'^(~xx*~yy))),                                h(<$cHash0.3,                                    <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)), $U.2, $V.2                                   >,                                    'g'^~yy.2>),                                $cAEAD0.3),                     'emptyStr'>),                 $cAEAD0.4)) @ #vk.8
5: !KU( 'g'^~xx ) @ #vk.32
6: !KU( 'g'^~yy ) @ #vk.3

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 75 (precomputed): !KU( ~xx ) @ #vk.37
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~yy ) @ #vk.37
1: !KU( ~yy.1 ) @ #vk.39
2: !KU( 'g'^(~xx*~yy*inv(~yy.2)) ) @ #vk.25
3: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.2,                              h(<$cHash0.2,                                 h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0.1,                                                         h(<$cHash0.1,                                                            <'PSK', 'PSK', $cSUITE0.1,                                                             'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                                            'g'^~yy.1>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                            h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                            $cAEAD0.1),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                 $cAEAD0.2)) @ #vk.7
4: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.4,                              h(<$cHash0.4,                                 h(<$cHash0.3,                                    <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)), $U.2, $V.2                                   >,                                    'g'^~yy.2>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0.3,                                                         h(<$cHash0.3,                                                            <'PSK', 'PSK', $cSUITE0.2,                                                             'g'^(~xx*~yy*inv(~yy.2)), $U.2, $V.2>,                                                            'g'^~yy.2>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk.2, 'g'^(~xx*~yy))),                                            h(<$cHash0.3,                                                <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)),                                                 $U.2, $V.2>,                                                'g'^~yy.2>),                                            $cAEAD0.3),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk.2, 'g'^(~xx*~yy))),                 h(<$cHash0.4,                     h(<$cHash0.3,                        <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)), $U.2, $V.2>,                        'g'^~yy.2>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.3,                                             h(<$cHash0.3,                                                <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)),                                                 $U.2, $V.2>,                                                'g'^~yy.2>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.2, 'g'^(~xx*~yy))),                                h(<$cHash0.3,                                    <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)), $U.2, $V.2                                   >,                                    'g'^~yy.2>),                                $cAEAD0.3),                     'emptyStr'>),                 $cAEAD0.4)) @ #vk.8
5: !KU( 'g'^~xx ) @ #vk.32
6: !KU( 'g'^~yy ) @ #vk.3

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 65 (precomputed): !KU( ~yy ) @ #vk.37
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.38
1: !KU( ~yy ) @ #vk.39
2: !KU( ~yy.1 ) @ #vk.41
3: !KU( 'g'^(~xx*~yy*inv(~yy.2)) ) @ #vk.25
4: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.2,                              h(<$cHash0.2,                                 h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0.1,                                                         h(<$cHash0.1,                                                            <'PSK', 'PSK', $cSUITE0.1,                                                             'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                                            'g'^~yy.1>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                            h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                            $cAEAD0.1),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                 $cAEAD0.2)) @ #vk.7
5: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.4,                              h(<$cHash0.4,                                 h(<$cHash0.3,                                    <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)), $U.2, $V.2                                   >,                                    'g'^~yy.2>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0.3,                                                         h(<$cHash0.3,                                                            <'PSK', 'PSK', $cSUITE0.2,                                                             'g'^(~xx*~yy*inv(~yy.2)), $U.2, $V.2>,                                                            'g'^~yy.2>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk.2, 'g'^(~xx*~yy))),                                            h(<$cHash0.3,                                                <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)),                                                 $U.2, $V.2>,                                                'g'^~yy.2>),                                            $cAEAD0.3),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk.2, 'g'^(~xx*~yy))),                 h(<$cHash0.4,                     h(<$cHash0.3,                        <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)), $U.2, $V.2>,                        'g'^~yy.2>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.3,                                             h(<$cHash0.3,                                                <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)),                                                 $U.2, $V.2>,                                                'g'^~yy.2>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.2, 'g'^(~xx*~yy))),                                h(<$cHash0.3,                                    <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)), $U.2, $V.2                                   >,                                    'g'^~yy.2>),                                $cAEAD0.3),                     'emptyStr'>),                 $cAEAD0.4)) @ #vk.8
6: !KU( 'g'^~xx ) @ #vk.32
7: !KU( 'g'^~yy ) @ #vk.3

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 66 (precomputed): !KU( ~xx ) @ #vk.38
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.28
1: !KU( ~yy.1 ) @ #vk.30
2: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.2,                              h(<$cHash0.2,                                 h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0.1,                                                         h(<$cHash0.1,                                                            <'PSK', 'PSK', $cSUITE0.1,                                                             'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                                            'g'^~yy.1>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                            h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                            $cAEAD0.1),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                 $cAEAD0.2)) @ #vk.7
3: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.3,                              h(<$cHash0.3,                                 h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0,                                                         h(<$cHash0,                                                            <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V                                                           >,                                                            'g'^~yy>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk, 'g'^(~xx*~yy))),                                            h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                                                'g'^~yy>),                                            $cAEAD0),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk, 'g'^(~xx*~yy))),                 h(<$cHash0.3,                     h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0,                                             h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                                                'g'^~yy>),                                             'K_2ae'>,                                           hkdfExtract(~ltk, 'g'^(~xx*~yy))),                                h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                                $cAEAD0),                     'emptyStr'>),                 $cAEAD0.3)) @ #vk.8
4: !KU( 'g'^~xx ) @ #vk.23
5: !KU( 'g'^~yy ) @ #vk.3

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 75 (precomputed): !KU( ~xx ) @ #vk.28
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.29
1: !KU( ~yy ) @ #vk.30
2: !KU( ~yy.1 ) @ #vk.32
3: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.2,                              h(<$cHash0.2,                                 h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0.1,                                                         h(<$cHash0.1,                                                            <'PSK', 'PSK', $cSUITE0.1,                                                             'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                                            'g'^~yy.1>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                            h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                            $cAEAD0.1),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                 $cAEAD0.2)) @ #vk.7
4: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.3,                              h(<$cHash0.3,                                 h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0,                                                         h(<$cHash0,                                                            <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V                                                           >,                                                            'g'^~yy>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk, 'g'^(~xx*~yy))),                                            h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                                                'g'^~yy>),                                            $cAEAD0),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk, 'g'^(~xx*~yy))),                 h(<$cHash0.3,                     h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0,                                             h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                                                'g'^~yy>),                                             'K_2ae'>,                                           hkdfExtract(~ltk, 'g'^(~xx*~yy))),                                h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                                $cAEAD0),                     'emptyStr'>),                 $cAEAD0.3)) @ #vk.8
5: !KU( 'g'^~xx ) @ #vk.23
6: !KU( 'g'^~yy ) @ #vk.3

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 66 (precomputed): !KU( ~xx ) @ #vk.29
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~yy ) @ #vk.28
1: !KU( ~yy.1 ) @ #vk.30
2: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.2,                              h(<$cHash0.2,                                 h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0.1,                                                         h(<$cHash0.1,                                                            <'PSK', 'PSK', $cSUITE0.1,                                                             'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                                            'g'^~yy.1>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                            h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                            $cAEAD0.1),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                 $cAEAD0.2)) @ #vk.7
3: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.3,                              h(<$cHash0.3,                                 h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0,                                                         h(<$cHash0,                                                            <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V                                                           >,                                                            'g'^~yy>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk, 'g'^(~xx*~yy))),                                            h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                                                'g'^~yy>),                                            $cAEAD0),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk, 'g'^(~xx*~yy))),                 h(<$cHash0.3,                     h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0,                                             h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                                                'g'^~yy>),                                             'K_2ae'>,                                           hkdfExtract(~ltk, 'g'^(~xx*~yy))),                                h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                                $cAEAD0),                     'emptyStr'>),                 $cAEAD0.3)) @ #vk.8
4: !KU( 'g'^~xx ) @ #vk.23
5: !KU( 'g'^~yy ) @ #vk.3

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 65 (precomputed): !KU( ~yy ) @ #vk.28
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.2,                              h(<$cHash0.2,                                 h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                  >),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0.1,                                                         h(<$cHash0.1,                                                            <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1                                                           >,                                                            'g'^~yy>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk.1, impSk)),                                            h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                              >),                                            $cAEAD0.1),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk.1, impSk)),                 h(<$cHash0.2,                     h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                      >),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                              >),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, impSk)),                                h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                  >),                                $cAEAD0.1),                     'emptyStr'>),                 $cAEAD0.2)) @ #vk.8
1: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.4,                              h(<$cHash0.4,                                 h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                                    'g'^~yy.1>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0.3,                                                         h(<$cHash0.3,                                                            <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2,                                                             $V.2>,                                                            'g'^~yy.1>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk.2, impSk)),                                            h(<$cHash0.3,                                                <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                                                'g'^~yy.1>),                                            $cAEAD0.3),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk.2, impSk)),                 h(<$cHash0.4,                     h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.3,                                             h(<$cHash0.3,                                                <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.2, impSk)),                                h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                                    'g'^~yy.1>),                                $cAEAD0.3),                     'emptyStr'>),                 $cAEAD0.4)) @ #vk.9
2: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, gy>),                  'K_2ae'>,                hkdfExtract(~ltk, impSk))) @ #vk.31
3: splitEqs(0)
4: splitEqs(3)
5: splitEqs(4)
6: !KU( 'g'^~xx ) @ #vk.38

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 12 (precomputed):
    !KU( aeadEncrypt('emptyStr',
                     hkdfExpand(<$cAEAD0.2, 
                                 h(<$cHash0.2, 
                                    h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 
                                       'g'^~yy>), 
                                    aeadEncrypt('emptyStr',
                                                hkdfExpand(<$cAEAD0.1, 
                                                            h(<$cHash0.1, 
                                                               <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, 
                                                                $V.1>, 
                                                               'g'^~yy>), 
                                                            'K_2ae'>,
                                                           hkdfExtract(~ltk.1, impSk)),
                                                h(<$cHash0.1, 
                                                   <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 
                                                   'g'^~yy>),
                                                $cAEAD0.1), 
                                    'emptyStr'>), 
                                 'K_3ae'>,
                                hkdfExtract(~ltk.1, impSk)),
                     h(<$cHash0.2, 
                        h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy
                          >), 
                        aeadEncrypt('emptyStr',
                                    hkdfExpand(<$cAEAD0.1, 
                                                h(<$cHash0.1, 
                                                   <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 
                                                   'g'^~yy>), 
                                                'K_2ae'>,
                                               hkdfExtract(~ltk.1, impSk)),
                                    h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 
                                       'g'^~yy>),
                                    $cAEAD0.1), 
                        'emptyStr'>),
                     $cAEAD0.2)
    ) @ #vk.8
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.38
1: !KU( ~yy ) @ #vk.39
2: !KU( ~yy.1 ) @ #vk.41
3: !KU( 'g'^(~xx*~yy*inv(~yy.2)) ) @ #vk.25
4: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.2,                              h(<$cHash0.2,                                 h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0.1,                                                         h(<$cHash0.1,                                                            <'PSK', 'PSK', $cSUITE0.1,                                                             'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                                            'g'^~yy.1>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                            h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                            $cAEAD0.1),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                 $cAEAD0.2)) @ #vk.7
5: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.4,                              h(<$cHash0.4,                                 h(<$cHash0.3,                                    <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)), $U.2, $V.2                                   >,                                    'g'^~yy.2>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0.3,                                                         h(<$cHash0.3,                                                            <'PSK', 'PSK', $cSUITE0.2,                                                             'g'^(~xx*~yy*inv(~yy.2)), $U.2, $V.2>,                                                            'g'^~yy.2>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk.2, 'g'^(~xx*~yy))),                                            h(<$cHash0.3,                                                <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)),                                                 $U.2, $V.2>,                                                'g'^~yy.2>),                                            $cAEAD0.3),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk.2, 'g'^(~xx*~yy))),                 h(<$cHash0.4,                     h(<$cHash0.3,                        <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)), $U.2, $V.2>,                        'g'^~yy.2>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.3,                                             h(<$cHash0.3,                                                <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)),                                                 $U.2, $V.2>,                                                'g'^~yy.2>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.2, 'g'^(~xx*~yy))),                                h(<$cHash0.3,                                    <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)), $U.2, $V.2                                   >,                                    'g'^~yy.2>),                                $cAEAD0.3),                     'emptyStr'>),                 $cAEAD0.4)) @ #vk.8
6: !KU( 'g'^~xx ) @ #vk.32
7: !KU( 'g'^~yy ) @ #vk.3

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.37
1: !KU( ~yy.1 ) @ #vk.39
2: !KU( 'g'^(~xx*~yy*inv(~yy.2)) ) @ #vk.25
3: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.2,                              h(<$cHash0.2,                                 h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0.1,                                                         h(<$cHash0.1,                                                            <'PSK', 'PSK', $cSUITE0.1,                                                             'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                                            'g'^~yy.1>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                            h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                            $cAEAD0.1),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                 $cAEAD0.2)) @ #vk.7
4: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.4,                              h(<$cHash0.4,                                 h(<$cHash0.3,                                    <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)), $U.2, $V.2                                   >,                                    'g'^~yy.2>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0.3,                                                         h(<$cHash0.3,                                                            <'PSK', 'PSK', $cSUITE0.2,                                                             'g'^(~xx*~yy*inv(~yy.2)), $U.2, $V.2>,                                                            'g'^~yy.2>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk.2, 'g'^(~xx*~yy))),                                            h(<$cHash0.3,                                                <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)),                                                 $U.2, $V.2>,                                                'g'^~yy.2>),                                            $cAEAD0.3),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk.2, 'g'^(~xx*~yy))),                 h(<$cHash0.4,                     h(<$cHash0.3,                        <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)), $U.2, $V.2>,                        'g'^~yy.2>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.3,                                             h(<$cHash0.3,                                                <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)),                                                 $U.2, $V.2>,                                                'g'^~yy.2>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.2, 'g'^(~xx*~yy))),                                h(<$cHash0.3,                                    <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)), $U.2, $V.2                                   >,                                    'g'^~yy.2>),                                $cAEAD0.3),                     'emptyStr'>),                 $cAEAD0.4)) @ #vk.8
5: !KU( 'g'^~xx ) @ #vk.32
6: !KU( 'g'^~yy ) @ #vk.3

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 66 (precomputed): !KU( ~xx ) @ #vk.38
  solved goal nr. 75 (precomputed): !KU( ~xx ) @ #vk.37
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~yy ) @ #vk.37
1: !KU( ~yy.1 ) @ #vk.39
2: !KU( 'g'^(~xx*~yy*inv(~yy.2)) ) @ #vk.25
3: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.2,                              h(<$cHash0.2,                                 h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0.1,                                                         h(<$cHash0.1,                                                            <'PSK', 'PSK', $cSUITE0.1,                                                             'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                                            'g'^~yy.1>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                            h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                            $cAEAD0.1),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                 $cAEAD0.2)) @ #vk.7
4: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.4,                              h(<$cHash0.4,                                 h(<$cHash0.3,                                    <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)), $U.2, $V.2                                   >,                                    'g'^~yy.2>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0.3,                                                         h(<$cHash0.3,                                                            <'PSK', 'PSK', $cSUITE0.2,                                                             'g'^(~xx*~yy*inv(~yy.2)), $U.2, $V.2>,                                                            'g'^~yy.2>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk.2, 'g'^(~xx*~yy))),                                            h(<$cHash0.3,                                                <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)),                                                 $U.2, $V.2>,                                                'g'^~yy.2>),                                            $cAEAD0.3),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk.2, 'g'^(~xx*~yy))),                 h(<$cHash0.4,                     h(<$cHash0.3,                        <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)), $U.2, $V.2>,                        'g'^~yy.2>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.3,                                             h(<$cHash0.3,                                                <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)),                                                 $U.2, $V.2>,                                                'g'^~yy.2>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.2, 'g'^(~xx*~yy))),                                h(<$cHash0.3,                                    <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)), $U.2, $V.2                                   >,                                    'g'^~yy.2>),                                $cAEAD0.3),                     'emptyStr'>),                 $cAEAD0.4)) @ #vk.8
5: !KU( 'g'^~xx ) @ #vk.32
6: !KU( 'g'^~yy ) @ #vk.3

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 65 (precomputed): !KU( ~yy ) @ #vk.37
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( h(<$cHash0.2,         h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy          >),         aeadEncrypt('emptyStr',                    hkdfExpand(<$cAEAD0.1,                                 h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                  >),                                 'K_2ae'>,                               hkdfExtract(~ltk.1, impSk)),                    h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                      >),                    $cAEAD0.1),         'emptyStr'>)) @ #vk.43
1: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.4,                              h(<$cHash0.4,                                 h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                                    'g'^~yy.1>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0.3,                                                         h(<$cHash0.3,                                                            <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2,                                                             $V.2>,                                                            'g'^~yy.1>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk.2, impSk)),                                            h(<$cHash0.3,                                                <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                                                'g'^~yy.1>),                                            $cAEAD0.3),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk.2, impSk)),                 h(<$cHash0.4,                     h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.3,                                             h(<$cHash0.3,                                                <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.2, impSk)),                                h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                                    'g'^~yy.1>),                                $cAEAD0.3),                     'emptyStr'>),                 $cAEAD0.4)) @ #vk.10
2: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, gy>),                  'K_2ae'>,                hkdfExtract(~ltk, impSk))) @ #vk.32
3: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                      >),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                              >),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, impSk)),                                h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                  >),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, impSk))) @ #vk.42
4: splitEqs(0)
5: splitEqs(3)
6: splitEqs(4)
7: !KU( 'g'^~xx ) @ #vk.38

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 72 (precomputed):
    !KU( h(<$cHash0.2, 
            h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy
              >), 
            aeadEncrypt('emptyStr',
                        hkdfExpand(<$cAEAD0.1, 
                                    h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 
                                       'g'^~yy>), 
                                    'K_2ae'>,
                                   hkdfExtract(~ltk.1, impSk)),
                        h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy
                          >),
                        $cAEAD0.1), 
            'emptyStr'>)
    ) @ #vk.43
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: splitEqs(0)
1: splitEqs(4)
2: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.3,                              h(<$cHash0.3,                                 h(<$cHash0.2, <'PSK', 'PSK', $cSUITE0.2, 'g'^x.1, $U.2, $V.2>,                                    'g'^~yy.1>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0.2,                                                         h(<$cHash0.2,                                                            <'PSK', 'PSK', $cSUITE0.2, 'g'^x.1,                                                             $U.2, $V.2>,                                                            'g'^~yy.1>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk.2, 'g'^(~yy*~xx.1))),                                            h(<$cHash0.2,                                                <'PSK', 'PSK', $cSUITE0.2, 'g'^x.1, $U.2, $V.2>,                                                'g'^~yy.1>),                                            $cAEAD0.2),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk.2, 'g'^(~yy*~xx.1))),                 h(<$cHash0.3,                     h(<$cHash0.2, <'PSK', 'PSK', $cSUITE0.2, 'g'^x.1, $U.2, $V.2>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.2,                                             h(<$cHash0.2,                                                <'PSK', 'PSK', $cSUITE0.2, 'g'^x.1, $U.2, $V.2>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.2, 'g'^(~yy*~xx.1))),                                h(<$cHash0.2, <'PSK', 'PSK', $cSUITE0.2, 'g'^x.1, $U.2, $V.2>,                                    'g'^~yy.1>),                                $cAEAD0.2),                     'emptyStr'>),                 $cAEAD0.3)) @ #vk.10
3: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^x>),                  'K_2ae'>,                hkdfExtract(~ltk, 'g'^(~yy*~xx.1)))) @ #vk.32
4: !KU( 'g'^x ) @ #vk.4
5: !KU( 'g'^x.1 ) @ #vk.28
6: !KU( 'g'^~xx ) @ #vk.38
7: !KU( 'g'^~yy ) @ #vk.43
8: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^~xx.1, $U.1, $V.1>,                                 'g'^~yy>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~yy*~xx.1))),                 h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^~xx.1, $U.1, $V.1>,                     'g'^~yy>),                 $cAEAD0.1)) @ #vk.44
9: !KU( 'g'^~xx.1 ) @ #vk.21

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 3 (directly): splitEqs(0)
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.2,                              h(<$cHash0.2,                                 h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                  >),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0.1,                                                         h(<$cHash0.1,                                                            <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1                                                           >,                                                            'g'^~yy>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk.1, impSk)),                                            h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                              >),                                            $cAEAD0.1),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk.1, impSk)),                 h(<$cHash0.2,                     h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                      >),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                              >),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, impSk)),                                h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                  >),                                $cAEAD0.1),                     'emptyStr'>),                 $cAEAD0.2)) @ #vk.8
1: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.4,                              h(<$cHash0.4,                                 h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                                    'g'^~yy.1>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0.3,                                                         h(<$cHash0.3,                                                            <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2,                                                             $V.2>,                                                            'g'^~yy.1>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk.2, impSk)),                                            h(<$cHash0.3,                                                <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                                                'g'^~yy.1>),                                            $cAEAD0.3),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk.2, impSk)),                 h(<$cHash0.4,                     h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.3,                                             h(<$cHash0.3,                                                <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.2, impSk)),                                h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                                    'g'^~yy.1>),                                $cAEAD0.3),                     'emptyStr'>),                 $cAEAD0.4)) @ #vk.9
2: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, gy>),                  'K_2ae'>,                hkdfExtract(~ltk, impSk))) @ #vk.31
3: splitEqs(0)
4: splitEqs(3)
5: splitEqs(4)
6: !KU( 'g'^~xx ) @ #vk.38

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 14 (precomputed):
    !KU( aeadEncrypt('emptyStr',
                     hkdfExpand(<$cAEAD0.2, 
                                 h(<$cHash0.2, 
                                    h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 
                                       'g'^~yy>), 
                                    aeadEncrypt('emptyStr',
                                                hkdfExpand(<$cAEAD0.1, 
                                                            h(<$cHash0.1, 
                                                               <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, 
                                                                $V.1>, 
                                                               'g'^~yy>), 
                                                            'K_2ae'>,
                                                           hkdfExtract(~ltk.1, impSk)),
                                                h(<$cHash0.1, 
                                                   <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 
                                                   'g'^~yy>),
                                                $cAEAD0.1), 
                                    'emptyStr'>), 
                                 'K_3ae'>,
                                hkdfExtract(~ltk.1, impSk)),
                     h(<$cHash0.2, 
                        h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy
                          >), 
                        aeadEncrypt('emptyStr',
                                    hkdfExpand(<$cAEAD0.1, 
                                                h(<$cHash0.1, 
                                                   <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 
                                                   'g'^~yy>), 
                                                'K_2ae'>,
                                               hkdfExtract(~ltk.1, impSk)),
                                    h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 
                                       'g'^~yy>),
                                    $cAEAD0.1), 
                        'emptyStr'>),
                     $cAEAD0.2)
    ) @ #vk.8
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( h(<$cHash0.2,         h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy          >),         aeadEncrypt('emptyStr',                    hkdfExpand(<$cAEAD0.1,                                 h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                  >),                                 'K_2ae'>,                               hkdfExtract(~ltk.1, impSk)),                    h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                      >),                    $cAEAD0.1),         'emptyStr'>)) @ #vk.43
1: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.4,                              h(<$cHash0.4,                                 h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                                    'g'^~yy.1>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0.3,                                                         h(<$cHash0.3,                                                            <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2,                                                             $V.2>,                                                            'g'^~yy.1>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk.2, impSk)),                                            h(<$cHash0.3,                                                <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                                                'g'^~yy.1>),                                            $cAEAD0.3),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk.2, impSk)),                 h(<$cHash0.4,                     h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.3,                                             h(<$cHash0.3,                                                <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.2, impSk)),                                h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                                    'g'^~yy.1>),                                $cAEAD0.3),                     'emptyStr'>),                 $cAEAD0.4)) @ #vk.10
2: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, gy>),                  'K_2ae'>,                hkdfExtract(~ltk, impSk))) @ #vk.32
3: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                      >),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                              >),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, impSk)),                                h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                  >),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, impSk))) @ #vk.42
4: splitEqs(0)
5: splitEqs(3)
6: splitEqs(4)
7: !KU( 'g'^~xx ) @ #vk.38

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 72 (precomputed):
    !KU( h(<$cHash0.2, 
            h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy
              >), 
            aeadEncrypt('emptyStr',
                        hkdfExpand(<$cAEAD0.1, 
                                    h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 
                                       'g'^~yy>), 
                                    'K_2ae'>,
                                   hkdfExtract(~ltk.1, impSk)),
                        h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy
                          >),
                        $cAEAD0.1), 
            'emptyStr'>)
    ) @ #vk.43
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: splitEqs(0)
1: splitEqs(4)
2: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.3,                              h(<$cHash0.3,                                 h(<$cHash0.2, <'PSK', 'PSK', $cSUITE0.2, 'g'^x.1, $U.2, $V.2>,                                    'g'^~yy.1>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0.2,                                                         h(<$cHash0.2,                                                            <'PSK', 'PSK', $cSUITE0.2, 'g'^x.1,                                                             $U.2, $V.2>,                                                            'g'^~yy.1>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk.2, 'g'^(~yy*~xx.1))),                                            h(<$cHash0.2,                                                <'PSK', 'PSK', $cSUITE0.2, 'g'^x.1, $U.2, $V.2>,                                                'g'^~yy.1>),                                            $cAEAD0.2),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk.2, 'g'^(~yy*~xx.1))),                 h(<$cHash0.3,                     h(<$cHash0.2, <'PSK', 'PSK', $cSUITE0.2, 'g'^x.1, $U.2, $V.2>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.2,                                             h(<$cHash0.2,                                                <'PSK', 'PSK', $cSUITE0.2, 'g'^x.1, $U.2, $V.2>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.2, 'g'^(~yy*~xx.1))),                                h(<$cHash0.2, <'PSK', 'PSK', $cSUITE0.2, 'g'^x.1, $U.2, $V.2>,                                    'g'^~yy.1>),                                $cAEAD0.2),                     'emptyStr'>),                 $cAEAD0.3)) @ #vk.10
3: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^x>),                  'K_2ae'>,                hkdfExtract(~ltk, 'g'^(~yy*~xx.1)))) @ #vk.32
4: !KU( 'g'^x ) @ #vk.4
5: !KU( 'g'^x.1 ) @ #vk.28
6: !KU( 'g'^~xx ) @ #vk.38
7: !KU( 'g'^~yy ) @ #vk.43
8: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^~xx.1, $U.1, $V.1>,                                 'g'^~yy>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~yy*~xx.1))),                 h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^~xx.1, $U.1, $V.1>,                     'g'^~yy>),                 $cAEAD0.1)) @ #vk.44
9: !KU( 'g'^~xx.1 ) @ #vk.21

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 2 (directly): splitEqs(0)
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: splitEqs(4)
1: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.2,                              h(<$cHash0.2,                                 h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                                    'g'^~yy.1>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0.1,                                                         h(<$cHash0.1,                                                            <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1,                                                             $V.1>,                                                            'g'^~yy.1>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                            h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                                                'g'^~yy.1>),                                            $cAEAD0.1),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.2,                     h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                 $cAEAD0.2)) @ #vk.10
2: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                  'K_2ae'>,                hkdfExtract(~ltk, 'g'^(~xx*~yy)))) @ #vk.30
3: !KU( 'g'^x ) @ #vk.26
4: !KU( 'g'^~xx ) @ #vk.19
5: !KU( 'g'^~yy ) @ #vk.5

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 47 (directly): splitEqs(4)
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: splitEqs(4)
1: !KU( 'g'^(~yy*~xx.1*inv(~xx)) ) @ #vk.5
2: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.3,                              h(<$cHash0.3,                                 h(<$cHash0.2, <'PSK', 'PSK', $cSUITE0.2, 'g'^x, $U.2, $V.2>,                                    'g'^~yy.1>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0.2,                                                         h(<$cHash0.2,                                                            <'PSK', 'PSK', $cSUITE0.2, 'g'^x, $U.2,                                                             $V.2>,                                                            'g'^~yy.1>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk.2, 'g'^(~yy*~xx.1))),                                            h(<$cHash0.2,                                                <'PSK', 'PSK', $cSUITE0.2, 'g'^x, $U.2, $V.2>,                                                'g'^~yy.1>),                                            $cAEAD0.2),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk.2, 'g'^(~yy*~xx.1))),                 h(<$cHash0.3,                     h(<$cHash0.2, <'PSK', 'PSK', $cSUITE0.2, 'g'^x, $U.2, $V.2>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.2,                                             h(<$cHash0.2,                                                <'PSK', 'PSK', $cSUITE0.2, 'g'^x, $U.2, $V.2>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.2, 'g'^(~yy*~xx.1))),                                h(<$cHash0.2, <'PSK', 'PSK', $cSUITE0.2, 'g'^x, $U.2, $V.2>,                                    'g'^~yy.1>),                                $cAEAD0.2),                     'emptyStr'>),                 $cAEAD0.3)) @ #vk.10
3: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                     'g'^(~yy*~xx.1*inv(~xx))>),                  'K_2ae'>,                hkdfExtract(~ltk, 'g'^(~yy*~xx.1)))) @ #vk.32
4: !KU( 'g'^x ) @ #vk.28
5: !KU( 'g'^~xx ) @ #vk.38
6: !KU( 'g'^~yy ) @ #vk.43
7: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^~xx.1, $U.1, $V.1>,                                 'g'^~yy>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~yy*~xx.1))),                 h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^~xx.1, $U.1, $V.1>,                     'g'^~yy>),                 $cAEAD0.1)) @ #vk.44
8: !KU( 'g'^~xx.1 ) @ #vk.21

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 47 (directly): splitEqs(4)
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( 'g'^(~xx*~yy*inv(~yy.1)) ) @ #vk.26
1: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.2,                              h(<$cHash0.2,                                 h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0.1,                                                         h(<$cHash0.1,                                                            <'PSK', 'PSK', $cSUITE0.1,                                                             'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                                            'g'^~yy.1>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                            h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                            $cAEAD0.1),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                 $cAEAD0.2)) @ #vk.10
2: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                  'K_2ae'>,                hkdfExtract(~ltk, 'g'^(~xx*~yy)))) @ #vk.30
3: !KU( 'g'^~xx ) @ #vk.19
4: !KU( 'g'^~yy ) @ #vk.5

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 77 (precomputed):
    !KU( 'g'^(~xx*~yy*inv(~yy.1)) ) @ #vk.26
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: splitEqs(4)
1: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.2,                              h(<$cHash0.2,                                 h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                                    'g'^~yy.1>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0.1,                                                         h(<$cHash0.1,                                                            <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1,                                                             $V.1>,                                                            'g'^~yy.1>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                            h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                                                'g'^~yy.1>),                                            $cAEAD0.1),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.2,                     h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                 $cAEAD0.2)) @ #vk.10
2: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                  'K_2ae'>,                hkdfExtract(~ltk, 'g'^(~xx*~yy)))) @ #vk.30
3: !KU( 'g'^x ) @ #vk.26
4: !KU( 'g'^~xx ) @ #vk.19
5: !KU( 'g'^~yy ) @ #vk.5

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 47 (directly): splitEqs(4)
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: splitEqs(4)
1: !KU( 'g'^(~yy*~xx.1*inv(~xx)) ) @ #vk.5
2: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.3,                              h(<$cHash0.3,                                 h(<$cHash0.2, <'PSK', 'PSK', $cSUITE0.2, 'g'^x, $U.2, $V.2>,                                    'g'^~yy.1>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0.2,                                                         h(<$cHash0.2,                                                            <'PSK', 'PSK', $cSUITE0.2, 'g'^x, $U.2,                                                             $V.2>,                                                            'g'^~yy.1>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk.2, 'g'^(~yy*~xx.1))),                                            h(<$cHash0.2,                                                <'PSK', 'PSK', $cSUITE0.2, 'g'^x, $U.2, $V.2>,                                                'g'^~yy.1>),                                            $cAEAD0.2),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk.2, 'g'^(~yy*~xx.1))),                 h(<$cHash0.3,                     h(<$cHash0.2, <'PSK', 'PSK', $cSUITE0.2, 'g'^x, $U.2, $V.2>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.2,                                             h(<$cHash0.2,                                                <'PSK', 'PSK', $cSUITE0.2, 'g'^x, $U.2, $V.2>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.2, 'g'^(~yy*~xx.1))),                                h(<$cHash0.2, <'PSK', 'PSK', $cSUITE0.2, 'g'^x, $U.2, $V.2>,                                    'g'^~yy.1>),                                $cAEAD0.2),                     'emptyStr'>),                 $cAEAD0.3)) @ #vk.10
3: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                     'g'^(~yy*~xx.1*inv(~xx))>),                  'K_2ae'>,                hkdfExtract(~ltk, 'g'^(~yy*~xx.1)))) @ #vk.32
4: !KU( 'g'^x ) @ #vk.28
5: !KU( 'g'^~xx ) @ #vk.38
6: !KU( 'g'^~yy ) @ #vk.43
7: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^~xx.1, $U.1, $V.1>,                                 'g'^~yy>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~yy*~xx.1))),                 h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^~xx.1, $U.1, $V.1>,                     'g'^~yy>),                 $cAEAD0.1)) @ #vk.44
8: !KU( 'g'^~xx.1 ) @ #vk.21

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 47 (directly): splitEqs(4)
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( 'g'^(~xx*~yy*inv(~yy.1)) ) @ #vk.26
1: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.2,                              h(<$cHash0.2,                                 h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0.1,                                                         h(<$cHash0.1,                                                            <'PSK', 'PSK', $cSUITE0.1,                                                             'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                                            'g'^~yy.1>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                            h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                            $cAEAD0.1),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                 $cAEAD0.2)) @ #vk.10
2: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                  'K_2ae'>,                hkdfExtract(~ltk, 'g'^(~xx*~yy)))) @ #vk.30
3: !KU( 'g'^~xx ) @ #vk.19
4: !KU( 'g'^~yy ) @ #vk.5

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 77 (precomputed):
    !KU( 'g'^(~xx*~yy*inv(~yy.1)) ) @ #vk.26
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.34
1: !KU( ~yy.1 ) @ #vk.36
2: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.2,                              h(<$cHash0.2,                                 h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0.1,                                                         h(<$cHash0.1,                                                            <'PSK', 'PSK', $cSUITE0.1,                                                             'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                                            'g'^~yy.1>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                            h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                            $cAEAD0.1),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                 $cAEAD0.2)) @ #vk.11
3: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                  'K_2ae'>,                hkdfExtract(~ltk, 'g'^(~xx*~yy)))) @ #vk.30
4: !KU( 'g'^~xx ) @ #vk.20
5: !KU( 'g'^~yy ) @ #vk.6

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 90 (precomputed): !KU( ~xx ) @ #vk.34
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~yy ) @ #vk.34
1: !KU( ~yy.1 ) @ #vk.36
2: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.2,                              h(<$cHash0.2,                                 h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0.1,                                                         h(<$cHash0.1,                                                            <'PSK', 'PSK', $cSUITE0.1,                                                             'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                                            'g'^~yy.1>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                            h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                            $cAEAD0.1),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                 $cAEAD0.2)) @ #vk.11
3: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                  'K_2ae'>,                hkdfExtract(~ltk, 'g'^(~xx*~yy)))) @ #vk.30
4: !KU( 'g'^~xx ) @ #vk.20
5: !KU( 'g'^~yy ) @ #vk.6

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 80 (precomputed): !KU( ~yy ) @ #vk.34
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.35
1: !KU( ~yy ) @ #vk.36
2: !KU( ~yy.1 ) @ #vk.38
3: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.2,                              h(<$cHash0.2,                                 h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0.1,                                                         h(<$cHash0.1,                                                            <'PSK', 'PSK', $cSUITE0.1,                                                             'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                                            'g'^~yy.1>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                            h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                            $cAEAD0.1),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                 $cAEAD0.2)) @ #vk.11
4: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                  'K_2ae'>,                hkdfExtract(~ltk, 'g'^(~xx*~yy)))) @ #vk.30
5: !KU( 'g'^~xx ) @ #vk.20
6: !KU( 'g'^~yy ) @ #vk.6

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 81 (precomputed): !KU( ~xx ) @ #vk.35
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( 'g'^(~yy*~xx.1*inv(~xx)) ) @ #vk.5
1: !KU( 'g'^(~yy*~xx.1*inv(~yy.1)) ) @ #vk.28
2: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.3,                              h(<$cHash0.3,                                 h(<$cHash0.2,                                    <'PSK', 'PSK', $cSUITE0.2, 'g'^(~yy*~xx.1*inv(~yy.1)), $U.2, $V.2                                   >,                                    'g'^~yy.1>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0.2,                                                         h(<$cHash0.2,                                                            <'PSK', 'PSK', $cSUITE0.2,                                                             'g'^(~yy*~xx.1*inv(~yy.1)), $U.2, $V.2                                                           >,                                                            'g'^~yy.1>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk.2, 'g'^(~yy*~xx.1))),                                            h(<$cHash0.2,                                                <'PSK', 'PSK', $cSUITE0.2,                                                 'g'^(~yy*~xx.1*inv(~yy.1)), $U.2, $V.2>,                                                'g'^~yy.1>),                                            $cAEAD0.2),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk.2, 'g'^(~yy*~xx.1))),                 h(<$cHash0.3,                     h(<$cHash0.2,                        <'PSK', 'PSK', $cSUITE0.2, 'g'^(~yy*~xx.1*inv(~yy.1)), $U.2, $V.2                       >,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.2,                                             h(<$cHash0.2,                                                <'PSK', 'PSK', $cSUITE0.2,                                                 'g'^(~yy*~xx.1*inv(~yy.1)), $U.2, $V.2>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.2, 'g'^(~yy*~xx.1))),                                h(<$cHash0.2,                                    <'PSK', 'PSK', $cSUITE0.2, 'g'^(~yy*~xx.1*inv(~yy.1)), $U.2, $V.2                                   >,                                    'g'^~yy.1>),                                $cAEAD0.2),                     'emptyStr'>),                 $cAEAD0.3)) @ #vk.10
3: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                     'g'^(~yy*~xx.1*inv(~xx))>),                  'K_2ae'>,                hkdfExtract(~ltk, 'g'^(~yy*~xx.1)))) @ #vk.32
4: !KU( 'g'^~xx ) @ #vk.38
5: !KU( 'g'^~yy ) @ #vk.43
6: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^~xx.1, $U.1, $V.1>,                                 'g'^~yy>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~yy*~xx.1))),                 h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^~xx.1, $U.1, $V.1>,                     'g'^~yy>),                 $cAEAD0.1)) @ #vk.44
7: !KU( 'g'^~xx.1 ) @ #vk.21

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 75 (precomputed):
    !KU( 'g'^(~yy*~xx.1*inv(~xx)) ) @ #vk.5
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.34
1: !KU( ~yy.1 ) @ #vk.36
2: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.2,                              h(<$cHash0.2,                                 h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0.1,                                                         h(<$cHash0.1,                                                            <'PSK', 'PSK', $cSUITE0.1,                                                             'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                                            'g'^~yy.1>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                            h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                            $cAEAD0.1),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                 $cAEAD0.2)) @ #vk.11
3: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                  'K_2ae'>,                hkdfExtract(~ltk, 'g'^(~xx*~yy)))) @ #vk.30
4: !KU( 'g'^~xx ) @ #vk.20
5: !KU( 'g'^~yy ) @ #vk.6

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 90 (precomputed): !KU( ~xx ) @ #vk.34
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~yy ) @ #vk.34
1: !KU( ~yy.1 ) @ #vk.36
2: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.2,                              h(<$cHash0.2,                                 h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0.1,                                                         h(<$cHash0.1,                                                            <'PSK', 'PSK', $cSUITE0.1,                                                             'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                                            'g'^~yy.1>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                            h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                            $cAEAD0.1),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                 $cAEAD0.2)) @ #vk.11
3: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                  'K_2ae'>,                hkdfExtract(~ltk, 'g'^(~xx*~yy)))) @ #vk.30
4: !KU( 'g'^~xx ) @ #vk.20
5: !KU( 'g'^~yy ) @ #vk.6

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 80 (precomputed): !KU( ~yy ) @ #vk.34
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.35
1: !KU( ~yy ) @ #vk.36
2: !KU( ~yy.1 ) @ #vk.38
3: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.2,                              h(<$cHash0.2,                                 h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0.1,                                                         h(<$cHash0.1,                                                            <'PSK', 'PSK', $cSUITE0.1,                                                             'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                                            'g'^~yy.1>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                            h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                            $cAEAD0.1),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                 $cAEAD0.2)) @ #vk.11
4: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                  'K_2ae'>,                hkdfExtract(~ltk, 'g'^(~xx*~yy)))) @ #vk.30
5: !KU( 'g'^~xx ) @ #vk.20
6: !KU( 'g'^~yy ) @ #vk.6

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 81 (precomputed): !KU( ~xx ) @ #vk.35
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( 'g'^(~yy*~xx.1*inv(~xx)) ) @ #vk.5
1: !KU( 'g'^(~yy*~xx.1*inv(~yy.1)) ) @ #vk.28
2: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.3,                              h(<$cHash0.3,                                 h(<$cHash0.2,                                    <'PSK', 'PSK', $cSUITE0.2, 'g'^(~yy*~xx.1*inv(~yy.1)), $U.2, $V.2                                   >,                                    'g'^~yy.1>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0.2,                                                         h(<$cHash0.2,                                                            <'PSK', 'PSK', $cSUITE0.2,                                                             'g'^(~yy*~xx.1*inv(~yy.1)), $U.2, $V.2                                                           >,                                                            'g'^~yy.1>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk.2, 'g'^(~yy*~xx.1))),                                            h(<$cHash0.2,                                                <'PSK', 'PSK', $cSUITE0.2,                                                 'g'^(~yy*~xx.1*inv(~yy.1)), $U.2, $V.2>,                                                'g'^~yy.1>),                                            $cAEAD0.2),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk.2, 'g'^(~yy*~xx.1))),                 h(<$cHash0.3,                     h(<$cHash0.2,                        <'PSK', 'PSK', $cSUITE0.2, 'g'^(~yy*~xx.1*inv(~yy.1)), $U.2, $V.2                       >,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.2,                                             h(<$cHash0.2,                                                <'PSK', 'PSK', $cSUITE0.2,                                                 'g'^(~yy*~xx.1*inv(~yy.1)), $U.2, $V.2>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.2, 'g'^(~yy*~xx.1))),                                h(<$cHash0.2,                                    <'PSK', 'PSK', $cSUITE0.2, 'g'^(~yy*~xx.1*inv(~yy.1)), $U.2, $V.2                                   >,                                    'g'^~yy.1>),                                $cAEAD0.2),                     'emptyStr'>),                 $cAEAD0.3)) @ #vk.10
3: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                     'g'^(~yy*~xx.1*inv(~xx))>),                  'K_2ae'>,                hkdfExtract(~ltk, 'g'^(~yy*~xx.1)))) @ #vk.32
4: !KU( 'g'^~xx ) @ #vk.38
5: !KU( 'g'^~yy ) @ #vk.43
6: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^~xx.1, $U.1, $V.1>,                                 'g'^~yy>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~yy*~xx.1))),                 h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^~xx.1, $U.1, $V.1>,                     'g'^~yy>),                 $cAEAD0.1)) @ #vk.44
7: !KU( 'g'^~xx.1 ) @ #vk.21

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 75 (precomputed):
    !KU( 'g'^(~yy*~xx.1*inv(~xx)) ) @ #vk.5
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~yy ) @ #vk.47
1: !KU( ~xx.1 ) @ #vk.48
2: !KU( ~xx ) @ #vk.50
3: !KU( 'g'^(~yy*~xx.1*inv(~yy.1)) ) @ #vk.28
4: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.3,                              h(<$cHash0.3,                                 h(<$cHash0.2,                                    <'PSK', 'PSK', $cSUITE0.2, 'g'^(~yy*~xx.1*inv(~yy.1)), $U.2, $V.2                                   >,                                    'g'^~yy.1>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0.2,                                                         h(<$cHash0.2,                                                            <'PSK', 'PSK', $cSUITE0.2,                                                             'g'^(~yy*~xx.1*inv(~yy.1)), $U.2, $V.2                                                           >,                                                            'g'^~yy.1>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk.2, 'g'^(~yy*~xx.1))),                                            h(<$cHash0.2,                                                <'PSK', 'PSK', $cSUITE0.2,                                                 'g'^(~yy*~xx.1*inv(~yy.1)), $U.2, $V.2>,                                                'g'^~yy.1>),                                            $cAEAD0.2),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk.2, 'g'^(~yy*~xx.1))),                 h(<$cHash0.3,                     h(<$cHash0.2,                        <'PSK', 'PSK', $cSUITE0.2, 'g'^(~yy*~xx.1*inv(~yy.1)), $U.2, $V.2                       >,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.2,                                             h(<$cHash0.2,                                                <'PSK', 'PSK', $cSUITE0.2,                                                 'g'^(~yy*~xx.1*inv(~yy.1)), $U.2, $V.2>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.2, 'g'^(~yy*~xx.1))),                                h(<$cHash0.2,                                    <'PSK', 'PSK', $cSUITE0.2, 'g'^(~yy*~xx.1*inv(~yy.1)), $U.2, $V.2                                   >,                                    'g'^~yy.1>),                                $cAEAD0.2),                     'emptyStr'>),                 $cAEAD0.3)) @ #vk.10
5: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                     'g'^(~yy*~xx.1*inv(~xx))>),                  'K_2ae'>,                hkdfExtract(~ltk, 'g'^(~yy*~xx.1)))) @ #vk.32
6: !KU( 'g'^~xx ) @ #vk.38
7: !KU( 'g'^~yy ) @ #vk.43
8: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^~xx.1, $U.1, $V.1>,                                 'g'^~yy>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~yy*~xx.1))),                 h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^~xx.1, $U.1, $V.1>,                     'g'^~yy>),                 $cAEAD0.1)) @ #vk.44
9: !KU( 'g'^~xx.1 ) @ #vk.21

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 81 (precomputed): !KU( ~yy ) @ #vk.47
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~yy ) @ #vk.46
1: !KU( ~xx ) @ #vk.48
2: !KU( 'g'^(~yy*~xx.1*inv(~yy.1)) ) @ #vk.28
3: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.3,                              h(<$cHash0.3,                                 h(<$cHash0.2,                                    <'PSK', 'PSK', $cSUITE0.2, 'g'^(~yy*~xx.1*inv(~yy.1)), $U.2, $V.2                                   >,                                    'g'^~yy.1>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0.2,                                                         h(<$cHash0.2,                                                            <'PSK', 'PSK', $cSUITE0.2,                                                             'g'^(~yy*~xx.1*inv(~yy.1)), $U.2, $V.2                                                           >,                                                            'g'^~yy.1>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk.2, 'g'^(~yy*~xx.1))),                                            h(<$cHash0.2,                                                <'PSK', 'PSK', $cSUITE0.2,                                                 'g'^(~yy*~xx.1*inv(~yy.1)), $U.2, $V.2>,                                                'g'^~yy.1>),                                            $cAEAD0.2),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk.2, 'g'^(~yy*~xx.1))),                 h(<$cHash0.3,                     h(<$cHash0.2,                        <'PSK', 'PSK', $cSUITE0.2, 'g'^(~yy*~xx.1*inv(~yy.1)), $U.2, $V.2                       >,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.2,                                             h(<$cHash0.2,                                                <'PSK', 'PSK', $cSUITE0.2,                                                 'g'^(~yy*~xx.1*inv(~yy.1)), $U.2, $V.2>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.2, 'g'^(~yy*~xx.1))),                                h(<$cHash0.2,                                    <'PSK', 'PSK', $cSUITE0.2, 'g'^(~yy*~xx.1*inv(~yy.1)), $U.2, $V.2                                   >,                                    'g'^~yy.1>),                                $cAEAD0.2),                     'emptyStr'>),                 $cAEAD0.3)) @ #vk.10
4: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                     'g'^(~yy*~xx.1*inv(~xx))>),                  'K_2ae'>,                hkdfExtract(~ltk, 'g'^(~yy*~xx.1)))) @ #vk.32
5: !KU( 'g'^~xx ) @ #vk.38
6: !KU( 'g'^~yy ) @ #vk.43
7: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^~xx.1, $U.1, $V.1>,                                 'g'^~yy>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~yy*~xx.1))),                 h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^~xx.1, $U.1, $V.1>,                     'g'^~yy>),                 $cAEAD0.1)) @ #vk.44
8: !KU( 'g'^~xx.1 ) @ #vk.21

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 80 (precomputed): !KU( ~yy ) @ #vk.46
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx.1 ) @ #vk.46
1: !KU( ~xx ) @ #vk.48
2: !KU( 'g'^(~yy*~xx.1*inv(~yy.1)) ) @ #vk.28
3: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.3,                              h(<$cHash0.3,                                 h(<$cHash0.2,                                    <'PSK', 'PSK', $cSUITE0.2, 'g'^(~yy*~xx.1*inv(~yy.1)), $U.2, $V.2                                   >,                                    'g'^~yy.1>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0.2,                                                         h(<$cHash0.2,                                                            <'PSK', 'PSK', $cSUITE0.2,                                                             'g'^(~yy*~xx.1*inv(~yy.1)), $U.2, $V.2                                                           >,                                                            'g'^~yy.1>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk.2, 'g'^(~yy*~xx.1))),                                            h(<$cHash0.2,                                                <'PSK', 'PSK', $cSUITE0.2,                                                 'g'^(~yy*~xx.1*inv(~yy.1)), $U.2, $V.2>,                                                'g'^~yy.1>),                                            $cAEAD0.2),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk.2, 'g'^(~yy*~xx.1))),                 h(<$cHash0.3,                     h(<$cHash0.2,                        <'PSK', 'PSK', $cSUITE0.2, 'g'^(~yy*~xx.1*inv(~yy.1)), $U.2, $V.2                       >,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.2,                                             h(<$cHash0.2,                                                <'PSK', 'PSK', $cSUITE0.2,                                                 'g'^(~yy*~xx.1*inv(~yy.1)), $U.2, $V.2>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.2, 'g'^(~yy*~xx.1))),                                h(<$cHash0.2,                                    <'PSK', 'PSK', $cSUITE0.2, 'g'^(~yy*~xx.1*inv(~yy.1)), $U.2, $V.2                                   >,                                    'g'^~yy.1>),                                $cAEAD0.2),                     'emptyStr'>),                 $cAEAD0.3)) @ #vk.10
4: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                     'g'^(~yy*~xx.1*inv(~xx))>),                  'K_2ae'>,                hkdfExtract(~ltk, 'g'^(~yy*~xx.1)))) @ #vk.32
5: !KU( 'g'^~xx ) @ #vk.38
6: !KU( 'g'^~yy ) @ #vk.43
7: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^~xx.1, $U.1, $V.1>,                                 'g'^~yy>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~yy*~xx.1))),                 h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^~xx.1, $U.1, $V.1>,                     'g'^~yy>),                 $cAEAD0.1)) @ #vk.44
8: !KU( 'g'^~xx.1 ) @ #vk.21

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 90 (precomputed): !KU( ~xx.1 ) @ #vk.46
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>,         'g'^~yy>)) @ #vk.49
1: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.4,                              h(<$cHash0.4,                                 h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                                    'g'^~yy.1>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0.3,                                                         h(<$cHash0.3,                                                            <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2,                                                             $V.2>,                                                            'g'^~yy.1>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk.2, impSk)),                                            h(<$cHash0.3,                                                <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                                                'g'^~yy.1>),                                            $cAEAD0.3),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk.2, impSk)),                 h(<$cHash0.4,                     h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.3,                                             h(<$cHash0.3,                                                <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.2, impSk)),                                h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                                    'g'^~yy.1>),                                $cAEAD0.3),                     'emptyStr'>),                 $cAEAD0.4)) @ #vk.12
2: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, gy>),                  'K_2ae'>,                hkdfExtract(~ltk, impSk))) @ #vk.34
3: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                      >),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                              >),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, impSk)),                                h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                  >),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, impSk))) @ #vk.44
4: splitEqs(0)
5: splitEqs(3)
6: splitEqs(4)
7: !KU( 'g'^~xx ) @ #vk.40
8: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                               >),                              'K_2ae'>,                            hkdfExtract(~ltk.1, impSk)),                 h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                   >),                 $cAEAD0.1)) @ #vk.50

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 78 (precomputed):
    !KU( h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 
            'g'^~yy>)
    ) @ #vk.49
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx.1 ) @ #vk.46
1: !KU( ~xx ) @ #vk.48
2: !KU( 'g'^(~yy*~xx.1*inv(~yy.1)) ) @ #vk.28
3: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.3,                              h(<$cHash0.3,                                 h(<$cHash0.2,                                    <'PSK', 'PSK', $cSUITE0.2, 'g'^(~yy*~xx.1*inv(~yy.1)), $U.2, $V.2                                   >,                                    'g'^~yy.1>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0.2,                                                         h(<$cHash0.2,                                                            <'PSK', 'PSK', $cSUITE0.2,                                                             'g'^(~yy*~xx.1*inv(~yy.1)), $U.2, $V.2                                                           >,                                                            'g'^~yy.1>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk.2, 'g'^(~yy*~xx.1))),                                            h(<$cHash0.2,                                                <'PSK', 'PSK', $cSUITE0.2,                                                 'g'^(~yy*~xx.1*inv(~yy.1)), $U.2, $V.2>,                                                'g'^~yy.1>),                                            $cAEAD0.2),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk.2, 'g'^(~yy*~xx.1))),                 h(<$cHash0.3,                     h(<$cHash0.2,                        <'PSK', 'PSK', $cSUITE0.2, 'g'^(~yy*~xx.1*inv(~yy.1)), $U.2, $V.2                       >,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.2,                                             h(<$cHash0.2,                                                <'PSK', 'PSK', $cSUITE0.2,                                                 'g'^(~yy*~xx.1*inv(~yy.1)), $U.2, $V.2>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.2, 'g'^(~yy*~xx.1))),                                h(<$cHash0.2,                                    <'PSK', 'PSK', $cSUITE0.2, 'g'^(~yy*~xx.1*inv(~yy.1)), $U.2, $V.2                                   >,                                    'g'^~yy.1>),                                $cAEAD0.2),                     'emptyStr'>),                 $cAEAD0.3)) @ #vk.10
4: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                     'g'^(~yy*~xx.1*inv(~xx))>),                  'K_2ae'>,                hkdfExtract(~ltk, 'g'^(~yy*~xx.1)))) @ #vk.32
5: !KU( 'g'^~xx ) @ #vk.38
6: !KU( 'g'^~yy ) @ #vk.43
7: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^~xx.1, $U.1, $V.1>,                                 'g'^~yy>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~yy*~xx.1))),                 h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^~xx.1, $U.1, $V.1>,                     'g'^~yy>),                 $cAEAD0.1)) @ #vk.44
8: !KU( 'g'^~xx.1 ) @ #vk.21

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 90 (precomputed): !KU( ~xx.1 ) @ #vk.46
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~yy ) @ #vk.46
1: !KU( ~xx ) @ #vk.48
2: !KU( 'g'^(~yy*~xx.1*inv(~yy.1)) ) @ #vk.28
3: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.3,                              h(<$cHash0.3,                                 h(<$cHash0.2,                                    <'PSK', 'PSK', $cSUITE0.2, 'g'^(~yy*~xx.1*inv(~yy.1)), $U.2, $V.2                                   >,                                    'g'^~yy.1>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0.2,                                                         h(<$cHash0.2,                                                            <'PSK', 'PSK', $cSUITE0.2,                                                             'g'^(~yy*~xx.1*inv(~yy.1)), $U.2, $V.2                                                           >,                                                            'g'^~yy.1>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk.2, 'g'^(~yy*~xx.1))),                                            h(<$cHash0.2,                                                <'PSK', 'PSK', $cSUITE0.2,                                                 'g'^(~yy*~xx.1*inv(~yy.1)), $U.2, $V.2>,                                                'g'^~yy.1>),                                            $cAEAD0.2),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk.2, 'g'^(~yy*~xx.1))),                 h(<$cHash0.3,                     h(<$cHash0.2,                        <'PSK', 'PSK', $cSUITE0.2, 'g'^(~yy*~xx.1*inv(~yy.1)), $U.2, $V.2                       >,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.2,                                             h(<$cHash0.2,                                                <'PSK', 'PSK', $cSUITE0.2,                                                 'g'^(~yy*~xx.1*inv(~yy.1)), $U.2, $V.2>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.2, 'g'^(~yy*~xx.1))),                                h(<$cHash0.2,                                    <'PSK', 'PSK', $cSUITE0.2, 'g'^(~yy*~xx.1*inv(~yy.1)), $U.2, $V.2                                   >,                                    'g'^~yy.1>),                                $cAEAD0.2),                     'emptyStr'>),                 $cAEAD0.3)) @ #vk.10
4: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                     'g'^(~yy*~xx.1*inv(~xx))>),                  'K_2ae'>,                hkdfExtract(~ltk, 'g'^(~yy*~xx.1)))) @ #vk.32
5: !KU( 'g'^~xx ) @ #vk.38
6: !KU( 'g'^~yy ) @ #vk.43
7: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^~xx.1, $U.1, $V.1>,                                 'g'^~yy>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~yy*~xx.1))),                 h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^~xx.1, $U.1, $V.1>,                     'g'^~yy>),                 $cAEAD0.1)) @ #vk.44
8: !KU( 'g'^~xx.1 ) @ #vk.21

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 80 (precomputed): !KU( ~yy ) @ #vk.46
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~yy ) @ #vk.47
1: !KU( ~xx.1 ) @ #vk.48
2: !KU( ~xx ) @ #vk.50
3: !KU( 'g'^(~yy*~xx.1*inv(~yy.1)) ) @ #vk.28
4: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.3,                              h(<$cHash0.3,                                 h(<$cHash0.2,                                    <'PSK', 'PSK', $cSUITE0.2, 'g'^(~yy*~xx.1*inv(~yy.1)), $U.2, $V.2                                   >,                                    'g'^~yy.1>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0.2,                                                         h(<$cHash0.2,                                                            <'PSK', 'PSK', $cSUITE0.2,                                                             'g'^(~yy*~xx.1*inv(~yy.1)), $U.2, $V.2                                                           >,                                                            'g'^~yy.1>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk.2, 'g'^(~yy*~xx.1))),                                            h(<$cHash0.2,                                                <'PSK', 'PSK', $cSUITE0.2,                                                 'g'^(~yy*~xx.1*inv(~yy.1)), $U.2, $V.2>,                                                'g'^~yy.1>),                                            $cAEAD0.2),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk.2, 'g'^(~yy*~xx.1))),                 h(<$cHash0.3,                     h(<$cHash0.2,                        <'PSK', 'PSK', $cSUITE0.2, 'g'^(~yy*~xx.1*inv(~yy.1)), $U.2, $V.2                       >,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.2,                                             h(<$cHash0.2,                                                <'PSK', 'PSK', $cSUITE0.2,                                                 'g'^(~yy*~xx.1*inv(~yy.1)), $U.2, $V.2>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.2, 'g'^(~yy*~xx.1))),                                h(<$cHash0.2,                                    <'PSK', 'PSK', $cSUITE0.2, 'g'^(~yy*~xx.1*inv(~yy.1)), $U.2, $V.2                                   >,                                    'g'^~yy.1>),                                $cAEAD0.2),                     'emptyStr'>),                 $cAEAD0.3)) @ #vk.10
5: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                     'g'^(~yy*~xx.1*inv(~xx))>),                  'K_2ae'>,                hkdfExtract(~ltk, 'g'^(~yy*~xx.1)))) @ #vk.32
6: !KU( 'g'^~xx ) @ #vk.38
7: !KU( 'g'^~yy ) @ #vk.43
8: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^~xx.1, $U.1, $V.1>,                                 'g'^~yy>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~yy*~xx.1))),                 h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^~xx.1, $U.1, $V.1>,                     'g'^~yy>),                 $cAEAD0.1)) @ #vk.44
9: !KU( 'g'^~xx.1 ) @ #vk.21

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 81 (precomputed): !KU( ~yy ) @ #vk.47
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.4,                              h(<$cHash0.4,                                 h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                                    'g'^~yy.1>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0.3,                                                         h(<$cHash0.3,                                                            <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2,                                                             $V.2>,                                                            'g'^~yy.1>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk.2, impSk)),                                            h(<$cHash0.3,                                                <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                                                'g'^~yy.1>),                                            $cAEAD0.3),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk.2, impSk)),                 h(<$cHash0.4,                     h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.3,                                             h(<$cHash0.3,                                                <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.2, impSk)),                                h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                                    'g'^~yy.1>),                                $cAEAD0.3),                     'emptyStr'>),                 $cAEAD0.4)) @ #vk.14
1: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, gy>),                  'K_2ae'>,                hkdfExtract(~ltk, impSk))) @ #vk.37
2: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                      >),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                              >),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, impSk)),                                h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                  >),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, impSk))) @ #vk.47
3: splitEqs(0)
4: splitEqs(3)
5: splitEqs(4)
6: !KU( 'g'^~xx ) @ #vk.43
7: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                               >),                              'K_2ae'>,                            hkdfExtract(~ltk.1, impSk)),                 h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                   >),                 $cAEAD0.1)) @ #vk.51
8: !KU( 'g'^~yy ) @ #vk.54

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 19 (precomputed):
    !KU( aeadEncrypt('emptyStr',
                     hkdfExpand(<$cAEAD0.4, 
                                 h(<$cHash0.4, 
                                    h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>, 
                                       'g'^~yy.1>), 
                                    aeadEncrypt('emptyStr',
                                                hkdfExpand(<$cAEAD0.3, 
                                                            h(<$cHash0.3, 
                                                               <'PSK', 'PSK', $cSUITE0.2, gx.1, 
                                                                $U.2, $V.2>, 
                                                               'g'^~yy.1>), 
                                                            'K_2ae'>,
                                                           hkdfExtract(~ltk.2, impSk)),
                                                h(<$cHash0.3, 
                                                   <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>, 
                                                   'g'^~yy.1>),
                                                $cAEAD0.3), 
                                    'emptyStr'>), 
                                 'K_3ae'>,
                                hkdfExtract(~ltk.2, impSk)),
                     h(<$cHash0.4, 
                        h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>, 
                           'g'^~yy.1>), 
                        aeadEncrypt('emptyStr',
                                    hkdfExpand(<$cAEAD0.3, 
                                                h(<$cHash0.3, 
                                                   <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>, 
                                                   'g'^~yy.1>), 
                                                'K_2ae'>,
                                               hkdfExtract(~ltk.2, impSk)),
                                    h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>, 
                                       'g'^~yy.1>),
                                    $cAEAD0.3), 
                        'emptyStr'>),
                     $cAEAD0.4)
    ) @ #vk.14
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>,         'g'^~yy>)) @ #vk.49
1: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.4,                              h(<$cHash0.4,                                 h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                                    'g'^~yy.1>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0.3,                                                         h(<$cHash0.3,                                                            <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2,                                                             $V.2>,                                                            'g'^~yy.1>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk.2, impSk)),                                            h(<$cHash0.3,                                                <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                                                'g'^~yy.1>),                                            $cAEAD0.3),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk.2, impSk)),                 h(<$cHash0.4,                     h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.3,                                             h(<$cHash0.3,                                                <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.2, impSk)),                                h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                                    'g'^~yy.1>),                                $cAEAD0.3),                     'emptyStr'>),                 $cAEAD0.4)) @ #vk.12
2: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, gy>),                  'K_2ae'>,                hkdfExtract(~ltk, impSk))) @ #vk.34
3: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                      >),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                              >),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, impSk)),                                h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                  >),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, impSk))) @ #vk.44
4: splitEqs(0)
5: splitEqs(3)
6: splitEqs(4)
7: !KU( 'g'^~xx ) @ #vk.40
8: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                               >),                              'K_2ae'>,                            hkdfExtract(~ltk.1, impSk)),                 h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                   >),                 $cAEAD0.1)) @ #vk.50

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 78 (precomputed):
    !KU( h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 
            'g'^~yy>)
    ) @ #vk.49
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( h(<$cHash0.4,         h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,            'g'^~yy.1>),         aeadEncrypt('emptyStr',                    hkdfExpand(<$cAEAD0.3,                                 h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                                    'g'^~yy.1>),                                 'K_2ae'>,                               hkdfExtract(~ltk.2, impSk)),                    h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                        'g'^~yy.1>),                    $cAEAD0.3),         'emptyStr'>)) @ #vk.56
1: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, gy>),                  'K_2ae'>,                hkdfExtract(~ltk, impSk))) @ #vk.39
2: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                      >),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                              >),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, impSk)),                                h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                  >),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, impSk))) @ #vk.49
3: !KU( hkdfExpand(<$cAEAD0.4,                  h(<$cHash0.4,                     h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.3,                                             h(<$cHash0.3,                                                <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.2, impSk)),                                h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                                    'g'^~yy.1>),                                $cAEAD0.3),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.2, impSk))) @ #vk.55
4: splitEqs(0)
5: splitEqs(3)
6: splitEqs(4)
7: !KU( 'g'^~xx ) @ #vk.45
8: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                               >),                              'K_2ae'>,                            hkdfExtract(~ltk.1, impSk)),                 h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                   >),                 $cAEAD0.1)) @ #vk.52
9: !KU( 'g'^~yy ) @ #vk.54

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 101 (precomputed):
    !KU( h(<$cHash0.4, 
            h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>, 
               'g'^~yy.1>), 
            aeadEncrypt('emptyStr',
                        hkdfExpand(<$cAEAD0.3, 
                                    h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>, 
                                       'g'^~yy.1>), 
                                    'K_2ae'>,
                                   hkdfExtract(~ltk.2, impSk)),
                        h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>, 
                           'g'^~yy.1>),
                        $cAEAD0.3), 
            'emptyStr'>)
    ) @ #vk.56
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: splitEqs(0)
1: splitEqs(3)
2: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^x>),                  'K_2ae'>,                hkdfExtract(~ltk, 'g'^(~yy*~xx.1)))) @ #vk.39
3: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^x.1, $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^x.1, $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~yy*~xx.1))),                                h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^x.1, $U.1, $V.1>,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~yy*~xx.1)))) @ #vk.49
4: !KU( 'g'^x ) @ #vk.9
5: !KU( 'g'^x.1 ) @ #vk.28
6: !KU( 'g'^~xx ) @ #vk.45
7: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^x.1, $U.1, $V.1>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~yy*~xx.1))),                 h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^x.1, $U.1, $V.1>,                     'g'^~yy.1>),                 $cAEAD0.1)) @ #vk.52
8: !KU( 'g'^~yy.1 ) @ #vk.54
9: !KU( 'g'^~yy ) @ #vk.56
10: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.3,                              h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, 'g'^~xx.1, $U.2, $V.2>,                                 'g'^~yy>),                              'K_2ae'>,                            hkdfExtract(~ltk.2, 'g'^(~yy*~xx.1))),                 h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, 'g'^~xx.1, $U.2, $V.2>,                     'g'^~yy>),                 $cAEAD0.3)) @ #vk.57
11: !KU( 'g'^~xx.1 ) @ #vk.35

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 3 (directly): splitEqs(0)
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.4,                              h(<$cHash0.4,                                 h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                                    'g'^~yy.1>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0.3,                                                         h(<$cHash0.3,                                                            <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2,                                                             $V.2>,                                                            'g'^~yy.1>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk.2, impSk)),                                            h(<$cHash0.3,                                                <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                                                'g'^~yy.1>),                                            $cAEAD0.3),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk.2, impSk)),                 h(<$cHash0.4,                     h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.3,                                             h(<$cHash0.3,                                                <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.2, impSk)),                                h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                                    'g'^~yy.1>),                                $cAEAD0.3),                     'emptyStr'>),                 $cAEAD0.4)) @ #vk.14
1: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, gy>),                  'K_2ae'>,                hkdfExtract(~ltk, impSk))) @ #vk.37
2: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                      >),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                              >),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, impSk)),                                h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                  >),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, impSk))) @ #vk.47
3: splitEqs(0)
4: splitEqs(3)
5: splitEqs(4)
6: !KU( 'g'^~xx ) @ #vk.43
7: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                               >),                              'K_2ae'>,                            hkdfExtract(~ltk.1, impSk)),                 h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                   >),                 $cAEAD0.1)) @ #vk.51
8: !KU( 'g'^~yy ) @ #vk.54

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 19 (precomputed):
    !KU( aeadEncrypt('emptyStr',
                     hkdfExpand(<$cAEAD0.4, 
                                 h(<$cHash0.4, 
                                    h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>, 
                                       'g'^~yy.1>), 
                                    aeadEncrypt('emptyStr',
                                                hkdfExpand(<$cAEAD0.3, 
                                                            h(<$cHash0.3, 
                                                               <'PSK', 'PSK', $cSUITE0.2, gx.1, 
                                                                $U.2, $V.2>, 
                                                               'g'^~yy.1>), 
                                                            'K_2ae'>,
                                                           hkdfExtract(~ltk.2, impSk)),
                                                h(<$cHash0.3, 
                                                   <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>, 
                                                   'g'^~yy.1>),
                                                $cAEAD0.3), 
                                    'emptyStr'>), 
                                 'K_3ae'>,
                                hkdfExtract(~ltk.2, impSk)),
                     h(<$cHash0.4, 
                        h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>, 
                           'g'^~yy.1>), 
                        aeadEncrypt('emptyStr',
                                    hkdfExpand(<$cAEAD0.3, 
                                                h(<$cHash0.3, 
                                                   <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>, 
                                                   'g'^~yy.1>), 
                                                'K_2ae'>,
                                               hkdfExtract(~ltk.2, impSk)),
                                    h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>, 
                                       'g'^~yy.1>),
                                    $cAEAD0.3), 
                        'emptyStr'>),
                     $cAEAD0.4)
    ) @ #vk.14
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( h(<$cHash0.4,         h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,            'g'^~yy.1>),         aeadEncrypt('emptyStr',                    hkdfExpand(<$cAEAD0.3,                                 h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                                    'g'^~yy.1>),                                 'K_2ae'>,                               hkdfExtract(~ltk.2, impSk)),                    h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                        'g'^~yy.1>),                    $cAEAD0.3),         'emptyStr'>)) @ #vk.56
1: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, gy>),                  'K_2ae'>,                hkdfExtract(~ltk, impSk))) @ #vk.39
2: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                      >),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                              >),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, impSk)),                                h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                  >),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, impSk))) @ #vk.49
3: !KU( hkdfExpand(<$cAEAD0.4,                  h(<$cHash0.4,                     h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.3,                                             h(<$cHash0.3,                                                <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.2, impSk)),                                h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                                    'g'^~yy.1>),                                $cAEAD0.3),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.2, impSk))) @ #vk.55
4: splitEqs(0)
5: splitEqs(3)
6: splitEqs(4)
7: !KU( 'g'^~xx ) @ #vk.45
8: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                               >),                              'K_2ae'>,                            hkdfExtract(~ltk.1, impSk)),                 h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                   >),                 $cAEAD0.1)) @ #vk.52
9: !KU( 'g'^~yy ) @ #vk.54

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 101 (precomputed):
    !KU( h(<$cHash0.4, 
            h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>, 
               'g'^~yy.1>), 
            aeadEncrypt('emptyStr',
                        hkdfExpand(<$cAEAD0.3, 
                                    h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>, 
                                       'g'^~yy.1>), 
                                    'K_2ae'>,
                                   hkdfExtract(~ltk.2, impSk)),
                        h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>, 
                           'g'^~yy.1>),
                        $cAEAD0.3), 
            'emptyStr'>)
    ) @ #vk.56
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: splitEqs(0)
1: splitEqs(3)
2: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^x>),                  'K_2ae'>,                hkdfExtract(~ltk, 'g'^(~yy*~xx.1)))) @ #vk.39
3: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^x.1, $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^x.1, $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~yy*~xx.1))),                                h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^x.1, $U.1, $V.1>,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~yy*~xx.1)))) @ #vk.49
4: !KU( 'g'^x ) @ #vk.9
5: !KU( 'g'^x.1 ) @ #vk.28
6: !KU( 'g'^~xx ) @ #vk.45
7: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^x.1, $U.1, $V.1>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~yy*~xx.1))),                 h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^x.1, $U.1, $V.1>,                     'g'^~yy.1>),                 $cAEAD0.1)) @ #vk.52
8: !KU( 'g'^~yy.1 ) @ #vk.54
9: !KU( 'g'^~yy ) @ #vk.56
10: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.3,                              h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, 'g'^~xx.1, $U.2, $V.2>,                                 'g'^~yy>),                              'K_2ae'>,                            hkdfExtract(~ltk.2, 'g'^(~yy*~xx.1))),                 h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, 'g'^~xx.1, $U.2, $V.2>,                     'g'^~yy>),                 $cAEAD0.3)) @ #vk.57
11: !KU( 'g'^~xx.1 ) @ #vk.35

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 2 (directly): splitEqs(0)
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: splitEqs(3)
1: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                  'K_2ae'>,                hkdfExtract(~ltk, 'g'^(~xx*~yy)))) @ #vk.37
2: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~xx*~yy)))) @ #vk.40
3: !KU( 'g'^x ) @ #vk.26
4: !KU( 'g'^~xx ) @ #vk.33
5: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                     'g'^~yy.1>),                 $cAEAD0.1)) @ #vk.43
6: !KU( 'g'^~yy.1 ) @ #vk.45
7: !KU( 'g'^~yy ) @ #vk.11

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 34 (directly): splitEqs(3)
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: splitEqs(3)
1: !KU( 'g'^(~yy*~xx.1*inv(~xx)) ) @ #vk.11
2: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                     'g'^(~yy*~xx.1*inv(~xx))>),                  'K_2ae'>,                hkdfExtract(~ltk, 'g'^(~yy*~xx.1)))) @ #vk.39
3: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~yy*~xx.1))),                                h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~yy*~xx.1)))) @ #vk.49
4: !KU( 'g'^x ) @ #vk.28
5: !KU( 'g'^~xx ) @ #vk.45
6: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~yy*~xx.1))),                 h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                     'g'^~yy.1>),                 $cAEAD0.1)) @ #vk.52
7: !KU( 'g'^~yy.1 ) @ #vk.54
8: !KU( 'g'^~yy ) @ #vk.56
9: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.3,                              h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, 'g'^~xx.1, $U.2, $V.2>,                                 'g'^~yy>),                              'K_2ae'>,                            hkdfExtract(~ltk.2, 'g'^(~yy*~xx.1))),                 h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, 'g'^~xx.1, $U.2, $V.2>,                     'g'^~yy>),                 $cAEAD0.3)) @ #vk.57
10: !KU( 'g'^~xx.1 ) @ #vk.35

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 34 (directly): splitEqs(3)
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( 'g'^(~xx*~yy*inv(~yy.1)) ) @ #vk.26
1: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                  'K_2ae'>,                hkdfExtract(~ltk, 'g'^(~xx*~yy)))) @ #vk.37
2: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~xx*~yy)))) @ #vk.40
3: !KU( 'g'^~xx ) @ #vk.33
4: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1,                                 <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.1,                     <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                     'g'^~yy.1>),                 $cAEAD0.1)) @ #vk.43
5: !KU( 'g'^~yy.1 ) @ #vk.45
6: !KU( 'g'^~yy ) @ #vk.11

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 105 (precomputed):
    !KU( 'g'^(~xx*~yy*inv(~yy.1)) ) @ #vk.26
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: splitEqs(3)
1: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                  'K_2ae'>,                hkdfExtract(~ltk, 'g'^(~xx*~yy)))) @ #vk.37
2: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~xx*~yy)))) @ #vk.40
3: !KU( 'g'^x ) @ #vk.26
4: !KU( 'g'^~xx ) @ #vk.33
5: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                     'g'^~yy.1>),                 $cAEAD0.1)) @ #vk.43
6: !KU( 'g'^~yy.1 ) @ #vk.45
7: !KU( 'g'^~yy ) @ #vk.11

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 34 (directly): splitEqs(3)
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: splitEqs(3)
1: !KU( 'g'^(~yy*~xx.1*inv(~xx)) ) @ #vk.11
2: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                     'g'^(~yy*~xx.1*inv(~xx))>),                  'K_2ae'>,                hkdfExtract(~ltk, 'g'^(~yy*~xx.1)))) @ #vk.39
3: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~yy*~xx.1))),                                h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~yy*~xx.1)))) @ #vk.49
4: !KU( 'g'^x ) @ #vk.28
5: !KU( 'g'^~xx ) @ #vk.45
6: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~yy*~xx.1))),                 h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                     'g'^~yy.1>),                 $cAEAD0.1)) @ #vk.52
7: !KU( 'g'^~yy.1 ) @ #vk.54
8: !KU( 'g'^~yy ) @ #vk.56
9: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.3,                              h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, 'g'^~xx.1, $U.2, $V.2>,                                 'g'^~yy>),                              'K_2ae'>,                            hkdfExtract(~ltk.2, 'g'^(~yy*~xx.1))),                 h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, 'g'^~xx.1, $U.2, $V.2>,                     'g'^~yy>),                 $cAEAD0.3)) @ #vk.57
10: !KU( 'g'^~xx.1 ) @ #vk.35

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 34 (directly): splitEqs(3)
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( 'g'^(~xx*~yy*inv(~yy.1)) ) @ #vk.26
1: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                  'K_2ae'>,                hkdfExtract(~ltk, 'g'^(~xx*~yy)))) @ #vk.37
2: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~xx*~yy)))) @ #vk.40
3: !KU( 'g'^~xx ) @ #vk.33
4: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1,                                 <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.1,                     <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                     'g'^~yy.1>),                 $cAEAD0.1)) @ #vk.43
5: !KU( 'g'^~yy.1 ) @ #vk.45
6: !KU( 'g'^~yy ) @ #vk.11

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 105 (precomputed):
    !KU( 'g'^(~xx*~yy*inv(~yy.1)) ) @ #vk.26
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.48
1: !KU( ~yy ) @ #vk.49
2: !KU( ~yy.1 ) @ #vk.51
3: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                  'K_2ae'>,                hkdfExtract(~ltk, 'g'^(~xx*~yy)))) @ #vk.37
4: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~xx*~yy)))) @ #vk.40
5: !KU( 'g'^~xx ) @ #vk.33
6: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1,                                 <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.1,                     <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                     'g'^~yy.1>),                 $cAEAD0.1)) @ #vk.43
7: !KU( 'g'^~yy.1 ) @ #vk.45
8: !KU( 'g'^~yy ) @ #vk.12

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 110 (precomputed): !KU( ~xx ) @ #vk.48
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~yy ) @ #vk.47
1: !KU( ~yy.1 ) @ #vk.49
2: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                  'K_2ae'>,                hkdfExtract(~ltk, 'g'^(~xx*~yy)))) @ #vk.37
3: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~xx*~yy)))) @ #vk.40
4: !KU( 'g'^~xx ) @ #vk.33
5: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1,                                 <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.1,                     <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                     'g'^~yy.1>),                 $cAEAD0.1)) @ #vk.43
6: !KU( 'g'^~yy.1 ) @ #vk.45
7: !KU( 'g'^~yy ) @ #vk.12

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 109 (precomputed): !KU( ~yy ) @ #vk.47
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.47
1: !KU( ~yy.1 ) @ #vk.49
2: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                  'K_2ae'>,                hkdfExtract(~ltk, 'g'^(~xx*~yy)))) @ #vk.37
3: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~xx*~yy)))) @ #vk.40
4: !KU( 'g'^~xx ) @ #vk.33
5: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1,                                 <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.1,                     <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                     'g'^~yy.1>),                 $cAEAD0.1)) @ #vk.43
6: !KU( 'g'^~yy.1 ) @ #vk.45
7: !KU( 'g'^~yy ) @ #vk.12

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 119 (precomputed): !KU( ~xx ) @ #vk.47
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( 'g'^(~yy*~xx.1*inv(~xx)) ) @ #vk.11
1: !KU( 'g'^(~yy*~xx.1*inv(~yy.1)) ) @ #vk.28
2: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                     'g'^(~yy*~xx.1*inv(~xx))>),                  'K_2ae'>,                hkdfExtract(~ltk, 'g'^(~yy*~xx.1)))) @ #vk.39
3: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~yy*~xx.1*inv(~yy.1)), $U.1, $V.1                       >,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1,                                                 'g'^(~yy*~xx.1*inv(~yy.1)), $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~yy*~xx.1))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~yy*~xx.1*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~yy*~xx.1)))) @ #vk.49
4: !KU( 'g'^~xx ) @ #vk.45
5: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1,                                 <'PSK', 'PSK', $cSUITE0.1, 'g'^(~yy*~xx.1*inv(~yy.1)), $U.1, $V.1                                >,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~yy*~xx.1))),                 h(<$cHash0.1,                     <'PSK', 'PSK', $cSUITE0.1, 'g'^(~yy*~xx.1*inv(~yy.1)), $U.1, $V.1                    >,                     'g'^~yy.1>),                 $cAEAD0.1)) @ #vk.52
6: !KU( 'g'^~yy.1 ) @ #vk.54
7: !KU( 'g'^~yy ) @ #vk.56
8: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.3,                              h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, 'g'^~xx.1, $U.2, $V.2>,                                 'g'^~yy>),                              'K_2ae'>,                            hkdfExtract(~ltk.2, 'g'^(~yy*~xx.1))),                 h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, 'g'^~xx.1, $U.2, $V.2>,                     'g'^~yy>),                 $cAEAD0.3)) @ #vk.57
9: !KU( 'g'^~xx.1 ) @ #vk.35

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 104 (precomputed):
    !KU( 'g'^(~yy*~xx.1*inv(~xx)) ) @ #vk.11
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.47
1: !KU( ~yy.1 ) @ #vk.49
2: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                  'K_2ae'>,                hkdfExtract(~ltk, 'g'^(~xx*~yy)))) @ #vk.37
3: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~xx*~yy)))) @ #vk.40
4: !KU( 'g'^~xx ) @ #vk.33
5: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1,                                 <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.1,                     <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                     'g'^~yy.1>),                 $cAEAD0.1)) @ #vk.43
6: !KU( 'g'^~yy.1 ) @ #vk.45
7: !KU( 'g'^~yy ) @ #vk.12

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 119 (precomputed): !KU( ~xx ) @ #vk.47
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~yy ) @ #vk.47
1: !KU( ~yy.1 ) @ #vk.49
2: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                  'K_2ae'>,                hkdfExtract(~ltk, 'g'^(~xx*~yy)))) @ #vk.37
3: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~xx*~yy)))) @ #vk.40
4: !KU( 'g'^~xx ) @ #vk.33
5: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1,                                 <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.1,                     <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                     'g'^~yy.1>),                 $cAEAD0.1)) @ #vk.43
6: !KU( 'g'^~yy.1 ) @ #vk.45
7: !KU( 'g'^~yy ) @ #vk.12

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 109 (precomputed): !KU( ~yy ) @ #vk.47
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.48
1: !KU( ~yy ) @ #vk.49
2: !KU( ~yy.1 ) @ #vk.51
3: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                  'K_2ae'>,                hkdfExtract(~ltk, 'g'^(~xx*~yy)))) @ #vk.37
4: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~xx*~yy)))) @ #vk.40
5: !KU( 'g'^~xx ) @ #vk.33
6: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1,                                 <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.1,                     <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                     'g'^~yy.1>),                 $cAEAD0.1)) @ #vk.43
7: !KU( 'g'^~yy.1 ) @ #vk.45
8: !KU( 'g'^~yy ) @ #vk.12

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 110 (precomputed): !KU( ~xx ) @ #vk.48
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( 'g'^(~yy*~xx.1*inv(~xx)) ) @ #vk.11
1: !KU( 'g'^(~yy*~xx.1*inv(~yy.1)) ) @ #vk.28
2: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                     'g'^(~yy*~xx.1*inv(~xx))>),                  'K_2ae'>,                hkdfExtract(~ltk, 'g'^(~yy*~xx.1)))) @ #vk.39
3: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~yy*~xx.1*inv(~yy.1)), $U.1, $V.1                       >,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1,                                                 'g'^(~yy*~xx.1*inv(~yy.1)), $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~yy*~xx.1))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~yy*~xx.1*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~yy*~xx.1)))) @ #vk.49
4: !KU( 'g'^~xx ) @ #vk.45
5: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1,                                 <'PSK', 'PSK', $cSUITE0.1, 'g'^(~yy*~xx.1*inv(~yy.1)), $U.1, $V.1                                >,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~yy*~xx.1))),                 h(<$cHash0.1,                     <'PSK', 'PSK', $cSUITE0.1, 'g'^(~yy*~xx.1*inv(~yy.1)), $U.1, $V.1                    >,                     'g'^~yy.1>),                 $cAEAD0.1)) @ #vk.52
6: !KU( 'g'^~yy.1 ) @ #vk.54
7: !KU( 'g'^~yy ) @ #vk.56
8: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.3,                              h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, 'g'^~xx.1, $U.2, $V.2>,                                 'g'^~yy>),                              'K_2ae'>,                            hkdfExtract(~ltk.2, 'g'^(~yy*~xx.1))),                 h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, 'g'^~xx.1, $U.2, $V.2>,                     'g'^~yy>),                 $cAEAD0.3)) @ #vk.57
9: !KU( 'g'^~xx.1 ) @ #vk.35

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 104 (precomputed):
    !KU( 'g'^(~yy*~xx.1*inv(~xx)) ) @ #vk.11
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx.1 ) @ #vk.59
1: !KU( ~xx ) @ #vk.61
2: !KU( 'g'^(~yy*~xx.1*inv(~yy.1)) ) @ #vk.28
3: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                     'g'^(~yy*~xx.1*inv(~xx))>),                  'K_2ae'>,                hkdfExtract(~ltk, 'g'^(~yy*~xx.1)))) @ #vk.39
4: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~yy*~xx.1*inv(~yy.1)), $U.1, $V.1                       >,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1,                                                 'g'^(~yy*~xx.1*inv(~yy.1)), $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~yy*~xx.1))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~yy*~xx.1*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~yy*~xx.1)))) @ #vk.49
5: !KU( 'g'^~xx ) @ #vk.45
6: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1,                                 <'PSK', 'PSK', $cSUITE0.1, 'g'^(~yy*~xx.1*inv(~yy.1)), $U.1, $V.1                                >,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~yy*~xx.1))),                 h(<$cHash0.1,                     <'PSK', 'PSK', $cSUITE0.1, 'g'^(~yy*~xx.1*inv(~yy.1)), $U.1, $V.1                    >,                     'g'^~yy.1>),                 $cAEAD0.1)) @ #vk.52
7: !KU( 'g'^~yy.1 ) @ #vk.54
8: !KU( 'g'^~yy ) @ #vk.56
9: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.3,                              h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, 'g'^~xx.1, $U.2, $V.2>,                                 'g'^~yy>),                              'K_2ae'>,                            hkdfExtract(~ltk.2, 'g'^(~yy*~xx.1))),                 h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, 'g'^~xx.1, $U.2, $V.2>,                     'g'^~yy>),                 $cAEAD0.3)) @ #vk.57
10: !KU( 'g'^~xx.1 ) @ #vk.35

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 119 (precomputed): !KU( ~xx.1 ) @ #vk.59
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~yy ) @ #vk.60
1: !KU( ~xx.1 ) @ #vk.61
2: !KU( ~xx ) @ #vk.63
3: !KU( 'g'^(~yy*~xx.1*inv(~yy.1)) ) @ #vk.28
4: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                     'g'^(~yy*~xx.1*inv(~xx))>),                  'K_2ae'>,                hkdfExtract(~ltk, 'g'^(~yy*~xx.1)))) @ #vk.39
5: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~yy*~xx.1*inv(~yy.1)), $U.1, $V.1                       >,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1,                                                 'g'^(~yy*~xx.1*inv(~yy.1)), $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~yy*~xx.1))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~yy*~xx.1*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~yy*~xx.1)))) @ #vk.49
6: !KU( 'g'^~xx ) @ #vk.45
7: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1,                                 <'PSK', 'PSK', $cSUITE0.1, 'g'^(~yy*~xx.1*inv(~yy.1)), $U.1, $V.1                                >,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~yy*~xx.1))),                 h(<$cHash0.1,                     <'PSK', 'PSK', $cSUITE0.1, 'g'^(~yy*~xx.1*inv(~yy.1)), $U.1, $V.1                    >,                     'g'^~yy.1>),                 $cAEAD0.1)) @ #vk.52
8: !KU( 'g'^~yy.1 ) @ #vk.54
9: !KU( 'g'^~yy ) @ #vk.56
10: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.3,                              h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, 'g'^~xx.1, $U.2, $V.2>,                                 'g'^~yy>),                              'K_2ae'>,                            hkdfExtract(~ltk.2, 'g'^(~yy*~xx.1))),                 h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, 'g'^~xx.1, $U.2, $V.2>,                     'g'^~yy>),                 $cAEAD0.3)) @ #vk.57
11: !KU( 'g'^~xx.1 ) @ #vk.35

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 110 (precomputed): !KU( ~yy ) @ #vk.60
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~yy ) @ #vk.59
1: !KU( ~xx ) @ #vk.61
2: !KU( 'g'^(~yy*~xx.1*inv(~yy.1)) ) @ #vk.28
3: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                     'g'^(~yy*~xx.1*inv(~xx))>),                  'K_2ae'>,                hkdfExtract(~ltk, 'g'^(~yy*~xx.1)))) @ #vk.39
4: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~yy*~xx.1*inv(~yy.1)), $U.1, $V.1                       >,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1,                                                 'g'^(~yy*~xx.1*inv(~yy.1)), $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~yy*~xx.1))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~yy*~xx.1*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~yy*~xx.1)))) @ #vk.49
5: !KU( 'g'^~xx ) @ #vk.45
6: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1,                                 <'PSK', 'PSK', $cSUITE0.1, 'g'^(~yy*~xx.1*inv(~yy.1)), $U.1, $V.1                                >,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~yy*~xx.1))),                 h(<$cHash0.1,                     <'PSK', 'PSK', $cSUITE0.1, 'g'^(~yy*~xx.1*inv(~yy.1)), $U.1, $V.1                    >,                     'g'^~yy.1>),                 $cAEAD0.1)) @ #vk.52
7: !KU( 'g'^~yy.1 ) @ #vk.54
8: !KU( 'g'^~yy ) @ #vk.56
9: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.3,                              h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, 'g'^~xx.1, $U.2, $V.2>,                                 'g'^~yy>),                              'K_2ae'>,                            hkdfExtract(~ltk.2, 'g'^(~yy*~xx.1))),                 h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, 'g'^~xx.1, $U.2, $V.2>,                     'g'^~yy>),                 $cAEAD0.3)) @ #vk.57
10: !KU( 'g'^~xx.1 ) @ #vk.35

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 109 (precomputed): !KU( ~yy ) @ #vk.59
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,         'g'^~yy.1>)) @ #vk.62
1: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, gy>),                  'K_2ae'>,                hkdfExtract(~ltk, impSk))) @ #vk.41
2: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                      >),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                              >),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, impSk)),                                h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                  >),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, impSk))) @ #vk.51
3: !KU( hkdfExpand(<$cAEAD0.4,                  h(<$cHash0.4,                     h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.3,                                             h(<$cHash0.3,                                                <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.2, impSk)),                                h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                                    'g'^~yy.1>),                                $cAEAD0.3),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.2, impSk))) @ #vk.57
4: splitEqs(0)
5: splitEqs(3)
6: splitEqs(4)
7: !KU( 'g'^~xx ) @ #vk.47
8: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                               >),                              'K_2ae'>,                            hkdfExtract(~ltk.1, impSk)),                 h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                   >),                 $cAEAD0.1)) @ #vk.54
9: !KU( 'g'^~yy ) @ #vk.56
10: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.3,                              h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.2, impSk)),                 h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                     'g'^~yy.1>),                 $cAEAD0.3)) @ #vk.63

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 107 (precomputed):
    !KU( h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>, 
            'g'^~yy.1>)
    ) @ #vk.62
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx.1 ) @ #vk.59
1: !KU( ~xx ) @ #vk.61
2: !KU( 'g'^(~yy*~xx.1*inv(~yy.1)) ) @ #vk.28
3: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                     'g'^(~yy*~xx.1*inv(~xx))>),                  'K_2ae'>,                hkdfExtract(~ltk, 'g'^(~yy*~xx.1)))) @ #vk.39
4: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~yy*~xx.1*inv(~yy.1)), $U.1, $V.1                       >,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1,                                                 'g'^(~yy*~xx.1*inv(~yy.1)), $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~yy*~xx.1))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~yy*~xx.1*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~yy*~xx.1)))) @ #vk.49
5: !KU( 'g'^~xx ) @ #vk.45
6: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1,                                 <'PSK', 'PSK', $cSUITE0.1, 'g'^(~yy*~xx.1*inv(~yy.1)), $U.1, $V.1                                >,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~yy*~xx.1))),                 h(<$cHash0.1,                     <'PSK', 'PSK', $cSUITE0.1, 'g'^(~yy*~xx.1*inv(~yy.1)), $U.1, $V.1                    >,                     'g'^~yy.1>),                 $cAEAD0.1)) @ #vk.52
7: !KU( 'g'^~yy.1 ) @ #vk.54
8: !KU( 'g'^~yy ) @ #vk.56
9: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.3,                              h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, 'g'^~xx.1, $U.2, $V.2>,                                 'g'^~yy>),                              'K_2ae'>,                            hkdfExtract(~ltk.2, 'g'^(~yy*~xx.1))),                 h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, 'g'^~xx.1, $U.2, $V.2>,                     'g'^~yy>),                 $cAEAD0.3)) @ #vk.57
10: !KU( 'g'^~xx.1 ) @ #vk.35

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 119 (precomputed): !KU( ~xx.1 ) @ #vk.59
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~yy ) @ #vk.60
1: !KU( ~xx.1 ) @ #vk.61
2: !KU( ~xx ) @ #vk.63
3: !KU( 'g'^(~yy*~xx.1*inv(~yy.1)) ) @ #vk.28
4: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                     'g'^(~yy*~xx.1*inv(~xx))>),                  'K_2ae'>,                hkdfExtract(~ltk, 'g'^(~yy*~xx.1)))) @ #vk.39
5: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~yy*~xx.1*inv(~yy.1)), $U.1, $V.1                       >,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1,                                                 'g'^(~yy*~xx.1*inv(~yy.1)), $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~yy*~xx.1))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~yy*~xx.1*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~yy*~xx.1)))) @ #vk.49
6: !KU( 'g'^~xx ) @ #vk.45
7: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1,                                 <'PSK', 'PSK', $cSUITE0.1, 'g'^(~yy*~xx.1*inv(~yy.1)), $U.1, $V.1                                >,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~yy*~xx.1))),                 h(<$cHash0.1,                     <'PSK', 'PSK', $cSUITE0.1, 'g'^(~yy*~xx.1*inv(~yy.1)), $U.1, $V.1                    >,                     'g'^~yy.1>),                 $cAEAD0.1)) @ #vk.52
8: !KU( 'g'^~yy.1 ) @ #vk.54
9: !KU( 'g'^~yy ) @ #vk.56
10: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.3,                              h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, 'g'^~xx.1, $U.2, $V.2>,                                 'g'^~yy>),                              'K_2ae'>,                            hkdfExtract(~ltk.2, 'g'^(~yy*~xx.1))),                 h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, 'g'^~xx.1, $U.2, $V.2>,                     'g'^~yy>),                 $cAEAD0.3)) @ #vk.57
11: !KU( 'g'^~xx.1 ) @ #vk.35

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 110 (precomputed): !KU( ~yy ) @ #vk.60
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~yy ) @ #vk.59
1: !KU( ~xx ) @ #vk.61
2: !KU( 'g'^(~yy*~xx.1*inv(~yy.1)) ) @ #vk.28
3: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                     'g'^(~yy*~xx.1*inv(~xx))>),                  'K_2ae'>,                hkdfExtract(~ltk, 'g'^(~yy*~xx.1)))) @ #vk.39
4: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~yy*~xx.1*inv(~yy.1)), $U.1, $V.1                       >,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1,                                                 'g'^(~yy*~xx.1*inv(~yy.1)), $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~yy*~xx.1))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~yy*~xx.1*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~yy*~xx.1)))) @ #vk.49
5: !KU( 'g'^~xx ) @ #vk.45
6: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1,                                 <'PSK', 'PSK', $cSUITE0.1, 'g'^(~yy*~xx.1*inv(~yy.1)), $U.1, $V.1                                >,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~yy*~xx.1))),                 h(<$cHash0.1,                     <'PSK', 'PSK', $cSUITE0.1, 'g'^(~yy*~xx.1*inv(~yy.1)), $U.1, $V.1                    >,                     'g'^~yy.1>),                 $cAEAD0.1)) @ #vk.52
7: !KU( 'g'^~yy.1 ) @ #vk.54
8: !KU( 'g'^~yy ) @ #vk.56
9: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.3,                              h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, 'g'^~xx.1, $U.2, $V.2>,                                 'g'^~yy>),                              'K_2ae'>,                            hkdfExtract(~ltk.2, 'g'^(~yy*~xx.1))),                 h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, 'g'^~xx.1, $U.2, $V.2>,                     'g'^~yy>),                 $cAEAD0.3)) @ #vk.57
10: !KU( 'g'^~xx.1 ) @ #vk.35

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 109 (precomputed): !KU( ~yy ) @ #vk.59
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, gy>),                  'K_2ae'>,                hkdfExtract(~ltk, impSk))) @ #vk.44
1: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                      >),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                              >),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, impSk)),                                h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                  >),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, impSk))) @ #vk.54
2: !KU( hkdfExpand(<$cAEAD0.4,                  h(<$cHash0.4,                     h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.3,                                             h(<$cHash0.3,                                                <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.2, impSk)),                                h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                                    'g'^~yy.1>),                                $cAEAD0.3),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.2, impSk))) @ #vk.60
3: splitEqs(0)
4: splitEqs(3)
5: splitEqs(4)
6: !KU( 'g'^~xx ) @ #vk.50
7: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                               >),                              'K_2ae'>,                            hkdfExtract(~ltk.1, impSk)),                 h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                   >),                 $cAEAD0.1)) @ #vk.57
8: !KU( 'g'^~yy ) @ #vk.59
9: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.3,                              h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.2, impSk)),                 h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                     'g'^~yy.1>),                 $cAEAD0.3)) @ #vk.64
10: !KU( 'g'^~yy.1 ) @ #vk.67

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 50 (precomputed):
    !KU( hkdfExpand(<$cAEAD0, 
                     h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, gy>), 
                     'K_2ae'>,
                    hkdfExtract(~ltk, impSk))
    ) @ #vk.44
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,         'g'^~yy.1>)) @ #vk.62
1: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, gy>),                  'K_2ae'>,                hkdfExtract(~ltk, impSk))) @ #vk.41
2: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                      >),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                              >),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, impSk)),                                h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                  >),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, impSk))) @ #vk.51
3: !KU( hkdfExpand(<$cAEAD0.4,                  h(<$cHash0.4,                     h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.3,                                             h(<$cHash0.3,                                                <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.2, impSk)),                                h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                                    'g'^~yy.1>),                                $cAEAD0.3),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.2, impSk))) @ #vk.57
4: splitEqs(0)
5: splitEqs(3)
6: splitEqs(4)
7: !KU( 'g'^~xx ) @ #vk.47
8: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                               >),                              'K_2ae'>,                            hkdfExtract(~ltk.1, impSk)),                 h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                   >),                 $cAEAD0.1)) @ #vk.54
9: !KU( 'g'^~yy ) @ #vk.56
10: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.3,                              h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.2, impSk)),                 h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                     'g'^~yy.1>),                 $cAEAD0.3)) @ #vk.63

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 107 (precomputed):
    !KU( h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>, 
            'g'^~yy.1>)
    ) @ #vk.62
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, gy>),                  'K_2ae'>,                hkdfExtract(~ltk, impSk))) @ #vk.44
1: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                      >),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                              >),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, impSk)),                                h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                  >),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, impSk))) @ #vk.54
2: !KU( hkdfExpand(<$cAEAD0.4,                  h(<$cHash0.4,                     h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.3,                                             h(<$cHash0.3,                                                <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.2, impSk)),                                h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                                    'g'^~yy.1>),                                $cAEAD0.3),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.2, impSk))) @ #vk.60
3: splitEqs(0)
4: splitEqs(3)
5: splitEqs(4)
6: !KU( 'g'^~xx ) @ #vk.50
7: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                               >),                              'K_2ae'>,                            hkdfExtract(~ltk.1, impSk)),                 h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                   >),                 $cAEAD0.1)) @ #vk.57
8: !KU( 'g'^~yy ) @ #vk.59
9: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.3,                              h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.2, impSk)),                 h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                     'g'^~yy.1>),                 $cAEAD0.3)) @ #vk.64
10: !KU( 'g'^~yy.1 ) @ #vk.67

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 50 (precomputed):
    !KU( hkdfExpand(<$cAEAD0, 
                     h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, gy>), 
                     'K_2ae'>,
                    hkdfExtract(~ltk, impSk))
    ) @ #vk.44
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( hkdfExtract(~ltk, impSk) ) @ #vk.70
1: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                      >),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                              >),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, impSk)),                                h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                  >),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, impSk))) @ #vk.58
2: !KU( hkdfExpand(<$cAEAD0.4,                  h(<$cHash0.4,                     h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.3,                                             h(<$cHash0.3,                                                <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.2, impSk)),                                h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                                    'g'^~yy.1>),                                $cAEAD0.3),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.2, impSk))) @ #vk.64
3: splitEqs(0)
4: splitEqs(3)
5: splitEqs(4)
6: !KU( 'g'^~xx ) @ #vk.54
7: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                               >),                              'K_2ae'>,                            hkdfExtract(~ltk.1, impSk)),                 h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                   >),                 $cAEAD0.1)) @ #vk.61
8: !KU( 'g'^~yy ) @ #vk.63
9: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.3,                              h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.2, impSk)),                 h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                     'g'^~yy.1>),                 $cAEAD0.3)) @ #vk.67
10: !KU( 'g'^~yy.1 ) @ #vk.69

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 129 (precomputed):
    !KU( hkdfExtract(~ltk, impSk) ) @ #vk.70
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: splitEqs(3)
1: splitEqs(4)
2: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~xx*~yy)))) @ #vk.56
3: !KU( hkdfExpand(<$cAEAD0.4,                  h(<$cHash0.4,                     h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, 'g'^x.1, $U.2, $V.2>,                        'g'^~yy.2>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.3,                                             h(<$cHash0.3,                                                <'PSK', 'PSK', $cSUITE0.2, 'g'^x.1, $U.2, $V.2>,                                                'g'^~yy.2>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.2, 'g'^(~xx*~yy))),                                h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, 'g'^x.1, $U.2, $V.2>,                                    'g'^~yy.2>),                                $cAEAD0.3),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.2, 'g'^(~xx*~yy)))) @ #vk.62
4: !KU( 'g'^x ) @ #vk.36
5: !KU( 'g'^x.1 ) @ #vk.43
6: !KU( 'g'^~xx ) @ #vk.52
7: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                     'g'^~yy.1>),                 $cAEAD0.1)) @ #vk.59
8: !KU( 'g'^~yy.1 ) @ #vk.61
9: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.3,                              h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, 'g'^x.1, $U.2, $V.2>,                                 'g'^~yy.2>),                              'K_2ae'>,                            hkdfExtract(~ltk.2, 'g'^(~xx*~yy))),                 h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, 'g'^x.1, $U.2, $V.2>,                     'g'^~yy.2>),                 $cAEAD0.3)) @ #vk.65
10: !KU( 'g'^~yy.2 ) @ #vk.67
11: !KU( 'g'^~yy ) @ #vk.15

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 34 (directly): splitEqs(3)
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: splitEqs(3)
1: splitEqs(4)
2: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~xx*~yy)))) @ #vk.56
3: !KU( hkdfExpand(<$cAEAD0.4,                  h(<$cHash0.4,                     h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, 'g'^x.1, $U.2, $V.2>,                        'g'^~yy.2>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.3,                                             h(<$cHash0.3,                                                <'PSK', 'PSK', $cSUITE0.2, 'g'^x.1, $U.2, $V.2>,                                                'g'^~yy.2>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.2, 'g'^(~xx*~yy))),                                h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, 'g'^x.1, $U.2, $V.2>,                                    'g'^~yy.2>),                                $cAEAD0.3),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.2, 'g'^(~xx*~yy)))) @ #vk.62
4: !KU( 'g'^x ) @ #vk.36
5: !KU( 'g'^x.1 ) @ #vk.43
6: !KU( 'g'^~xx ) @ #vk.52
7: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                     'g'^~yy.1>),                 $cAEAD0.1)) @ #vk.59
8: !KU( 'g'^~yy.1 ) @ #vk.61
9: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.3,                              h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, 'g'^x.1, $U.2, $V.2>,                                 'g'^~yy.2>),                              'K_2ae'>,                            hkdfExtract(~ltk.2, 'g'^(~xx*~yy))),                 h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, 'g'^x.1, $U.2, $V.2>,                     'g'^~yy.2>),                 $cAEAD0.3)) @ #vk.65
10: !KU( 'g'^~yy.2 ) @ #vk.67
11: !KU( 'g'^~yy ) @ #vk.15

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 34 (directly): splitEqs(3)
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: splitEqs(3)
1: splitEqs(4)
2: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~xx*~yy)))) @ #vk.56
3: !KU( hkdfExpand(<$cAEAD0.4,                  h(<$cHash0.4,                     h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, 'g'^x.1, $U.2, $V.2>,                        'g'^~yy.2>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.3,                                             h(<$cHash0.3,                                                <'PSK', 'PSK', $cSUITE0.2, 'g'^x.1, $U.2, $V.2>,                                                'g'^~yy.2>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.2, 'g'^(~xx*~yy))),                                h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, 'g'^x.1, $U.2, $V.2>,                                    'g'^~yy.2>),                                $cAEAD0.3),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.2, 'g'^(~xx*~yy)))) @ #vk.62
4: !KU( 'g'^x ) @ #vk.36
5: !KU( 'g'^x.1 ) @ #vk.43
6: !KU( 'g'^~xx ) @ #vk.52
7: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                     'g'^~yy.1>),                 $cAEAD0.1)) @ #vk.59
8: !KU( 'g'^~yy.1 ) @ #vk.61
9: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.3,                              h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, 'g'^x.1, $U.2, $V.2>,                                 'g'^~yy.2>),                              'K_2ae'>,                            hkdfExtract(~ltk.2, 'g'^(~xx*~yy))),                 h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, 'g'^x.1, $U.2, $V.2>,                     'g'^~yy.2>),                 $cAEAD0.3)) @ #vk.65
10: !KU( 'g'^~yy.2 ) @ #vk.67
11: !KU( 'g'^~yy ) @ #vk.15

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 34 (directly): splitEqs(3)
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: splitEqs(3)
1: splitEqs(4)
2: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~xx*~yy)))) @ #vk.56
3: !KU( hkdfExpand(<$cAEAD0.4,                  h(<$cHash0.4,                     h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, 'g'^x.1, $U.2, $V.2>,                        'g'^~yy.2>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.3,                                             h(<$cHash0.3,                                                <'PSK', 'PSK', $cSUITE0.2, 'g'^x.1, $U.2, $V.2>,                                                'g'^~yy.2>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.2, 'g'^(~xx*~yy))),                                h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, 'g'^x.1, $U.2, $V.2>,                                    'g'^~yy.2>),                                $cAEAD0.3),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.2, 'g'^(~xx*~yy)))) @ #vk.62
4: !KU( 'g'^x ) @ #vk.36
5: !KU( 'g'^x.1 ) @ #vk.43
6: !KU( 'g'^~xx ) @ #vk.52
7: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                     'g'^~yy.1>),                 $cAEAD0.1)) @ #vk.59
8: !KU( 'g'^~yy.1 ) @ #vk.61
9: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.3,                              h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, 'g'^x.1, $U.2, $V.2>,                                 'g'^~yy.2>),                              'K_2ae'>,                            hkdfExtract(~ltk.2, 'g'^(~xx*~yy))),                 h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, 'g'^x.1, $U.2, $V.2>,                     'g'^~yy.2>),                 $cAEAD0.3)) @ #vk.65
10: !KU( 'g'^~yy.2 ) @ #vk.67
11: !KU( 'g'^~yy ) @ #vk.15

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 34 (directly): splitEqs(3)
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: splitEqs(4)
1: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1,                                 h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0,                                                         h(<$cHash0,                                                            <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V                                                           >,                                                            'g'^~yy>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk, 'g'^(~xx*~yy))),                                            h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                                                'g'^~yy>),                                            $cAEAD0),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk, 'g'^(~xx*~yy))),                 h(<$cHash0.1,                     h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0,                                             h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                                                'g'^~yy>),                                             'K_2ae'>,                                           hkdfExtract(~ltk, 'g'^(~xx*~yy))),                                h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                                $cAEAD0),                     'emptyStr'>),                 $cAEAD0.1)) @ #vk.6
2: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.3,                              h(<$cHash0.3,                                 h(<$cHash0.2, <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                                    'g'^~yy.1>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0.2,                                                         h(<$cHash0.2,                                                            <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1,                                                             $V.1>,                                                            'g'^~yy.1>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                            h(<$cHash0.2,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                                                'g'^~yy.1>),                                            $cAEAD0.2),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.3,                     h(<$cHash0.2, <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.2,                                             h(<$cHash0.2,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.2, <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                                    'g'^~yy.1>),                                $cAEAD0.2),                     'emptyStr'>),                 $cAEAD0.3)) @ #vk.7
3: !KU( 'g'^x ) @ #vk.23
4: !KU( 'g'^~xx ) @ #vk.16
5: !KU( 'g'^~yy ) @ #vk.2

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 47 (directly): splitEqs(4)
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( hkdfExtract(~ltk, impSk) ) @ #vk.70
1: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                      >),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                              >),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, impSk)),                                h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                  >),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, impSk))) @ #vk.58
2: !KU( hkdfExpand(<$cAEAD0.4,                  h(<$cHash0.4,                     h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.3,                                             h(<$cHash0.3,                                                <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.2, impSk)),                                h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                                    'g'^~yy.1>),                                $cAEAD0.3),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.2, impSk))) @ #vk.64
3: splitEqs(0)
4: splitEqs(3)
5: splitEqs(4)
6: !KU( 'g'^~xx ) @ #vk.54
7: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                               >),                              'K_2ae'>,                            hkdfExtract(~ltk.1, impSk)),                 h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                   >),                 $cAEAD0.1)) @ #vk.61
8: !KU( 'g'^~yy ) @ #vk.63
9: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.3,                              h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.2, impSk)),                 h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                     'g'^~yy.1>),                 $cAEAD0.3)) @ #vk.67
10: !KU( 'g'^~yy.1 ) @ #vk.69

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 129 (precomputed):
    !KU( hkdfExtract(~ltk, impSk) ) @ #vk.70
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: splitEqs(4)
1: !KU( 'g'^(~xx*~yy*inv(~yy.1)) ) @ #vk.18
2: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.2,                              h(<$cHash0.2,                                 h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0.1,                                                         h(<$cHash0.1,                                                            <'PSK', 'PSK', $cSUITE0.1,                                                             'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                                            'g'^~yy.1>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                            h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                            $cAEAD0.1),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                 $cAEAD0.2)) @ #vk.6
3: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.4,                              h(<$cHash0.4,                                 h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, 'g'^x, $U.2, $V.2>,                                    'g'^~yy.2>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0.3,                                                         h(<$cHash0.3,                                                            <'PSK', 'PSK', $cSUITE0.2, 'g'^x, $U.2,                                                             $V.2>,                                                            'g'^~yy.2>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk.2, 'g'^(~xx*~yy))),                                            h(<$cHash0.3,                                                <'PSK', 'PSK', $cSUITE0.2, 'g'^x, $U.2, $V.2>,                                                'g'^~yy.2>),                                            $cAEAD0.3),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk.2, 'g'^(~xx*~yy))),                 h(<$cHash0.4,                     h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, 'g'^x, $U.2, $V.2>,                        'g'^~yy.2>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.3,                                             h(<$cHash0.3,                                                <'PSK', 'PSK', $cSUITE0.2, 'g'^x, $U.2, $V.2>,                                                'g'^~yy.2>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.2, 'g'^(~xx*~yy))),                                h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, 'g'^x, $U.2, $V.2>,                                    'g'^~yy.2>),                                $cAEAD0.3),                     'emptyStr'>),                 $cAEAD0.4)) @ #vk.7
4: !KU( 'g'^x ) @ #vk.25
5: !KU( 'g'^~xx ) @ #vk.32
6: !KU( 'g'^~yy ) @ #vk.2

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 47 (directly): splitEqs(4)
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( 'g'^(~xx*~yy*inv(~yy.1)) ) @ #vk.23
1: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1,                                 h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0,                                                         h(<$cHash0,                                                            <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V                                                           >,                                                            'g'^~yy>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk, 'g'^(~xx*~yy))),                                            h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                                                'g'^~yy>),                                            $cAEAD0),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk, 'g'^(~xx*~yy))),                 h(<$cHash0.1,                     h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0,                                             h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                                                'g'^~yy>),                                             'K_2ae'>,                                           hkdfExtract(~ltk, 'g'^(~xx*~yy))),                                h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                                $cAEAD0),                     'emptyStr'>),                 $cAEAD0.1)) @ #vk.6
2: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.3,                              h(<$cHash0.3,                                 h(<$cHash0.2,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0.2,                                                         h(<$cHash0.2,                                                            <'PSK', 'PSK', $cSUITE0.1,                                                             'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                                            'g'^~yy.1>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                            h(<$cHash0.2,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                            $cAEAD0.2),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.3,                     h(<$cHash0.2,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.2,                                             h(<$cHash0.2,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.2,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.2),                     'emptyStr'>),                 $cAEAD0.3)) @ #vk.7
3: !KU( 'g'^~xx ) @ #vk.16
4: !KU( 'g'^~yy ) @ #vk.2

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 62 (precomputed):
    !KU( 'g'^(~xx*~yy*inv(~yy.1)) ) @ #vk.23
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: splitEqs(4)
1: !KU( hkdfExpand(<$cAEAD0.1,                  h(<$cHash0.1,                     h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0,                                             h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                                                'g'^~yy>),                                             'K_2ae'>,                                           hkdfExtract(~ltk, 'g'^(~xx*~yy))),                                h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                                $cAEAD0),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk, 'g'^(~xx*~yy)))) @ #vk.44
2: !KU( hkdfExpand(<$cAEAD0.3,                  h(<$cHash0.3,                     h(<$cHash0.2, <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.2,                                             h(<$cHash0.2,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.2, <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                                    'g'^~yy.1>),                                $cAEAD0.2),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~xx*~yy)))) @ #vk.47
3: !KU( 'g'^x ) @ #vk.38
4: !KU( 'g'^~xx ) @ #vk.31
5: !KU( 'g'^~yy ) @ #vk.16
6: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.2,                              h(<$cHash0.2, <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.2, <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                     'g'^~yy.1>),                 $cAEAD0.2)) @ #vk.50
7: !KU( 'g'^~yy.1 ) @ #vk.52

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 47 (directly): splitEqs(4)
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: splitEqs(4)
1: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1,                                 h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0,                                                         h(<$cHash0,                                                            <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V                                                           >,                                                            'g'^~yy>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk, 'g'^(~xx*~yy))),                                            h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                                                'g'^~yy>),                                            $cAEAD0),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk, 'g'^(~xx*~yy))),                 h(<$cHash0.1,                     h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0,                                             h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                                                'g'^~yy>),                                             'K_2ae'>,                                           hkdfExtract(~ltk, 'g'^(~xx*~yy))),                                h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                                $cAEAD0),                     'emptyStr'>),                 $cAEAD0.1)) @ #vk.6
2: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.3,                              h(<$cHash0.3,                                 h(<$cHash0.2, <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                                    'g'^~yy.1>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0.2,                                                         h(<$cHash0.2,                                                            <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1,                                                             $V.1>,                                                            'g'^~yy.1>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                            h(<$cHash0.2,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                                                'g'^~yy.1>),                                            $cAEAD0.2),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.3,                     h(<$cHash0.2, <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.2,                                             h(<$cHash0.2,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.2, <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                                    'g'^~yy.1>),                                $cAEAD0.2),                     'emptyStr'>),                 $cAEAD0.3)) @ #vk.7
3: !KU( 'g'^x ) @ #vk.23
4: !KU( 'g'^~xx ) @ #vk.16
5: !KU( 'g'^~yy ) @ #vk.2

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 47 (directly): splitEqs(4)
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: splitEqs(4)
1: !KU( 'g'^(~xx*~yy*inv(~yy.1)) ) @ #vk.36
2: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~xx*~yy)))) @ #vk.56
3: !KU( hkdfExpand(<$cAEAD0.4,                  h(<$cHash0.4,                     h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, 'g'^x, $U.2, $V.2>,                        'g'^~yy.2>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.3,                                             h(<$cHash0.3,                                                <'PSK', 'PSK', $cSUITE0.2, 'g'^x, $U.2, $V.2>,                                                'g'^~yy.2>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.2, 'g'^(~xx*~yy))),                                h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, 'g'^x, $U.2, $V.2>,                                    'g'^~yy.2>),                                $cAEAD0.3),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.2, 'g'^(~xx*~yy)))) @ #vk.62
4: !KU( 'g'^x ) @ #vk.43
5: !KU( 'g'^~xx ) @ #vk.52
6: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1,                                 <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.1,                     <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                     'g'^~yy.1>),                 $cAEAD0.1)) @ #vk.59
7: !KU( 'g'^~yy.1 ) @ #vk.61
8: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.3,                              h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, 'g'^x, $U.2, $V.2>,                                 'g'^~yy.2>),                              'K_2ae'>,                            hkdfExtract(~ltk.2, 'g'^(~xx*~yy))),                 h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, 'g'^x, $U.2, $V.2>,                     'g'^~yy.2>),                 $cAEAD0.3)) @ #vk.65
9: !KU( 'g'^~yy.2 ) @ #vk.67
10: !KU( 'g'^~yy ) @ #vk.16

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 47 (directly): splitEqs(4)
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~yy ) @ #vk.28
1: !KU( ~yy.1 ) @ #vk.30
2: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1,                                 h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0,                                                         h(<$cHash0,                                                            <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V                                                           >,                                                            'g'^~yy>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk, 'g'^(~xx*~yy))),                                            h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                                                'g'^~yy>),                                            $cAEAD0),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk, 'g'^(~xx*~yy))),                 h(<$cHash0.1,                     h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0,                                             h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                                                'g'^~yy>),                                             'K_2ae'>,                                           hkdfExtract(~ltk, 'g'^(~xx*~yy))),                                h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                                $cAEAD0),                     'emptyStr'>),                 $cAEAD0.1)) @ #vk.7
3: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.3,                              h(<$cHash0.3,                                 h(<$cHash0.2,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0.2,                                                         h(<$cHash0.2,                                                            <'PSK', 'PSK', $cSUITE0.1,                                                             'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                                            'g'^~yy.1>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                            h(<$cHash0.2,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                            $cAEAD0.2),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.3,                     h(<$cHash0.2,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.2,                                             h(<$cHash0.2,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.2,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.2),                     'emptyStr'>),                 $cAEAD0.3)) @ #vk.8
4: !KU( 'g'^~xx ) @ #vk.17
5: !KU( 'g'^~yy ) @ #vk.3

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 65 (precomputed): !KU( ~yy ) @ #vk.28
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.29
1: !KU( ~yy ) @ #vk.30
2: !KU( ~yy.1 ) @ #vk.32
3: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1,                                 h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0,                                                         h(<$cHash0,                                                            <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V                                                           >,                                                            'g'^~yy>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk, 'g'^(~xx*~yy))),                                            h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                                                'g'^~yy>),                                            $cAEAD0),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk, 'g'^(~xx*~yy))),                 h(<$cHash0.1,                     h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0,                                             h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                                                'g'^~yy>),                                             'K_2ae'>,                                           hkdfExtract(~ltk, 'g'^(~xx*~yy))),                                h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                                $cAEAD0),                     'emptyStr'>),                 $cAEAD0.1)) @ #vk.7
4: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.3,                              h(<$cHash0.3,                                 h(<$cHash0.2,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0.2,                                                         h(<$cHash0.2,                                                            <'PSK', 'PSK', $cSUITE0.1,                                                             'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                                            'g'^~yy.1>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                            h(<$cHash0.2,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                            $cAEAD0.2),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.3,                     h(<$cHash0.2,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.2,                                             h(<$cHash0.2,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.2,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.2),                     'emptyStr'>),                 $cAEAD0.3)) @ #vk.8
5: !KU( 'g'^~xx ) @ #vk.17
6: !KU( 'g'^~yy ) @ #vk.3

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 66 (precomputed): !KU( ~xx ) @ #vk.29
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.28
1: !KU( ~yy.1 ) @ #vk.30
2: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1,                                 h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0,                                                         h(<$cHash0,                                                            <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V                                                           >,                                                            'g'^~yy>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk, 'g'^(~xx*~yy))),                                            h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                                                'g'^~yy>),                                            $cAEAD0),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk, 'g'^(~xx*~yy))),                 h(<$cHash0.1,                     h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0,                                             h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                                                'g'^~yy>),                                             'K_2ae'>,                                           hkdfExtract(~ltk, 'g'^(~xx*~yy))),                                h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                                $cAEAD0),                     'emptyStr'>),                 $cAEAD0.1)) @ #vk.7
3: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.3,                              h(<$cHash0.3,                                 h(<$cHash0.2,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0.2,                                                         h(<$cHash0.2,                                                            <'PSK', 'PSK', $cSUITE0.1,                                                             'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                                            'g'^~yy.1>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                            h(<$cHash0.2,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                            $cAEAD0.2),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.3,                     h(<$cHash0.2,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.2,                                             h(<$cHash0.2,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.2,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.2),                     'emptyStr'>),                 $cAEAD0.3)) @ #vk.8
4: !KU( 'g'^~xx ) @ #vk.17
5: !KU( 'g'^~yy ) @ #vk.3

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 75 (precomputed): !KU( ~xx ) @ #vk.28
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: splitEqs(4)
1: !KU( 'g'^(~xx*~yy*inv(~yy.1)) ) @ #vk.18
2: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.2,                              h(<$cHash0.2,                                 h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0.1,                                                         h(<$cHash0.1,                                                            <'PSK', 'PSK', $cSUITE0.1,                                                             'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                                            'g'^~yy.1>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                            h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                            $cAEAD0.1),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                 $cAEAD0.2)) @ #vk.6
3: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.4,                              h(<$cHash0.4,                                 h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, 'g'^x, $U.2, $V.2>,                                    'g'^~yy.2>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0.3,                                                         h(<$cHash0.3,                                                            <'PSK', 'PSK', $cSUITE0.2, 'g'^x, $U.2,                                                             $V.2>,                                                            'g'^~yy.2>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk.2, 'g'^(~xx*~yy))),                                            h(<$cHash0.3,                                                <'PSK', 'PSK', $cSUITE0.2, 'g'^x, $U.2, $V.2>,                                                'g'^~yy.2>),                                            $cAEAD0.3),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk.2, 'g'^(~xx*~yy))),                 h(<$cHash0.4,                     h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, 'g'^x, $U.2, $V.2>,                        'g'^~yy.2>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.3,                                             h(<$cHash0.3,                                                <'PSK', 'PSK', $cSUITE0.2, 'g'^x, $U.2, $V.2>,                                                'g'^~yy.2>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.2, 'g'^(~xx*~yy))),                                h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, 'g'^x, $U.2, $V.2>,                                    'g'^~yy.2>),                                $cAEAD0.3),                     'emptyStr'>),                 $cAEAD0.4)) @ #vk.7
4: !KU( 'g'^x ) @ #vk.25
5: !KU( 'g'^~xx ) @ #vk.32
6: !KU( 'g'^~yy ) @ #vk.2

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 47 (directly): splitEqs(4)
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( 'g'^(~xx*~yy*inv(~yy.1)) ) @ #vk.23
1: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1,                                 h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0,                                                         h(<$cHash0,                                                            <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V                                                           >,                                                            'g'^~yy>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk, 'g'^(~xx*~yy))),                                            h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                                                'g'^~yy>),                                            $cAEAD0),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk, 'g'^(~xx*~yy))),                 h(<$cHash0.1,                     h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0,                                             h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                                                'g'^~yy>),                                             'K_2ae'>,                                           hkdfExtract(~ltk, 'g'^(~xx*~yy))),                                h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                                $cAEAD0),                     'emptyStr'>),                 $cAEAD0.1)) @ #vk.6
2: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.3,                              h(<$cHash0.3,                                 h(<$cHash0.2,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0.2,                                                         h(<$cHash0.2,                                                            <'PSK', 'PSK', $cSUITE0.1,                                                             'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                                            'g'^~yy.1>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                            h(<$cHash0.2,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                            $cAEAD0.2),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.3,                     h(<$cHash0.2,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.2,                                             h(<$cHash0.2,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.2,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.2),                     'emptyStr'>),                 $cAEAD0.3)) @ #vk.7
3: !KU( 'g'^~xx ) @ #vk.16
4: !KU( 'g'^~yy ) @ #vk.2

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 62 (precomputed):
    !KU( 'g'^(~xx*~yy*inv(~yy.1)) ) @ #vk.23
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( 'g'^(~xx*~yy*inv(~yy.1)) ) @ #vk.18
1: !KU( 'g'^(~xx*~yy*inv(~yy.2)) ) @ #vk.25
2: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.2,                              h(<$cHash0.2,                                 h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0.1,                                                         h(<$cHash0.1,                                                            <'PSK', 'PSK', $cSUITE0.1,                                                             'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                                            'g'^~yy.1>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                            h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                            $cAEAD0.1),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                 $cAEAD0.2)) @ #vk.6
3: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.4,                              h(<$cHash0.4,                                 h(<$cHash0.3,                                    <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)), $U.2, $V.2                                   >,                                    'g'^~yy.2>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0.3,                                                         h(<$cHash0.3,                                                            <'PSK', 'PSK', $cSUITE0.2,                                                             'g'^(~xx*~yy*inv(~yy.2)), $U.2, $V.2>,                                                            'g'^~yy.2>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk.2, 'g'^(~xx*~yy))),                                            h(<$cHash0.3,                                                <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)),                                                 $U.2, $V.2>,                                                'g'^~yy.2>),                                            $cAEAD0.3),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk.2, 'g'^(~xx*~yy))),                 h(<$cHash0.4,                     h(<$cHash0.3,                        <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)), $U.2, $V.2>,                        'g'^~yy.2>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.3,                                             h(<$cHash0.3,                                                <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)),                                                 $U.2, $V.2>,                                                'g'^~yy.2>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.2, 'g'^(~xx*~yy))),                                h(<$cHash0.3,                                    <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)), $U.2, $V.2                                   >,                                    'g'^~yy.2>),                                $cAEAD0.3),                     'emptyStr'>),                 $cAEAD0.4)) @ #vk.7
4: !KU( 'g'^~xx ) @ #vk.32
5: !KU( 'g'^~yy ) @ #vk.2

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 61 (precomputed):
    !KU( 'g'^(~xx*~yy*inv(~yy.1)) ) @ #vk.18
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( 'g'^(~xx*~yy*inv(~yy.1)) ) @ #vk.16
1: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.2,                              h(<$cHash0.2,                                 h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0.1,                                                         h(<$cHash0.1,                                                            <'PSK', 'PSK', $cSUITE0.1,                                                             'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                                            'g'^~yy.1>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                            h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                            $cAEAD0.1),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                 $cAEAD0.2)) @ #vk.6
2: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.3,                              h(<$cHash0.3,                                 h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0,                                                         h(<$cHash0,                                                            <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V                                                           >,                                                            'g'^~yy>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk, 'g'^(~xx*~yy))),                                            h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                                                'g'^~yy>),                                            $cAEAD0),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk, 'g'^(~xx*~yy))),                 h(<$cHash0.3,                     h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0,                                             h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                                                'g'^~yy>),                                             'K_2ae'>,                                           hkdfExtract(~ltk, 'g'^(~xx*~yy))),                                h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                                $cAEAD0),                     'emptyStr'>),                 $cAEAD0.3)) @ #vk.7
3: !KU( 'g'^~xx ) @ #vk.23
4: !KU( 'g'^~yy ) @ #vk.2

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 61 (precomputed):
    !KU( 'g'^(~xx*~yy*inv(~yy.1)) ) @ #vk.16
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~yy ) @ #vk.28
1: !KU( ~yy.1 ) @ #vk.30
2: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1,                                 h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0,                                                         h(<$cHash0,                                                            <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V                                                           >,                                                            'g'^~yy>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk, 'g'^(~xx*~yy))),                                            h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                                                'g'^~yy>),                                            $cAEAD0),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk, 'g'^(~xx*~yy))),                 h(<$cHash0.1,                     h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0,                                             h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                                                'g'^~yy>),                                             'K_2ae'>,                                           hkdfExtract(~ltk, 'g'^(~xx*~yy))),                                h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                                $cAEAD0),                     'emptyStr'>),                 $cAEAD0.1)) @ #vk.7
3: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.3,                              h(<$cHash0.3,                                 h(<$cHash0.2,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0.2,                                                         h(<$cHash0.2,                                                            <'PSK', 'PSK', $cSUITE0.1,                                                             'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                                            'g'^~yy.1>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                            h(<$cHash0.2,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                            $cAEAD0.2),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.3,                     h(<$cHash0.2,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.2,                                             h(<$cHash0.2,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.2,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.2),                     'emptyStr'>),                 $cAEAD0.3)) @ #vk.8
4: !KU( 'g'^~xx ) @ #vk.17
5: !KU( 'g'^~yy ) @ #vk.3

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 65 (precomputed): !KU( ~yy ) @ #vk.28
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.28
1: !KU( ~yy.1 ) @ #vk.30
2: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1,                                 h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0,                                                         h(<$cHash0,                                                            <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V                                                           >,                                                            'g'^~yy>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk, 'g'^(~xx*~yy))),                                            h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                                                'g'^~yy>),                                            $cAEAD0),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk, 'g'^(~xx*~yy))),                 h(<$cHash0.1,                     h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0,                                             h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                                                'g'^~yy>),                                             'K_2ae'>,                                           hkdfExtract(~ltk, 'g'^(~xx*~yy))),                                h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                                $cAEAD0),                     'emptyStr'>),                 $cAEAD0.1)) @ #vk.7
3: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.3,                              h(<$cHash0.3,                                 h(<$cHash0.2,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0.2,                                                         h(<$cHash0.2,                                                            <'PSK', 'PSK', $cSUITE0.1,                                                             'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                                            'g'^~yy.1>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                            h(<$cHash0.2,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                            $cAEAD0.2),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.3,                     h(<$cHash0.2,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.2,                                             h(<$cHash0.2,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.2,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.2),                     'emptyStr'>),                 $cAEAD0.3)) @ #vk.8
4: !KU( 'g'^~xx ) @ #vk.17
5: !KU( 'g'^~yy ) @ #vk.3

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 75 (precomputed): !KU( ~xx ) @ #vk.28
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.29
1: !KU( ~yy ) @ #vk.30
2: !KU( ~yy.1 ) @ #vk.32
3: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1,                                 h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0,                                                         h(<$cHash0,                                                            <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V                                                           >,                                                            'g'^~yy>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk, 'g'^(~xx*~yy))),                                            h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                                                'g'^~yy>),                                            $cAEAD0),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk, 'g'^(~xx*~yy))),                 h(<$cHash0.1,                     h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0,                                             h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                                                'g'^~yy>),                                             'K_2ae'>,                                           hkdfExtract(~ltk, 'g'^(~xx*~yy))),                                h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                                $cAEAD0),                     'emptyStr'>),                 $cAEAD0.1)) @ #vk.7
4: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.3,                              h(<$cHash0.3,                                 h(<$cHash0.2,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0.2,                                                         h(<$cHash0.2,                                                            <'PSK', 'PSK', $cSUITE0.1,                                                             'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                                            'g'^~yy.1>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                            h(<$cHash0.2,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                            $cAEAD0.2),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.3,                     h(<$cHash0.2,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.2,                                             h(<$cHash0.2,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.2,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.2),                     'emptyStr'>),                 $cAEAD0.3)) @ #vk.8
5: !KU( 'g'^~xx ) @ #vk.17
6: !KU( 'g'^~yy ) @ #vk.3

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 66 (precomputed): !KU( ~xx ) @ #vk.29
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~yy ) @ #vk.28
1: !KU( ~yy.1 ) @ #vk.30
2: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.2,                              h(<$cHash0.2,                                 h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0.1,                                                         h(<$cHash0.1,                                                            <'PSK', 'PSK', $cSUITE0.1,                                                             'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                                            'g'^~yy.1>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                            h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                            $cAEAD0.1),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                 $cAEAD0.2)) @ #vk.7
3: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.3,                              h(<$cHash0.3,                                 h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0,                                                         h(<$cHash0,                                                            <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V                                                           >,                                                            'g'^~yy>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk, 'g'^(~xx*~yy))),                                            h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                                                'g'^~yy>),                                            $cAEAD0),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk, 'g'^(~xx*~yy))),                 h(<$cHash0.3,                     h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0,                                             h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                                                'g'^~yy>),                                             'K_2ae'>,                                           hkdfExtract(~ltk, 'g'^(~xx*~yy))),                                h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                                $cAEAD0),                     'emptyStr'>),                 $cAEAD0.3)) @ #vk.8
4: !KU( 'g'^~xx ) @ #vk.23
5: !KU( 'g'^~yy ) @ #vk.3

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 65 (precomputed): !KU( ~yy ) @ #vk.28
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.29
1: !KU( ~yy ) @ #vk.30
2: !KU( ~yy.1 ) @ #vk.32
3: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.2,                              h(<$cHash0.2,                                 h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0.1,                                                         h(<$cHash0.1,                                                            <'PSK', 'PSK', $cSUITE0.1,                                                             'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                                            'g'^~yy.1>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                            h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                            $cAEAD0.1),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                 $cAEAD0.2)) @ #vk.7
4: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.3,                              h(<$cHash0.3,                                 h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0,                                                         h(<$cHash0,                                                            <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V                                                           >,                                                            'g'^~yy>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk, 'g'^(~xx*~yy))),                                            h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                                                'g'^~yy>),                                            $cAEAD0),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk, 'g'^(~xx*~yy))),                 h(<$cHash0.3,                     h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0,                                             h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                                                'g'^~yy>),                                             'K_2ae'>,                                           hkdfExtract(~ltk, 'g'^(~xx*~yy))),                                h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                                $cAEAD0),                     'emptyStr'>),                 $cAEAD0.3)) @ #vk.8
5: !KU( 'g'^~xx ) @ #vk.23
6: !KU( 'g'^~yy ) @ #vk.3

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 66 (precomputed): !KU( ~xx ) @ #vk.29
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.28
1: !KU( ~yy.1 ) @ #vk.30
2: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.2,                              h(<$cHash0.2,                                 h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0.1,                                                         h(<$cHash0.1,                                                            <'PSK', 'PSK', $cSUITE0.1,                                                             'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                                            'g'^~yy.1>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                            h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                            $cAEAD0.1),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                 $cAEAD0.2)) @ #vk.7
3: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.3,                              h(<$cHash0.3,                                 h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0,                                                         h(<$cHash0,                                                            <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V                                                           >,                                                            'g'^~yy>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk, 'g'^(~xx*~yy))),                                            h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                                                'g'^~yy>),                                            $cAEAD0),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk, 'g'^(~xx*~yy))),                 h(<$cHash0.3,                     h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0,                                             h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                                                'g'^~yy>),                                             'K_2ae'>,                                           hkdfExtract(~ltk, 'g'^(~xx*~yy))),                                h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                                $cAEAD0),                     'emptyStr'>),                 $cAEAD0.3)) @ #vk.8
4: !KU( 'g'^~xx ) @ #vk.23
5: !KU( 'g'^~yy ) @ #vk.3

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 75 (precomputed): !KU( ~xx ) @ #vk.28
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( 'g'^(~xx*~yy*inv(~yy.1)) ) @ #vk.16
1: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.2,                              h(<$cHash0.2,                                 h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0.1,                                                         h(<$cHash0.1,                                                            <'PSK', 'PSK', $cSUITE0.1,                                                             'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                                            'g'^~yy.1>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                            h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                            $cAEAD0.1),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                 $cAEAD0.2)) @ #vk.6
2: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.3,                              h(<$cHash0.3,                                 h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0,                                                         h(<$cHash0,                                                            <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V                                                           >,                                                            'g'^~yy>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk, 'g'^(~xx*~yy))),                                            h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                                                'g'^~yy>),                                            $cAEAD0),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk, 'g'^(~xx*~yy))),                 h(<$cHash0.3,                     h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0,                                             h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                                                'g'^~yy>),                                             'K_2ae'>,                                           hkdfExtract(~ltk, 'g'^(~xx*~yy))),                                h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                                $cAEAD0),                     'emptyStr'>),                 $cAEAD0.3)) @ #vk.7
3: !KU( 'g'^~xx ) @ #vk.23
4: !KU( 'g'^~yy ) @ #vk.2

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 61 (precomputed):
    !KU( 'g'^(~xx*~yy*inv(~yy.1)) ) @ #vk.16
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( 'g'^(~xx*~yy*inv(~yy.1)) ) @ #vk.18
1: !KU( 'g'^(~xx*~yy*inv(~yy.2)) ) @ #vk.25
2: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.2,                              h(<$cHash0.2,                                 h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0.1,                                                         h(<$cHash0.1,                                                            <'PSK', 'PSK', $cSUITE0.1,                                                             'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                                            'g'^~yy.1>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                            h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                            $cAEAD0.1),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                 $cAEAD0.2)) @ #vk.6
3: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.4,                              h(<$cHash0.4,                                 h(<$cHash0.3,                                    <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)), $U.2, $V.2                                   >,                                    'g'^~yy.2>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0.3,                                                         h(<$cHash0.3,                                                            <'PSK', 'PSK', $cSUITE0.2,                                                             'g'^(~xx*~yy*inv(~yy.2)), $U.2, $V.2>,                                                            'g'^~yy.2>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk.2, 'g'^(~xx*~yy))),                                            h(<$cHash0.3,                                                <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)),                                                 $U.2, $V.2>,                                                'g'^~yy.2>),                                            $cAEAD0.3),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk.2, 'g'^(~xx*~yy))),                 h(<$cHash0.4,                     h(<$cHash0.3,                        <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)), $U.2, $V.2>,                        'g'^~yy.2>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.3,                                             h(<$cHash0.3,                                                <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)),                                                 $U.2, $V.2>,                                                'g'^~yy.2>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.2, 'g'^(~xx*~yy))),                                h(<$cHash0.3,                                    <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)), $U.2, $V.2                                   >,                                    'g'^~yy.2>),                                $cAEAD0.3),                     'emptyStr'>),                 $cAEAD0.4)) @ #vk.7
4: !KU( 'g'^~xx ) @ #vk.32
5: !KU( 'g'^~yy ) @ #vk.2

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 61 (precomputed):
    !KU( 'g'^(~xx*~yy*inv(~yy.1)) ) @ #vk.18
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~yy ) @ #vk.37
1: !KU( ~yy.1 ) @ #vk.39
2: !KU( 'g'^(~xx*~yy*inv(~yy.2)) ) @ #vk.25
3: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.2,                              h(<$cHash0.2,                                 h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0.1,                                                         h(<$cHash0.1,                                                            <'PSK', 'PSK', $cSUITE0.1,                                                             'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                                            'g'^~yy.1>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                            h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                            $cAEAD0.1),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                 $cAEAD0.2)) @ #vk.7
4: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.4,                              h(<$cHash0.4,                                 h(<$cHash0.3,                                    <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)), $U.2, $V.2                                   >,                                    'g'^~yy.2>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0.3,                                                         h(<$cHash0.3,                                                            <'PSK', 'PSK', $cSUITE0.2,                                                             'g'^(~xx*~yy*inv(~yy.2)), $U.2, $V.2>,                                                            'g'^~yy.2>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk.2, 'g'^(~xx*~yy))),                                            h(<$cHash0.3,                                                <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)),                                                 $U.2, $V.2>,                                                'g'^~yy.2>),                                            $cAEAD0.3),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk.2, 'g'^(~xx*~yy))),                 h(<$cHash0.4,                     h(<$cHash0.3,                        <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)), $U.2, $V.2>,                        'g'^~yy.2>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.3,                                             h(<$cHash0.3,                                                <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)),                                                 $U.2, $V.2>,                                                'g'^~yy.2>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.2, 'g'^(~xx*~yy))),                                h(<$cHash0.3,                                    <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)), $U.2, $V.2                                   >,                                    'g'^~yy.2>),                                $cAEAD0.3),                     'emptyStr'>),                 $cAEAD0.4)) @ #vk.8
5: !KU( 'g'^~xx ) @ #vk.32
6: !KU( 'g'^~yy ) @ #vk.3

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 65 (precomputed): !KU( ~yy ) @ #vk.37
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.37
1: !KU( ~yy.1 ) @ #vk.39
2: !KU( 'g'^(~xx*~yy*inv(~yy.2)) ) @ #vk.25
3: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.2,                              h(<$cHash0.2,                                 h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0.1,                                                         h(<$cHash0.1,                                                            <'PSK', 'PSK', $cSUITE0.1,                                                             'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                                            'g'^~yy.1>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                            h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                            $cAEAD0.1),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                 $cAEAD0.2)) @ #vk.7
4: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.4,                              h(<$cHash0.4,                                 h(<$cHash0.3,                                    <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)), $U.2, $V.2                                   >,                                    'g'^~yy.2>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0.3,                                                         h(<$cHash0.3,                                                            <'PSK', 'PSK', $cSUITE0.2,                                                             'g'^(~xx*~yy*inv(~yy.2)), $U.2, $V.2>,                                                            'g'^~yy.2>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk.2, 'g'^(~xx*~yy))),                                            h(<$cHash0.3,                                                <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)),                                                 $U.2, $V.2>,                                                'g'^~yy.2>),                                            $cAEAD0.3),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk.2, 'g'^(~xx*~yy))),                 h(<$cHash0.4,                     h(<$cHash0.3,                        <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)), $U.2, $V.2>,                        'g'^~yy.2>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.3,                                             h(<$cHash0.3,                                                <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)),                                                 $U.2, $V.2>,                                                'g'^~yy.2>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.2, 'g'^(~xx*~yy))),                                h(<$cHash0.3,                                    <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)), $U.2, $V.2                                   >,                                    'g'^~yy.2>),                                $cAEAD0.3),                     'emptyStr'>),                 $cAEAD0.4)) @ #vk.8
5: !KU( 'g'^~xx ) @ #vk.32
6: !KU( 'g'^~yy ) @ #vk.3

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 75 (precomputed): !KU( ~xx ) @ #vk.37
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.38
1: !KU( ~yy ) @ #vk.39
2: !KU( ~yy.1 ) @ #vk.41
3: !KU( 'g'^(~xx*~yy*inv(~yy.2)) ) @ #vk.25
4: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.2,                              h(<$cHash0.2,                                 h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0.1,                                                         h(<$cHash0.1,                                                            <'PSK', 'PSK', $cSUITE0.1,                                                             'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                                            'g'^~yy.1>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                            h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                            $cAEAD0.1),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                 $cAEAD0.2)) @ #vk.7
5: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.4,                              h(<$cHash0.4,                                 h(<$cHash0.3,                                    <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)), $U.2, $V.2                                   >,                                    'g'^~yy.2>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0.3,                                                         h(<$cHash0.3,                                                            <'PSK', 'PSK', $cSUITE0.2,                                                             'g'^(~xx*~yy*inv(~yy.2)), $U.2, $V.2>,                                                            'g'^~yy.2>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk.2, 'g'^(~xx*~yy))),                                            h(<$cHash0.3,                                                <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)),                                                 $U.2, $V.2>,                                                'g'^~yy.2>),                                            $cAEAD0.3),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk.2, 'g'^(~xx*~yy))),                 h(<$cHash0.4,                     h(<$cHash0.3,                        <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)), $U.2, $V.2>,                        'g'^~yy.2>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.3,                                             h(<$cHash0.3,                                                <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)),                                                 $U.2, $V.2>,                                                'g'^~yy.2>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.2, 'g'^(~xx*~yy))),                                h(<$cHash0.3,                                    <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)), $U.2, $V.2                                   >,                                    'g'^~yy.2>),                                $cAEAD0.3),                     'emptyStr'>),                 $cAEAD0.4)) @ #vk.8
6: !KU( 'g'^~xx ) @ #vk.32
7: !KU( 'g'^~yy ) @ #vk.3

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 66 (precomputed): !KU( ~xx ) @ #vk.38
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.2,                              h(<$cHash0.2,                                 h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                  >),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0.1,                                                         h(<$cHash0.1,                                                            <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1                                                           >,                                                            'g'^~yy>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk.1, impSk)),                                            h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                              >),                                            $cAEAD0.1),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk.1, impSk)),                 h(<$cHash0.2,                     h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                      >),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                              >),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, impSk)),                                h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                  >),                                $cAEAD0.1),                     'emptyStr'>),                 $cAEAD0.2)) @ #vk.8
1: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.4,                              h(<$cHash0.4,                                 h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                                    'g'^~yy.1>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0.3,                                                         h(<$cHash0.3,                                                            <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2,                                                             $V.2>,                                                            'g'^~yy.1>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk.2, impSk)),                                            h(<$cHash0.3,                                                <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                                                'g'^~yy.1>),                                            $cAEAD0.3),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk.2, impSk)),                 h(<$cHash0.4,                     h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.3,                                             h(<$cHash0.3,                                                <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.2, impSk)),                                h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                                    'g'^~yy.1>),                                $cAEAD0.3),                     'emptyStr'>),                 $cAEAD0.4)) @ #vk.9
2: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, gy>),                  'K_2ae'>,                hkdfExtract(~ltk, impSk))) @ #vk.31
3: splitEqs(0)
4: splitEqs(3)
5: splitEqs(4)
6: !KU( 'g'^~xx ) @ #vk.38

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 12 (precomputed):
    !KU( aeadEncrypt('emptyStr',
                     hkdfExpand(<$cAEAD0.2, 
                                 h(<$cHash0.2, 
                                    h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 
                                       'g'^~yy>), 
                                    aeadEncrypt('emptyStr',
                                                hkdfExpand(<$cAEAD0.1, 
                                                            h(<$cHash0.1, 
                                                               <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, 
                                                                $V.1>, 
                                                               'g'^~yy>), 
                                                            'K_2ae'>,
                                                           hkdfExtract(~ltk.1, impSk)),
                                                h(<$cHash0.1, 
                                                   <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 
                                                   'g'^~yy>),
                                                $cAEAD0.1), 
                                    'emptyStr'>), 
                                 'K_3ae'>,
                                hkdfExtract(~ltk.1, impSk)),
                     h(<$cHash0.2, 
                        h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy
                          >), 
                        aeadEncrypt('emptyStr',
                                    hkdfExpand(<$cAEAD0.1, 
                                                h(<$cHash0.1, 
                                                   <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 
                                                   'g'^~yy>), 
                                                'K_2ae'>,
                                               hkdfExtract(~ltk.1, impSk)),
                                    h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 
                                       'g'^~yy>),
                                    $cAEAD0.1), 
                        'emptyStr'>),
                     $cAEAD0.2)
    ) @ #vk.8
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.28
1: !KU( ~yy.1 ) @ #vk.30
2: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.2,                              h(<$cHash0.2,                                 h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0.1,                                                         h(<$cHash0.1,                                                            <'PSK', 'PSK', $cSUITE0.1,                                                             'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                                            'g'^~yy.1>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                            h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                            $cAEAD0.1),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                 $cAEAD0.2)) @ #vk.7
3: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.3,                              h(<$cHash0.3,                                 h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0,                                                         h(<$cHash0,                                                            <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V                                                           >,                                                            'g'^~yy>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk, 'g'^(~xx*~yy))),                                            h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                                                'g'^~yy>),                                            $cAEAD0),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk, 'g'^(~xx*~yy))),                 h(<$cHash0.3,                     h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0,                                             h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                                                'g'^~yy>),                                             'K_2ae'>,                                           hkdfExtract(~ltk, 'g'^(~xx*~yy))),                                h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                                $cAEAD0),                     'emptyStr'>),                 $cAEAD0.3)) @ #vk.8
4: !KU( 'g'^~xx ) @ #vk.23
5: !KU( 'g'^~yy ) @ #vk.3

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 75 (precomputed): !KU( ~xx ) @ #vk.28
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~yy ) @ #vk.28
1: !KU( ~yy.1 ) @ #vk.30
2: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.2,                              h(<$cHash0.2,                                 h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0.1,                                                         h(<$cHash0.1,                                                            <'PSK', 'PSK', $cSUITE0.1,                                                             'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                                            'g'^~yy.1>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                            h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                            $cAEAD0.1),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                 $cAEAD0.2)) @ #vk.7
3: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.3,                              h(<$cHash0.3,                                 h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0,                                                         h(<$cHash0,                                                            <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V                                                           >,                                                            'g'^~yy>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk, 'g'^(~xx*~yy))),                                            h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                                                'g'^~yy>),                                            $cAEAD0),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk, 'g'^(~xx*~yy))),                 h(<$cHash0.3,                     h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0,                                             h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                                                'g'^~yy>),                                             'K_2ae'>,                                           hkdfExtract(~ltk, 'g'^(~xx*~yy))),                                h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                                $cAEAD0),                     'emptyStr'>),                 $cAEAD0.3)) @ #vk.8
4: !KU( 'g'^~xx ) @ #vk.23
5: !KU( 'g'^~yy ) @ #vk.3

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 65 (precomputed): !KU( ~yy ) @ #vk.28
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.29
1: !KU( ~yy ) @ #vk.30
2: !KU( ~yy.1 ) @ #vk.32
3: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.2,                              h(<$cHash0.2,                                 h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0.1,                                                         h(<$cHash0.1,                                                            <'PSK', 'PSK', $cSUITE0.1,                                                             'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                                            'g'^~yy.1>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                            h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                            $cAEAD0.1),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                 $cAEAD0.2)) @ #vk.7
4: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.3,                              h(<$cHash0.3,                                 h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0,                                                         h(<$cHash0,                                                            <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V                                                           >,                                                            'g'^~yy>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk, 'g'^(~xx*~yy))),                                            h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                                                'g'^~yy>),                                            $cAEAD0),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk, 'g'^(~xx*~yy))),                 h(<$cHash0.3,                     h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0,                                             h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                                                'g'^~yy>),                                             'K_2ae'>,                                           hkdfExtract(~ltk, 'g'^(~xx*~yy))),                                h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                                $cAEAD0),                     'emptyStr'>),                 $cAEAD0.3)) @ #vk.8
5: !KU( 'g'^~xx ) @ #vk.23
6: !KU( 'g'^~yy ) @ #vk.3

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 66 (precomputed): !KU( ~xx ) @ #vk.29
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.38
1: !KU( ~yy ) @ #vk.39
2: !KU( ~yy.1 ) @ #vk.41
3: !KU( 'g'^(~xx*~yy*inv(~yy.2)) ) @ #vk.25
4: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.2,                              h(<$cHash0.2,                                 h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0.1,                                                         h(<$cHash0.1,                                                            <'PSK', 'PSK', $cSUITE0.1,                                                             'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                                            'g'^~yy.1>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                            h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                            $cAEAD0.1),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                 $cAEAD0.2)) @ #vk.7
5: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.4,                              h(<$cHash0.4,                                 h(<$cHash0.3,                                    <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)), $U.2, $V.2                                   >,                                    'g'^~yy.2>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0.3,                                                         h(<$cHash0.3,                                                            <'PSK', 'PSK', $cSUITE0.2,                                                             'g'^(~xx*~yy*inv(~yy.2)), $U.2, $V.2>,                                                            'g'^~yy.2>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk.2, 'g'^(~xx*~yy))),                                            h(<$cHash0.3,                                                <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)),                                                 $U.2, $V.2>,                                                'g'^~yy.2>),                                            $cAEAD0.3),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk.2, 'g'^(~xx*~yy))),                 h(<$cHash0.4,                     h(<$cHash0.3,                        <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)), $U.2, $V.2>,                        'g'^~yy.2>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.3,                                             h(<$cHash0.3,                                                <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)),                                                 $U.2, $V.2>,                                                'g'^~yy.2>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.2, 'g'^(~xx*~yy))),                                h(<$cHash0.3,                                    <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)), $U.2, $V.2                                   >,                                    'g'^~yy.2>),                                $cAEAD0.3),                     'emptyStr'>),                 $cAEAD0.4)) @ #vk.8
6: !KU( 'g'^~xx ) @ #vk.32
7: !KU( 'g'^~yy ) @ #vk.3

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 66 (precomputed): !KU( ~xx ) @ #vk.38
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.37
1: !KU( ~yy.1 ) @ #vk.39
2: !KU( 'g'^(~xx*~yy*inv(~yy.2)) ) @ #vk.25
3: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.2,                              h(<$cHash0.2,                                 h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0.1,                                                         h(<$cHash0.1,                                                            <'PSK', 'PSK', $cSUITE0.1,                                                             'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                                            'g'^~yy.1>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                            h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                            $cAEAD0.1),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                 $cAEAD0.2)) @ #vk.7
4: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.4,                              h(<$cHash0.4,                                 h(<$cHash0.3,                                    <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)), $U.2, $V.2                                   >,                                    'g'^~yy.2>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0.3,                                                         h(<$cHash0.3,                                                            <'PSK', 'PSK', $cSUITE0.2,                                                             'g'^(~xx*~yy*inv(~yy.2)), $U.2, $V.2>,                                                            'g'^~yy.2>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk.2, 'g'^(~xx*~yy))),                                            h(<$cHash0.3,                                                <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)),                                                 $U.2, $V.2>,                                                'g'^~yy.2>),                                            $cAEAD0.3),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk.2, 'g'^(~xx*~yy))),                 h(<$cHash0.4,                     h(<$cHash0.3,                        <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)), $U.2, $V.2>,                        'g'^~yy.2>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.3,                                             h(<$cHash0.3,                                                <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)),                                                 $U.2, $V.2>,                                                'g'^~yy.2>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.2, 'g'^(~xx*~yy))),                                h(<$cHash0.3,                                    <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)), $U.2, $V.2                                   >,                                    'g'^~yy.2>),                                $cAEAD0.3),                     'emptyStr'>),                 $cAEAD0.4)) @ #vk.8
5: !KU( 'g'^~xx ) @ #vk.32
6: !KU( 'g'^~yy ) @ #vk.3

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 75 (precomputed): !KU( ~xx ) @ #vk.37
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: splitEqs(0)
1: splitEqs(4)
2: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.3,                              h(<$cHash0.3,                                 h(<$cHash0.2, <'PSK', 'PSK', $cSUITE0.2, 'g'^x.1, $U.2, $V.2>,                                    'g'^~yy.1>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0.2,                                                         h(<$cHash0.2,                                                            <'PSK', 'PSK', $cSUITE0.2, 'g'^x.1,                                                             $U.2, $V.2>,                                                            'g'^~yy.1>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk.2, 'g'^(~yy*~xx.1))),                                            h(<$cHash0.2,                                                <'PSK', 'PSK', $cSUITE0.2, 'g'^x.1, $U.2, $V.2>,                                                'g'^~yy.1>),                                            $cAEAD0.2),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk.2, 'g'^(~yy*~xx.1))),                 h(<$cHash0.3,                     h(<$cHash0.2, <'PSK', 'PSK', $cSUITE0.2, 'g'^x.1, $U.2, $V.2>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.2,                                             h(<$cHash0.2,                                                <'PSK', 'PSK', $cSUITE0.2, 'g'^x.1, $U.2, $V.2>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.2, 'g'^(~yy*~xx.1))),                                h(<$cHash0.2, <'PSK', 'PSK', $cSUITE0.2, 'g'^x.1, $U.2, $V.2>,                                    'g'^~yy.1>),                                $cAEAD0.2),                     'emptyStr'>),                 $cAEAD0.3)) @ #vk.10
3: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^x>),                  'K_2ae'>,                hkdfExtract(~ltk, 'g'^(~yy*~xx.1)))) @ #vk.32
4: !KU( 'g'^x ) @ #vk.4
5: !KU( 'g'^x.1 ) @ #vk.28
6: !KU( 'g'^~xx ) @ #vk.38
7: !KU( 'g'^~yy ) @ #vk.43
8: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^~xx.1, $U.1, $V.1>,                                 'g'^~yy>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~yy*~xx.1))),                 h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^~xx.1, $U.1, $V.1>,                     'g'^~yy>),                 $cAEAD0.1)) @ #vk.44
9: !KU( 'g'^~xx.1 ) @ #vk.21

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 3 (directly): splitEqs(0)
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~yy ) @ #vk.37
1: !KU( ~yy.1 ) @ #vk.39
2: !KU( 'g'^(~xx*~yy*inv(~yy.2)) ) @ #vk.25
3: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.2,                              h(<$cHash0.2,                                 h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0.1,                                                         h(<$cHash0.1,                                                            <'PSK', 'PSK', $cSUITE0.1,                                                             'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                                            'g'^~yy.1>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                            h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                            $cAEAD0.1),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                 $cAEAD0.2)) @ #vk.7
4: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.4,                              h(<$cHash0.4,                                 h(<$cHash0.3,                                    <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)), $U.2, $V.2                                   >,                                    'g'^~yy.2>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0.3,                                                         h(<$cHash0.3,                                                            <'PSK', 'PSK', $cSUITE0.2,                                                             'g'^(~xx*~yy*inv(~yy.2)), $U.2, $V.2>,                                                            'g'^~yy.2>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk.2, 'g'^(~xx*~yy))),                                            h(<$cHash0.3,                                                <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)),                                                 $U.2, $V.2>,                                                'g'^~yy.2>),                                            $cAEAD0.3),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk.2, 'g'^(~xx*~yy))),                 h(<$cHash0.4,                     h(<$cHash0.3,                        <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)), $U.2, $V.2>,                        'g'^~yy.2>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.3,                                             h(<$cHash0.3,                                                <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)),                                                 $U.2, $V.2>,                                                'g'^~yy.2>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.2, 'g'^(~xx*~yy))),                                h(<$cHash0.3,                                    <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)), $U.2, $V.2                                   >,                                    'g'^~yy.2>),                                $cAEAD0.3),                     'emptyStr'>),                 $cAEAD0.4)) @ #vk.8
5: !KU( 'g'^~xx ) @ #vk.32
6: !KU( 'g'^~yy ) @ #vk.3

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 65 (precomputed): !KU( ~yy ) @ #vk.37
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( h(<$cHash0.2,         h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy          >),         aeadEncrypt('emptyStr',                    hkdfExpand(<$cAEAD0.1,                                 h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                  >),                                 'K_2ae'>,                               hkdfExtract(~ltk.1, impSk)),                    h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                      >),                    $cAEAD0.1),         'emptyStr'>)) @ #vk.43
1: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.4,                              h(<$cHash0.4,                                 h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                                    'g'^~yy.1>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0.3,                                                         h(<$cHash0.3,                                                            <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2,                                                             $V.2>,                                                            'g'^~yy.1>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk.2, impSk)),                                            h(<$cHash0.3,                                                <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                                                'g'^~yy.1>),                                            $cAEAD0.3),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk.2, impSk)),                 h(<$cHash0.4,                     h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.3,                                             h(<$cHash0.3,                                                <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.2, impSk)),                                h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                                    'g'^~yy.1>),                                $cAEAD0.3),                     'emptyStr'>),                 $cAEAD0.4)) @ #vk.10
2: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, gy>),                  'K_2ae'>,                hkdfExtract(~ltk, impSk))) @ #vk.32
3: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                      >),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                              >),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, impSk)),                                h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                  >),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, impSk))) @ #vk.42
4: splitEqs(0)
5: splitEqs(3)
6: splitEqs(4)
7: !KU( 'g'^~xx ) @ #vk.38

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 72 (precomputed):
    !KU( h(<$cHash0.2, 
            h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy
              >), 
            aeadEncrypt('emptyStr',
                        hkdfExpand(<$cAEAD0.1, 
                                    h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 
                                       'g'^~yy>), 
                                    'K_2ae'>,
                                   hkdfExtract(~ltk.1, impSk)),
                        h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy
                          >),
                        $cAEAD0.1), 
            'emptyStr'>)
    ) @ #vk.43
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.2,                              h(<$cHash0.2,                                 h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                  >),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0.1,                                                         h(<$cHash0.1,                                                            <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1                                                           >,                                                            'g'^~yy>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk.1, impSk)),                                            h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                              >),                                            $cAEAD0.1),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk.1, impSk)),                 h(<$cHash0.2,                     h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                      >),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                              >),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, impSk)),                                h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                  >),                                $cAEAD0.1),                     'emptyStr'>),                 $cAEAD0.2)) @ #vk.8
1: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.4,                              h(<$cHash0.4,                                 h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                                    'g'^~yy.1>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0.3,                                                         h(<$cHash0.3,                                                            <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2,                                                             $V.2>,                                                            'g'^~yy.1>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk.2, impSk)),                                            h(<$cHash0.3,                                                <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                                                'g'^~yy.1>),                                            $cAEAD0.3),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk.2, impSk)),                 h(<$cHash0.4,                     h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.3,                                             h(<$cHash0.3,                                                <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.2, impSk)),                                h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                                    'g'^~yy.1>),                                $cAEAD0.3),                     'emptyStr'>),                 $cAEAD0.4)) @ #vk.9
2: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, gy>),                  'K_2ae'>,                hkdfExtract(~ltk, impSk))) @ #vk.31
3: splitEqs(0)
4: splitEqs(3)
5: splitEqs(4)
6: !KU( 'g'^~xx ) @ #vk.38

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 14 (precomputed):
    !KU( aeadEncrypt('emptyStr',
                     hkdfExpand(<$cAEAD0.2, 
                                 h(<$cHash0.2, 
                                    h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 
                                       'g'^~yy>), 
                                    aeadEncrypt('emptyStr',
                                                hkdfExpand(<$cAEAD0.1, 
                                                            h(<$cHash0.1, 
                                                               <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, 
                                                                $V.1>, 
                                                               'g'^~yy>), 
                                                            'K_2ae'>,
                                                           hkdfExtract(~ltk.1, impSk)),
                                                h(<$cHash0.1, 
                                                   <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 
                                                   'g'^~yy>),
                                                $cAEAD0.1), 
                                    'emptyStr'>), 
                                 'K_3ae'>,
                                hkdfExtract(~ltk.1, impSk)),
                     h(<$cHash0.2, 
                        h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy
                          >), 
                        aeadEncrypt('emptyStr',
                                    hkdfExpand(<$cAEAD0.1, 
                                                h(<$cHash0.1, 
                                                   <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 
                                                   'g'^~yy>), 
                                                'K_2ae'>,
                                               hkdfExtract(~ltk.1, impSk)),
                                    h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 
                                       'g'^~yy>),
                                    $cAEAD0.1), 
                        'emptyStr'>),
                     $cAEAD0.2)
    ) @ #vk.8
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( h(<$cHash0.2,         h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy          >),         aeadEncrypt('emptyStr',                    hkdfExpand(<$cAEAD0.1,                                 h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                  >),                                 'K_2ae'>,                               hkdfExtract(~ltk.1, impSk)),                    h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                      >),                    $cAEAD0.1),         'emptyStr'>)) @ #vk.43
1: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.4,                              h(<$cHash0.4,                                 h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                                    'g'^~yy.1>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0.3,                                                         h(<$cHash0.3,                                                            <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2,                                                             $V.2>,                                                            'g'^~yy.1>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk.2, impSk)),                                            h(<$cHash0.3,                                                <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                                                'g'^~yy.1>),                                            $cAEAD0.3),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk.2, impSk)),                 h(<$cHash0.4,                     h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.3,                                             h(<$cHash0.3,                                                <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.2, impSk)),                                h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                                    'g'^~yy.1>),                                $cAEAD0.3),                     'emptyStr'>),                 $cAEAD0.4)) @ #vk.10
2: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, gy>),                  'K_2ae'>,                hkdfExtract(~ltk, impSk))) @ #vk.32
3: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                      >),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                              >),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, impSk)),                                h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                  >),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, impSk))) @ #vk.42
4: splitEqs(0)
5: splitEqs(3)
6: splitEqs(4)
7: !KU( 'g'^~xx ) @ #vk.38

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 72 (precomputed):
    !KU( h(<$cHash0.2, 
            h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy
              >), 
            aeadEncrypt('emptyStr',
                        hkdfExpand(<$cAEAD0.1, 
                                    h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 
                                       'g'^~yy>), 
                                    'K_2ae'>,
                                   hkdfExtract(~ltk.1, impSk)),
                        h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy
                          >),
                        $cAEAD0.1), 
            'emptyStr'>)
    ) @ #vk.43
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: splitEqs(4)
1: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.2,                              h(<$cHash0.2,                                 h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                                    'g'^~yy.1>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0.1,                                                         h(<$cHash0.1,                                                            <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1,                                                             $V.1>,                                                            'g'^~yy.1>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                            h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                                                'g'^~yy.1>),                                            $cAEAD0.1),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.2,                     h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                 $cAEAD0.2)) @ #vk.10
2: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                  'K_2ae'>,                hkdfExtract(~ltk, 'g'^(~xx*~yy)))) @ #vk.30
3: !KU( 'g'^x ) @ #vk.26
4: !KU( 'g'^~xx ) @ #vk.19
5: !KU( 'g'^~yy ) @ #vk.5

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 47 (directly): splitEqs(4)
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: splitEqs(4)
1: !KU( 'g'^(~yy*~xx.1*inv(~xx)) ) @ #vk.5
2: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.3,                              h(<$cHash0.3,                                 h(<$cHash0.2, <'PSK', 'PSK', $cSUITE0.2, 'g'^x, $U.2, $V.2>,                                    'g'^~yy.1>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0.2,                                                         h(<$cHash0.2,                                                            <'PSK', 'PSK', $cSUITE0.2, 'g'^x, $U.2,                                                             $V.2>,                                                            'g'^~yy.1>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk.2, 'g'^(~yy*~xx.1))),                                            h(<$cHash0.2,                                                <'PSK', 'PSK', $cSUITE0.2, 'g'^x, $U.2, $V.2>,                                                'g'^~yy.1>),                                            $cAEAD0.2),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk.2, 'g'^(~yy*~xx.1))),                 h(<$cHash0.3,                     h(<$cHash0.2, <'PSK', 'PSK', $cSUITE0.2, 'g'^x, $U.2, $V.2>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.2,                                             h(<$cHash0.2,                                                <'PSK', 'PSK', $cSUITE0.2, 'g'^x, $U.2, $V.2>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.2, 'g'^(~yy*~xx.1))),                                h(<$cHash0.2, <'PSK', 'PSK', $cSUITE0.2, 'g'^x, $U.2, $V.2>,                                    'g'^~yy.1>),                                $cAEAD0.2),                     'emptyStr'>),                 $cAEAD0.3)) @ #vk.10
3: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                     'g'^(~yy*~xx.1*inv(~xx))>),                  'K_2ae'>,                hkdfExtract(~ltk, 'g'^(~yy*~xx.1)))) @ #vk.32
4: !KU( 'g'^x ) @ #vk.28
5: !KU( 'g'^~xx ) @ #vk.38
6: !KU( 'g'^~yy ) @ #vk.43
7: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^~xx.1, $U.1, $V.1>,                                 'g'^~yy>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~yy*~xx.1))),                 h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^~xx.1, $U.1, $V.1>,                     'g'^~yy>),                 $cAEAD0.1)) @ #vk.44
8: !KU( 'g'^~xx.1 ) @ #vk.21

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 47 (directly): splitEqs(4)
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: splitEqs(0)
1: splitEqs(4)
2: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.3,                              h(<$cHash0.3,                                 h(<$cHash0.2, <'PSK', 'PSK', $cSUITE0.2, 'g'^x.1, $U.2, $V.2>,                                    'g'^~yy.1>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0.2,                                                         h(<$cHash0.2,                                                            <'PSK', 'PSK', $cSUITE0.2, 'g'^x.1,                                                             $U.2, $V.2>,                                                            'g'^~yy.1>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk.2, 'g'^(~yy*~xx.1))),                                            h(<$cHash0.2,                                                <'PSK', 'PSK', $cSUITE0.2, 'g'^x.1, $U.2, $V.2>,                                                'g'^~yy.1>),                                            $cAEAD0.2),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk.2, 'g'^(~yy*~xx.1))),                 h(<$cHash0.3,                     h(<$cHash0.2, <'PSK', 'PSK', $cSUITE0.2, 'g'^x.1, $U.2, $V.2>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.2,                                             h(<$cHash0.2,                                                <'PSK', 'PSK', $cSUITE0.2, 'g'^x.1, $U.2, $V.2>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.2, 'g'^(~yy*~xx.1))),                                h(<$cHash0.2, <'PSK', 'PSK', $cSUITE0.2, 'g'^x.1, $U.2, $V.2>,                                    'g'^~yy.1>),                                $cAEAD0.2),                     'emptyStr'>),                 $cAEAD0.3)) @ #vk.10
3: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^x>),                  'K_2ae'>,                hkdfExtract(~ltk, 'g'^(~yy*~xx.1)))) @ #vk.32
4: !KU( 'g'^x ) @ #vk.4
5: !KU( 'g'^x.1 ) @ #vk.28
6: !KU( 'g'^~xx ) @ #vk.38
7: !KU( 'g'^~yy ) @ #vk.43
8: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^~xx.1, $U.1, $V.1>,                                 'g'^~yy>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~yy*~xx.1))),                 h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^~xx.1, $U.1, $V.1>,                     'g'^~yy>),                 $cAEAD0.1)) @ #vk.44
9: !KU( 'g'^~xx.1 ) @ #vk.21

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 2 (directly): splitEqs(0)
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( 'g'^(~xx*~yy*inv(~yy.1)) ) @ #vk.26
1: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.2,                              h(<$cHash0.2,                                 h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0.1,                                                         h(<$cHash0.1,                                                            <'PSK', 'PSK', $cSUITE0.1,                                                             'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                                            'g'^~yy.1>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                            h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                            $cAEAD0.1),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                 $cAEAD0.2)) @ #vk.10
2: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                  'K_2ae'>,                hkdfExtract(~ltk, 'g'^(~xx*~yy)))) @ #vk.30
3: !KU( 'g'^~xx ) @ #vk.19
4: !KU( 'g'^~yy ) @ #vk.5

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 77 (precomputed):
    !KU( 'g'^(~xx*~yy*inv(~yy.1)) ) @ #vk.26
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: splitEqs(4)
1: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.2,                              h(<$cHash0.2,                                 h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                                    'g'^~yy.1>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0.1,                                                         h(<$cHash0.1,                                                            <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1,                                                             $V.1>,                                                            'g'^~yy.1>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                            h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                                                'g'^~yy.1>),                                            $cAEAD0.1),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.2,                     h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                 $cAEAD0.2)) @ #vk.10
2: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                  'K_2ae'>,                hkdfExtract(~ltk, 'g'^(~xx*~yy)))) @ #vk.30
3: !KU( 'g'^x ) @ #vk.26
4: !KU( 'g'^~xx ) @ #vk.19
5: !KU( 'g'^~yy ) @ #vk.5

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 47 (directly): splitEqs(4)
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: splitEqs(4)
1: !KU( 'g'^(~yy*~xx.1*inv(~xx)) ) @ #vk.5
2: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.3,                              h(<$cHash0.3,                                 h(<$cHash0.2, <'PSK', 'PSK', $cSUITE0.2, 'g'^x, $U.2, $V.2>,                                    'g'^~yy.1>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0.2,                                                         h(<$cHash0.2,                                                            <'PSK', 'PSK', $cSUITE0.2, 'g'^x, $U.2,                                                             $V.2>,                                                            'g'^~yy.1>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk.2, 'g'^(~yy*~xx.1))),                                            h(<$cHash0.2,                                                <'PSK', 'PSK', $cSUITE0.2, 'g'^x, $U.2, $V.2>,                                                'g'^~yy.1>),                                            $cAEAD0.2),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk.2, 'g'^(~yy*~xx.1))),                 h(<$cHash0.3,                     h(<$cHash0.2, <'PSK', 'PSK', $cSUITE0.2, 'g'^x, $U.2, $V.2>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.2,                                             h(<$cHash0.2,                                                <'PSK', 'PSK', $cSUITE0.2, 'g'^x, $U.2, $V.2>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.2, 'g'^(~yy*~xx.1))),                                h(<$cHash0.2, <'PSK', 'PSK', $cSUITE0.2, 'g'^x, $U.2, $V.2>,                                    'g'^~yy.1>),                                $cAEAD0.2),                     'emptyStr'>),                 $cAEAD0.3)) @ #vk.10
3: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                     'g'^(~yy*~xx.1*inv(~xx))>),                  'K_2ae'>,                hkdfExtract(~ltk, 'g'^(~yy*~xx.1)))) @ #vk.32
4: !KU( 'g'^x ) @ #vk.28
5: !KU( 'g'^~xx ) @ #vk.38
6: !KU( 'g'^~yy ) @ #vk.43
7: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^~xx.1, $U.1, $V.1>,                                 'g'^~yy>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~yy*~xx.1))),                 h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^~xx.1, $U.1, $V.1>,                     'g'^~yy>),                 $cAEAD0.1)) @ #vk.44
8: !KU( 'g'^~xx.1 ) @ #vk.21

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 47 (directly): splitEqs(4)
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.35
1: !KU( ~yy ) @ #vk.36
2: !KU( ~yy.1 ) @ #vk.38
3: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.2,                              h(<$cHash0.2,                                 h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0.1,                                                         h(<$cHash0.1,                                                            <'PSK', 'PSK', $cSUITE0.1,                                                             'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                                            'g'^~yy.1>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                            h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                            $cAEAD0.1),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                 $cAEAD0.2)) @ #vk.11
4: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                  'K_2ae'>,                hkdfExtract(~ltk, 'g'^(~xx*~yy)))) @ #vk.30
5: !KU( 'g'^~xx ) @ #vk.20
6: !KU( 'g'^~yy ) @ #vk.6

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 81 (precomputed): !KU( ~xx ) @ #vk.35
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~yy ) @ #vk.34
1: !KU( ~yy.1 ) @ #vk.36
2: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.2,                              h(<$cHash0.2,                                 h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0.1,                                                         h(<$cHash0.1,                                                            <'PSK', 'PSK', $cSUITE0.1,                                                             'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                                            'g'^~yy.1>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                            h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                            $cAEAD0.1),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                 $cAEAD0.2)) @ #vk.11
3: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                  'K_2ae'>,                hkdfExtract(~ltk, 'g'^(~xx*~yy)))) @ #vk.30
4: !KU( 'g'^~xx ) @ #vk.20
5: !KU( 'g'^~yy ) @ #vk.6

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 80 (precomputed): !KU( ~yy ) @ #vk.34
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.34
1: !KU( ~yy.1 ) @ #vk.36
2: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.2,                              h(<$cHash0.2,                                 h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0.1,                                                         h(<$cHash0.1,                                                            <'PSK', 'PSK', $cSUITE0.1,                                                             'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                                            'g'^~yy.1>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                            h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                            $cAEAD0.1),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                 $cAEAD0.2)) @ #vk.11
3: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                  'K_2ae'>,                hkdfExtract(~ltk, 'g'^(~xx*~yy)))) @ #vk.30
4: !KU( 'g'^~xx ) @ #vk.20
5: !KU( 'g'^~yy ) @ #vk.6

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 90 (precomputed): !KU( ~xx ) @ #vk.34
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( 'g'^(~xx*~yy*inv(~yy.1)) ) @ #vk.26
1: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.2,                              h(<$cHash0.2,                                 h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0.1,                                                         h(<$cHash0.1,                                                            <'PSK', 'PSK', $cSUITE0.1,                                                             'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                                            'g'^~yy.1>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                            h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                            $cAEAD0.1),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                 $cAEAD0.2)) @ #vk.10
2: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                  'K_2ae'>,                hkdfExtract(~ltk, 'g'^(~xx*~yy)))) @ #vk.30
3: !KU( 'g'^~xx ) @ #vk.19
4: !KU( 'g'^~yy ) @ #vk.5

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 77 (precomputed):
    !KU( 'g'^(~xx*~yy*inv(~yy.1)) ) @ #vk.26
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( 'g'^(~yy*~xx.1*inv(~xx)) ) @ #vk.5
1: !KU( 'g'^(~yy*~xx.1*inv(~yy.1)) ) @ #vk.28
2: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.3,                              h(<$cHash0.3,                                 h(<$cHash0.2,                                    <'PSK', 'PSK', $cSUITE0.2, 'g'^(~yy*~xx.1*inv(~yy.1)), $U.2, $V.2                                   >,                                    'g'^~yy.1>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0.2,                                                         h(<$cHash0.2,                                                            <'PSK', 'PSK', $cSUITE0.2,                                                             'g'^(~yy*~xx.1*inv(~yy.1)), $U.2, $V.2                                                           >,                                                            'g'^~yy.1>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk.2, 'g'^(~yy*~xx.1))),                                            h(<$cHash0.2,                                                <'PSK', 'PSK', $cSUITE0.2,                                                 'g'^(~yy*~xx.1*inv(~yy.1)), $U.2, $V.2>,                                                'g'^~yy.1>),                                            $cAEAD0.2),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk.2, 'g'^(~yy*~xx.1))),                 h(<$cHash0.3,                     h(<$cHash0.2,                        <'PSK', 'PSK', $cSUITE0.2, 'g'^(~yy*~xx.1*inv(~yy.1)), $U.2, $V.2                       >,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.2,                                             h(<$cHash0.2,                                                <'PSK', 'PSK', $cSUITE0.2,                                                 'g'^(~yy*~xx.1*inv(~yy.1)), $U.2, $V.2>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.2, 'g'^(~yy*~xx.1))),                                h(<$cHash0.2,                                    <'PSK', 'PSK', $cSUITE0.2, 'g'^(~yy*~xx.1*inv(~yy.1)), $U.2, $V.2                                   >,                                    'g'^~yy.1>),                                $cAEAD0.2),                     'emptyStr'>),                 $cAEAD0.3)) @ #vk.10
3: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                     'g'^(~yy*~xx.1*inv(~xx))>),                  'K_2ae'>,                hkdfExtract(~ltk, 'g'^(~yy*~xx.1)))) @ #vk.32
4: !KU( 'g'^~xx ) @ #vk.38
5: !KU( 'g'^~yy ) @ #vk.43
6: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^~xx.1, $U.1, $V.1>,                                 'g'^~yy>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~yy*~xx.1))),                 h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^~xx.1, $U.1, $V.1>,                     'g'^~yy>),                 $cAEAD0.1)) @ #vk.44
7: !KU( 'g'^~xx.1 ) @ #vk.21

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 75 (precomputed):
    !KU( 'g'^(~yy*~xx.1*inv(~xx)) ) @ #vk.5
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.35
1: !KU( ~yy ) @ #vk.36
2: !KU( ~yy.1 ) @ #vk.38
3: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.2,                              h(<$cHash0.2,                                 h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0.1,                                                         h(<$cHash0.1,                                                            <'PSK', 'PSK', $cSUITE0.1,                                                             'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                                            'g'^~yy.1>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                            h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                            $cAEAD0.1),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                 $cAEAD0.2)) @ #vk.11
4: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                  'K_2ae'>,                hkdfExtract(~ltk, 'g'^(~xx*~yy)))) @ #vk.30
5: !KU( 'g'^~xx ) @ #vk.20
6: !KU( 'g'^~yy ) @ #vk.6

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 81 (precomputed): !KU( ~xx ) @ #vk.35
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.34
1: !KU( ~yy.1 ) @ #vk.36
2: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.2,                              h(<$cHash0.2,                                 h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0.1,                                                         h(<$cHash0.1,                                                            <'PSK', 'PSK', $cSUITE0.1,                                                             'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                                            'g'^~yy.1>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                            h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                            $cAEAD0.1),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                 $cAEAD0.2)) @ #vk.11
3: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                  'K_2ae'>,                hkdfExtract(~ltk, 'g'^(~xx*~yy)))) @ #vk.30
4: !KU( 'g'^~xx ) @ #vk.20
5: !KU( 'g'^~yy ) @ #vk.6

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 90 (precomputed): !KU( ~xx ) @ #vk.34
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~yy ) @ #vk.34
1: !KU( ~yy.1 ) @ #vk.36
2: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.2,                              h(<$cHash0.2,                                 h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0.1,                                                         h(<$cHash0.1,                                                            <'PSK', 'PSK', $cSUITE0.1,                                                             'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                                            'g'^~yy.1>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                            h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                            $cAEAD0.1),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                 $cAEAD0.2)) @ #vk.11
3: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                  'K_2ae'>,                hkdfExtract(~ltk, 'g'^(~xx*~yy)))) @ #vk.30
4: !KU( 'g'^~xx ) @ #vk.20
5: !KU( 'g'^~yy ) @ #vk.6

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 80 (precomputed): !KU( ~yy ) @ #vk.34
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( 'g'^(~yy*~xx.1*inv(~xx)) ) @ #vk.5
1: !KU( 'g'^(~yy*~xx.1*inv(~yy.1)) ) @ #vk.28
2: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.3,                              h(<$cHash0.3,                                 h(<$cHash0.2,                                    <'PSK', 'PSK', $cSUITE0.2, 'g'^(~yy*~xx.1*inv(~yy.1)), $U.2, $V.2                                   >,                                    'g'^~yy.1>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0.2,                                                         h(<$cHash0.2,                                                            <'PSK', 'PSK', $cSUITE0.2,                                                             'g'^(~yy*~xx.1*inv(~yy.1)), $U.2, $V.2                                                           >,                                                            'g'^~yy.1>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk.2, 'g'^(~yy*~xx.1))),                                            h(<$cHash0.2,                                                <'PSK', 'PSK', $cSUITE0.2,                                                 'g'^(~yy*~xx.1*inv(~yy.1)), $U.2, $V.2>,                                                'g'^~yy.1>),                                            $cAEAD0.2),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk.2, 'g'^(~yy*~xx.1))),                 h(<$cHash0.3,                     h(<$cHash0.2,                        <'PSK', 'PSK', $cSUITE0.2, 'g'^(~yy*~xx.1*inv(~yy.1)), $U.2, $V.2                       >,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.2,                                             h(<$cHash0.2,                                                <'PSK', 'PSK', $cSUITE0.2,                                                 'g'^(~yy*~xx.1*inv(~yy.1)), $U.2, $V.2>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.2, 'g'^(~yy*~xx.1))),                                h(<$cHash0.2,                                    <'PSK', 'PSK', $cSUITE0.2, 'g'^(~yy*~xx.1*inv(~yy.1)), $U.2, $V.2                                   >,                                    'g'^~yy.1>),                                $cAEAD0.2),                     'emptyStr'>),                 $cAEAD0.3)) @ #vk.10
3: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                     'g'^(~yy*~xx.1*inv(~xx))>),                  'K_2ae'>,                hkdfExtract(~ltk, 'g'^(~yy*~xx.1)))) @ #vk.32
4: !KU( 'g'^~xx ) @ #vk.38
5: !KU( 'g'^~yy ) @ #vk.43
6: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^~xx.1, $U.1, $V.1>,                                 'g'^~yy>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~yy*~xx.1))),                 h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^~xx.1, $U.1, $V.1>,                     'g'^~yy>),                 $cAEAD0.1)) @ #vk.44
7: !KU( 'g'^~xx.1 ) @ #vk.21

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 75 (precomputed):
    !KU( 'g'^(~yy*~xx.1*inv(~xx)) ) @ #vk.5
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~yy ) @ #vk.46
1: !KU( ~xx ) @ #vk.48
2: !KU( 'g'^(~yy*~xx.1*inv(~yy.1)) ) @ #vk.28
3: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.3,                              h(<$cHash0.3,                                 h(<$cHash0.2,                                    <'PSK', 'PSK', $cSUITE0.2, 'g'^(~yy*~xx.1*inv(~yy.1)), $U.2, $V.2                                   >,                                    'g'^~yy.1>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0.2,                                                         h(<$cHash0.2,                                                            <'PSK', 'PSK', $cSUITE0.2,                                                             'g'^(~yy*~xx.1*inv(~yy.1)), $U.2, $V.2                                                           >,                                                            'g'^~yy.1>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk.2, 'g'^(~yy*~xx.1))),                                            h(<$cHash0.2,                                                <'PSK', 'PSK', $cSUITE0.2,                                                 'g'^(~yy*~xx.1*inv(~yy.1)), $U.2, $V.2>,                                                'g'^~yy.1>),                                            $cAEAD0.2),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk.2, 'g'^(~yy*~xx.1))),                 h(<$cHash0.3,                     h(<$cHash0.2,                        <'PSK', 'PSK', $cSUITE0.2, 'g'^(~yy*~xx.1*inv(~yy.1)), $U.2, $V.2                       >,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.2,                                             h(<$cHash0.2,                                                <'PSK', 'PSK', $cSUITE0.2,                                                 'g'^(~yy*~xx.1*inv(~yy.1)), $U.2, $V.2>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.2, 'g'^(~yy*~xx.1))),                                h(<$cHash0.2,                                    <'PSK', 'PSK', $cSUITE0.2, 'g'^(~yy*~xx.1*inv(~yy.1)), $U.2, $V.2                                   >,                                    'g'^~yy.1>),                                $cAEAD0.2),                     'emptyStr'>),                 $cAEAD0.3)) @ #vk.10
4: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                     'g'^(~yy*~xx.1*inv(~xx))>),                  'K_2ae'>,                hkdfExtract(~ltk, 'g'^(~yy*~xx.1)))) @ #vk.32
5: !KU( 'g'^~xx ) @ #vk.38
6: !KU( 'g'^~yy ) @ #vk.43
7: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^~xx.1, $U.1, $V.1>,                                 'g'^~yy>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~yy*~xx.1))),                 h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^~xx.1, $U.1, $V.1>,                     'g'^~yy>),                 $cAEAD0.1)) @ #vk.44
8: !KU( 'g'^~xx.1 ) @ #vk.21

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 80 (precomputed): !KU( ~yy ) @ #vk.46
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx.1 ) @ #vk.46
1: !KU( ~xx ) @ #vk.48
2: !KU( 'g'^(~yy*~xx.1*inv(~yy.1)) ) @ #vk.28
3: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.3,                              h(<$cHash0.3,                                 h(<$cHash0.2,                                    <'PSK', 'PSK', $cSUITE0.2, 'g'^(~yy*~xx.1*inv(~yy.1)), $U.2, $V.2                                   >,                                    'g'^~yy.1>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0.2,                                                         h(<$cHash0.2,                                                            <'PSK', 'PSK', $cSUITE0.2,                                                             'g'^(~yy*~xx.1*inv(~yy.1)), $U.2, $V.2                                                           >,                                                            'g'^~yy.1>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk.2, 'g'^(~yy*~xx.1))),                                            h(<$cHash0.2,                                                <'PSK', 'PSK', $cSUITE0.2,                                                 'g'^(~yy*~xx.1*inv(~yy.1)), $U.2, $V.2>,                                                'g'^~yy.1>),                                            $cAEAD0.2),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk.2, 'g'^(~yy*~xx.1))),                 h(<$cHash0.3,                     h(<$cHash0.2,                        <'PSK', 'PSK', $cSUITE0.2, 'g'^(~yy*~xx.1*inv(~yy.1)), $U.2, $V.2                       >,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.2,                                             h(<$cHash0.2,                                                <'PSK', 'PSK', $cSUITE0.2,                                                 'g'^(~yy*~xx.1*inv(~yy.1)), $U.2, $V.2>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.2, 'g'^(~yy*~xx.1))),                                h(<$cHash0.2,                                    <'PSK', 'PSK', $cSUITE0.2, 'g'^(~yy*~xx.1*inv(~yy.1)), $U.2, $V.2                                   >,                                    'g'^~yy.1>),                                $cAEAD0.2),                     'emptyStr'>),                 $cAEAD0.3)) @ #vk.10
4: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                     'g'^(~yy*~xx.1*inv(~xx))>),                  'K_2ae'>,                hkdfExtract(~ltk, 'g'^(~yy*~xx.1)))) @ #vk.32
5: !KU( 'g'^~xx ) @ #vk.38
6: !KU( 'g'^~yy ) @ #vk.43
7: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^~xx.1, $U.1, $V.1>,                                 'g'^~yy>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~yy*~xx.1))),                 h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^~xx.1, $U.1, $V.1>,                     'g'^~yy>),                 $cAEAD0.1)) @ #vk.44
8: !KU( 'g'^~xx.1 ) @ #vk.21

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 90 (precomputed): !KU( ~xx.1 ) @ #vk.46
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~yy ) @ #vk.47
1: !KU( ~xx.1 ) @ #vk.48
2: !KU( ~xx ) @ #vk.50
3: !KU( 'g'^(~yy*~xx.1*inv(~yy.1)) ) @ #vk.28
4: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.3,                              h(<$cHash0.3,                                 h(<$cHash0.2,                                    <'PSK', 'PSK', $cSUITE0.2, 'g'^(~yy*~xx.1*inv(~yy.1)), $U.2, $V.2                                   >,                                    'g'^~yy.1>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0.2,                                                         h(<$cHash0.2,                                                            <'PSK', 'PSK', $cSUITE0.2,                                                             'g'^(~yy*~xx.1*inv(~yy.1)), $U.2, $V.2                                                           >,                                                            'g'^~yy.1>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk.2, 'g'^(~yy*~xx.1))),                                            h(<$cHash0.2,                                                <'PSK', 'PSK', $cSUITE0.2,                                                 'g'^(~yy*~xx.1*inv(~yy.1)), $U.2, $V.2>,                                                'g'^~yy.1>),                                            $cAEAD0.2),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk.2, 'g'^(~yy*~xx.1))),                 h(<$cHash0.3,                     h(<$cHash0.2,                        <'PSK', 'PSK', $cSUITE0.2, 'g'^(~yy*~xx.1*inv(~yy.1)), $U.2, $V.2                       >,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.2,                                             h(<$cHash0.2,                                                <'PSK', 'PSK', $cSUITE0.2,                                                 'g'^(~yy*~xx.1*inv(~yy.1)), $U.2, $V.2>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.2, 'g'^(~yy*~xx.1))),                                h(<$cHash0.2,                                    <'PSK', 'PSK', $cSUITE0.2, 'g'^(~yy*~xx.1*inv(~yy.1)), $U.2, $V.2                                   >,                                    'g'^~yy.1>),                                $cAEAD0.2),                     'emptyStr'>),                 $cAEAD0.3)) @ #vk.10
5: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                     'g'^(~yy*~xx.1*inv(~xx))>),                  'K_2ae'>,                hkdfExtract(~ltk, 'g'^(~yy*~xx.1)))) @ #vk.32
6: !KU( 'g'^~xx ) @ #vk.38
7: !KU( 'g'^~yy ) @ #vk.43
8: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^~xx.1, $U.1, $V.1>,                                 'g'^~yy>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~yy*~xx.1))),                 h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^~xx.1, $U.1, $V.1>,                     'g'^~yy>),                 $cAEAD0.1)) @ #vk.44
9: !KU( 'g'^~xx.1 ) @ #vk.21

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 81 (precomputed): !KU( ~yy ) @ #vk.47
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>,         'g'^~yy>)) @ #vk.49
1: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.4,                              h(<$cHash0.4,                                 h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                                    'g'^~yy.1>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0.3,                                                         h(<$cHash0.3,                                                            <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2,                                                             $V.2>,                                                            'g'^~yy.1>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk.2, impSk)),                                            h(<$cHash0.3,                                                <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                                                'g'^~yy.1>),                                            $cAEAD0.3),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk.2, impSk)),                 h(<$cHash0.4,                     h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.3,                                             h(<$cHash0.3,                                                <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.2, impSk)),                                h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                                    'g'^~yy.1>),                                $cAEAD0.3),                     'emptyStr'>),                 $cAEAD0.4)) @ #vk.12
2: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, gy>),                  'K_2ae'>,                hkdfExtract(~ltk, impSk))) @ #vk.34
3: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                      >),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                              >),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, impSk)),                                h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                  >),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, impSk))) @ #vk.44
4: splitEqs(0)
5: splitEqs(3)
6: splitEqs(4)
7: !KU( 'g'^~xx ) @ #vk.40
8: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                               >),                              'K_2ae'>,                            hkdfExtract(~ltk.1, impSk)),                 h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                   >),                 $cAEAD0.1)) @ #vk.50

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 78 (precomputed):
    !KU( h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 
            'g'^~yy>)
    ) @ #vk.49
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~yy ) @ #vk.47
1: !KU( ~xx.1 ) @ #vk.48
2: !KU( ~xx ) @ #vk.50
3: !KU( 'g'^(~yy*~xx.1*inv(~yy.1)) ) @ #vk.28
4: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.3,                              h(<$cHash0.3,                                 h(<$cHash0.2,                                    <'PSK', 'PSK', $cSUITE0.2, 'g'^(~yy*~xx.1*inv(~yy.1)), $U.2, $V.2                                   >,                                    'g'^~yy.1>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0.2,                                                         h(<$cHash0.2,                                                            <'PSK', 'PSK', $cSUITE0.2,                                                             'g'^(~yy*~xx.1*inv(~yy.1)), $U.2, $V.2                                                           >,                                                            'g'^~yy.1>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk.2, 'g'^(~yy*~xx.1))),                                            h(<$cHash0.2,                                                <'PSK', 'PSK', $cSUITE0.2,                                                 'g'^(~yy*~xx.1*inv(~yy.1)), $U.2, $V.2>,                                                'g'^~yy.1>),                                            $cAEAD0.2),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk.2, 'g'^(~yy*~xx.1))),                 h(<$cHash0.3,                     h(<$cHash0.2,                        <'PSK', 'PSK', $cSUITE0.2, 'g'^(~yy*~xx.1*inv(~yy.1)), $U.2, $V.2                       >,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.2,                                             h(<$cHash0.2,                                                <'PSK', 'PSK', $cSUITE0.2,                                                 'g'^(~yy*~xx.1*inv(~yy.1)), $U.2, $V.2>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.2, 'g'^(~yy*~xx.1))),                                h(<$cHash0.2,                                    <'PSK', 'PSK', $cSUITE0.2, 'g'^(~yy*~xx.1*inv(~yy.1)), $U.2, $V.2                                   >,                                    'g'^~yy.1>),                                $cAEAD0.2),                     'emptyStr'>),                 $cAEAD0.3)) @ #vk.10
5: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                     'g'^(~yy*~xx.1*inv(~xx))>),                  'K_2ae'>,                hkdfExtract(~ltk, 'g'^(~yy*~xx.1)))) @ #vk.32
6: !KU( 'g'^~xx ) @ #vk.38
7: !KU( 'g'^~yy ) @ #vk.43
8: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^~xx.1, $U.1, $V.1>,                                 'g'^~yy>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~yy*~xx.1))),                 h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^~xx.1, $U.1, $V.1>,                     'g'^~yy>),                 $cAEAD0.1)) @ #vk.44
9: !KU( 'g'^~xx.1 ) @ #vk.21

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 81 (precomputed): !KU( ~yy ) @ #vk.47
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~yy ) @ #vk.46
1: !KU( ~xx ) @ #vk.48
2: !KU( 'g'^(~yy*~xx.1*inv(~yy.1)) ) @ #vk.28
3: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.3,                              h(<$cHash0.3,                                 h(<$cHash0.2,                                    <'PSK', 'PSK', $cSUITE0.2, 'g'^(~yy*~xx.1*inv(~yy.1)), $U.2, $V.2                                   >,                                    'g'^~yy.1>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0.2,                                                         h(<$cHash0.2,                                                            <'PSK', 'PSK', $cSUITE0.2,                                                             'g'^(~yy*~xx.1*inv(~yy.1)), $U.2, $V.2                                                           >,                                                            'g'^~yy.1>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk.2, 'g'^(~yy*~xx.1))),                                            h(<$cHash0.2,                                                <'PSK', 'PSK', $cSUITE0.2,                                                 'g'^(~yy*~xx.1*inv(~yy.1)), $U.2, $V.2>,                                                'g'^~yy.1>),                                            $cAEAD0.2),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk.2, 'g'^(~yy*~xx.1))),                 h(<$cHash0.3,                     h(<$cHash0.2,                        <'PSK', 'PSK', $cSUITE0.2, 'g'^(~yy*~xx.1*inv(~yy.1)), $U.2, $V.2                       >,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.2,                                             h(<$cHash0.2,                                                <'PSK', 'PSK', $cSUITE0.2,                                                 'g'^(~yy*~xx.1*inv(~yy.1)), $U.2, $V.2>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.2, 'g'^(~yy*~xx.1))),                                h(<$cHash0.2,                                    <'PSK', 'PSK', $cSUITE0.2, 'g'^(~yy*~xx.1*inv(~yy.1)), $U.2, $V.2                                   >,                                    'g'^~yy.1>),                                $cAEAD0.2),                     'emptyStr'>),                 $cAEAD0.3)) @ #vk.10
4: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                     'g'^(~yy*~xx.1*inv(~xx))>),                  'K_2ae'>,                hkdfExtract(~ltk, 'g'^(~yy*~xx.1)))) @ #vk.32
5: !KU( 'g'^~xx ) @ #vk.38
6: !KU( 'g'^~yy ) @ #vk.43
7: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^~xx.1, $U.1, $V.1>,                                 'g'^~yy>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~yy*~xx.1))),                 h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^~xx.1, $U.1, $V.1>,                     'g'^~yy>),                 $cAEAD0.1)) @ #vk.44
8: !KU( 'g'^~xx.1 ) @ #vk.21

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 80 (precomputed): !KU( ~yy ) @ #vk.46
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx.1 ) @ #vk.46
1: !KU( ~xx ) @ #vk.48
2: !KU( 'g'^(~yy*~xx.1*inv(~yy.1)) ) @ #vk.28
3: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.3,                              h(<$cHash0.3,                                 h(<$cHash0.2,                                    <'PSK', 'PSK', $cSUITE0.2, 'g'^(~yy*~xx.1*inv(~yy.1)), $U.2, $V.2                                   >,                                    'g'^~yy.1>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0.2,                                                         h(<$cHash0.2,                                                            <'PSK', 'PSK', $cSUITE0.2,                                                             'g'^(~yy*~xx.1*inv(~yy.1)), $U.2, $V.2                                                           >,                                                            'g'^~yy.1>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk.2, 'g'^(~yy*~xx.1))),                                            h(<$cHash0.2,                                                <'PSK', 'PSK', $cSUITE0.2,                                                 'g'^(~yy*~xx.1*inv(~yy.1)), $U.2, $V.2>,                                                'g'^~yy.1>),                                            $cAEAD0.2),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk.2, 'g'^(~yy*~xx.1))),                 h(<$cHash0.3,                     h(<$cHash0.2,                        <'PSK', 'PSK', $cSUITE0.2, 'g'^(~yy*~xx.1*inv(~yy.1)), $U.2, $V.2                       >,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.2,                                             h(<$cHash0.2,                                                <'PSK', 'PSK', $cSUITE0.2,                                                 'g'^(~yy*~xx.1*inv(~yy.1)), $U.2, $V.2>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.2, 'g'^(~yy*~xx.1))),                                h(<$cHash0.2,                                    <'PSK', 'PSK', $cSUITE0.2, 'g'^(~yy*~xx.1*inv(~yy.1)), $U.2, $V.2                                   >,                                    'g'^~yy.1>),                                $cAEAD0.2),                     'emptyStr'>),                 $cAEAD0.3)) @ #vk.10
4: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                     'g'^(~yy*~xx.1*inv(~xx))>),                  'K_2ae'>,                hkdfExtract(~ltk, 'g'^(~yy*~xx.1)))) @ #vk.32
5: !KU( 'g'^~xx ) @ #vk.38
6: !KU( 'g'^~yy ) @ #vk.43
7: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^~xx.1, $U.1, $V.1>,                                 'g'^~yy>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~yy*~xx.1))),                 h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^~xx.1, $U.1, $V.1>,                     'g'^~yy>),                 $cAEAD0.1)) @ #vk.44
8: !KU( 'g'^~xx.1 ) @ #vk.21

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 90 (precomputed): !KU( ~xx.1 ) @ #vk.46
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.4,                              h(<$cHash0.4,                                 h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                                    'g'^~yy.1>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0.3,                                                         h(<$cHash0.3,                                                            <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2,                                                             $V.2>,                                                            'g'^~yy.1>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk.2, impSk)),                                            h(<$cHash0.3,                                                <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                                                'g'^~yy.1>),                                            $cAEAD0.3),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk.2, impSk)),                 h(<$cHash0.4,                     h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.3,                                             h(<$cHash0.3,                                                <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.2, impSk)),                                h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                                    'g'^~yy.1>),                                $cAEAD0.3),                     'emptyStr'>),                 $cAEAD0.4)) @ #vk.14
1: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, gy>),                  'K_2ae'>,                hkdfExtract(~ltk, impSk))) @ #vk.37
2: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                      >),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                              >),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, impSk)),                                h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                  >),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, impSk))) @ #vk.47
3: splitEqs(0)
4: splitEqs(3)
5: splitEqs(4)
6: !KU( 'g'^~xx ) @ #vk.43
7: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                               >),                              'K_2ae'>,                            hkdfExtract(~ltk.1, impSk)),                 h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                   >),                 $cAEAD0.1)) @ #vk.51
8: !KU( 'g'^~yy ) @ #vk.54

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 19 (precomputed):
    !KU( aeadEncrypt('emptyStr',
                     hkdfExpand(<$cAEAD0.4, 
                                 h(<$cHash0.4, 
                                    h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>, 
                                       'g'^~yy.1>), 
                                    aeadEncrypt('emptyStr',
                                                hkdfExpand(<$cAEAD0.3, 
                                                            h(<$cHash0.3, 
                                                               <'PSK', 'PSK', $cSUITE0.2, gx.1, 
                                                                $U.2, $V.2>, 
                                                               'g'^~yy.1>), 
                                                            'K_2ae'>,
                                                           hkdfExtract(~ltk.2, impSk)),
                                                h(<$cHash0.3, 
                                                   <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>, 
                                                   'g'^~yy.1>),
                                                $cAEAD0.3), 
                                    'emptyStr'>), 
                                 'K_3ae'>,
                                hkdfExtract(~ltk.2, impSk)),
                     h(<$cHash0.4, 
                        h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>, 
                           'g'^~yy.1>), 
                        aeadEncrypt('emptyStr',
                                    hkdfExpand(<$cAEAD0.3, 
                                                h(<$cHash0.3, 
                                                   <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>, 
                                                   'g'^~yy.1>), 
                                                'K_2ae'>,
                                               hkdfExtract(~ltk.2, impSk)),
                                    h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>, 
                                       'g'^~yy.1>),
                                    $cAEAD0.3), 
                        'emptyStr'>),
                     $cAEAD0.4)
    ) @ #vk.14
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>,         'g'^~yy>)) @ #vk.49
1: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.4,                              h(<$cHash0.4,                                 h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                                    'g'^~yy.1>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0.3,                                                         h(<$cHash0.3,                                                            <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2,                                                             $V.2>,                                                            'g'^~yy.1>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk.2, impSk)),                                            h(<$cHash0.3,                                                <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                                                'g'^~yy.1>),                                            $cAEAD0.3),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk.2, impSk)),                 h(<$cHash0.4,                     h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.3,                                             h(<$cHash0.3,                                                <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.2, impSk)),                                h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                                    'g'^~yy.1>),                                $cAEAD0.3),                     'emptyStr'>),                 $cAEAD0.4)) @ #vk.12
2: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, gy>),                  'K_2ae'>,                hkdfExtract(~ltk, impSk))) @ #vk.34
3: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                      >),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                              >),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, impSk)),                                h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                  >),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, impSk))) @ #vk.44
4: splitEqs(0)
5: splitEqs(3)
6: splitEqs(4)
7: !KU( 'g'^~xx ) @ #vk.40
8: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                               >),                              'K_2ae'>,                            hkdfExtract(~ltk.1, impSk)),                 h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                   >),                 $cAEAD0.1)) @ #vk.50

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 78 (precomputed):
    !KU( h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 
            'g'^~yy>)
    ) @ #vk.49
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( h(<$cHash0.4,         h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,            'g'^~yy.1>),         aeadEncrypt('emptyStr',                    hkdfExpand(<$cAEAD0.3,                                 h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                                    'g'^~yy.1>),                                 'K_2ae'>,                               hkdfExtract(~ltk.2, impSk)),                    h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                        'g'^~yy.1>),                    $cAEAD0.3),         'emptyStr'>)) @ #vk.56
1: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, gy>),                  'K_2ae'>,                hkdfExtract(~ltk, impSk))) @ #vk.39
2: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                      >),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                              >),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, impSk)),                                h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                  >),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, impSk))) @ #vk.49
3: !KU( hkdfExpand(<$cAEAD0.4,                  h(<$cHash0.4,                     h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.3,                                             h(<$cHash0.3,                                                <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.2, impSk)),                                h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                                    'g'^~yy.1>),                                $cAEAD0.3),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.2, impSk))) @ #vk.55
4: splitEqs(0)
5: splitEqs(3)
6: splitEqs(4)
7: !KU( 'g'^~xx ) @ #vk.45
8: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                               >),                              'K_2ae'>,                            hkdfExtract(~ltk.1, impSk)),                 h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                   >),                 $cAEAD0.1)) @ #vk.52
9: !KU( 'g'^~yy ) @ #vk.54

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 101 (precomputed):
    !KU( h(<$cHash0.4, 
            h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>, 
               'g'^~yy.1>), 
            aeadEncrypt('emptyStr',
                        hkdfExpand(<$cAEAD0.3, 
                                    h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>, 
                                       'g'^~yy.1>), 
                                    'K_2ae'>,
                                   hkdfExtract(~ltk.2, impSk)),
                        h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>, 
                           'g'^~yy.1>),
                        $cAEAD0.3), 
            'emptyStr'>)
    ) @ #vk.56
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: splitEqs(0)
1: splitEqs(3)
2: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^x>),                  'K_2ae'>,                hkdfExtract(~ltk, 'g'^(~yy*~xx.1)))) @ #vk.39
3: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^x.1, $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^x.1, $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~yy*~xx.1))),                                h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^x.1, $U.1, $V.1>,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~yy*~xx.1)))) @ #vk.49
4: !KU( 'g'^x ) @ #vk.9
5: !KU( 'g'^x.1 ) @ #vk.28
6: !KU( 'g'^~xx ) @ #vk.45
7: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^x.1, $U.1, $V.1>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~yy*~xx.1))),                 h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^x.1, $U.1, $V.1>,                     'g'^~yy.1>),                 $cAEAD0.1)) @ #vk.52
8: !KU( 'g'^~yy.1 ) @ #vk.54
9: !KU( 'g'^~yy ) @ #vk.56
10: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.3,                              h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, 'g'^~xx.1, $U.2, $V.2>,                                 'g'^~yy>),                              'K_2ae'>,                            hkdfExtract(~ltk.2, 'g'^(~yy*~xx.1))),                 h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, 'g'^~xx.1, $U.2, $V.2>,                     'g'^~yy>),                 $cAEAD0.3)) @ #vk.57
11: !KU( 'g'^~xx.1 ) @ #vk.35

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 3 (directly): splitEqs(0)
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.4,                              h(<$cHash0.4,                                 h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                                    'g'^~yy.1>),                                 aeadEncrypt('emptyStr',                                            hkdfExpand(<$cAEAD0.3,                                                         h(<$cHash0.3,                                                            <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2,                                                             $V.2>,                                                            'g'^~yy.1>),                                                         'K_2ae'>,                                                       hkdfExtract(~ltk.2, impSk)),                                            h(<$cHash0.3,                                                <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                                                'g'^~yy.1>),                                            $cAEAD0.3),                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(~ltk.2, impSk)),                 h(<$cHash0.4,                     h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.3,                                             h(<$cHash0.3,                                                <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.2, impSk)),                                h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                                    'g'^~yy.1>),                                $cAEAD0.3),                     'emptyStr'>),                 $cAEAD0.4)) @ #vk.14
1: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, gy>),                  'K_2ae'>,                hkdfExtract(~ltk, impSk))) @ #vk.37
2: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                      >),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                              >),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, impSk)),                                h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                  >),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, impSk))) @ #vk.47
3: splitEqs(0)
4: splitEqs(3)
5: splitEqs(4)
6: !KU( 'g'^~xx ) @ #vk.43
7: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                               >),                              'K_2ae'>,                            hkdfExtract(~ltk.1, impSk)),                 h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                   >),                 $cAEAD0.1)) @ #vk.51
8: !KU( 'g'^~yy ) @ #vk.54

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 19 (precomputed):
    !KU( aeadEncrypt('emptyStr',
                     hkdfExpand(<$cAEAD0.4, 
                                 h(<$cHash0.4, 
                                    h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>, 
                                       'g'^~yy.1>), 
                                    aeadEncrypt('emptyStr',
                                                hkdfExpand(<$cAEAD0.3, 
                                                            h(<$cHash0.3, 
                                                               <'PSK', 'PSK', $cSUITE0.2, gx.1, 
                                                                $U.2, $V.2>, 
                                                               'g'^~yy.1>), 
                                                            'K_2ae'>,
                                                           hkdfExtract(~ltk.2, impSk)),
                                                h(<$cHash0.3, 
                                                   <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>, 
                                                   'g'^~yy.1>),
                                                $cAEAD0.3), 
                                    'emptyStr'>), 
                                 'K_3ae'>,
                                hkdfExtract(~ltk.2, impSk)),
                     h(<$cHash0.4, 
                        h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>, 
                           'g'^~yy.1>), 
                        aeadEncrypt('emptyStr',
                                    hkdfExpand(<$cAEAD0.3, 
                                                h(<$cHash0.3, 
                                                   <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>, 
                                                   'g'^~yy.1>), 
                                                'K_2ae'>,
                                               hkdfExtract(~ltk.2, impSk)),
                                    h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>, 
                                       'g'^~yy.1>),
                                    $cAEAD0.3), 
                        'emptyStr'>),
                     $cAEAD0.4)
    ) @ #vk.14
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( h(<$cHash0.4,         h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,            'g'^~yy.1>),         aeadEncrypt('emptyStr',                    hkdfExpand(<$cAEAD0.3,                                 h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                                    'g'^~yy.1>),                                 'K_2ae'>,                               hkdfExtract(~ltk.2, impSk)),                    h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                        'g'^~yy.1>),                    $cAEAD0.3),         'emptyStr'>)) @ #vk.56
1: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, gy>),                  'K_2ae'>,                hkdfExtract(~ltk, impSk))) @ #vk.39
2: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                      >),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                              >),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, impSk)),                                h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                  >),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, impSk))) @ #vk.49
3: !KU( hkdfExpand(<$cAEAD0.4,                  h(<$cHash0.4,                     h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.3,                                             h(<$cHash0.3,                                                <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.2, impSk)),                                h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                                    'g'^~yy.1>),                                $cAEAD0.3),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.2, impSk))) @ #vk.55
4: splitEqs(0)
5: splitEqs(3)
6: splitEqs(4)
7: !KU( 'g'^~xx ) @ #vk.45
8: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                               >),                              'K_2ae'>,                            hkdfExtract(~ltk.1, impSk)),                 h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                   >),                 $cAEAD0.1)) @ #vk.52
9: !KU( 'g'^~yy ) @ #vk.54

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 101 (precomputed):
    !KU( h(<$cHash0.4, 
            h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>, 
               'g'^~yy.1>), 
            aeadEncrypt('emptyStr',
                        hkdfExpand(<$cAEAD0.3, 
                                    h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>, 
                                       'g'^~yy.1>), 
                                    'K_2ae'>,
                                   hkdfExtract(~ltk.2, impSk)),
                        h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>, 
                           'g'^~yy.1>),
                        $cAEAD0.3), 
            'emptyStr'>)
    ) @ #vk.56
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: splitEqs(0)
1: splitEqs(3)
2: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^x>),                  'K_2ae'>,                hkdfExtract(~ltk, 'g'^(~yy*~xx.1)))) @ #vk.39
3: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^x.1, $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^x.1, $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~yy*~xx.1))),                                h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^x.1, $U.1, $V.1>,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~yy*~xx.1)))) @ #vk.49
4: !KU( 'g'^x ) @ #vk.9
5: !KU( 'g'^x.1 ) @ #vk.28
6: !KU( 'g'^~xx ) @ #vk.45
7: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^x.1, $U.1, $V.1>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~yy*~xx.1))),                 h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^x.1, $U.1, $V.1>,                     'g'^~yy.1>),                 $cAEAD0.1)) @ #vk.52
8: !KU( 'g'^~yy.1 ) @ #vk.54
9: !KU( 'g'^~yy ) @ #vk.56
10: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.3,                              h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, 'g'^~xx.1, $U.2, $V.2>,                                 'g'^~yy>),                              'K_2ae'>,                            hkdfExtract(~ltk.2, 'g'^(~yy*~xx.1))),                 h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, 'g'^~xx.1, $U.2, $V.2>,                     'g'^~yy>),                 $cAEAD0.3)) @ #vk.57
11: !KU( 'g'^~xx.1 ) @ #vk.35

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 2 (directly): splitEqs(0)
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: splitEqs(3)
1: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                  'K_2ae'>,                hkdfExtract(~ltk, 'g'^(~xx*~yy)))) @ #vk.37
2: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~xx*~yy)))) @ #vk.40
3: !KU( 'g'^x ) @ #vk.26
4: !KU( 'g'^~xx ) @ #vk.33
5: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                     'g'^~yy.1>),                 $cAEAD0.1)) @ #vk.43
6: !KU( 'g'^~yy.1 ) @ #vk.45
7: !KU( 'g'^~yy ) @ #vk.11

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 34 (directly): splitEqs(3)
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: splitEqs(3)
1: !KU( 'g'^(~yy*~xx.1*inv(~xx)) ) @ #vk.11
2: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                     'g'^(~yy*~xx.1*inv(~xx))>),                  'K_2ae'>,                hkdfExtract(~ltk, 'g'^(~yy*~xx.1)))) @ #vk.39
3: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~yy*~xx.1))),                                h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~yy*~xx.1)))) @ #vk.49
4: !KU( 'g'^x ) @ #vk.28
5: !KU( 'g'^~xx ) @ #vk.45
6: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~yy*~xx.1))),                 h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                     'g'^~yy.1>),                 $cAEAD0.1)) @ #vk.52
7: !KU( 'g'^~yy.1 ) @ #vk.54
8: !KU( 'g'^~yy ) @ #vk.56
9: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.3,                              h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, 'g'^~xx.1, $U.2, $V.2>,                                 'g'^~yy>),                              'K_2ae'>,                            hkdfExtract(~ltk.2, 'g'^(~yy*~xx.1))),                 h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, 'g'^~xx.1, $U.2, $V.2>,                     'g'^~yy>),                 $cAEAD0.3)) @ #vk.57
10: !KU( 'g'^~xx.1 ) @ #vk.35

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 34 (directly): splitEqs(3)
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( 'g'^(~xx*~yy*inv(~yy.1)) ) @ #vk.26
1: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                  'K_2ae'>,                hkdfExtract(~ltk, 'g'^(~xx*~yy)))) @ #vk.37
2: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~xx*~yy)))) @ #vk.40
3: !KU( 'g'^~xx ) @ #vk.33
4: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1,                                 <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.1,                     <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                     'g'^~yy.1>),                 $cAEAD0.1)) @ #vk.43
5: !KU( 'g'^~yy.1 ) @ #vk.45
6: !KU( 'g'^~yy ) @ #vk.11

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 105 (precomputed):
    !KU( 'g'^(~xx*~yy*inv(~yy.1)) ) @ #vk.26
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: splitEqs(3)
1: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                  'K_2ae'>,                hkdfExtract(~ltk, 'g'^(~xx*~yy)))) @ #vk.37
2: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~xx*~yy)))) @ #vk.40
3: !KU( 'g'^x ) @ #vk.26
4: !KU( 'g'^~xx ) @ #vk.33
5: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                     'g'^~yy.1>),                 $cAEAD0.1)) @ #vk.43
6: !KU( 'g'^~yy.1 ) @ #vk.45
7: !KU( 'g'^~yy ) @ #vk.11

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 34 (directly): splitEqs(3)
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: splitEqs(3)
1: !KU( 'g'^(~yy*~xx.1*inv(~xx)) ) @ #vk.11
2: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                     'g'^(~yy*~xx.1*inv(~xx))>),                  'K_2ae'>,                hkdfExtract(~ltk, 'g'^(~yy*~xx.1)))) @ #vk.39
3: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~yy*~xx.1))),                                h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~yy*~xx.1)))) @ #vk.49
4: !KU( 'g'^x ) @ #vk.28
5: !KU( 'g'^~xx ) @ #vk.45
6: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~yy*~xx.1))),                 h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                     'g'^~yy.1>),                 $cAEAD0.1)) @ #vk.52
7: !KU( 'g'^~yy.1 ) @ #vk.54
8: !KU( 'g'^~yy ) @ #vk.56
9: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.3,                              h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, 'g'^~xx.1, $U.2, $V.2>,                                 'g'^~yy>),                              'K_2ae'>,                            hkdfExtract(~ltk.2, 'g'^(~yy*~xx.1))),                 h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, 'g'^~xx.1, $U.2, $V.2>,                     'g'^~yy>),                 $cAEAD0.3)) @ #vk.57
10: !KU( 'g'^~xx.1 ) @ #vk.35

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 34 (directly): splitEqs(3)
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.47
1: !KU( ~yy.1 ) @ #vk.49
2: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                  'K_2ae'>,                hkdfExtract(~ltk, 'g'^(~xx*~yy)))) @ #vk.37
3: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~xx*~yy)))) @ #vk.40
4: !KU( 'g'^~xx ) @ #vk.33
5: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1,                                 <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.1,                     <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                     'g'^~yy.1>),                 $cAEAD0.1)) @ #vk.43
6: !KU( 'g'^~yy.1 ) @ #vk.45
7: !KU( 'g'^~yy ) @ #vk.12

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.48
1: !KU( ~yy ) @ #vk.49
2: !KU( ~yy.1 ) @ #vk.51
3: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                  'K_2ae'>,                hkdfExtract(~ltk, 'g'^(~xx*~yy)))) @ #vk.37
4: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~xx*~yy)))) @ #vk.40
5: !KU( 'g'^~xx ) @ #vk.33
6: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1,                                 <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.1,                     <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                     'g'^~yy.1>),                 $cAEAD0.1)) @ #vk.43
7: !KU( 'g'^~yy.1 ) @ #vk.45
8: !KU( 'g'^~yy ) @ #vk.12

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 119 (precomputed): !KU( ~xx ) @ #vk.47
  solved goal nr. 110 (precomputed): !KU( ~xx ) @ #vk.48
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( 'g'^(~xx*~yy*inv(~yy.1)) ) @ #vk.26
1: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                  'K_2ae'>,                hkdfExtract(~ltk, 'g'^(~xx*~yy)))) @ #vk.37
2: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~xx*~yy)))) @ #vk.40
3: !KU( 'g'^~xx ) @ #vk.33
4: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1,                                 <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.1,                     <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                     'g'^~yy.1>),                 $cAEAD0.1)) @ #vk.43
5: !KU( 'g'^~yy.1 ) @ #vk.45
6: !KU( 'g'^~yy ) @ #vk.11

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 105 (precomputed):
    !KU( 'g'^(~xx*~yy*inv(~yy.1)) ) @ #vk.26
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~yy ) @ #vk.47
1: !KU( ~yy.1 ) @ #vk.49
2: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                  'K_2ae'>,                hkdfExtract(~ltk, 'g'^(~xx*~yy)))) @ #vk.37
3: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~xx*~yy)))) @ #vk.40
4: !KU( 'g'^~xx ) @ #vk.33
5: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1,                                 <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.1,                     <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                     'g'^~yy.1>),                 $cAEAD0.1)) @ #vk.43
6: !KU( 'g'^~yy.1 ) @ #vk.45
7: !KU( 'g'^~yy ) @ #vk.12

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 109 (precomputed): !KU( ~yy ) @ #vk.47
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( 'g'^(~yy*~xx.1*inv(~xx)) ) @ #vk.11
1: !KU( 'g'^(~yy*~xx.1*inv(~yy.1)) ) @ #vk.28
2: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                     'g'^(~yy*~xx.1*inv(~xx))>),                  'K_2ae'>,                hkdfExtract(~ltk, 'g'^(~yy*~xx.1)))) @ #vk.39
3: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~yy*~xx.1*inv(~yy.1)), $U.1, $V.1                       >,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1,                                                 'g'^(~yy*~xx.1*inv(~yy.1)), $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~yy*~xx.1))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~yy*~xx.1*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~yy*~xx.1)))) @ #vk.49
4: !KU( 'g'^~xx ) @ #vk.45
5: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1,                                 <'PSK', 'PSK', $cSUITE0.1, 'g'^(~yy*~xx.1*inv(~yy.1)), $U.1, $V.1                                >,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~yy*~xx.1))),                 h(<$cHash0.1,                     <'PSK', 'PSK', $cSUITE0.1, 'g'^(~yy*~xx.1*inv(~yy.1)), $U.1, $V.1                    >,                     'g'^~yy.1>),                 $cAEAD0.1)) @ #vk.52
6: !KU( 'g'^~yy.1 ) @ #vk.54
7: !KU( 'g'^~yy ) @ #vk.56
8: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.3,                              h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, 'g'^~xx.1, $U.2, $V.2>,                                 'g'^~yy>),                              'K_2ae'>,                            hkdfExtract(~ltk.2, 'g'^(~yy*~xx.1))),                 h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, 'g'^~xx.1, $U.2, $V.2>,                     'g'^~yy>),                 $cAEAD0.3)) @ #vk.57
9: !KU( 'g'^~xx.1 ) @ #vk.35

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 104 (precomputed):
    !KU( 'g'^(~yy*~xx.1*inv(~xx)) ) @ #vk.11
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.48
1: !KU( ~yy ) @ #vk.49
2: !KU( ~yy.1 ) @ #vk.51
3: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                  'K_2ae'>,                hkdfExtract(~ltk, 'g'^(~xx*~yy)))) @ #vk.37
4: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~xx*~yy)))) @ #vk.40
5: !KU( 'g'^~xx ) @ #vk.33
6: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1,                                 <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.1,                     <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                     'g'^~yy.1>),                 $cAEAD0.1)) @ #vk.43
7: !KU( 'g'^~yy.1 ) @ #vk.45
8: !KU( 'g'^~yy ) @ #vk.12

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 110 (precomputed): !KU( ~xx ) @ #vk.48
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.47
1: !KU( ~yy.1 ) @ #vk.49
2: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                  'K_2ae'>,                hkdfExtract(~ltk, 'g'^(~xx*~yy)))) @ #vk.37
3: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~xx*~yy)))) @ #vk.40
4: !KU( 'g'^~xx ) @ #vk.33
5: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1,                                 <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.1,                     <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                     'g'^~yy.1>),                 $cAEAD0.1)) @ #vk.43
6: !KU( 'g'^~yy.1 ) @ #vk.45
7: !KU( 'g'^~yy ) @ #vk.12

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 119 (precomputed): !KU( ~xx ) @ #vk.47
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~yy ) @ #vk.47
1: !KU( ~yy.1 ) @ #vk.49
2: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                  'K_2ae'>,                hkdfExtract(~ltk, 'g'^(~xx*~yy)))) @ #vk.37
3: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~xx*~yy)))) @ #vk.40
4: !KU( 'g'^~xx ) @ #vk.33
5: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1,                                 <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.1,                     <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                     'g'^~yy.1>),                 $cAEAD0.1)) @ #vk.43
6: !KU( 'g'^~yy.1 ) @ #vk.45
7: !KU( 'g'^~yy ) @ #vk.12

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 109 (precomputed): !KU( ~yy ) @ #vk.47
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( 'g'^(~yy*~xx.1*inv(~xx)) ) @ #vk.11
1: !KU( 'g'^(~yy*~xx.1*inv(~yy.1)) ) @ #vk.28
2: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                     'g'^(~yy*~xx.1*inv(~xx))>),                  'K_2ae'>,                hkdfExtract(~ltk, 'g'^(~yy*~xx.1)))) @ #vk.39
3: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~yy*~xx.1*inv(~yy.1)), $U.1, $V.1                       >,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1,                                                 'g'^(~yy*~xx.1*inv(~yy.1)), $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~yy*~xx.1))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~yy*~xx.1*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~yy*~xx.1)))) @ #vk.49
4: !KU( 'g'^~xx ) @ #vk.45
5: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1,                                 <'PSK', 'PSK', $cSUITE0.1, 'g'^(~yy*~xx.1*inv(~yy.1)), $U.1, $V.1                                >,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~yy*~xx.1))),                 h(<$cHash0.1,                     <'PSK', 'PSK', $cSUITE0.1, 'g'^(~yy*~xx.1*inv(~yy.1)), $U.1, $V.1                    >,                     'g'^~yy.1>),                 $cAEAD0.1)) @ #vk.52
6: !KU( 'g'^~yy.1 ) @ #vk.54
7: !KU( 'g'^~yy ) @ #vk.56
8: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.3,                              h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, 'g'^~xx.1, $U.2, $V.2>,                                 'g'^~yy>),                              'K_2ae'>,                            hkdfExtract(~ltk.2, 'g'^(~yy*~xx.1))),                 h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, 'g'^~xx.1, $U.2, $V.2>,                     'g'^~yy>),                 $cAEAD0.3)) @ #vk.57
9: !KU( 'g'^~xx.1 ) @ #vk.35

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 104 (precomputed):
    !KU( 'g'^(~yy*~xx.1*inv(~xx)) ) @ #vk.11
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx.1 ) @ #vk.59
1: !KU( ~xx ) @ #vk.61
2: !KU( 'g'^(~yy*~xx.1*inv(~yy.1)) ) @ #vk.28
3: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                     'g'^(~yy*~xx.1*inv(~xx))>),                  'K_2ae'>,                hkdfExtract(~ltk, 'g'^(~yy*~xx.1)))) @ #vk.39
4: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~yy*~xx.1*inv(~yy.1)), $U.1, $V.1                       >,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1,                                                 'g'^(~yy*~xx.1*inv(~yy.1)), $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~yy*~xx.1))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~yy*~xx.1*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~yy*~xx.1)))) @ #vk.49
5: !KU( 'g'^~xx ) @ #vk.45
6: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1,                                 <'PSK', 'PSK', $cSUITE0.1, 'g'^(~yy*~xx.1*inv(~yy.1)), $U.1, $V.1                                >,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~yy*~xx.1))),                 h(<$cHash0.1,                     <'PSK', 'PSK', $cSUITE0.1, 'g'^(~yy*~xx.1*inv(~yy.1)), $U.1, $V.1                    >,                     'g'^~yy.1>),                 $cAEAD0.1)) @ #vk.52
7: !KU( 'g'^~yy.1 ) @ #vk.54
8: !KU( 'g'^~yy ) @ #vk.56
9: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.3,                              h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, 'g'^~xx.1, $U.2, $V.2>,                                 'g'^~yy>),                              'K_2ae'>,                            hkdfExtract(~ltk.2, 'g'^(~yy*~xx.1))),                 h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, 'g'^~xx.1, $U.2, $V.2>,                     'g'^~yy>),                 $cAEAD0.3)) @ #vk.57
10: !KU( 'g'^~xx.1 ) @ #vk.35

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 119 (precomputed): !KU( ~xx.1 ) @ #vk.59
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~yy ) @ #vk.59
1: !KU( ~xx ) @ #vk.61
2: !KU( 'g'^(~yy*~xx.1*inv(~yy.1)) ) @ #vk.28
3: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                     'g'^(~yy*~xx.1*inv(~xx))>),                  'K_2ae'>,                hkdfExtract(~ltk, 'g'^(~yy*~xx.1)))) @ #vk.39
4: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~yy*~xx.1*inv(~yy.1)), $U.1, $V.1                       >,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1,                                                 'g'^(~yy*~xx.1*inv(~yy.1)), $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~yy*~xx.1))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~yy*~xx.1*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~yy*~xx.1)))) @ #vk.49
5: !KU( 'g'^~xx ) @ #vk.45
6: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1,                                 <'PSK', 'PSK', $cSUITE0.1, 'g'^(~yy*~xx.1*inv(~yy.1)), $U.1, $V.1                                >,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~yy*~xx.1))),                 h(<$cHash0.1,                     <'PSK', 'PSK', $cSUITE0.1, 'g'^(~yy*~xx.1*inv(~yy.1)), $U.1, $V.1                    >,                     'g'^~yy.1>),                 $cAEAD0.1)) @ #vk.52
7: !KU( 'g'^~yy.1 ) @ #vk.54
8: !KU( 'g'^~yy ) @ #vk.56
9: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.3,                              h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, 'g'^~xx.1, $U.2, $V.2>,                                 'g'^~yy>),                              'K_2ae'>,                            hkdfExtract(~ltk.2, 'g'^(~yy*~xx.1))),                 h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, 'g'^~xx.1, $U.2, $V.2>,                     'g'^~yy>),                 $cAEAD0.3)) @ #vk.57
10: !KU( 'g'^~xx.1 ) @ #vk.35

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 109 (precomputed): !KU( ~yy ) @ #vk.59
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~yy ) @ #vk.60
1: !KU( ~xx.1 ) @ #vk.61
2: !KU( ~xx ) @ #vk.63
3: !KU( 'g'^(~yy*~xx.1*inv(~yy.1)) ) @ #vk.28
4: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                     'g'^(~yy*~xx.1*inv(~xx))>),                  'K_2ae'>,                hkdfExtract(~ltk, 'g'^(~yy*~xx.1)))) @ #vk.39
5: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~yy*~xx.1*inv(~yy.1)), $U.1, $V.1                       >,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1,                                                 'g'^(~yy*~xx.1*inv(~yy.1)), $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~yy*~xx.1))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~yy*~xx.1*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~yy*~xx.1)))) @ #vk.49
6: !KU( 'g'^~xx ) @ #vk.45
7: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1,                                 <'PSK', 'PSK', $cSUITE0.1, 'g'^(~yy*~xx.1*inv(~yy.1)), $U.1, $V.1                                >,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~yy*~xx.1))),                 h(<$cHash0.1,                     <'PSK', 'PSK', $cSUITE0.1, 'g'^(~yy*~xx.1*inv(~yy.1)), $U.1, $V.1                    >,                     'g'^~yy.1>),                 $cAEAD0.1)) @ #vk.52
8: !KU( 'g'^~yy.1 ) @ #vk.54
9: !KU( 'g'^~yy ) @ #vk.56
10: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.3,                              h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, 'g'^~xx.1, $U.2, $V.2>,                                 'g'^~yy>),                              'K_2ae'>,                            hkdfExtract(~ltk.2, 'g'^(~yy*~xx.1))),                 h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, 'g'^~xx.1, $U.2, $V.2>,                     'g'^~yy>),                 $cAEAD0.3)) @ #vk.57
11: !KU( 'g'^~xx.1 ) @ #vk.35

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 110 (precomputed): !KU( ~yy ) @ #vk.60
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,         'g'^~yy.1>)) @ #vk.62
1: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, gy>),                  'K_2ae'>,                hkdfExtract(~ltk, impSk))) @ #vk.41
2: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                      >),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                              >),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, impSk)),                                h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                  >),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, impSk))) @ #vk.51
3: !KU( hkdfExpand(<$cAEAD0.4,                  h(<$cHash0.4,                     h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.3,                                             h(<$cHash0.3,                                                <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.2, impSk)),                                h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                                    'g'^~yy.1>),                                $cAEAD0.3),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.2, impSk))) @ #vk.57
4: splitEqs(0)
5: splitEqs(3)
6: splitEqs(4)
7: !KU( 'g'^~xx ) @ #vk.47
8: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                               >),                              'K_2ae'>,                            hkdfExtract(~ltk.1, impSk)),                 h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                   >),                 $cAEAD0.1)) @ #vk.54
9: !KU( 'g'^~yy ) @ #vk.56
10: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.3,                              h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.2, impSk)),                 h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                     'g'^~yy.1>),                 $cAEAD0.3)) @ #vk.63

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 107 (precomputed):
    !KU( h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>, 
            'g'^~yy.1>)
    ) @ #vk.62
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~yy ) @ #vk.60
1: !KU( ~xx.1 ) @ #vk.61
2: !KU( ~xx ) @ #vk.63
3: !KU( 'g'^(~yy*~xx.1*inv(~yy.1)) ) @ #vk.28
4: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                     'g'^(~yy*~xx.1*inv(~xx))>),                  'K_2ae'>,                hkdfExtract(~ltk, 'g'^(~yy*~xx.1)))) @ #vk.39
5: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~yy*~xx.1*inv(~yy.1)), $U.1, $V.1                       >,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1,                                                 'g'^(~yy*~xx.1*inv(~yy.1)), $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~yy*~xx.1))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~yy*~xx.1*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~yy*~xx.1)))) @ #vk.49
6: !KU( 'g'^~xx ) @ #vk.45
7: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1,                                 <'PSK', 'PSK', $cSUITE0.1, 'g'^(~yy*~xx.1*inv(~yy.1)), $U.1, $V.1                                >,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~yy*~xx.1))),                 h(<$cHash0.1,                     <'PSK', 'PSK', $cSUITE0.1, 'g'^(~yy*~xx.1*inv(~yy.1)), $U.1, $V.1                    >,                     'g'^~yy.1>),                 $cAEAD0.1)) @ #vk.52
8: !KU( 'g'^~yy.1 ) @ #vk.54
9: !KU( 'g'^~yy ) @ #vk.56
10: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.3,                              h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, 'g'^~xx.1, $U.2, $V.2>,                                 'g'^~yy>),                              'K_2ae'>,                            hkdfExtract(~ltk.2, 'g'^(~yy*~xx.1))),                 h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, 'g'^~xx.1, $U.2, $V.2>,                     'g'^~yy>),                 $cAEAD0.3)) @ #vk.57
11: !KU( 'g'^~xx.1 ) @ #vk.35

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 110 (precomputed): !KU( ~yy ) @ #vk.60
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~yy ) @ #vk.59
1: !KU( ~xx ) @ #vk.61
2: !KU( 'g'^(~yy*~xx.1*inv(~yy.1)) ) @ #vk.28
3: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                     'g'^(~yy*~xx.1*inv(~xx))>),                  'K_2ae'>,                hkdfExtract(~ltk, 'g'^(~yy*~xx.1)))) @ #vk.39
4: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~yy*~xx.1*inv(~yy.1)), $U.1, $V.1                       >,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1,                                                 'g'^(~yy*~xx.1*inv(~yy.1)), $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~yy*~xx.1))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~yy*~xx.1*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~yy*~xx.1)))) @ #vk.49
5: !KU( 'g'^~xx ) @ #vk.45
6: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1,                                 <'PSK', 'PSK', $cSUITE0.1, 'g'^(~yy*~xx.1*inv(~yy.1)), $U.1, $V.1                                >,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~yy*~xx.1))),                 h(<$cHash0.1,                     <'PSK', 'PSK', $cSUITE0.1, 'g'^(~yy*~xx.1*inv(~yy.1)), $U.1, $V.1                    >,                     'g'^~yy.1>),                 $cAEAD0.1)) @ #vk.52
7: !KU( 'g'^~yy.1 ) @ #vk.54
8: !KU( 'g'^~yy ) @ #vk.56
9: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.3,                              h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, 'g'^~xx.1, $U.2, $V.2>,                                 'g'^~yy>),                              'K_2ae'>,                            hkdfExtract(~ltk.2, 'g'^(~yy*~xx.1))),                 h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, 'g'^~xx.1, $U.2, $V.2>,                     'g'^~yy>),                 $cAEAD0.3)) @ #vk.57
10: !KU( 'g'^~xx.1 ) @ #vk.35

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 109 (precomputed): !KU( ~yy ) @ #vk.59
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx.1 ) @ #vk.59
1: !KU( ~xx ) @ #vk.61
2: !KU( 'g'^(~yy*~xx.1*inv(~yy.1)) ) @ #vk.28
3: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                     'g'^(~yy*~xx.1*inv(~xx))>),                  'K_2ae'>,                hkdfExtract(~ltk, 'g'^(~yy*~xx.1)))) @ #vk.39
4: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~yy*~xx.1*inv(~yy.1)), $U.1, $V.1                       >,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1,                                                 'g'^(~yy*~xx.1*inv(~yy.1)), $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~yy*~xx.1))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~yy*~xx.1*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~yy*~xx.1)))) @ #vk.49
5: !KU( 'g'^~xx ) @ #vk.45
6: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1,                                 <'PSK', 'PSK', $cSUITE0.1, 'g'^(~yy*~xx.1*inv(~yy.1)), $U.1, $V.1                                >,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~yy*~xx.1))),                 h(<$cHash0.1,                     <'PSK', 'PSK', $cSUITE0.1, 'g'^(~yy*~xx.1*inv(~yy.1)), $U.1, $V.1                    >,                     'g'^~yy.1>),                 $cAEAD0.1)) @ #vk.52
7: !KU( 'g'^~yy.1 ) @ #vk.54
8: !KU( 'g'^~yy ) @ #vk.56
9: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.3,                              h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, 'g'^~xx.1, $U.2, $V.2>,                                 'g'^~yy>),                              'K_2ae'>,                            hkdfExtract(~ltk.2, 'g'^(~yy*~xx.1))),                 h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, 'g'^~xx.1, $U.2, $V.2>,                     'g'^~yy>),                 $cAEAD0.3)) @ #vk.57
10: !KU( 'g'^~xx.1 ) @ #vk.35

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 119 (precomputed): !KU( ~xx.1 ) @ #vk.59
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, gy>),                  'K_2ae'>,                hkdfExtract(~ltk, impSk))) @ #vk.44
1: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                      >),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                              >),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, impSk)),                                h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                  >),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, impSk))) @ #vk.54
2: !KU( hkdfExpand(<$cAEAD0.4,                  h(<$cHash0.4,                     h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.3,                                             h(<$cHash0.3,                                                <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.2, impSk)),                                h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                                    'g'^~yy.1>),                                $cAEAD0.3),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.2, impSk))) @ #vk.60
3: splitEqs(0)
4: splitEqs(3)
5: splitEqs(4)
6: !KU( 'g'^~xx ) @ #vk.50
7: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                               >),                              'K_2ae'>,                            hkdfExtract(~ltk.1, impSk)),                 h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                   >),                 $cAEAD0.1)) @ #vk.57
8: !KU( 'g'^~yy ) @ #vk.59
9: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.3,                              h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.2, impSk)),                 h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                     'g'^~yy.1>),                 $cAEAD0.3)) @ #vk.64
10: !KU( 'g'^~yy.1 ) @ #vk.67

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 50 (precomputed):
    !KU( hkdfExpand(<$cAEAD0, 
                     h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, gy>), 
                     'K_2ae'>,
                    hkdfExtract(~ltk, impSk))
    ) @ #vk.44
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,         'g'^~yy.1>)) @ #vk.62
1: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, gy>),                  'K_2ae'>,                hkdfExtract(~ltk, impSk))) @ #vk.41
2: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                      >),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                              >),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, impSk)),                                h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                  >),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, impSk))) @ #vk.51
3: !KU( hkdfExpand(<$cAEAD0.4,                  h(<$cHash0.4,                     h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.3,                                             h(<$cHash0.3,                                                <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.2, impSk)),                                h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                                    'g'^~yy.1>),                                $cAEAD0.3),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.2, impSk))) @ #vk.57
4: splitEqs(0)
5: splitEqs(3)
6: splitEqs(4)
7: !KU( 'g'^~xx ) @ #vk.47
8: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                               >),                              'K_2ae'>,                            hkdfExtract(~ltk.1, impSk)),                 h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                   >),                 $cAEAD0.1)) @ #vk.54
9: !KU( 'g'^~yy ) @ #vk.56
10: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.3,                              h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.2, impSk)),                 h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                     'g'^~yy.1>),                 $cAEAD0.3)) @ #vk.63

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 107 (precomputed):
    !KU( h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>, 
            'g'^~yy.1>)
    ) @ #vk.62
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, gy>),                  'K_2ae'>,                hkdfExtract(~ltk, impSk))) @ #vk.44
1: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                      >),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                              >),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, impSk)),                                h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                  >),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, impSk))) @ #vk.54
2: !KU( hkdfExpand(<$cAEAD0.4,                  h(<$cHash0.4,                     h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.3,                                             h(<$cHash0.3,                                                <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.2, impSk)),                                h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                                    'g'^~yy.1>),                                $cAEAD0.3),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.2, impSk))) @ #vk.60
3: splitEqs(0)
4: splitEqs(3)
5: splitEqs(4)
6: !KU( 'g'^~xx ) @ #vk.50
7: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                               >),                              'K_2ae'>,                            hkdfExtract(~ltk.1, impSk)),                 h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                   >),                 $cAEAD0.1)) @ #vk.57
8: !KU( 'g'^~yy ) @ #vk.59
9: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.3,                              h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.2, impSk)),                 h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                     'g'^~yy.1>),                 $cAEAD0.3)) @ #vk.64
10: !KU( 'g'^~yy.1 ) @ #vk.67

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 50 (precomputed):
    !KU( hkdfExpand(<$cAEAD0, 
                     h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, gy>), 
                     'K_2ae'>,
                    hkdfExtract(~ltk, impSk))
    ) @ #vk.44
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( hkdfExtract(~ltk, impSk) ) @ #vk.70
1: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                      >),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                              >),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, impSk)),                                h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                  >),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, impSk))) @ #vk.58
2: !KU( hkdfExpand(<$cAEAD0.4,                  h(<$cHash0.4,                     h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.3,                                             h(<$cHash0.3,                                                <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.2, impSk)),                                h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                                    'g'^~yy.1>),                                $cAEAD0.3),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.2, impSk))) @ #vk.64
3: splitEqs(0)
4: splitEqs(3)
5: splitEqs(4)
6: !KU( 'g'^~xx ) @ #vk.54
7: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                               >),                              'K_2ae'>,                            hkdfExtract(~ltk.1, impSk)),                 h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                   >),                 $cAEAD0.1)) @ #vk.61
8: !KU( 'g'^~yy ) @ #vk.63
9: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.3,                              h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.2, impSk)),                 h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                     'g'^~yy.1>),                 $cAEAD0.3)) @ #vk.67
10: !KU( 'g'^~yy.1 ) @ #vk.69

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 129 (precomputed):
    !KU( hkdfExtract(~ltk, impSk) ) @ #vk.70
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: splitEqs(3)
1: splitEqs(4)
2: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~xx*~yy)))) @ #vk.56
3: !KU( hkdfExpand(<$cAEAD0.4,                  h(<$cHash0.4,                     h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, 'g'^x.1, $U.2, $V.2>,                        'g'^~yy.2>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.3,                                             h(<$cHash0.3,                                                <'PSK', 'PSK', $cSUITE0.2, 'g'^x.1, $U.2, $V.2>,                                                'g'^~yy.2>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.2, 'g'^(~xx*~yy))),                                h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, 'g'^x.1, $U.2, $V.2>,                                    'g'^~yy.2>),                                $cAEAD0.3),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.2, 'g'^(~xx*~yy)))) @ #vk.62
4: !KU( 'g'^x ) @ #vk.36
5: !KU( 'g'^x.1 ) @ #vk.43
6: !KU( 'g'^~xx ) @ #vk.52
7: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                     'g'^~yy.1>),                 $cAEAD0.1)) @ #vk.59
8: !KU( 'g'^~yy.1 ) @ #vk.61
9: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.3,                              h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, 'g'^x.1, $U.2, $V.2>,                                 'g'^~yy.2>),                              'K_2ae'>,                            hkdfExtract(~ltk.2, 'g'^(~xx*~yy))),                 h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, 'g'^x.1, $U.2, $V.2>,                     'g'^~yy.2>),                 $cAEAD0.3)) @ #vk.65
10: !KU( 'g'^~yy.2 ) @ #vk.67
11: !KU( 'g'^~yy ) @ #vk.15

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 34 (directly): splitEqs(3)
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: splitEqs(3)
1: splitEqs(4)
2: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~xx*~yy)))) @ #vk.56
3: !KU( hkdfExpand(<$cAEAD0.4,                  h(<$cHash0.4,                     h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, 'g'^x.1, $U.2, $V.2>,                        'g'^~yy.2>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.3,                                             h(<$cHash0.3,                                                <'PSK', 'PSK', $cSUITE0.2, 'g'^x.1, $U.2, $V.2>,                                                'g'^~yy.2>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.2, 'g'^(~xx*~yy))),                                h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, 'g'^x.1, $U.2, $V.2>,                                    'g'^~yy.2>),                                $cAEAD0.3),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.2, 'g'^(~xx*~yy)))) @ #vk.62
4: !KU( 'g'^x ) @ #vk.36
5: !KU( 'g'^x.1 ) @ #vk.43
6: !KU( 'g'^~xx ) @ #vk.52
7: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                     'g'^~yy.1>),                 $cAEAD0.1)) @ #vk.59
8: !KU( 'g'^~yy.1 ) @ #vk.61
9: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.3,                              h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, 'g'^x.1, $U.2, $V.2>,                                 'g'^~yy.2>),                              'K_2ae'>,                            hkdfExtract(~ltk.2, 'g'^(~xx*~yy))),                 h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, 'g'^x.1, $U.2, $V.2>,                     'g'^~yy.2>),                 $cAEAD0.3)) @ #vk.65
10: !KU( 'g'^~yy.2 ) @ #vk.67
11: !KU( 'g'^~yy ) @ #vk.15

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 34 (directly): splitEqs(3)
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: splitEqs(3)
1: splitEqs(4)
2: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~xx*~yy)))) @ #vk.56
3: !KU( hkdfExpand(<$cAEAD0.4,                  h(<$cHash0.4,                     h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, 'g'^x.1, $U.2, $V.2>,                        'g'^~yy.2>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.3,                                             h(<$cHash0.3,                                                <'PSK', 'PSK', $cSUITE0.2, 'g'^x.1, $U.2, $V.2>,                                                'g'^~yy.2>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.2, 'g'^(~xx*~yy))),                                h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, 'g'^x.1, $U.2, $V.2>,                                    'g'^~yy.2>),                                $cAEAD0.3),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.2, 'g'^(~xx*~yy)))) @ #vk.62
4: !KU( 'g'^x ) @ #vk.36
5: !KU( 'g'^x.1 ) @ #vk.43
6: !KU( 'g'^~xx ) @ #vk.52
7: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                     'g'^~yy.1>),                 $cAEAD0.1)) @ #vk.59
8: !KU( 'g'^~yy.1 ) @ #vk.61
9: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.3,                              h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, 'g'^x.1, $U.2, $V.2>,                                 'g'^~yy.2>),                              'K_2ae'>,                            hkdfExtract(~ltk.2, 'g'^(~xx*~yy))),                 h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, 'g'^x.1, $U.2, $V.2>,                     'g'^~yy.2>),                 $cAEAD0.3)) @ #vk.65
10: !KU( 'g'^~yy.2 ) @ #vk.67
11: !KU( 'g'^~yy ) @ #vk.15

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: splitEqs(3)
1: splitEqs(4)
2: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~xx*~yy)))) @ #vk.56
3: !KU( hkdfExpand(<$cAEAD0.4,                  h(<$cHash0.4,                     h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, 'g'^x.1, $U.2, $V.2>,                        'g'^~yy.2>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.3,                                             h(<$cHash0.3,                                                <'PSK', 'PSK', $cSUITE0.2, 'g'^x.1, $U.2, $V.2>,                                                'g'^~yy.2>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.2, 'g'^(~xx*~yy))),                                h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, 'g'^x.1, $U.2, $V.2>,                                    'g'^~yy.2>),                                $cAEAD0.3),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.2, 'g'^(~xx*~yy)))) @ #vk.62
4: !KU( 'g'^x ) @ #vk.36
5: !KU( 'g'^x.1 ) @ #vk.43
6: !KU( 'g'^~xx ) @ #vk.52
7: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                     'g'^~yy.1>),                 $cAEAD0.1)) @ #vk.59
8: !KU( 'g'^~yy.1 ) @ #vk.61
9: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.3,                              h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, 'g'^x.1, $U.2, $V.2>,                                 'g'^~yy.2>),                              'K_2ae'>,                            hkdfExtract(~ltk.2, 'g'^(~xx*~yy))),                 h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, 'g'^x.1, $U.2, $V.2>,                     'g'^~yy.2>),                 $cAEAD0.3)) @ #vk.65
10: !KU( 'g'^~yy.2 ) @ #vk.67
11: !KU( 'g'^~yy ) @ #vk.15

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 34 (directly): splitEqs(3)
  solved goal nr. 34 (directly): splitEqs(3)
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( hkdfExtract(~ltk, impSk) ) @ #vk.70
1: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                      >),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                              >),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, impSk)),                                h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                  >),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, impSk))) @ #vk.58
2: !KU( hkdfExpand(<$cAEAD0.4,                  h(<$cHash0.4,                     h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.3,                                             h(<$cHash0.3,                                                <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.2, impSk)),                                h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                                    'g'^~yy.1>),                                $cAEAD0.3),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.2, impSk))) @ #vk.64
3: splitEqs(0)
4: splitEqs(3)
5: splitEqs(4)
6: !KU( 'g'^~xx ) @ #vk.54
7: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                               >),                              'K_2ae'>,                            hkdfExtract(~ltk.1, impSk)),                 h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                   >),                 $cAEAD0.1)) @ #vk.61
8: !KU( 'g'^~yy ) @ #vk.63
9: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.3,                              h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.2, impSk)),                 h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                     'g'^~yy.1>),                 $cAEAD0.3)) @ #vk.67
10: !KU( 'g'^~yy.1 ) @ #vk.69

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 129 (precomputed):
    !KU( hkdfExtract(~ltk, impSk) ) @ #vk.70
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( 'g'^(~xx*~yy) ) @ #vk.9
1: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                  'K_2ae'>,                hkdfExtract(~ltk, 'g'^(~xx*~yy)))) @ #vk.20
2: !KU( 'g'^~xx ) @ #vk.16
3: !KU( 'g'^~yy ) @ #vk.5

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 59 (precomputed): !KU( 'g'^(~xx*~yy) ) @ #vk.9
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: splitEqs(4)
1: !KU( hkdfExpand(<$cAEAD0.1,                  h(<$cHash0.1,                     h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0,                                             h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                                                'g'^~yy>),                                             'K_2ae'>,                                           hkdfExtract(~ltk, 'g'^(~xx*~yy))),                                h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                                $cAEAD0),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk, 'g'^(~xx*~yy)))) @ #vk.44
2: !KU( hkdfExpand(<$cAEAD0.3,                  h(<$cHash0.3,                     h(<$cHash0.2, <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.2,                                             h(<$cHash0.2,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.2, <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                                    'g'^~yy.1>),                                $cAEAD0.2),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~xx*~yy)))) @ #vk.47
3: !KU( 'g'^x ) @ #vk.38
4: !KU( 'g'^~xx ) @ #vk.31
5: !KU( 'g'^~yy ) @ #vk.16
6: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.2,                              h(<$cHash0.2, <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.2, <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                     'g'^~yy.1>),                 $cAEAD0.2)) @ #vk.50
7: !KU( 'g'^~yy.1 ) @ #vk.52

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 47 (directly): splitEqs(4)
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( 'g'^(~yy*~xx.1*inv(~xx)) ) @ #vk.5
1: !KU( 'g'^(~yy*~xx.1) ) @ #vk.9
2: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                     'g'^(~yy*~xx.1*inv(~xx))>),                  'K_2ae'>,                hkdfExtract(~ltk, 'g'^(~yy*~xx.1)))) @ #vk.22
3: !KU( 'g'^~xx ) @ #vk.28
4: !KU( 'g'^~yy ) @ #vk.33
5: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^~xx.1, $U.1, $V.1>,                                 'g'^~yy>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~yy*~xx.1))),                 h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^~xx.1, $U.1, $V.1>,                     'g'^~yy>),                 $cAEAD0.1)) @ #vk.34
6: !KU( 'g'^~xx.1 ) @ #vk.18

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 58 (precomputed):
    !KU( 'g'^(~yy*~xx.1*inv(~xx)) ) @ #vk.5
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~yy ) @ #vk.23
1: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                  'K_2ae'>,                hkdfExtract(~ltk, 'g'^(~xx*~yy)))) @ #vk.20
2: !KU( 'g'^~xx ) @ #vk.16
3: !KU( 'g'^~yy ) @ #vk.6

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 62 (precomputed): !KU( ~yy ) @ #vk.23
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.23
1: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                  'K_2ae'>,                hkdfExtract(~ltk, 'g'^(~xx*~yy)))) @ #vk.20
2: !KU( 'g'^~xx ) @ #vk.16
3: !KU( 'g'^~yy ) @ #vk.6

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 72 (precomputed): !KU( ~xx ) @ #vk.23
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.25
1: !KU( ~yy ) @ #vk.26
2: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                  'K_2ae'>,                hkdfExtract(~ltk, 'g'^(~xx*~yy)))) @ #vk.20
3: !KU( 'g'^~xx ) @ #vk.16
4: !KU( 'g'^~yy ) @ #vk.6

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 64 (precomputed): !KU( ~xx ) @ #vk.25
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( 'g'^(~xx*~yy*inv(~yy.1)) ) @ #vk.38
1: !KU( hkdfExpand(<$cAEAD0.1,                  h(<$cHash0.1,                     h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0,                                             h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                                                'g'^~yy>),                                             'K_2ae'>,                                           hkdfExtract(~ltk, 'g'^(~xx*~yy))),                                h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                                $cAEAD0),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk, 'g'^(~xx*~yy)))) @ #vk.44
2: !KU( hkdfExpand(<$cAEAD0.3,                  h(<$cHash0.3,                     h(<$cHash0.2,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.2,                                             h(<$cHash0.2,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.2,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.2),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~xx*~yy)))) @ #vk.47
3: !KU( 'g'^~xx ) @ #vk.31
4: !KU( 'g'^~yy ) @ #vk.16
5: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.2,                              h(<$cHash0.2,                                 <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.2,                     <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                     'g'^~yy.1>),                 $cAEAD0.2)) @ #vk.50
6: !KU( 'g'^~yy.1 ) @ #vk.52

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 148 (precomputed):
    !KU( 'g'^(~xx*~yy*inv(~yy.1)) ) @ #vk.38
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~yy ) @ #vk.37
1: !KU( ~xx.1 ) @ #vk.38
2: !KU( ~xx ) @ #vk.40
3: !KU( 'g'^(~yy*~xx.1) ) @ #vk.9
4: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                     'g'^(~yy*~xx.1*inv(~xx))>),                  'K_2ae'>,                hkdfExtract(~ltk, 'g'^(~yy*~xx.1)))) @ #vk.22
5: !KU( 'g'^~xx ) @ #vk.28
6: !KU( 'g'^~yy ) @ #vk.33
7: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^~xx.1, $U.1, $V.1>,                                 'g'^~yy>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~yy*~xx.1))),                 h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^~xx.1, $U.1, $V.1>,                     'g'^~yy>),                 $cAEAD0.1)) @ #vk.34
8: !KU( 'g'^~xx.1 ) @ #vk.18

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 64 (precomputed): !KU( ~yy ) @ #vk.37
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx.1 ) @ #vk.36
1: !KU( ~xx ) @ #vk.38
2: !KU( 'g'^(~yy*~xx.1) ) @ #vk.9
3: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                     'g'^(~yy*~xx.1*inv(~xx))>),                  'K_2ae'>,                hkdfExtract(~ltk, 'g'^(~yy*~xx.1)))) @ #vk.22
4: !KU( 'g'^~xx ) @ #vk.28
5: !KU( 'g'^~yy ) @ #vk.33
6: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^~xx.1, $U.1, $V.1>,                                 'g'^~yy>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~yy*~xx.1))),                 h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^~xx.1, $U.1, $V.1>,                     'g'^~yy>),                 $cAEAD0.1)) @ #vk.34
7: !KU( 'g'^~xx.1 ) @ #vk.18

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 73 (precomputed): !KU( ~xx.1 ) @ #vk.36
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~yy ) @ #vk.36
1: !KU( ~xx ) @ #vk.38
2: !KU( 'g'^(~yy*~xx.1) ) @ #vk.9
3: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                     'g'^(~yy*~xx.1*inv(~xx))>),                  'K_2ae'>,                hkdfExtract(~ltk, 'g'^(~yy*~xx.1)))) @ #vk.22
4: !KU( 'g'^~xx ) @ #vk.28
5: !KU( 'g'^~yy ) @ #vk.33
6: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^~xx.1, $U.1, $V.1>,                                 'g'^~yy>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~yy*~xx.1))),                 h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^~xx.1, $U.1, $V.1>,                     'g'^~yy>),                 $cAEAD0.1)) @ #vk.34
7: !KU( 'g'^~xx.1 ) @ #vk.18

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 63 (precomputed): !KU( ~yy ) @ #vk.36
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>,         'g'^~yy>)) @ #vk.39
1: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, gy>),                  'K_2ae'>,                hkdfExtract(~ltk, impSk))) @ #vk.24
2: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                      >),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                              >),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, impSk)),                                h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                  >),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, impSk))) @ #vk.34
3: splitEqs(0)
4: splitEqs(2)
5: !KU( 'g'^~xx ) @ #vk.30
6: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                               >),                              'K_2ae'>,                            hkdfExtract(~ltk.1, impSk)),                 h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                   >),                 $cAEAD0.1)) @ #vk.40

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 61 (precomputed):
    !KU( h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 
            'g'^~yy>)
    ) @ #vk.39
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, gy>),                  'K_2ae'>,                hkdfExtract(~ltk, impSk))) @ #vk.27
1: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                      >),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                              >),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, impSk)),                                h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                  >),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, impSk))) @ #vk.37
2: splitEqs(0)
3: splitEqs(2)
4: !KU( 'g'^~xx ) @ #vk.33
5: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                               >),                              'K_2ae'>,                            hkdfExtract(~ltk.1, impSk)),                 h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                   >),                 $cAEAD0.1)) @ #vk.41
6: !KU( 'g'^~yy ) @ #vk.44

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 33 (precomputed):
    !KU( hkdfExpand(<$cAEAD0, 
                     h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, gy>), 
                     'K_2ae'>,
                    hkdfExtract(~ltk, impSk))
    ) @ #vk.27
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.55
1: !KU( ~yy ) @ #vk.56
2: !KU( ~yy.1 ) @ #vk.58
3: !KU( hkdfExpand(<$cAEAD0.1,                  h(<$cHash0.1,                     h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0,                                             h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                                                'g'^~yy>),                                             'K_2ae'>,                                           hkdfExtract(~ltk, 'g'^(~xx*~yy))),                                h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                                $cAEAD0),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk, 'g'^(~xx*~yy)))) @ #vk.44
4: !KU( hkdfExpand(<$cAEAD0.3,                  h(<$cHash0.3,                     h(<$cHash0.2,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.2,                                             h(<$cHash0.2,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.2,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.2),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~xx*~yy)))) @ #vk.47
5: !KU( 'g'^~xx ) @ #vk.32
6: !KU( 'g'^~yy ) @ #vk.17
7: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.2,                              h(<$cHash0.2,                                 <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.2,                     <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                     'g'^~yy.1>),                 $cAEAD0.2)) @ #vk.50
8: !KU( 'g'^~yy.1 ) @ #vk.52

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 152 (precomputed): !KU( ~xx ) @ #vk.55
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~yy ) @ #vk.54
1: !KU( ~yy.1 ) @ #vk.56
2: !KU( hkdfExpand(<$cAEAD0.1,                  h(<$cHash0.1,                     h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0,                                             h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                                                'g'^~yy>),                                             'K_2ae'>,                                           hkdfExtract(~ltk, 'g'^(~xx*~yy))),                                h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                                $cAEAD0),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk, 'g'^(~xx*~yy)))) @ #vk.44
3: !KU( hkdfExpand(<$cAEAD0.3,                  h(<$cHash0.3,                     h(<$cHash0.2,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.2,                                             h(<$cHash0.2,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.2,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.2),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~xx*~yy)))) @ #vk.47
4: !KU( 'g'^~xx ) @ #vk.32
5: !KU( 'g'^~yy ) @ #vk.17
6: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.2,                              h(<$cHash0.2,                                 <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.2,                     <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                     'g'^~yy.1>),                 $cAEAD0.2)) @ #vk.50
7: !KU( 'g'^~yy.1 ) @ #vk.52

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 151 (precomputed): !KU( ~yy ) @ #vk.54
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.54
1: !KU( ~yy.1 ) @ #vk.56
2: !KU( hkdfExpand(<$cAEAD0.1,                  h(<$cHash0.1,                     h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0,                                             h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                                                'g'^~yy>),                                             'K_2ae'>,                                           hkdfExtract(~ltk, 'g'^(~xx*~yy))),                                h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                                $cAEAD0),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk, 'g'^(~xx*~yy)))) @ #vk.44
3: !KU( hkdfExpand(<$cAEAD0.3,                  h(<$cHash0.3,                     h(<$cHash0.2,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.2,                                             h(<$cHash0.2,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.2,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.2),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~xx*~yy)))) @ #vk.47
4: !KU( 'g'^~xx ) @ #vk.32
5: !KU( 'g'^~yy ) @ #vk.17
6: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.2,                              h(<$cHash0.2,                                 <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.2,                     <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                     'g'^~yy.1>),                 $cAEAD0.2)) @ #vk.50
7: !KU( 'g'^~yy.1 ) @ #vk.52

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 161 (precomputed): !KU( ~xx ) @ #vk.54
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( 'g'^(~xx*~yy*inv(~yy.1)) ) @ #vk.31
1: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~xx*~yy)))) @ #vk.44
2: !KU( hkdfExpand(<$cAEAD0.3,                  h(<$cHash0.3,                     h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0,                                             h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                                                'g'^~yy>),                                             'K_2ae'>,                                           hkdfExtract(~ltk, 'g'^(~xx*~yy))),                                h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                                $cAEAD0),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk, 'g'^(~xx*~yy)))) @ #vk.50
3: !KU( 'g'^~xx ) @ #vk.38
4: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1,                                 <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.1,                     <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                     'g'^~yy.1>),                 $cAEAD0.1)) @ #vk.47
5: !KU( 'g'^~yy.1 ) @ #vk.49
6: !KU( 'g'^~yy ) @ #vk.16

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 147 (precomputed):
    !KU( 'g'^(~xx*~yy*inv(~yy.1)) ) @ #vk.31
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( 'g'^(~xx*~yy*inv(~yy.1)) ) @ #vk.36
1: !KU( 'g'^(~xx*~yy*inv(~yy.2)) ) @ #vk.43
2: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~xx*~yy)))) @ #vk.56
3: !KU( hkdfExpand(<$cAEAD0.4,                  h(<$cHash0.4,                     h(<$cHash0.3,                        <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)), $U.2, $V.2>,                        'g'^~yy.2>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.3,                                             h(<$cHash0.3,                                                <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)),                                                 $U.2, $V.2>,                                                'g'^~yy.2>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.2, 'g'^(~xx*~yy))),                                h(<$cHash0.3,                                    <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)), $U.2, $V.2                                   >,                                    'g'^~yy.2>),                                $cAEAD0.3),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.2, 'g'^(~xx*~yy)))) @ #vk.62
4: !KU( 'g'^~xx ) @ #vk.52
5: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1,                                 <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.1,                     <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                     'g'^~yy.1>),                 $cAEAD0.1)) @ #vk.59
6: !KU( 'g'^~yy.1 ) @ #vk.61
7: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.3,                              h(<$cHash0.3,                                 <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)), $U.2, $V.2>,                                 'g'^~yy.2>),                              'K_2ae'>,                            hkdfExtract(~ltk.2, 'g'^(~xx*~yy))),                 h(<$cHash0.3,                     <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)), $U.2, $V.2>,                     'g'^~yy.2>),                 $cAEAD0.3)) @ #vk.65
8: !KU( 'g'^~yy.2 ) @ #vk.67
9: !KU( 'g'^~yy ) @ #vk.16

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 147 (precomputed):
    !KU( 'g'^(~xx*~yy*inv(~yy.1)) ) @ #vk.36
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: splitEqs(2)
1: !KU( 'g'^(~xx*~yy) ) @ #vk.15
2: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~xx*~yy)))) @ #vk.39
3: !KU( 'g'^x ) @ #vk.26
4: !KU( 'g'^~xx ) @ #vk.35
5: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                     'g'^~yy.1>),                 $cAEAD0.1)) @ #vk.42
6: !KU( 'g'^~yy.1 ) @ #vk.44
7: !KU( 'g'^~yy ) @ #vk.9

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: splitEqs(2)
1: !KU( 'g'^(~xx*~yy) ) @ #vk.15
2: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~xx*~yy)))) @ #vk.39
3: !KU( 'g'^x ) @ #vk.26
4: !KU( 'g'^~xx ) @ #vk.35
5: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                     'g'^~yy.1>),                 $cAEAD0.1)) @ #vk.42
6: !KU( 'g'^~yy.1 ) @ #vk.44
7: !KU( 'g'^~yy ) @ #vk.9

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 30 (directly): splitEqs(2)
  solved goal nr. 30 (directly): splitEqs(2)
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( hkdfExtract(~ltk, impSk) ) @ #vk.47
1: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                      >),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                              >),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, impSk)),                                h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                  >),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, impSk))) @ #vk.41
2: splitEqs(0)
3: splitEqs(2)
4: !KU( 'g'^~xx ) @ #vk.37
5: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                               >),                              'K_2ae'>,                            hkdfExtract(~ltk.1, impSk)),                 h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                   >),                 $cAEAD0.1)) @ #vk.44
6: !KU( 'g'^~yy ) @ #vk.46

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 83 (precomputed):
    !KU( hkdfExtract(~ltk, impSk) ) @ #vk.47
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( 'g'^(~xx*~yy) ) @ #vk.14
1: !KU( hkdfExpand(<$cAEAD0.1,                  h(<$cHash0.1,                     h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0,                                             h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                                                'g'^~yy>),                                             'K_2ae'>,                                           hkdfExtract(~ltk, 'g'^(~xx*~yy))),                                h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                                $cAEAD0),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk, 'g'^(~xx*~yy)))) @ #vk.27
2: !KU( 'g'^~xx ) @ #vk.21
3: !KU( 'g'^~yy ) @ #vk.10

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 101 (precomputed): !KU( 'g'^(~xx*~yy) ) @ #vk.14
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( 'g'^(~xx*~yy) ) @ #vk.15
1: !KU( 'g'^(~xx*~yy*inv(~yy.1)) ) @ #vk.26
2: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~xx*~yy)))) @ #vk.39
3: !KU( 'g'^~xx ) @ #vk.35
4: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1,                                 <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.1,                     <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                     'g'^~yy.1>),                 $cAEAD0.1)) @ #vk.42
5: !KU( 'g'^~yy.1 ) @ #vk.44
6: !KU( 'g'^~yy ) @ #vk.10

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 101 (precomputed): !KU( 'g'^(~xx*~yy) ) @ #vk.15
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.54
1: !KU( ~yy.1 ) @ #vk.56
2: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~xx*~yy)))) @ #vk.44
3: !KU( hkdfExpand(<$cAEAD0.3,                  h(<$cHash0.3,                     h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0,                                             h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                                                'g'^~yy>),                                             'K_2ae'>,                                           hkdfExtract(~ltk, 'g'^(~xx*~yy))),                                h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                                $cAEAD0),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk, 'g'^(~xx*~yy)))) @ #vk.50
4: !KU( 'g'^~xx ) @ #vk.38
5: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1,                                 <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.1,                     <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                     'g'^~yy.1>),                 $cAEAD0.1)) @ #vk.47
6: !KU( 'g'^~yy.1 ) @ #vk.49
7: !KU( 'g'^~yy ) @ #vk.17

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 161 (precomputed): !KU( ~xx ) @ #vk.54
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~yy ) @ #vk.54
1: !KU( ~yy.1 ) @ #vk.56
2: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~xx*~yy)))) @ #vk.44
3: !KU( hkdfExpand(<$cAEAD0.3,                  h(<$cHash0.3,                     h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0,                                             h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                                                'g'^~yy>),                                             'K_2ae'>,                                           hkdfExtract(~ltk, 'g'^(~xx*~yy))),                                h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                                $cAEAD0),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk, 'g'^(~xx*~yy)))) @ #vk.50
4: !KU( 'g'^~xx ) @ #vk.38
5: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1,                                 <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.1,                     <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                     'g'^~yy.1>),                 $cAEAD0.1)) @ #vk.47
6: !KU( 'g'^~yy.1 ) @ #vk.49
7: !KU( 'g'^~yy ) @ #vk.17

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 151 (precomputed): !KU( ~yy ) @ #vk.54
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.55
1: !KU( ~yy ) @ #vk.56
2: !KU( ~yy.1 ) @ #vk.58
3: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~xx*~yy)))) @ #vk.44
4: !KU( hkdfExpand(<$cAEAD0.3,                  h(<$cHash0.3,                     h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0,                                             h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                                                'g'^~yy>),                                             'K_2ae'>,                                           hkdfExtract(~ltk, 'g'^(~xx*~yy))),                                h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                                $cAEAD0),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk, 'g'^(~xx*~yy)))) @ #vk.50
5: !KU( 'g'^~xx ) @ #vk.38
6: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1,                                 <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.1,                     <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                     'g'^~yy.1>),                 $cAEAD0.1)) @ #vk.47
7: !KU( 'g'^~yy.1 ) @ #vk.49
8: !KU( 'g'^~yy ) @ #vk.17

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 152 (precomputed): !KU( ~xx ) @ #vk.55
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~yy ) @ #vk.30
1: !KU( hkdfExpand(<$cAEAD0.1,                  h(<$cHash0.1,                     h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0,                                             h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                                                'g'^~yy>),                                             'K_2ae'>,                                           hkdfExtract(~ltk, 'g'^(~xx*~yy))),                                h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                                $cAEAD0),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk, 'g'^(~xx*~yy)))) @ #vk.27
2: !KU( 'g'^~xx ) @ #vk.21
3: !KU( 'g'^~yy ) @ #vk.11

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.30
1: !KU( hkdfExpand(<$cAEAD0.1,                  h(<$cHash0.1,                     h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0,                                             h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                                                'g'^~yy>),                                             'K_2ae'>,                                           hkdfExtract(~ltk, 'g'^(~xx*~yy))),                                h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                                $cAEAD0),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk, 'g'^(~xx*~yy)))) @ #vk.27
2: !KU( 'g'^~xx ) @ #vk.21
3: !KU( 'g'^~yy ) @ #vk.11

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 104 (precomputed): !KU( ~yy ) @ #vk.30
  solved goal nr. 114 (precomputed): !KU( ~xx ) @ #vk.30
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.32
1: !KU( ~yy ) @ #vk.33
2: !KU( hkdfExpand(<$cAEAD0.1,                  h(<$cHash0.1,                     h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0,                                             h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                                                'g'^~yy>),                                             'K_2ae'>,                                           hkdfExtract(~ltk, 'g'^(~xx*~yy))),                                h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                                $cAEAD0),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk, 'g'^(~xx*~yy)))) @ #vk.27
3: !KU( 'g'^~xx ) @ #vk.21
4: !KU( 'g'^~yy ) @ #vk.11

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 106 (precomputed): !KU( ~xx ) @ #vk.32
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.69
1: !KU( ~yy.1 ) @ #vk.71
2: !KU( 'g'^(~xx*~yy*inv(~yy.2)) ) @ #vk.43
3: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~xx*~yy)))) @ #vk.56
4: !KU( hkdfExpand(<$cAEAD0.4,                  h(<$cHash0.4,                     h(<$cHash0.3,                        <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)), $U.2, $V.2>,                        'g'^~yy.2>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.3,                                             h(<$cHash0.3,                                                <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)),                                                 $U.2, $V.2>,                                                'g'^~yy.2>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.2, 'g'^(~xx*~yy))),                                h(<$cHash0.3,                                    <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)), $U.2, $V.2                                   >,                                    'g'^~yy.2>),                                $cAEAD0.3),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.2, 'g'^(~xx*~yy)))) @ #vk.62
5: !KU( 'g'^~xx ) @ #vk.52
6: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1,                                 <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.1,                     <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                     'g'^~yy.1>),                 $cAEAD0.1)) @ #vk.59
7: !KU( 'g'^~yy.1 ) @ #vk.61
8: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.3,                              h(<$cHash0.3,                                 <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)), $U.2, $V.2>,                                 'g'^~yy.2>),                              'K_2ae'>,                            hkdfExtract(~ltk.2, 'g'^(~xx*~yy))),                 h(<$cHash0.3,                     <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)), $U.2, $V.2>,                     'g'^~yy.2>),                 $cAEAD0.3)) @ #vk.65
9: !KU( 'g'^~yy.2 ) @ #vk.67
10: !KU( 'g'^~yy ) @ #vk.17

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 161 (precomputed): !KU( ~xx ) @ #vk.69
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~yy ) @ #vk.69
1: !KU( ~yy.1 ) @ #vk.71
2: !KU( 'g'^(~xx*~yy*inv(~yy.2)) ) @ #vk.43
3: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~xx*~yy)))) @ #vk.56
4: !KU( hkdfExpand(<$cAEAD0.4,                  h(<$cHash0.4,                     h(<$cHash0.3,                        <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)), $U.2, $V.2>,                        'g'^~yy.2>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.3,                                             h(<$cHash0.3,                                                <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)),                                                 $U.2, $V.2>,                                                'g'^~yy.2>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.2, 'g'^(~xx*~yy))),                                h(<$cHash0.3,                                    <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)), $U.2, $V.2                                   >,                                    'g'^~yy.2>),                                $cAEAD0.3),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.2, 'g'^(~xx*~yy)))) @ #vk.62
5: !KU( 'g'^~xx ) @ #vk.52
6: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1,                                 <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.1,                     <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                     'g'^~yy.1>),                 $cAEAD0.1)) @ #vk.59
7: !KU( 'g'^~yy.1 ) @ #vk.61
8: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.3,                              h(<$cHash0.3,                                 <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)), $U.2, $V.2>,                                 'g'^~yy.2>),                              'K_2ae'>,                            hkdfExtract(~ltk.2, 'g'^(~xx*~yy))),                 h(<$cHash0.3,                     <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)), $U.2, $V.2>,                     'g'^~yy.2>),                 $cAEAD0.3)) @ #vk.65
9: !KU( 'g'^~yy.2 ) @ #vk.67
10: !KU( 'g'^~yy ) @ #vk.17

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 151 (precomputed): !KU( ~yy ) @ #vk.69
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.45
1: !KU( 'g'^(~xx*~yy*inv(~yy.1)) ) @ #vk.26
2: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~xx*~yy)))) @ #vk.39
3: !KU( 'g'^~xx ) @ #vk.35
4: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1,                                 <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.1,                     <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                     'g'^~yy.1>),                 $cAEAD0.1)) @ #vk.42
5: !KU( 'g'^~yy.1 ) @ #vk.44
6: !KU( 'g'^~yy ) @ #vk.11

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 114 (precomputed): !KU( ~xx ) @ #vk.45
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.70
1: !KU( ~yy ) @ #vk.71
2: !KU( ~yy.1 ) @ #vk.73
3: !KU( 'g'^(~xx*~yy*inv(~yy.2)) ) @ #vk.43
4: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~xx*~yy)))) @ #vk.56
5: !KU( hkdfExpand(<$cAEAD0.4,                  h(<$cHash0.4,                     h(<$cHash0.3,                        <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)), $U.2, $V.2>,                        'g'^~yy.2>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.3,                                             h(<$cHash0.3,                                                <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)),                                                 $U.2, $V.2>,                                                'g'^~yy.2>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.2, 'g'^(~xx*~yy))),                                h(<$cHash0.3,                                    <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)), $U.2, $V.2                                   >,                                    'g'^~yy.2>),                                $cAEAD0.3),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.2, 'g'^(~xx*~yy)))) @ #vk.62
6: !KU( 'g'^~xx ) @ #vk.52
7: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1,                                 <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.1,                     <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                     'g'^~yy.1>),                 $cAEAD0.1)) @ #vk.59
8: !KU( 'g'^~yy.1 ) @ #vk.61
9: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.3,                              h(<$cHash0.3,                                 <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)), $U.2, $V.2>,                                 'g'^~yy.2>),                              'K_2ae'>,                            hkdfExtract(~ltk.2, 'g'^(~xx*~yy))),                 h(<$cHash0.3,                     <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)), $U.2, $V.2>,                     'g'^~yy.2>),                 $cAEAD0.3)) @ #vk.65
10: !KU( 'g'^~yy.2 ) @ #vk.67
11: !KU( 'g'^~yy ) @ #vk.17

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 152 (precomputed): !KU( ~xx ) @ #vk.70
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~yy ) @ #vk.45
1: !KU( 'g'^(~xx*~yy*inv(~yy.1)) ) @ #vk.26
2: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~xx*~yy)))) @ #vk.39
3: !KU( 'g'^~xx ) @ #vk.35
4: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1,                                 <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.1,                     <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                     'g'^~yy.1>),                 $cAEAD0.1)) @ #vk.42
5: !KU( 'g'^~yy.1 ) @ #vk.44
6: !KU( 'g'^~yy ) @ #vk.11

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 104 (precomputed): !KU( ~yy ) @ #vk.45
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.47
1: !KU( ~yy ) @ #vk.48
2: !KU( 'g'^(~xx*~yy*inv(~yy.1)) ) @ #vk.26
3: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~xx*~yy)))) @ #vk.39
4: !KU( 'g'^~xx ) @ #vk.35
5: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1,                                 <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.1,                     <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                     'g'^~yy.1>),                 $cAEAD0.1)) @ #vk.42
6: !KU( 'g'^~yy.1 ) @ #vk.44
7: !KU( 'g'^~yy ) @ #vk.11

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 106 (precomputed): !KU( ~xx ) @ #vk.47
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( 'g'^(~xx*~yy) ) @ #vk.14
1: !KU( hkdfExpand(<$cAEAD0.1,                  h(<$cHash0.1,                     h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0,                                             h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                                                'g'^~yy>),                                             'K_2ae'>,                                           hkdfExtract(~ltk, 'g'^(~xx*~yy))),                                h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                                $cAEAD0),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk, 'g'^(~xx*~yy)))) @ #vk.27
2: !KU( 'g'^~xx ) @ #vk.21
3: !KU( 'g'^~yy ) @ #vk.10

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 96 (precomputed): !KU( 'g'^(~xx*~yy) ) @ #vk.14
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( 'g'^(~xx*~yy) ) @ #vk.15
1: !KU( 'g'^(~xx*~yy*inv(~yy.1)) ) @ #vk.26
2: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~xx*~yy)))) @ #vk.39
3: !KU( 'g'^~xx ) @ #vk.35
4: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1,                                 <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.1,                     <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                     'g'^~yy.1>),                 $cAEAD0.1)) @ #vk.42
5: !KU( 'g'^~yy.1 ) @ #vk.44
6: !KU( 'g'^~yy ) @ #vk.10

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 96 (precomputed): !KU( 'g'^(~xx*~yy) ) @ #vk.15
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: splitEqs(4)
1: !KU( hkdfExpand(<$cAEAD0.1,                  h(<$cHash0.1,                     h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0,                                             h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                                                'g'^~yy>),                                             'K_2ae'>,                                           hkdfExtract(~ltk, 'g'^(~xx*~yy))),                                h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                                $cAEAD0),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk, 'g'^(~xx*~yy)))) @ #vk.44
2: !KU( hkdfExpand(<$cAEAD0.3,                  h(<$cHash0.3,                     h(<$cHash0.2, <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.2,                                             h(<$cHash0.2,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.2, <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                                    'g'^~yy.1>),                                $cAEAD0.2),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~xx*~yy)))) @ #vk.47
3: !KU( 'g'^x ) @ #vk.38
4: !KU( 'g'^~xx ) @ #vk.31
5: !KU( 'g'^~yy ) @ #vk.16
6: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.2,                              h(<$cHash0.2, <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.2, <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                     'g'^~yy.1>),                 $cAEAD0.2)) @ #vk.50
7: !KU( 'g'^~yy.1 ) @ #vk.52

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 47 (directly): splitEqs(4)
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: splitEqs(4)
1: !KU( 'g'^(~xx*~yy*inv(~yy.1)) ) @ #vk.36
2: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~xx*~yy)))) @ #vk.56
3: !KU( hkdfExpand(<$cAEAD0.4,                  h(<$cHash0.4,                     h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, 'g'^x, $U.2, $V.2>,                        'g'^~yy.2>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.3,                                             h(<$cHash0.3,                                                <'PSK', 'PSK', $cSUITE0.2, 'g'^x, $U.2, $V.2>,                                                'g'^~yy.2>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.2, 'g'^(~xx*~yy))),                                h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, 'g'^x, $U.2, $V.2>,                                    'g'^~yy.2>),                                $cAEAD0.3),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.2, 'g'^(~xx*~yy)))) @ #vk.62
4: !KU( 'g'^x ) @ #vk.43
5: !KU( 'g'^~xx ) @ #vk.52
6: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1,                                 <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.1,                     <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                     'g'^~yy.1>),                 $cAEAD0.1)) @ #vk.59
7: !KU( 'g'^~yy.1 ) @ #vk.61
8: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.3,                              h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, 'g'^x, $U.2, $V.2>,                                 'g'^~yy.2>),                              'K_2ae'>,                            hkdfExtract(~ltk.2, 'g'^(~xx*~yy))),                 h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, 'g'^x, $U.2, $V.2>,                     'g'^~yy.2>),                 $cAEAD0.3)) @ #vk.65
9: !KU( 'g'^~yy.2 ) @ #vk.67
10: !KU( 'g'^~yy ) @ #vk.16

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 47 (directly): splitEqs(4)
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( 'g'^(~xx*~yy*inv(~yy.1)) ) @ #vk.38
1: !KU( hkdfExpand(<$cAEAD0.1,                  h(<$cHash0.1,                     h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0,                                             h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                                                'g'^~yy>),                                             'K_2ae'>,                                           hkdfExtract(~ltk, 'g'^(~xx*~yy))),                                h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                                $cAEAD0),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk, 'g'^(~xx*~yy)))) @ #vk.44
2: !KU( hkdfExpand(<$cAEAD0.3,                  h(<$cHash0.3,                     h(<$cHash0.2,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.2,                                             h(<$cHash0.2,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.2,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.2),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~xx*~yy)))) @ #vk.47
3: !KU( 'g'^~xx ) @ #vk.31
4: !KU( 'g'^~yy ) @ #vk.16
5: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.2,                              h(<$cHash0.2,                                 <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.2,                     <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                     'g'^~yy.1>),                 $cAEAD0.2)) @ #vk.50
6: !KU( 'g'^~yy.1 ) @ #vk.52

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~yy ) @ #vk.31
1: !KU( hkdfExpand(<$cAEAD0.1,                  h(<$cHash0.1,                     h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0,                                             h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                                                'g'^~yy>),                                             'K_2ae'>,                                           hkdfExtract(~ltk, 'g'^(~xx*~yy))),                                h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                                $cAEAD0),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk, 'g'^(~xx*~yy)))) @ #vk.27
2: !KU( 'g'^~xx ) @ #vk.21
3: !KU( 'g'^~yy ) @ #vk.11

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 99 (precomputed): !KU( ~yy ) @ #vk.31
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.31
1: !KU( hkdfExpand(<$cAEAD0.1,                  h(<$cHash0.1,                     h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0,                                             h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                                                'g'^~yy>),                                             'K_2ae'>,                                           hkdfExtract(~ltk, 'g'^(~xx*~yy))),                                h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                                $cAEAD0),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk, 'g'^(~xx*~yy)))) @ #vk.27
2: !KU( 'g'^~xx ) @ #vk.21
3: !KU( 'g'^~yy ) @ #vk.11

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 143 (precomputed):
    !KU( 'g'^(~xx*~yy*inv(~yy.1)) ) @ #vk.38
  solved goal nr. 109 (precomputed): !KU( ~xx ) @ #vk.31
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.33
1: !KU( ~yy ) @ #vk.34
2: !KU( hkdfExpand(<$cAEAD0.1,                  h(<$cHash0.1,                     h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0,                                             h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                                                'g'^~yy>),                                             'K_2ae'>,                                           hkdfExtract(~ltk, 'g'^(~xx*~yy))),                                h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                                $cAEAD0),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk, 'g'^(~xx*~yy)))) @ #vk.27
3: !KU( 'g'^~xx ) @ #vk.21
4: !KU( 'g'^~yy ) @ #vk.11

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 101 (precomputed): !KU( ~xx ) @ #vk.33
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~yy ) @ #vk.46
1: !KU( 'g'^(~xx*~yy*inv(~yy.1)) ) @ #vk.26
2: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~xx*~yy)))) @ #vk.39
3: !KU( 'g'^~xx ) @ #vk.35
4: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1,                                 <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.1,                     <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                     'g'^~yy.1>),                 $cAEAD0.1)) @ #vk.42
5: !KU( 'g'^~yy.1 ) @ #vk.44
6: !KU( 'g'^~yy ) @ #vk.11

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.48
1: !KU( ~yy ) @ #vk.49
2: !KU( 'g'^(~xx*~yy*inv(~yy.1)) ) @ #vk.26
3: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~xx*~yy)))) @ #vk.39
4: !KU( 'g'^~xx ) @ #vk.35
5: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1,                                 <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.1,                     <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                     'g'^~yy.1>),                 $cAEAD0.1)) @ #vk.42
6: !KU( 'g'^~yy.1 ) @ #vk.44
7: !KU( 'g'^~yy ) @ #vk.11

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 99 (precomputed): !KU( ~yy ) @ #vk.46
  solved goal nr. 101 (precomputed): !KU( ~xx ) @ #vk.48
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.46
1: !KU( 'g'^(~xx*~yy*inv(~yy.1)) ) @ #vk.26
2: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~xx*~yy)))) @ #vk.39
3: !KU( 'g'^~xx ) @ #vk.35
4: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1,                                 <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.1,                     <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                     'g'^~yy.1>),                 $cAEAD0.1)) @ #vk.42
5: !KU( 'g'^~yy.1 ) @ #vk.44
6: !KU( 'g'^~yy ) @ #vk.11

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 109 (precomputed): !KU( ~xx ) @ #vk.46
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~ltk ) @ #vk.49
1: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                      >),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                              >),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, impSk)),                                h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                  >),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, impSk))) @ #vk.42
2: splitEqs(0)
3: splitEqs(2)
4: !KU( 'g'^~xx ) @ #vk.38
5: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                               >),                              'K_2ae'>,                            hkdfExtract(~ltk.1, impSk)),                 h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                   >),                 $cAEAD0.1)) @ #vk.45
6: !KU( 'g'^~yy ) @ #vk.47

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 89 (precomputed): !KU( ~ltk ) @ #vk.49
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.55
1: !KU( ~yy.1 ) @ #vk.57
2: !KU( hkdfExpand(<$cAEAD0.1,                  h(<$cHash0.1,                     h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0,                                             h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                                                'g'^~yy>),                                             'K_2ae'>,                                           hkdfExtract(~ltk, 'g'^(~xx*~yy))),                                h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                                $cAEAD0),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk, 'g'^(~xx*~yy)))) @ #vk.44
3: !KU( hkdfExpand(<$cAEAD0.3,                  h(<$cHash0.3,                     h(<$cHash0.2,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.2,                                             h(<$cHash0.2,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.2,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.2),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~xx*~yy)))) @ #vk.47
4: !KU( 'g'^~xx ) @ #vk.32
5: !KU( 'g'^~yy ) @ #vk.17
6: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.2,                              h(<$cHash0.2,                                 <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.2,                     <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                     'g'^~yy.1>),                 $cAEAD0.2)) @ #vk.50
7: !KU( 'g'^~yy.1 ) @ #vk.52

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 156 (precomputed): !KU( ~xx ) @ #vk.55
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.56
1: !KU( ~yy ) @ #vk.57
2: !KU( ~yy.1 ) @ #vk.59
3: !KU( hkdfExpand(<$cAEAD0.1,                  h(<$cHash0.1,                     h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0,                                             h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                                                'g'^~yy>),                                             'K_2ae'>,                                           hkdfExtract(~ltk, 'g'^(~xx*~yy))),                                h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                                $cAEAD0),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk, 'g'^(~xx*~yy)))) @ #vk.44
4: !KU( hkdfExpand(<$cAEAD0.3,                  h(<$cHash0.3,                     h(<$cHash0.2,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.2,                                             h(<$cHash0.2,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.2,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.2),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~xx*~yy)))) @ #vk.47
5: !KU( 'g'^~xx ) @ #vk.32
6: !KU( 'g'^~yy ) @ #vk.17
7: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.2,                              h(<$cHash0.2,                                 <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.2,                     <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                     'g'^~yy.1>),                 $cAEAD0.2)) @ #vk.50
8: !KU( 'g'^~yy.1 ) @ #vk.52

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 147 (precomputed): !KU( ~xx ) @ #vk.56
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~yy ) @ #vk.55
1: !KU( ~yy.1 ) @ #vk.57
2: !KU( hkdfExpand(<$cAEAD0.1,                  h(<$cHash0.1,                     h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0,                                             h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                                                'g'^~yy>),                                             'K_2ae'>,                                           hkdfExtract(~ltk, 'g'^(~xx*~yy))),                                h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                                $cAEAD0),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk, 'g'^(~xx*~yy)))) @ #vk.44
3: !KU( hkdfExpand(<$cAEAD0.3,                  h(<$cHash0.3,                     h(<$cHash0.2,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.2,                                             h(<$cHash0.2,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.2,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.2),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~xx*~yy)))) @ #vk.47
4: !KU( 'g'^~xx ) @ #vk.32
5: !KU( 'g'^~yy ) @ #vk.17
6: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.2,                              h(<$cHash0.2,                                 <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.2,                     <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                     'g'^~yy.1>),                 $cAEAD0.2)) @ #vk.50
7: !KU( 'g'^~yy.1 ) @ #vk.52

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 146 (precomputed): !KU( ~yy ) @ #vk.55
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( 'g'^(~xx*~yy*inv(~yy.1)) ) @ #vk.31
1: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~xx*~yy)))) @ #vk.44
2: !KU( hkdfExpand(<$cAEAD0.3,                  h(<$cHash0.3,                     h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0,                                             h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                                                'g'^~yy>),                                             'K_2ae'>,                                           hkdfExtract(~ltk, 'g'^(~xx*~yy))),                                h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                                $cAEAD0),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk, 'g'^(~xx*~yy)))) @ #vk.50
3: !KU( 'g'^~xx ) @ #vk.38
4: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1,                                 <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.1,                     <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                     'g'^~yy.1>),                 $cAEAD0.1)) @ #vk.47
5: !KU( 'g'^~yy.1 ) @ #vk.49
6: !KU( 'g'^~yy ) @ #vk.16

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 142 (precomputed):
    !KU( 'g'^(~xx*~yy*inv(~yy.1)) ) @ #vk.31
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( 'g'^(~xx*~yy*inv(~yy.1)) ) @ #vk.36
1: !KU( 'g'^(~xx*~yy*inv(~yy.2)) ) @ #vk.43
2: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~xx*~yy)))) @ #vk.56
3: !KU( hkdfExpand(<$cAEAD0.4,                  h(<$cHash0.4,                     h(<$cHash0.3,                        <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)), $U.2, $V.2>,                        'g'^~yy.2>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.3,                                             h(<$cHash0.3,                                                <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)),                                                 $U.2, $V.2>,                                                'g'^~yy.2>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.2, 'g'^(~xx*~yy))),                                h(<$cHash0.3,                                    <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)), $U.2, $V.2                                   >,                                    'g'^~yy.2>),                                $cAEAD0.3),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.2, 'g'^(~xx*~yy)))) @ #vk.62
4: !KU( 'g'^~xx ) @ #vk.52
5: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1,                                 <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.1,                     <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                     'g'^~yy.1>),                 $cAEAD0.1)) @ #vk.59
6: !KU( 'g'^~yy.1 ) @ #vk.61
7: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.3,                              h(<$cHash0.3,                                 <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)), $U.2, $V.2>,                                 'g'^~yy.2>),                              'K_2ae'>,                            hkdfExtract(~ltk.2, 'g'^(~xx*~yy))),                 h(<$cHash0.3,                     <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)), $U.2, $V.2>,                     'g'^~yy.2>),                 $cAEAD0.3)) @ #vk.65
8: !KU( 'g'^~yy.2 ) @ #vk.67
9: !KU( 'g'^~yy ) @ #vk.16

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 142 (precomputed):
    !KU( 'g'^(~xx*~yy*inv(~yy.1)) ) @ #vk.36
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: splitEqs(4)
1: !KU( 'g'^(~xx*~yy*inv(~yy.1)) ) @ #vk.36
2: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~xx*~yy)))) @ #vk.56
3: !KU( hkdfExpand(<$cAEAD0.4,                  h(<$cHash0.4,                     h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, 'g'^x, $U.2, $V.2>,                        'g'^~yy.2>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.3,                                             h(<$cHash0.3,                                                <'PSK', 'PSK', $cSUITE0.2, 'g'^x, $U.2, $V.2>,                                                'g'^~yy.2>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.2, 'g'^(~xx*~yy))),                                h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, 'g'^x, $U.2, $V.2>,                                    'g'^~yy.2>),                                $cAEAD0.3),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.2, 'g'^(~xx*~yy)))) @ #vk.62
4: !KU( 'g'^x ) @ #vk.43
5: !KU( 'g'^~xx ) @ #vk.52
6: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1,                                 <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.1,                     <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                     'g'^~yy.1>),                 $cAEAD0.1)) @ #vk.59
7: !KU( 'g'^~yy.1 ) @ #vk.61
8: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.3,                              h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, 'g'^x, $U.2, $V.2>,                                 'g'^~yy.2>),                              'K_2ae'>,                            hkdfExtract(~ltk.2, 'g'^(~xx*~yy))),                 h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, 'g'^x, $U.2, $V.2>,                     'g'^~yy.2>),                 $cAEAD0.3)) @ #vk.65
9: !KU( 'g'^~yy.2 ) @ #vk.67
10: !KU( 'g'^~yy ) @ #vk.16

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 47 (directly): splitEqs(4)
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: splitEqs(4)
1: !KU( hkdfExpand(<$cAEAD0.1,                  h(<$cHash0.1,                     h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0,                                             h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                                                'g'^~yy>),                                             'K_2ae'>,                                           hkdfExtract(~ltk, 'g'^(~xx*~yy))),                                h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                                $cAEAD0),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk, 'g'^(~xx*~yy)))) @ #vk.44
2: !KU( hkdfExpand(<$cAEAD0.3,                  h(<$cHash0.3,                     h(<$cHash0.2, <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.2,                                             h(<$cHash0.2,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.2, <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                                    'g'^~yy.1>),                                $cAEAD0.2),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~xx*~yy)))) @ #vk.47
3: !KU( 'g'^x ) @ #vk.38
4: !KU( 'g'^~xx ) @ #vk.31
5: !KU( 'g'^~yy ) @ #vk.16
6: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.2,                              h(<$cHash0.2, <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.2, <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                     'g'^~yy.1>),                 $cAEAD0.2)) @ #vk.50
7: !KU( 'g'^~yy.1 ) @ #vk.52

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 47 (directly): splitEqs(4)
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( 'g'^(~xx*~yy*inv(~yy.1)) ) @ #vk.38
1: !KU( hkdfExpand(<$cAEAD0.1,                  h(<$cHash0.1,                     h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0,                                             h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                                                'g'^~yy>),                                             'K_2ae'>,                                           hkdfExtract(~ltk, 'g'^(~xx*~yy))),                                h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                                $cAEAD0),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk, 'g'^(~xx*~yy)))) @ #vk.44
2: !KU( hkdfExpand(<$cAEAD0.3,                  h(<$cHash0.3,                     h(<$cHash0.2,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.2,                                             h(<$cHash0.2,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.2,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.2),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~xx*~yy)))) @ #vk.47
3: !KU( 'g'^~xx ) @ #vk.31
4: !KU( 'g'^~yy ) @ #vk.16
5: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.2,                              h(<$cHash0.2,                                 <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.2,                     <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                     'g'^~yy.1>),                 $cAEAD0.2)) @ #vk.50
6: !KU( 'g'^~yy.1 ) @ #vk.52

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 148 (precomputed):
    !KU( 'g'^(~xx*~yy*inv(~yy.1)) ) @ #vk.38
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.55
1: !KU( ~yy.1 ) @ #vk.57
2: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~xx*~yy)))) @ #vk.44
3: !KU( hkdfExpand(<$cAEAD0.3,                  h(<$cHash0.3,                     h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0,                                             h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                                                'g'^~yy>),                                             'K_2ae'>,                                           hkdfExtract(~ltk, 'g'^(~xx*~yy))),                                h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                                $cAEAD0),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk, 'g'^(~xx*~yy)))) @ #vk.50
4: !KU( 'g'^~xx ) @ #vk.38
5: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1,                                 <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.1,                     <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                     'g'^~yy.1>),                 $cAEAD0.1)) @ #vk.47
6: !KU( 'g'^~yy.1 ) @ #vk.49
7: !KU( 'g'^~yy ) @ #vk.17

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 156 (precomputed): !KU( ~xx ) @ #vk.55
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~yy ) @ #vk.55
1: !KU( ~yy.1 ) @ #vk.57
2: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~xx*~yy)))) @ #vk.44
3: !KU( hkdfExpand(<$cAEAD0.3,                  h(<$cHash0.3,                     h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0,                                             h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                                                'g'^~yy>),                                             'K_2ae'>,                                           hkdfExtract(~ltk, 'g'^(~xx*~yy))),                                h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                                $cAEAD0),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk, 'g'^(~xx*~yy)))) @ #vk.50
4: !KU( 'g'^~xx ) @ #vk.38
5: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1,                                 <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.1,                     <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                     'g'^~yy.1>),                 $cAEAD0.1)) @ #vk.47
6: !KU( 'g'^~yy.1 ) @ #vk.49
7: !KU( 'g'^~yy ) @ #vk.17

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 146 (precomputed): !KU( ~yy ) @ #vk.55
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.56
1: !KU( ~yy ) @ #vk.57
2: !KU( ~yy.1 ) @ #vk.59
3: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~xx*~yy)))) @ #vk.44
4: !KU( hkdfExpand(<$cAEAD0.3,                  h(<$cHash0.3,                     h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0,                                             h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                                                'g'^~yy>),                                             'K_2ae'>,                                           hkdfExtract(~ltk, 'g'^(~xx*~yy))),                                h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                                $cAEAD0),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk, 'g'^(~xx*~yy)))) @ #vk.50
5: !KU( 'g'^~xx ) @ #vk.38
6: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1,                                 <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.1,                     <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                     'g'^~yy.1>),                 $cAEAD0.1)) @ #vk.47
7: !KU( 'g'^~yy.1 ) @ #vk.49
8: !KU( 'g'^~yy ) @ #vk.17

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 147 (precomputed): !KU( ~xx ) @ #vk.56
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.70
1: !KU( ~yy.1 ) @ #vk.72
2: !KU( 'g'^(~xx*~yy*inv(~yy.2)) ) @ #vk.43
3: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~xx*~yy)))) @ #vk.56
4: !KU( hkdfExpand(<$cAEAD0.4,                  h(<$cHash0.4,                     h(<$cHash0.3,                        <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)), $U.2, $V.2>,                        'g'^~yy.2>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.3,                                             h(<$cHash0.3,                                                <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)),                                                 $U.2, $V.2>,                                                'g'^~yy.2>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.2, 'g'^(~xx*~yy))),                                h(<$cHash0.3,                                    <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)), $U.2, $V.2                                   >,                                    'g'^~yy.2>),                                $cAEAD0.3),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.2, 'g'^(~xx*~yy)))) @ #vk.62
5: !KU( 'g'^~xx ) @ #vk.52
6: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1,                                 <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.1,                     <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                     'g'^~yy.1>),                 $cAEAD0.1)) @ #vk.59
7: !KU( 'g'^~yy.1 ) @ #vk.61
8: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.3,                              h(<$cHash0.3,                                 <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)), $U.2, $V.2>,                                 'g'^~yy.2>),                              'K_2ae'>,                            hkdfExtract(~ltk.2, 'g'^(~xx*~yy))),                 h(<$cHash0.3,                     <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)), $U.2, $V.2>,                     'g'^~yy.2>),                 $cAEAD0.3)) @ #vk.65
9: !KU( 'g'^~yy.2 ) @ #vk.67
10: !KU( 'g'^~yy ) @ #vk.17

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 156 (precomputed): !KU( ~xx ) @ #vk.70
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.71
1: !KU( ~yy ) @ #vk.72
2: !KU( ~yy.1 ) @ #vk.74
3: !KU( 'g'^(~xx*~yy*inv(~yy.2)) ) @ #vk.43
4: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~xx*~yy)))) @ #vk.56
5: !KU( hkdfExpand(<$cAEAD0.4,                  h(<$cHash0.4,                     h(<$cHash0.3,                        <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)), $U.2, $V.2>,                        'g'^~yy.2>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.3,                                             h(<$cHash0.3,                                                <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)),                                                 $U.2, $V.2>,                                                'g'^~yy.2>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.2, 'g'^(~xx*~yy))),                                h(<$cHash0.3,                                    <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)), $U.2, $V.2                                   >,                                    'g'^~yy.2>),                                $cAEAD0.3),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.2, 'g'^(~xx*~yy)))) @ #vk.62
6: !KU( 'g'^~xx ) @ #vk.52
7: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1,                                 <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.1,                     <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                     'g'^~yy.1>),                 $cAEAD0.1)) @ #vk.59
8: !KU( 'g'^~yy.1 ) @ #vk.61
9: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.3,                              h(<$cHash0.3,                                 <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)), $U.2, $V.2>,                                 'g'^~yy.2>),                              'K_2ae'>,                            hkdfExtract(~ltk.2, 'g'^(~xx*~yy))),                 h(<$cHash0.3,                     <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)), $U.2, $V.2>,                     'g'^~yy.2>),                 $cAEAD0.3)) @ #vk.65
10: !KU( 'g'^~yy.2 ) @ #vk.67
11: !KU( 'g'^~yy ) @ #vk.17

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 147 (precomputed): !KU( ~xx ) @ #vk.71
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~yy ) @ #vk.70
1: !KU( ~yy.1 ) @ #vk.72
2: !KU( 'g'^(~xx*~yy*inv(~yy.2)) ) @ #vk.43
3: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~xx*~yy)))) @ #vk.56
4: !KU( hkdfExpand(<$cAEAD0.4,                  h(<$cHash0.4,                     h(<$cHash0.3,                        <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)), $U.2, $V.2>,                        'g'^~yy.2>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.3,                                             h(<$cHash0.3,                                                <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)),                                                 $U.2, $V.2>,                                                'g'^~yy.2>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.2, 'g'^(~xx*~yy))),                                h(<$cHash0.3,                                    <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)), $U.2, $V.2                                   >,                                    'g'^~yy.2>),                                $cAEAD0.3),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.2, 'g'^(~xx*~yy)))) @ #vk.62
5: !KU( 'g'^~xx ) @ #vk.52
6: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1,                                 <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.1,                     <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                     'g'^~yy.1>),                 $cAEAD0.1)) @ #vk.59
7: !KU( 'g'^~yy.1 ) @ #vk.61
8: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.3,                              h(<$cHash0.3,                                 <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)), $U.2, $V.2>,                                 'g'^~yy.2>),                              'K_2ae'>,                            hkdfExtract(~ltk.2, 'g'^(~xx*~yy))),                 h(<$cHash0.3,                     <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)), $U.2, $V.2>,                     'g'^~yy.2>),                 $cAEAD0.3)) @ #vk.65
9: !KU( 'g'^~yy.2 ) @ #vk.67
10: !KU( 'g'^~yy ) @ #vk.17

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 146 (precomputed): !KU( ~yy ) @ #vk.70
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~yy ) @ #vk.54
1: !KU( ~yy.1 ) @ #vk.56
2: !KU( hkdfExpand(<$cAEAD0.1,                  h(<$cHash0.1,                     h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0,                                             h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                                                'g'^~yy>),                                             'K_2ae'>,                                           hkdfExtract(~ltk, 'g'^(~xx*~yy))),                                h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                                $cAEAD0),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk, 'g'^(~xx*~yy)))) @ #vk.44
3: !KU( hkdfExpand(<$cAEAD0.3,                  h(<$cHash0.3,                     h(<$cHash0.2,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.2,                                             h(<$cHash0.2,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.2,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.2),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~xx*~yy)))) @ #vk.47
4: !KU( 'g'^~xx ) @ #vk.32
5: !KU( 'g'^~yy ) @ #vk.17
6: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.2,                              h(<$cHash0.2,                                 <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.2,                     <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                     'g'^~yy.1>),                 $cAEAD0.2)) @ #vk.50
7: !KU( 'g'^~yy.1 ) @ #vk.52

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 151 (precomputed): !KU( ~yy ) @ #vk.54
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.55
1: !KU( ~yy ) @ #vk.56
2: !KU( ~yy.1 ) @ #vk.58
3: !KU( hkdfExpand(<$cAEAD0.1,                  h(<$cHash0.1,                     h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0,                                             h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                                                'g'^~yy>),                                             'K_2ae'>,                                           hkdfExtract(~ltk, 'g'^(~xx*~yy))),                                h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                                $cAEAD0),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk, 'g'^(~xx*~yy)))) @ #vk.44
4: !KU( hkdfExpand(<$cAEAD0.3,                  h(<$cHash0.3,                     h(<$cHash0.2,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.2,                                             h(<$cHash0.2,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.2,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.2),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~xx*~yy)))) @ #vk.47
5: !KU( 'g'^~xx ) @ #vk.32
6: !KU( 'g'^~yy ) @ #vk.17
7: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.2,                              h(<$cHash0.2,                                 <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.2,                     <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                     'g'^~yy.1>),                 $cAEAD0.2)) @ #vk.50
8: !KU( 'g'^~yy.1 ) @ #vk.52

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 152 (precomputed): !KU( ~xx ) @ #vk.55
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.54
1: !KU( ~yy.1 ) @ #vk.56
2: !KU( hkdfExpand(<$cAEAD0.1,                  h(<$cHash0.1,                     h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0,                                             h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                                                'g'^~yy>),                                             'K_2ae'>,                                           hkdfExtract(~ltk, 'g'^(~xx*~yy))),                                h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                                $cAEAD0),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk, 'g'^(~xx*~yy)))) @ #vk.44
3: !KU( hkdfExpand(<$cAEAD0.3,                  h(<$cHash0.3,                     h(<$cHash0.2,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.2,                                             h(<$cHash0.2,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.2,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.2),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~xx*~yy)))) @ #vk.47
4: !KU( 'g'^~xx ) @ #vk.32
5: !KU( 'g'^~yy ) @ #vk.17
6: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.2,                              h(<$cHash0.2,                                 <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.2,                     <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                     'g'^~yy.1>),                 $cAEAD0.2)) @ #vk.50
7: !KU( 'g'^~yy.1 ) @ #vk.52

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 161 (precomputed): !KU( ~xx ) @ #vk.54
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~ltk ) @ #vk.72
1: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                      >),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                              >),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, impSk)),                                h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                  >),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, impSk))) @ #vk.59
2: !KU( hkdfExpand(<$cAEAD0.4,                  h(<$cHash0.4,                     h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.3,                                             h(<$cHash0.3,                                                <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.2, impSk)),                                h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                                    'g'^~yy.1>),                                $cAEAD0.3),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.2, impSk))) @ #vk.65
3: splitEqs(0)
4: splitEqs(3)
5: splitEqs(4)
6: !KU( 'g'^~xx ) @ #vk.55
7: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                               >),                              'K_2ae'>,                            hkdfExtract(~ltk.1, impSk)),                 h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                   >),                 $cAEAD0.1)) @ #vk.62
8: !KU( 'g'^~yy ) @ #vk.64
9: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.3,                              h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.2, impSk)),                 h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                     'g'^~yy.1>),                 $cAEAD0.3)) @ #vk.68
10: !KU( 'g'^~yy.1 ) @ #vk.70

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 135 (precomputed): !KU( ~ltk ) @ #vk.72
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( 'g'^(~xx*~yy*inv(~yy.1)) ) @ #vk.31
1: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~xx*~yy)))) @ #vk.44
2: !KU( hkdfExpand(<$cAEAD0.3,                  h(<$cHash0.3,                     h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0,                                             h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                                                'g'^~yy>),                                             'K_2ae'>,                                           hkdfExtract(~ltk, 'g'^(~xx*~yy))),                                h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                                $cAEAD0),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk, 'g'^(~xx*~yy)))) @ #vk.50
3: !KU( 'g'^~xx ) @ #vk.38
4: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1,                                 <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.1,                     <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                     'g'^~yy.1>),                 $cAEAD0.1)) @ #vk.47
5: !KU( 'g'^~yy.1 ) @ #vk.49
6: !KU( 'g'^~yy ) @ #vk.16

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 147 (precomputed):
    !KU( 'g'^(~xx*~yy*inv(~yy.1)) ) @ #vk.31
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( 'g'^(~xx*~yy*inv(~yy.1)) ) @ #vk.36
1: !KU( 'g'^(~xx*~yy*inv(~yy.2)) ) @ #vk.43
2: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~xx*~yy)))) @ #vk.56
3: !KU( hkdfExpand(<$cAEAD0.4,                  h(<$cHash0.4,                     h(<$cHash0.3,                        <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)), $U.2, $V.2>,                        'g'^~yy.2>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.3,                                             h(<$cHash0.3,                                                <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)),                                                 $U.2, $V.2>,                                                'g'^~yy.2>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.2, 'g'^(~xx*~yy))),                                h(<$cHash0.3,                                    <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)), $U.2, $V.2                                   >,                                    'g'^~yy.2>),                                $cAEAD0.3),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.2, 'g'^(~xx*~yy)))) @ #vk.62
4: !KU( 'g'^~xx ) @ #vk.52
5: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1,                                 <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.1,                     <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                     'g'^~yy.1>),                 $cAEAD0.1)) @ #vk.59
6: !KU( 'g'^~yy.1 ) @ #vk.61
7: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.3,                              h(<$cHash0.3,                                 <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)), $U.2, $V.2>,                                 'g'^~yy.2>),                              'K_2ae'>,                            hkdfExtract(~ltk.2, 'g'^(~xx*~yy))),                 h(<$cHash0.3,                     <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)), $U.2, $V.2>,                     'g'^~yy.2>),                 $cAEAD0.3)) @ #vk.65
8: !KU( 'g'^~yy.2 ) @ #vk.67
9: !KU( 'g'^~yy ) @ #vk.16

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 147 (precomputed):
    !KU( 'g'^(~xx*~yy*inv(~yy.1)) ) @ #vk.36
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: splitEqs(4)
1: !KU( hkdfExpand(<$cAEAD0.1,                  h(<$cHash0.1,                     h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0,                                             h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                                                'g'^~yy>),                                             'K_2ae'>,                                           hkdfExtract(~ltk, 'g'^(~xx*~yy))),                                h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                                $cAEAD0),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk, 'g'^(~xx*~yy)))) @ #vk.44
2: !KU( hkdfExpand(<$cAEAD0.3,                  h(<$cHash0.3,                     h(<$cHash0.2, <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.2,                                             h(<$cHash0.2,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.2, <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                                    'g'^~yy.1>),                                $cAEAD0.2),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~xx*~yy)))) @ #vk.47
3: !KU( 'g'^x ) @ #vk.38
4: !KU( 'g'^~xx ) @ #vk.31
5: !KU( 'g'^~yy ) @ #vk.16
6: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.2,                              h(<$cHash0.2, <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.2, <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                     'g'^~yy.1>),                 $cAEAD0.2)) @ #vk.50
7: !KU( 'g'^~yy.1 ) @ #vk.52

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 47 (directly): splitEqs(4)
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: splitEqs(4)
1: !KU( 'g'^(~xx*~yy*inv(~yy.1)) ) @ #vk.36
2: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~xx*~yy)))) @ #vk.56
3: !KU( hkdfExpand(<$cAEAD0.4,                  h(<$cHash0.4,                     h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, 'g'^x, $U.2, $V.2>,                        'g'^~yy.2>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.3,                                             h(<$cHash0.3,                                                <'PSK', 'PSK', $cSUITE0.2, 'g'^x, $U.2, $V.2>,                                                'g'^~yy.2>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.2, 'g'^(~xx*~yy))),                                h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, 'g'^x, $U.2, $V.2>,                                    'g'^~yy.2>),                                $cAEAD0.3),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.2, 'g'^(~xx*~yy)))) @ #vk.62
4: !KU( 'g'^x ) @ #vk.43
5: !KU( 'g'^~xx ) @ #vk.52
6: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1,                                 <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.1,                     <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                     'g'^~yy.1>),                 $cAEAD0.1)) @ #vk.59
7: !KU( 'g'^~yy.1 ) @ #vk.61
8: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.3,                              h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, 'g'^x, $U.2, $V.2>,                                 'g'^~yy.2>),                              'K_2ae'>,                            hkdfExtract(~ltk.2, 'g'^(~xx*~yy))),                 h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, 'g'^x, $U.2, $V.2>,                     'g'^~yy.2>),                 $cAEAD0.3)) @ #vk.65
9: !KU( 'g'^~yy.2 ) @ #vk.67
10: !KU( 'g'^~yy ) @ #vk.16

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 47 (directly): splitEqs(4)
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( 'g'^(~xx*~yy*inv(~yy.1)) ) @ #vk.38
1: !KU( hkdfExpand(<$cAEAD0.1,                  h(<$cHash0.1,                     h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0,                                             h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                                                'g'^~yy>),                                             'K_2ae'>,                                           hkdfExtract(~ltk, 'g'^(~xx*~yy))),                                h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                                $cAEAD0),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk, 'g'^(~xx*~yy)))) @ #vk.44
2: !KU( hkdfExpand(<$cAEAD0.3,                  h(<$cHash0.3,                     h(<$cHash0.2,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.2,                                             h(<$cHash0.2,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.2,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.2),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~xx*~yy)))) @ #vk.47
3: !KU( 'g'^~xx ) @ #vk.31
4: !KU( 'g'^~yy ) @ #vk.16
5: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.2,                              h(<$cHash0.2,                                 <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.2,                     <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                     'g'^~yy.1>),                 $cAEAD0.2)) @ #vk.50
6: !KU( 'g'^~yy.1 ) @ #vk.52

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 148 (precomputed):
    !KU( 'g'^(~xx*~yy*inv(~yy.1)) ) @ #vk.38
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.54
1: !KU( ~yy.1 ) @ #vk.56
2: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~xx*~yy)))) @ #vk.44
3: !KU( hkdfExpand(<$cAEAD0.3,                  h(<$cHash0.3,                     h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0,                                             h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                                                'g'^~yy>),                                             'K_2ae'>,                                           hkdfExtract(~ltk, 'g'^(~xx*~yy))),                                h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                                $cAEAD0),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk, 'g'^(~xx*~yy)))) @ #vk.50
4: !KU( 'g'^~xx ) @ #vk.38
5: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1,                                 <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.1,                     <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                     'g'^~yy.1>),                 $cAEAD0.1)) @ #vk.47
6: !KU( 'g'^~yy.1 ) @ #vk.49
7: !KU( 'g'^~yy ) @ #vk.17

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 161 (precomputed): !KU( ~xx ) @ #vk.54
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~yy ) @ #vk.54
1: !KU( ~yy.1 ) @ #vk.56
2: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~xx*~yy)))) @ #vk.44
3: !KU( hkdfExpand(<$cAEAD0.3,                  h(<$cHash0.3,                     h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0,                                             h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                                                'g'^~yy>),                                             'K_2ae'>,                                           hkdfExtract(~ltk, 'g'^(~xx*~yy))),                                h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                                $cAEAD0),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk, 'g'^(~xx*~yy)))) @ #vk.50
4: !KU( 'g'^~xx ) @ #vk.38
5: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1,                                 <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.1,                     <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                     'g'^~yy.1>),                 $cAEAD0.1)) @ #vk.47
6: !KU( 'g'^~yy.1 ) @ #vk.49
7: !KU( 'g'^~yy ) @ #vk.17

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 151 (precomputed): !KU( ~yy ) @ #vk.54
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.55
1: !KU( ~yy ) @ #vk.56
2: !KU( ~yy.1 ) @ #vk.58
3: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~xx*~yy)))) @ #vk.44
4: !KU( hkdfExpand(<$cAEAD0.3,                  h(<$cHash0.3,                     h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0,                                             h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                                                'g'^~yy>),                                             'K_2ae'>,                                           hkdfExtract(~ltk, 'g'^(~xx*~yy))),                                h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                                $cAEAD0),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk, 'g'^(~xx*~yy)))) @ #vk.50
5: !KU( 'g'^~xx ) @ #vk.38
6: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1,                                 <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.1,                     <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                     'g'^~yy.1>),                 $cAEAD0.1)) @ #vk.47
7: !KU( 'g'^~yy.1 ) @ #vk.49
8: !KU( 'g'^~yy ) @ #vk.17

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 152 (precomputed): !KU( ~xx ) @ #vk.55
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.70
1: !KU( ~yy ) @ #vk.71
2: !KU( ~yy.1 ) @ #vk.73
3: !KU( 'g'^(~xx*~yy*inv(~yy.2)) ) @ #vk.43
4: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~xx*~yy)))) @ #vk.56
5: !KU( hkdfExpand(<$cAEAD0.4,                  h(<$cHash0.4,                     h(<$cHash0.3,                        <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)), $U.2, $V.2>,                        'g'^~yy.2>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.3,                                             h(<$cHash0.3,                                                <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)),                                                 $U.2, $V.2>,                                                'g'^~yy.2>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.2, 'g'^(~xx*~yy))),                                h(<$cHash0.3,                                    <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)), $U.2, $V.2                                   >,                                    'g'^~yy.2>),                                $cAEAD0.3),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.2, 'g'^(~xx*~yy)))) @ #vk.62
6: !KU( 'g'^~xx ) @ #vk.52
7: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1,                                 <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.1,                     <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                     'g'^~yy.1>),                 $cAEAD0.1)) @ #vk.59
8: !KU( 'g'^~yy.1 ) @ #vk.61
9: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.3,                              h(<$cHash0.3,                                 <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)), $U.2, $V.2>,                                 'g'^~yy.2>),                              'K_2ae'>,                            hkdfExtract(~ltk.2, 'g'^(~xx*~yy))),                 h(<$cHash0.3,                     <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)), $U.2, $V.2>,                     'g'^~yy.2>),                 $cAEAD0.3)) @ #vk.65
10: !KU( 'g'^~yy.2 ) @ #vk.67
11: !KU( 'g'^~yy ) @ #vk.17

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 152 (precomputed): !KU( ~xx ) @ #vk.70
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~yy ) @ #vk.69
1: !KU( ~yy.1 ) @ #vk.71
2: !KU( 'g'^(~xx*~yy*inv(~yy.2)) ) @ #vk.43
3: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~xx*~yy)))) @ #vk.56
4: !KU( hkdfExpand(<$cAEAD0.4,                  h(<$cHash0.4,                     h(<$cHash0.3,                        <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)), $U.2, $V.2>,                        'g'^~yy.2>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.3,                                             h(<$cHash0.3,                                                <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)),                                                 $U.2, $V.2>,                                                'g'^~yy.2>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.2, 'g'^(~xx*~yy))),                                h(<$cHash0.3,                                    <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)), $U.2, $V.2                                   >,                                    'g'^~yy.2>),                                $cAEAD0.3),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.2, 'g'^(~xx*~yy)))) @ #vk.62
5: !KU( 'g'^~xx ) @ #vk.52
6: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1,                                 <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.1,                     <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                     'g'^~yy.1>),                 $cAEAD0.1)) @ #vk.59
7: !KU( 'g'^~yy.1 ) @ #vk.61
8: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.3,                              h(<$cHash0.3,                                 <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)), $U.2, $V.2>,                                 'g'^~yy.2>),                              'K_2ae'>,                            hkdfExtract(~ltk.2, 'g'^(~xx*~yy))),                 h(<$cHash0.3,                     <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)), $U.2, $V.2>,                     'g'^~yy.2>),                 $cAEAD0.3)) @ #vk.65
9: !KU( 'g'^~yy.2 ) @ #vk.67
10: !KU( 'g'^~yy ) @ #vk.17

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 151 (precomputed): !KU( ~yy ) @ #vk.69
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.69
1: !KU( ~yy.1 ) @ #vk.71
2: !KU( 'g'^(~xx*~yy*inv(~yy.2)) ) @ #vk.43
3: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~xx*~yy)))) @ #vk.56
4: !KU( hkdfExpand(<$cAEAD0.4,                  h(<$cHash0.4,                     h(<$cHash0.3,                        <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)), $U.2, $V.2>,                        'g'^~yy.2>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.3,                                             h(<$cHash0.3,                                                <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)),                                                 $U.2, $V.2>,                                                'g'^~yy.2>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.2, 'g'^(~xx*~yy))),                                h(<$cHash0.3,                                    <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)), $U.2, $V.2                                   >,                                    'g'^~yy.2>),                                $cAEAD0.3),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.2, 'g'^(~xx*~yy)))) @ #vk.62
5: !KU( 'g'^~xx ) @ #vk.52
6: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1,                                 <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.1,                     <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                     'g'^~yy.1>),                 $cAEAD0.1)) @ #vk.59
7: !KU( 'g'^~yy.1 ) @ #vk.61
8: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.3,                              h(<$cHash0.3,                                 <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)), $U.2, $V.2>,                                 'g'^~yy.2>),                              'K_2ae'>,                            hkdfExtract(~ltk.2, 'g'^(~xx*~yy))),                 h(<$cHash0.3,                     <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)), $U.2, $V.2>,                     'g'^~yy.2>),                 $cAEAD0.3)) @ #vk.65
9: !KU( 'g'^~yy.2 ) @ #vk.67
10: !KU( 'g'^~yy ) @ #vk.17

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 161 (precomputed): !KU( ~xx ) @ #vk.69
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~yy ) @ #vk.54
1: !KU( ~yy.1 ) @ #vk.56
2: !KU( hkdfExpand(<$cAEAD0.1,                  h(<$cHash0.1,                     h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0,                                             h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                                                'g'^~yy>),                                             'K_2ae'>,                                           hkdfExtract(~ltk, 'g'^(~xx*~yy))),                                h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                                $cAEAD0),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk, 'g'^(~xx*~yy)))) @ #vk.44
3: !KU( hkdfExpand(<$cAEAD0.3,                  h(<$cHash0.3,                     h(<$cHash0.2,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.2,                                             h(<$cHash0.2,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.2,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.2),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~xx*~yy)))) @ #vk.47
4: !KU( 'g'^~xx ) @ #vk.32
5: !KU( 'g'^~yy ) @ #vk.17
6: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.2,                              h(<$cHash0.2,                                 <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.2,                     <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                     'g'^~yy.1>),                 $cAEAD0.2)) @ #vk.50
7: !KU( 'g'^~yy.1 ) @ #vk.52

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 151 (precomputed): !KU( ~yy ) @ #vk.54
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.55
1: !KU( ~yy ) @ #vk.56
2: !KU( ~yy.1 ) @ #vk.58
3: !KU( hkdfExpand(<$cAEAD0.1,                  h(<$cHash0.1,                     h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0,                                             h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                                                'g'^~yy>),                                             'K_2ae'>,                                           hkdfExtract(~ltk, 'g'^(~xx*~yy))),                                h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                                $cAEAD0),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk, 'g'^(~xx*~yy)))) @ #vk.44
4: !KU( hkdfExpand(<$cAEAD0.3,                  h(<$cHash0.3,                     h(<$cHash0.2,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.2,                                             h(<$cHash0.2,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.2,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.2),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~xx*~yy)))) @ #vk.47
5: !KU( 'g'^~xx ) @ #vk.32
6: !KU( 'g'^~yy ) @ #vk.17
7: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.2,                              h(<$cHash0.2,                                 <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.2,                     <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                     'g'^~yy.1>),                 $cAEAD0.2)) @ #vk.50
8: !KU( 'g'^~yy.1 ) @ #vk.52

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 152 (precomputed): !KU( ~xx ) @ #vk.55
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.54
1: !KU( ~yy.1 ) @ #vk.56
2: !KU( hkdfExpand(<$cAEAD0.1,                  h(<$cHash0.1,                     h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0,                                             h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                                                'g'^~yy>),                                             'K_2ae'>,                                           hkdfExtract(~ltk, 'g'^(~xx*~yy))),                                h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                                $cAEAD0),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk, 'g'^(~xx*~yy)))) @ #vk.44
3: !KU( hkdfExpand(<$cAEAD0.3,                  h(<$cHash0.3,                     h(<$cHash0.2,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.2,                                             h(<$cHash0.2,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.2,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.2),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~xx*~yy)))) @ #vk.47
4: !KU( 'g'^~xx ) @ #vk.32
5: !KU( 'g'^~yy ) @ #vk.17
6: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.2,                              h(<$cHash0.2,                                 <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.2,                     <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                     'g'^~yy.1>),                 $cAEAD0.2)) @ #vk.50
7: !KU( 'g'^~yy.1 ) @ #vk.52

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 161 (precomputed): !KU( ~xx ) @ #vk.54
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: splitEqs(4)
1: !KU( hkdfExpand(<$cAEAD0.1,                  h(<$cHash0.1,                     h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0,                                             h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                                                'g'^~yy>),                                             'K_2ae'>,                                           hkdfExtract(~ltk, 'g'^(~xx*~yy))),                                h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                                $cAEAD0),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk, 'g'^(~xx*~yy)))) @ #vk.44
2: !KU( hkdfExpand(<$cAEAD0.3,                  h(<$cHash0.3,                     h(<$cHash0.2, <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.2,                                             h(<$cHash0.2,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.2, <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                                    'g'^~yy.1>),                                $cAEAD0.2),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~xx*~yy)))) @ #vk.47
3: !KU( 'g'^x ) @ #vk.38
4: !KU( 'g'^~xx ) @ #vk.31
5: !KU( 'g'^~yy ) @ #vk.16
6: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.2,                              h(<$cHash0.2, <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.2, <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                     'g'^~yy.1>),                 $cAEAD0.2)) @ #vk.50
7: !KU( 'g'^~yy.1 ) @ #vk.52

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 47 (directly): splitEqs(4)
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: splitEqs(4)
1: !KU( 'g'^(~xx*~yy*inv(~yy.1)) ) @ #vk.36
2: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~xx*~yy)))) @ #vk.56
3: !KU( hkdfExpand(<$cAEAD0.4,                  h(<$cHash0.4,                     h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, 'g'^x, $U.2, $V.2>,                        'g'^~yy.2>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.3,                                             h(<$cHash0.3,                                                <'PSK', 'PSK', $cSUITE0.2, 'g'^x, $U.2, $V.2>,                                                'g'^~yy.2>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.2, 'g'^(~xx*~yy))),                                h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, 'g'^x, $U.2, $V.2>,                                    'g'^~yy.2>),                                $cAEAD0.3),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.2, 'g'^(~xx*~yy)))) @ #vk.62
4: !KU( 'g'^x ) @ #vk.43
5: !KU( 'g'^~xx ) @ #vk.52
6: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1,                                 <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.1,                     <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                     'g'^~yy.1>),                 $cAEAD0.1)) @ #vk.59
7: !KU( 'g'^~yy.1 ) @ #vk.61
8: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.3,                              h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, 'g'^x, $U.2, $V.2>,                                 'g'^~yy.2>),                              'K_2ae'>,                            hkdfExtract(~ltk.2, 'g'^(~xx*~yy))),                 h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, 'g'^x, $U.2, $V.2>,                     'g'^~yy.2>),                 $cAEAD0.3)) @ #vk.65
9: !KU( 'g'^~yy.2 ) @ #vk.67
10: !KU( 'g'^~yy ) @ #vk.16

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 47 (directly): splitEqs(4)
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( 'g'^(~xx*~yy*inv(~yy.1)) ) @ #vk.36
1: !KU( 'g'^(~xx*~yy*inv(~yy.2)) ) @ #vk.43
2: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~xx*~yy)))) @ #vk.56
3: !KU( hkdfExpand(<$cAEAD0.4,                  h(<$cHash0.4,                     h(<$cHash0.3,                        <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)), $U.2, $V.2>,                        'g'^~yy.2>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.3,                                             h(<$cHash0.3,                                                <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)),                                                 $U.2, $V.2>,                                                'g'^~yy.2>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.2, 'g'^(~xx*~yy))),                                h(<$cHash0.3,                                    <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)), $U.2, $V.2                                   >,                                    'g'^~yy.2>),                                $cAEAD0.3),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.2, 'g'^(~xx*~yy)))) @ #vk.62
4: !KU( 'g'^~xx ) @ #vk.52
5: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1,                                 <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.1,                     <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                     'g'^~yy.1>),                 $cAEAD0.1)) @ #vk.59
6: !KU( 'g'^~yy.1 ) @ #vk.61
7: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.3,                              h(<$cHash0.3,                                 <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)), $U.2, $V.2>,                                 'g'^~yy.2>),                              'K_2ae'>,                            hkdfExtract(~ltk.2, 'g'^(~xx*~yy))),                 h(<$cHash0.3,                     <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)), $U.2, $V.2>,                     'g'^~yy.2>),                 $cAEAD0.3)) @ #vk.65
8: !KU( 'g'^~yy.2 ) @ #vk.67
9: !KU( 'g'^~yy ) @ #vk.16

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( 'g'^(~xx*~yy*inv(~yy.1)) ) @ #vk.31
1: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~xx*~yy)))) @ #vk.44
2: !KU( hkdfExpand(<$cAEAD0.3,                  h(<$cHash0.3,                     h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0,                                             h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                                                'g'^~yy>),                                             'K_2ae'>,                                           hkdfExtract(~ltk, 'g'^(~xx*~yy))),                                h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                                $cAEAD0),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk, 'g'^(~xx*~yy)))) @ #vk.50
3: !KU( 'g'^~xx ) @ #vk.38
4: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1,                                 <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.1,                     <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                     'g'^~yy.1>),                 $cAEAD0.1)) @ #vk.47
5: !KU( 'g'^~yy.1 ) @ #vk.49
6: !KU( 'g'^~yy ) @ #vk.16

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 147 (precomputed):
    !KU( 'g'^(~xx*~yy*inv(~yy.1)) ) @ #vk.36
  solved goal nr. 147 (precomputed):
    !KU( 'g'^(~xx*~yy*inv(~yy.1)) ) @ #vk.31
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( 'g'^(~xx*~yy*inv(~yy.1)) ) @ #vk.38
1: !KU( hkdfExpand(<$cAEAD0.1,                  h(<$cHash0.1,                     h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0,                                             h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                                                'g'^~yy>),                                             'K_2ae'>,                                           hkdfExtract(~ltk, 'g'^(~xx*~yy))),                                h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                                $cAEAD0),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk, 'g'^(~xx*~yy)))) @ #vk.44
2: !KU( hkdfExpand(<$cAEAD0.3,                  h(<$cHash0.3,                     h(<$cHash0.2,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.2,                                             h(<$cHash0.2,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.2,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.2),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~xx*~yy)))) @ #vk.47
3: !KU( 'g'^~xx ) @ #vk.31
4: !KU( 'g'^~yy ) @ #vk.16
5: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.2,                              h(<$cHash0.2,                                 <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.2,                     <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                     'g'^~yy.1>),                 $cAEAD0.2)) @ #vk.50
6: !KU( 'g'^~yy.1 ) @ #vk.52

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 143 (precomputed):
    !KU( 'g'^(~xx*~yy*inv(~yy.1)) ) @ #vk.38
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.54
1: !KU( ~yy.1 ) @ #vk.56
2: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~xx*~yy)))) @ #vk.44
3: !KU( hkdfExpand(<$cAEAD0.3,                  h(<$cHash0.3,                     h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0,                                             h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                                                'g'^~yy>),                                             'K_2ae'>,                                           hkdfExtract(~ltk, 'g'^(~xx*~yy))),                                h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                                $cAEAD0),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk, 'g'^(~xx*~yy)))) @ #vk.50
4: !KU( 'g'^~xx ) @ #vk.38
5: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1,                                 <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.1,                     <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                     'g'^~yy.1>),                 $cAEAD0.1)) @ #vk.47
6: !KU( 'g'^~yy.1 ) @ #vk.49
7: !KU( 'g'^~yy ) @ #vk.17

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 161 (precomputed): !KU( ~xx ) @ #vk.54
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~yy ) @ #vk.54
1: !KU( ~yy.1 ) @ #vk.56
2: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~xx*~yy)))) @ #vk.44
3: !KU( hkdfExpand(<$cAEAD0.3,                  h(<$cHash0.3,                     h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0,                                             h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                                                'g'^~yy>),                                             'K_2ae'>,                                           hkdfExtract(~ltk, 'g'^(~xx*~yy))),                                h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                                $cAEAD0),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk, 'g'^(~xx*~yy)))) @ #vk.50
4: !KU( 'g'^~xx ) @ #vk.38
5: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1,                                 <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.1,                     <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                     'g'^~yy.1>),                 $cAEAD0.1)) @ #vk.47
6: !KU( 'g'^~yy.1 ) @ #vk.49
7: !KU( 'g'^~yy ) @ #vk.17

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 151 (precomputed): !KU( ~yy ) @ #vk.54
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.55
1: !KU( ~yy ) @ #vk.56
2: !KU( ~yy.1 ) @ #vk.58
3: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~xx*~yy)))) @ #vk.44
4: !KU( hkdfExpand(<$cAEAD0.3,                  h(<$cHash0.3,                     h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0,                                             h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                                                'g'^~yy>),                                             'K_2ae'>,                                           hkdfExtract(~ltk, 'g'^(~xx*~yy))),                                h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                                $cAEAD0),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk, 'g'^(~xx*~yy)))) @ #vk.50
5: !KU( 'g'^~xx ) @ #vk.38
6: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1,                                 <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.1,                     <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                     'g'^~yy.1>),                 $cAEAD0.1)) @ #vk.47
7: !KU( 'g'^~yy.1 ) @ #vk.49
8: !KU( 'g'^~yy ) @ #vk.17

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 152 (precomputed): !KU( ~xx ) @ #vk.55
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~yy ) @ #vk.55
1: !KU( ~yy.1 ) @ #vk.57
2: !KU( hkdfExpand(<$cAEAD0.1,                  h(<$cHash0.1,                     h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0,                                             h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                                                'g'^~yy>),                                             'K_2ae'>,                                           hkdfExtract(~ltk, 'g'^(~xx*~yy))),                                h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                                $cAEAD0),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk, 'g'^(~xx*~yy)))) @ #vk.44
3: !KU( hkdfExpand(<$cAEAD0.3,                  h(<$cHash0.3,                     h(<$cHash0.2,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.2,                                             h(<$cHash0.2,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.2,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.2),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~xx*~yy)))) @ #vk.47
4: !KU( 'g'^~xx ) @ #vk.32
5: !KU( 'g'^~yy ) @ #vk.17
6: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.2,                              h(<$cHash0.2,                                 <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.2,                     <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                     'g'^~yy.1>),                 $cAEAD0.2)) @ #vk.50
7: !KU( 'g'^~yy.1 ) @ #vk.52

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 146 (precomputed): !KU( ~yy ) @ #vk.55
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.55
1: !KU( ~yy.1 ) @ #vk.57
2: !KU( hkdfExpand(<$cAEAD0.1,                  h(<$cHash0.1,                     h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0,                                             h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                                                'g'^~yy>),                                             'K_2ae'>,                                           hkdfExtract(~ltk, 'g'^(~xx*~yy))),                                h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                                $cAEAD0),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk, 'g'^(~xx*~yy)))) @ #vk.44
3: !KU( hkdfExpand(<$cAEAD0.3,                  h(<$cHash0.3,                     h(<$cHash0.2,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.2,                                             h(<$cHash0.2,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.2,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.2),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~xx*~yy)))) @ #vk.47
4: !KU( 'g'^~xx ) @ #vk.32
5: !KU( 'g'^~yy ) @ #vk.17
6: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.2,                              h(<$cHash0.2,                                 <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.2,                     <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                     'g'^~yy.1>),                 $cAEAD0.2)) @ #vk.50
7: !KU( 'g'^~yy.1 ) @ #vk.52

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 156 (precomputed): !KU( ~xx ) @ #vk.55
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.56
1: !KU( ~yy ) @ #vk.57
2: !KU( ~yy.1 ) @ #vk.59
3: !KU( hkdfExpand(<$cAEAD0.1,                  h(<$cHash0.1,                     h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0,                                             h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                                                'g'^~yy>),                                             'K_2ae'>,                                           hkdfExtract(~ltk, 'g'^(~xx*~yy))),                                h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                                $cAEAD0),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk, 'g'^(~xx*~yy)))) @ #vk.44
4: !KU( hkdfExpand(<$cAEAD0.3,                  h(<$cHash0.3,                     h(<$cHash0.2,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.2,                                             h(<$cHash0.2,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.2,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.2),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~xx*~yy)))) @ #vk.47
5: !KU( 'g'^~xx ) @ #vk.32
6: !KU( 'g'^~yy ) @ #vk.17
7: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.2,                              h(<$cHash0.2,                                 <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.2,                     <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                     'g'^~yy.1>),                 $cAEAD0.2)) @ #vk.50
8: !KU( 'g'^~yy.1 ) @ #vk.52

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 147 (precomputed): !KU( ~xx ) @ #vk.56
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.69
1: !KU( ~yy.1 ) @ #vk.71
2: !KU( 'g'^(~xx*~yy*inv(~yy.2)) ) @ #vk.43
3: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~xx*~yy)))) @ #vk.56
4: !KU( hkdfExpand(<$cAEAD0.4,                  h(<$cHash0.4,                     h(<$cHash0.3,                        <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)), $U.2, $V.2>,                        'g'^~yy.2>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.3,                                             h(<$cHash0.3,                                                <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)),                                                 $U.2, $V.2>,                                                'g'^~yy.2>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.2, 'g'^(~xx*~yy))),                                h(<$cHash0.3,                                    <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)), $U.2, $V.2                                   >,                                    'g'^~yy.2>),                                $cAEAD0.3),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.2, 'g'^(~xx*~yy)))) @ #vk.62
5: !KU( 'g'^~xx ) @ #vk.52
6: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1,                                 <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.1,                     <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                     'g'^~yy.1>),                 $cAEAD0.1)) @ #vk.59
7: !KU( 'g'^~yy.1 ) @ #vk.61
8: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.3,                              h(<$cHash0.3,                                 <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)), $U.2, $V.2>,                                 'g'^~yy.2>),                              'K_2ae'>,                            hkdfExtract(~ltk.2, 'g'^(~xx*~yy))),                 h(<$cHash0.3,                     <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)), $U.2, $V.2>,                     'g'^~yy.2>),                 $cAEAD0.3)) @ #vk.65
9: !KU( 'g'^~yy.2 ) @ #vk.67
10: !KU( 'g'^~yy ) @ #vk.17

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 161 (precomputed): !KU( ~xx ) @ #vk.69
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~yy ) @ #vk.69
1: !KU( ~yy.1 ) @ #vk.71
2: !KU( 'g'^(~xx*~yy*inv(~yy.2)) ) @ #vk.43
3: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~xx*~yy)))) @ #vk.56
4: !KU( hkdfExpand(<$cAEAD0.4,                  h(<$cHash0.4,                     h(<$cHash0.3,                        <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)), $U.2, $V.2>,                        'g'^~yy.2>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.3,                                             h(<$cHash0.3,                                                <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)),                                                 $U.2, $V.2>,                                                'g'^~yy.2>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.2, 'g'^(~xx*~yy))),                                h(<$cHash0.3,                                    <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)), $U.2, $V.2                                   >,                                    'g'^~yy.2>),                                $cAEAD0.3),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.2, 'g'^(~xx*~yy)))) @ #vk.62
5: !KU( 'g'^~xx ) @ #vk.52
6: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1,                                 <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.1,                     <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                     'g'^~yy.1>),                 $cAEAD0.1)) @ #vk.59
7: !KU( 'g'^~yy.1 ) @ #vk.61
8: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.3,                              h(<$cHash0.3,                                 <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)), $U.2, $V.2>,                                 'g'^~yy.2>),                              'K_2ae'>,                            hkdfExtract(~ltk.2, 'g'^(~xx*~yy))),                 h(<$cHash0.3,                     <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)), $U.2, $V.2>,                     'g'^~yy.2>),                 $cAEAD0.3)) @ #vk.65
9: !KU( 'g'^~yy.2 ) @ #vk.67
10: !KU( 'g'^~yy ) @ #vk.17

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 151 (precomputed): !KU( ~yy ) @ #vk.69
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.70
1: !KU( ~yy ) @ #vk.71
2: !KU( ~yy.1 ) @ #vk.73
3: !KU( 'g'^(~xx*~yy*inv(~yy.2)) ) @ #vk.43
4: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~xx*~yy)))) @ #vk.56
5: !KU( hkdfExpand(<$cAEAD0.4,                  h(<$cHash0.4,                     h(<$cHash0.3,                        <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)), $U.2, $V.2>,                        'g'^~yy.2>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.3,                                             h(<$cHash0.3,                                                <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)),                                                 $U.2, $V.2>,                                                'g'^~yy.2>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.2, 'g'^(~xx*~yy))),                                h(<$cHash0.3,                                    <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)), $U.2, $V.2                                   >,                                    'g'^~yy.2>),                                $cAEAD0.3),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.2, 'g'^(~xx*~yy)))) @ #vk.62
6: !KU( 'g'^~xx ) @ #vk.52
7: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1,                                 <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.1,                     <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                     'g'^~yy.1>),                 $cAEAD0.1)) @ #vk.59
8: !KU( 'g'^~yy.1 ) @ #vk.61
9: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.3,                              h(<$cHash0.3,                                 <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)), $U.2, $V.2>,                                 'g'^~yy.2>),                              'K_2ae'>,                            hkdfExtract(~ltk.2, 'g'^(~xx*~yy))),                 h(<$cHash0.3,                     <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)), $U.2, $V.2>,                     'g'^~yy.2>),                 $cAEAD0.3)) @ #vk.65
10: !KU( 'g'^~yy.2 ) @ #vk.67
11: !KU( 'g'^~yy ) @ #vk.17

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 152 (precomputed): !KU( ~xx ) @ #vk.70
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( 'g'^(~xx*~yy*inv(~yy.1)) ) @ #vk.31
1: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~xx*~yy)))) @ #vk.44
2: !KU( hkdfExpand(<$cAEAD0.3,                  h(<$cHash0.3,                     h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0,                                             h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                                                'g'^~yy>),                                             'K_2ae'>,                                           hkdfExtract(~ltk, 'g'^(~xx*~yy))),                                h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                                $cAEAD0),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk, 'g'^(~xx*~yy)))) @ #vk.50
3: !KU( 'g'^~xx ) @ #vk.38
4: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1,                                 <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.1,                     <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                     'g'^~yy.1>),                 $cAEAD0.1)) @ #vk.47
5: !KU( 'g'^~yy.1 ) @ #vk.49
6: !KU( 'g'^~yy ) @ #vk.16

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( 'g'^(~xx*~yy*inv(~yy.1)) ) @ #vk.36
1: !KU( 'g'^(~xx*~yy*inv(~yy.2)) ) @ #vk.43
2: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~xx*~yy)))) @ #vk.56
3: !KU( hkdfExpand(<$cAEAD0.4,                  h(<$cHash0.4,                     h(<$cHash0.3,                        <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)), $U.2, $V.2>,                        'g'^~yy.2>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.3,                                             h(<$cHash0.3,                                                <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)),                                                 $U.2, $V.2>,                                                'g'^~yy.2>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.2, 'g'^(~xx*~yy))),                                h(<$cHash0.3,                                    <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)), $U.2, $V.2                                   >,                                    'g'^~yy.2>),                                $cAEAD0.3),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.2, 'g'^(~xx*~yy)))) @ #vk.62
4: !KU( 'g'^~xx ) @ #vk.52
5: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1,                                 <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.1,                     <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                     'g'^~yy.1>),                 $cAEAD0.1)) @ #vk.59
6: !KU( 'g'^~yy.1 ) @ #vk.61
7: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.3,                              h(<$cHash0.3,                                 <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)), $U.2, $V.2>,                                 'g'^~yy.2>),                              'K_2ae'>,                            hkdfExtract(~ltk.2, 'g'^(~xx*~yy))),                 h(<$cHash0.3,                     <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)), $U.2, $V.2>,                     'g'^~yy.2>),                 $cAEAD0.3)) @ #vk.65
8: !KU( 'g'^~yy.2 ) @ #vk.67
9: !KU( 'g'^~yy ) @ #vk.16

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 142 (precomputed):
    !KU( 'g'^(~xx*~yy*inv(~yy.1)) ) @ #vk.31
  solved goal nr. 142 (precomputed):
    !KU( 'g'^(~xx*~yy*inv(~yy.1)) ) @ #vk.36
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: splitEqs(4)
1: !KU( hkdfExpand(<$cAEAD0.1,                  h(<$cHash0.1,                     h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0,                                             h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                                                'g'^~yy>),                                             'K_2ae'>,                                           hkdfExtract(~ltk, 'g'^(~xx*~yy))),                                h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                                $cAEAD0),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk, 'g'^(~xx*~yy)))) @ #vk.44
2: !KU( hkdfExpand(<$cAEAD0.3,                  h(<$cHash0.3,                     h(<$cHash0.2, <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.2,                                             h(<$cHash0.2,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.2, <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                                    'g'^~yy.1>),                                $cAEAD0.2),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~xx*~yy)))) @ #vk.47
3: !KU( 'g'^x ) @ #vk.38
4: !KU( 'g'^~xx ) @ #vk.31
5: !KU( 'g'^~yy ) @ #vk.16
6: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.2,                              h(<$cHash0.2, <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.2, <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                     'g'^~yy.1>),                 $cAEAD0.2)) @ #vk.50
7: !KU( 'g'^~yy.1 ) @ #vk.52

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 47 (directly): splitEqs(4)
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: splitEqs(4)
1: !KU( 'g'^(~xx*~yy*inv(~yy.1)) ) @ #vk.36
2: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~xx*~yy)))) @ #vk.56
3: !KU( hkdfExpand(<$cAEAD0.4,                  h(<$cHash0.4,                     h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, 'g'^x, $U.2, $V.2>,                        'g'^~yy.2>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.3,                                             h(<$cHash0.3,                                                <'PSK', 'PSK', $cSUITE0.2, 'g'^x, $U.2, $V.2>,                                                'g'^~yy.2>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.2, 'g'^(~xx*~yy))),                                h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, 'g'^x, $U.2, $V.2>,                                    'g'^~yy.2>),                                $cAEAD0.3),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.2, 'g'^(~xx*~yy)))) @ #vk.62
4: !KU( 'g'^x ) @ #vk.43
5: !KU( 'g'^~xx ) @ #vk.52
6: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1,                                 <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.1,                     <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                     'g'^~yy.1>),                 $cAEAD0.1)) @ #vk.59
7: !KU( 'g'^~yy.1 ) @ #vk.61
8: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.3,                              h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, 'g'^x, $U.2, $V.2>,                                 'g'^~yy.2>),                              'K_2ae'>,                            hkdfExtract(~ltk.2, 'g'^(~xx*~yy))),                 h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, 'g'^x, $U.2, $V.2>,                     'g'^~yy.2>),                 $cAEAD0.3)) @ #vk.65
9: !KU( 'g'^~yy.2 ) @ #vk.67
10: !KU( 'g'^~yy ) @ #vk.16

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 47 (directly): splitEqs(4)
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( 'g'^(~xx*~yy*inv(~yy.1)) ) @ #vk.38
1: !KU( hkdfExpand(<$cAEAD0.1,                  h(<$cHash0.1,                     h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0,                                             h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                                                'g'^~yy>),                                             'K_2ae'>,                                           hkdfExtract(~ltk, 'g'^(~xx*~yy))),                                h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                                $cAEAD0),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk, 'g'^(~xx*~yy)))) @ #vk.44
2: !KU( hkdfExpand(<$cAEAD0.3,                  h(<$cHash0.3,                     h(<$cHash0.2,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.2,                                             h(<$cHash0.2,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.2,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.2),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~xx*~yy)))) @ #vk.47
3: !KU( 'g'^~xx ) @ #vk.31
4: !KU( 'g'^~yy ) @ #vk.16
5: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.2,                              h(<$cHash0.2,                                 <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.2,                     <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                     'g'^~yy.1>),                 $cAEAD0.2)) @ #vk.50
6: !KU( 'g'^~yy.1 ) @ #vk.52

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 143 (precomputed):
    !KU( 'g'^(~xx*~yy*inv(~yy.1)) ) @ #vk.38
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.55
1: !KU( ~yy.1 ) @ #vk.57
2: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~xx*~yy)))) @ #vk.44
3: !KU( hkdfExpand(<$cAEAD0.3,                  h(<$cHash0.3,                     h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0,                                             h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                                                'g'^~yy>),                                             'K_2ae'>,                                           hkdfExtract(~ltk, 'g'^(~xx*~yy))),                                h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                                $cAEAD0),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk, 'g'^(~xx*~yy)))) @ #vk.50
4: !KU( 'g'^~xx ) @ #vk.38
5: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1,                                 <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.1,                     <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                     'g'^~yy.1>),                 $cAEAD0.1)) @ #vk.47
6: !KU( 'g'^~yy.1 ) @ #vk.49
7: !KU( 'g'^~yy ) @ #vk.17

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 156 (precomputed): !KU( ~xx ) @ #vk.55
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~yy ) @ #vk.55
1: !KU( ~yy.1 ) @ #vk.57
2: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~xx*~yy)))) @ #vk.44
3: !KU( hkdfExpand(<$cAEAD0.3,                  h(<$cHash0.3,                     h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0,                                             h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                                                'g'^~yy>),                                             'K_2ae'>,                                           hkdfExtract(~ltk, 'g'^(~xx*~yy))),                                h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                                $cAEAD0),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk, 'g'^(~xx*~yy)))) @ #vk.50
4: !KU( 'g'^~xx ) @ #vk.38
5: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1,                                 <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.1,                     <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                     'g'^~yy.1>),                 $cAEAD0.1)) @ #vk.47
6: !KU( 'g'^~yy.1 ) @ #vk.49
7: !KU( 'g'^~yy ) @ #vk.17

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 146 (precomputed): !KU( ~yy ) @ #vk.55
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.56
1: !KU( ~yy ) @ #vk.57
2: !KU( ~yy.1 ) @ #vk.59
3: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~xx*~yy)))) @ #vk.44
4: !KU( hkdfExpand(<$cAEAD0.3,                  h(<$cHash0.3,                     h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0,                                             h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                                                'g'^~yy>),                                             'K_2ae'>,                                           hkdfExtract(~ltk, 'g'^(~xx*~yy))),                                h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                                $cAEAD0),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk, 'g'^(~xx*~yy)))) @ #vk.50
5: !KU( 'g'^~xx ) @ #vk.38
6: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1,                                 <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.1,                     <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                     'g'^~yy.1>),                 $cAEAD0.1)) @ #vk.47
7: !KU( 'g'^~yy.1 ) @ #vk.49
8: !KU( 'g'^~yy ) @ #vk.17

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 147 (precomputed): !KU( ~xx ) @ #vk.56
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.70
1: !KU( ~yy.1 ) @ #vk.72
2: !KU( 'g'^(~xx*~yy*inv(~yy.2)) ) @ #vk.43
3: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~xx*~yy)))) @ #vk.56
4: !KU( hkdfExpand(<$cAEAD0.4,                  h(<$cHash0.4,                     h(<$cHash0.3,                        <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)), $U.2, $V.2>,                        'g'^~yy.2>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.3,                                             h(<$cHash0.3,                                                <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)),                                                 $U.2, $V.2>,                                                'g'^~yy.2>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.2, 'g'^(~xx*~yy))),                                h(<$cHash0.3,                                    <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)), $U.2, $V.2                                   >,                                    'g'^~yy.2>),                                $cAEAD0.3),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.2, 'g'^(~xx*~yy)))) @ #vk.62
5: !KU( 'g'^~xx ) @ #vk.52
6: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1,                                 <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.1,                     <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                     'g'^~yy.1>),                 $cAEAD0.1)) @ #vk.59
7: !KU( 'g'^~yy.1 ) @ #vk.61
8: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.3,                              h(<$cHash0.3,                                 <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)), $U.2, $V.2>,                                 'g'^~yy.2>),                              'K_2ae'>,                            hkdfExtract(~ltk.2, 'g'^(~xx*~yy))),                 h(<$cHash0.3,                     <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)), $U.2, $V.2>,                     'g'^~yy.2>),                 $cAEAD0.3)) @ #vk.65
9: !KU( 'g'^~yy.2 ) @ #vk.67
10: !KU( 'g'^~yy ) @ #vk.17

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 156 (precomputed): !KU( ~xx ) @ #vk.70
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.71
1: !KU( ~yy ) @ #vk.72
2: !KU( ~yy.1 ) @ #vk.74
3: !KU( 'g'^(~xx*~yy*inv(~yy.2)) ) @ #vk.43
4: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~xx*~yy)))) @ #vk.56
5: !KU( hkdfExpand(<$cAEAD0.4,                  h(<$cHash0.4,                     h(<$cHash0.3,                        <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)), $U.2, $V.2>,                        'g'^~yy.2>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.3,                                             h(<$cHash0.3,                                                <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)),                                                 $U.2, $V.2>,                                                'g'^~yy.2>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.2, 'g'^(~xx*~yy))),                                h(<$cHash0.3,                                    <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)), $U.2, $V.2                                   >,                                    'g'^~yy.2>),                                $cAEAD0.3),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.2, 'g'^(~xx*~yy)))) @ #vk.62
6: !KU( 'g'^~xx ) @ #vk.52
7: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1,                                 <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.1,                     <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                     'g'^~yy.1>),                 $cAEAD0.1)) @ #vk.59
8: !KU( 'g'^~yy.1 ) @ #vk.61
9: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.3,                              h(<$cHash0.3,                                 <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)), $U.2, $V.2>,                                 'g'^~yy.2>),                              'K_2ae'>,                            hkdfExtract(~ltk.2, 'g'^(~xx*~yy))),                 h(<$cHash0.3,                     <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)), $U.2, $V.2>,                     'g'^~yy.2>),                 $cAEAD0.3)) @ #vk.65
10: !KU( 'g'^~yy.2 ) @ #vk.67
11: !KU( 'g'^~yy ) @ #vk.17

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 147 (precomputed): !KU( ~xx ) @ #vk.71
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~yy ) @ #vk.70
1: !KU( ~yy.1 ) @ #vk.72
2: !KU( 'g'^(~xx*~yy*inv(~yy.2)) ) @ #vk.43
3: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~xx*~yy)))) @ #vk.56
4: !KU( hkdfExpand(<$cAEAD0.4,                  h(<$cHash0.4,                     h(<$cHash0.3,                        <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)), $U.2, $V.2>,                        'g'^~yy.2>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.3,                                             h(<$cHash0.3,                                                <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)),                                                 $U.2, $V.2>,                                                'g'^~yy.2>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.2, 'g'^(~xx*~yy))),                                h(<$cHash0.3,                                    <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)), $U.2, $V.2                                   >,                                    'g'^~yy.2>),                                $cAEAD0.3),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.2, 'g'^(~xx*~yy)))) @ #vk.62
5: !KU( 'g'^~xx ) @ #vk.52
6: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1,                                 <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.1,                     <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                     'g'^~yy.1>),                 $cAEAD0.1)) @ #vk.59
7: !KU( 'g'^~yy.1 ) @ #vk.61
8: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.3,                              h(<$cHash0.3,                                 <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)), $U.2, $V.2>,                                 'g'^~yy.2>),                              'K_2ae'>,                            hkdfExtract(~ltk.2, 'g'^(~xx*~yy))),                 h(<$cHash0.3,                     <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)), $U.2, $V.2>,                     'g'^~yy.2>),                 $cAEAD0.3)) @ #vk.65
9: !KU( 'g'^~yy.2 ) @ #vk.67
10: !KU( 'g'^~yy ) @ #vk.17

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 146 (precomputed): !KU( ~yy ) @ #vk.70
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.55
1: !KU( ~yy.1 ) @ #vk.57
2: !KU( hkdfExpand(<$cAEAD0.1,                  h(<$cHash0.1,                     h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0,                                             h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                                                'g'^~yy>),                                             'K_2ae'>,                                           hkdfExtract(~ltk, 'g'^(~xx*~yy))),                                h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                                $cAEAD0),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk, 'g'^(~xx*~yy)))) @ #vk.44
3: !KU( hkdfExpand(<$cAEAD0.3,                  h(<$cHash0.3,                     h(<$cHash0.2,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.2,                                             h(<$cHash0.2,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.2,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.2),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~xx*~yy)))) @ #vk.47
4: !KU( 'g'^~xx ) @ #vk.32
5: !KU( 'g'^~yy ) @ #vk.17
6: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.2,                              h(<$cHash0.2,                                 <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.2,                     <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                     'g'^~yy.1>),                 $cAEAD0.2)) @ #vk.50
7: !KU( 'g'^~yy.1 ) @ #vk.52

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 156 (precomputed): !KU( ~xx ) @ #vk.55
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~yy ) @ #vk.55
1: !KU( ~yy.1 ) @ #vk.57
2: !KU( hkdfExpand(<$cAEAD0.1,                  h(<$cHash0.1,                     h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0,                                             h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                                                'g'^~yy>),                                             'K_2ae'>,                                           hkdfExtract(~ltk, 'g'^(~xx*~yy))),                                h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                                $cAEAD0),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk, 'g'^(~xx*~yy)))) @ #vk.44
3: !KU( hkdfExpand(<$cAEAD0.3,                  h(<$cHash0.3,                     h(<$cHash0.2,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.2,                                             h(<$cHash0.2,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.2,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.2),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~xx*~yy)))) @ #vk.47
4: !KU( 'g'^~xx ) @ #vk.32
5: !KU( 'g'^~yy ) @ #vk.17
6: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.2,                              h(<$cHash0.2,                                 <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.2,                     <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                     'g'^~yy.1>),                 $cAEAD0.2)) @ #vk.50
7: !KU( 'g'^~yy.1 ) @ #vk.52

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 146 (precomputed): !KU( ~yy ) @ #vk.55
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~ltk ) @ #vk.72
1: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                      >),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                              >),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, impSk)),                                h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                  >),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, impSk))) @ #vk.59
2: !KU( hkdfExpand(<$cAEAD0.4,                  h(<$cHash0.4,                     h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.3,                                             h(<$cHash0.3,                                                <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.2, impSk)),                                h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                                    'g'^~yy.1>),                                $cAEAD0.3),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.2, impSk))) @ #vk.65
3: splitEqs(0)
4: splitEqs(3)
5: splitEqs(4)
6: !KU( 'g'^~xx ) @ #vk.55
7: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                               >),                              'K_2ae'>,                            hkdfExtract(~ltk.1, impSk)),                 h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                   >),                 $cAEAD0.1)) @ #vk.62
8: !KU( 'g'^~yy ) @ #vk.64
9: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.3,                              h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.2, impSk)),                 h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                     'g'^~yy.1>),                 $cAEAD0.3)) @ #vk.68
10: !KU( 'g'^~yy.1 ) @ #vk.70

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 135 (precomputed): !KU( ~ltk ) @ #vk.72
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.56
1: !KU( ~yy ) @ #vk.57
2: !KU( ~yy.1 ) @ #vk.59
3: !KU( hkdfExpand(<$cAEAD0.1,                  h(<$cHash0.1,                     h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0,                                             h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                                                'g'^~yy>),                                             'K_2ae'>,                                           hkdfExtract(~ltk, 'g'^(~xx*~yy))),                                h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                                $cAEAD0),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk, 'g'^(~xx*~yy)))) @ #vk.44
4: !KU( hkdfExpand(<$cAEAD0.3,                  h(<$cHash0.3,                     h(<$cHash0.2,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.2,                                             h(<$cHash0.2,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.2,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.2),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~xx*~yy)))) @ #vk.47
5: !KU( 'g'^~xx ) @ #vk.32
6: !KU( 'g'^~yy ) @ #vk.17
7: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.2,                              h(<$cHash0.2,                                 <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.2,                     <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                     'g'^~yy.1>),                 $cAEAD0.2)) @ #vk.50
8: !KU( 'g'^~yy.1 ) @ #vk.52

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 147 (precomputed): !KU( ~xx ) @ #vk.56
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( 'g'^(~xx*~yy*inv(~yy.1)) ) @ #vk.31
1: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~xx*~yy)))) @ #vk.44
2: !KU( hkdfExpand(<$cAEAD0.3,                  h(<$cHash0.3,                     h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0,                                             h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                                                'g'^~yy>),                                             'K_2ae'>,                                           hkdfExtract(~ltk, 'g'^(~xx*~yy))),                                h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                                $cAEAD0),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk, 'g'^(~xx*~yy)))) @ #vk.50
3: !KU( 'g'^~xx ) @ #vk.38
4: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1,                                 <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.1,                     <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                     'g'^~yy.1>),                 $cAEAD0.1)) @ #vk.47
5: !KU( 'g'^~yy.1 ) @ #vk.49
6: !KU( 'g'^~yy ) @ #vk.16

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 142 (precomputed):
    !KU( 'g'^(~xx*~yy*inv(~yy.1)) ) @ #vk.31
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( 'g'^(~xx*~yy*inv(~yy.1)) ) @ #vk.36
1: !KU( 'g'^(~xx*~yy*inv(~yy.2)) ) @ #vk.43
2: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~xx*~yy)))) @ #vk.56
3: !KU( hkdfExpand(<$cAEAD0.4,                  h(<$cHash0.4,                     h(<$cHash0.3,                        <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)), $U.2, $V.2>,                        'g'^~yy.2>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.3,                                             h(<$cHash0.3,                                                <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)),                                                 $U.2, $V.2>,                                                'g'^~yy.2>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.2, 'g'^(~xx*~yy))),                                h(<$cHash0.3,                                    <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)), $U.2, $V.2                                   >,                                    'g'^~yy.2>),                                $cAEAD0.3),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.2, 'g'^(~xx*~yy)))) @ #vk.62
4: !KU( 'g'^~xx ) @ #vk.52
5: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1,                                 <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.1,                     <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                     'g'^~yy.1>),                 $cAEAD0.1)) @ #vk.59
6: !KU( 'g'^~yy.1 ) @ #vk.61
7: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.3,                              h(<$cHash0.3,                                 <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)), $U.2, $V.2>,                                 'g'^~yy.2>),                              'K_2ae'>,                            hkdfExtract(~ltk.2, 'g'^(~xx*~yy))),                 h(<$cHash0.3,                     <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)), $U.2, $V.2>,                     'g'^~yy.2>),                 $cAEAD0.3)) @ #vk.65
8: !KU( 'g'^~yy.2 ) @ #vk.67
9: !KU( 'g'^~yy ) @ #vk.16

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 142 (precomputed):
    !KU( 'g'^(~xx*~yy*inv(~yy.1)) ) @ #vk.36
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: splitEqs(4)
1: !KU( 'g'^(~xx*~yy*inv(~yy.1)) ) @ #vk.36
2: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~xx*~yy)))) @ #vk.56
3: !KU( hkdfExpand(<$cAEAD0.4,                  h(<$cHash0.4,                     h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, 'g'^x, $U.2, $V.2>,                        'g'^~yy.2>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.3,                                             h(<$cHash0.3,                                                <'PSK', 'PSK', $cSUITE0.2, 'g'^x, $U.2, $V.2>,                                                'g'^~yy.2>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.2, 'g'^(~xx*~yy))),                                h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, 'g'^x, $U.2, $V.2>,                                    'g'^~yy.2>),                                $cAEAD0.3),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.2, 'g'^(~xx*~yy)))) @ #vk.62
4: !KU( 'g'^x ) @ #vk.43
5: !KU( 'g'^~xx ) @ #vk.52
6: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1,                                 <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.1,                     <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                     'g'^~yy.1>),                 $cAEAD0.1)) @ #vk.59
7: !KU( 'g'^~yy.1 ) @ #vk.61
8: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.3,                              h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, 'g'^x, $U.2, $V.2>,                                 'g'^~yy.2>),                              'K_2ae'>,                            hkdfExtract(~ltk.2, 'g'^(~xx*~yy))),                 h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, 'g'^x, $U.2, $V.2>,                     'g'^~yy.2>),                 $cAEAD0.3)) @ #vk.65
9: !KU( 'g'^~yy.2 ) @ #vk.67
10: !KU( 'g'^~yy ) @ #vk.16

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 47 (directly): splitEqs(4)
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( 'g'^(~xx*~yy*inv(~yy.1)) ) @ #vk.38
1: !KU( hkdfExpand(<$cAEAD0.1,                  h(<$cHash0.1,                     h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0,                                             h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                                                'g'^~yy>),                                             'K_2ae'>,                                           hkdfExtract(~ltk, 'g'^(~xx*~yy))),                                h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                                $cAEAD0),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk, 'g'^(~xx*~yy)))) @ #vk.44
2: !KU( hkdfExpand(<$cAEAD0.3,                  h(<$cHash0.3,                     h(<$cHash0.2,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.2,                                             h(<$cHash0.2,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.2,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.2),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~xx*~yy)))) @ #vk.47
3: !KU( 'g'^~xx ) @ #vk.31
4: !KU( 'g'^~yy ) @ #vk.16
5: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.2,                              h(<$cHash0.2,                                 <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.2,                     <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                     'g'^~yy.1>),                 $cAEAD0.2)) @ #vk.50
6: !KU( 'g'^~yy.1 ) @ #vk.52

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 148 (precomputed):
    !KU( 'g'^(~xx*~yy*inv(~yy.1)) ) @ #vk.38
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.55
1: !KU( ~yy.1 ) @ #vk.57
2: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~xx*~yy)))) @ #vk.44
3: !KU( hkdfExpand(<$cAEAD0.3,                  h(<$cHash0.3,                     h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0,                                             h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                                                'g'^~yy>),                                             'K_2ae'>,                                           hkdfExtract(~ltk, 'g'^(~xx*~yy))),                                h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                                $cAEAD0),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk, 'g'^(~xx*~yy)))) @ #vk.50
4: !KU( 'g'^~xx ) @ #vk.38
5: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1,                                 <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.1,                     <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                     'g'^~yy.1>),                 $cAEAD0.1)) @ #vk.47
6: !KU( 'g'^~yy.1 ) @ #vk.49
7: !KU( 'g'^~yy ) @ #vk.17

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 156 (precomputed): !KU( ~xx ) @ #vk.55
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~yy ) @ #vk.55
1: !KU( ~yy.1 ) @ #vk.57
2: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~xx*~yy)))) @ #vk.44
3: !KU( hkdfExpand(<$cAEAD0.3,                  h(<$cHash0.3,                     h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0,                                             h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                                                'g'^~yy>),                                             'K_2ae'>,                                           hkdfExtract(~ltk, 'g'^(~xx*~yy))),                                h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                                $cAEAD0),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk, 'g'^(~xx*~yy)))) @ #vk.50
4: !KU( 'g'^~xx ) @ #vk.38
5: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1,                                 <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.1,                     <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                     'g'^~yy.1>),                 $cAEAD0.1)) @ #vk.47
6: !KU( 'g'^~yy.1 ) @ #vk.49
7: !KU( 'g'^~yy ) @ #vk.17

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 146 (precomputed): !KU( ~yy ) @ #vk.55
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.56
1: !KU( ~yy ) @ #vk.57
2: !KU( ~yy.1 ) @ #vk.59
3: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~xx*~yy)))) @ #vk.44
4: !KU( hkdfExpand(<$cAEAD0.3,                  h(<$cHash0.3,                     h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0,                                             h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                                                'g'^~yy>),                                             'K_2ae'>,                                           hkdfExtract(~ltk, 'g'^(~xx*~yy))),                                h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                                $cAEAD0),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk, 'g'^(~xx*~yy)))) @ #vk.50
5: !KU( 'g'^~xx ) @ #vk.38
6: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1,                                 <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.1,                     <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                     'g'^~yy.1>),                 $cAEAD0.1)) @ #vk.47
7: !KU( 'g'^~yy.1 ) @ #vk.49
8: !KU( 'g'^~yy ) @ #vk.17

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 147 (precomputed): !KU( ~xx ) @ #vk.56
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.54
1: !KU( ~yy.1 ) @ #vk.56
2: !KU( hkdfExpand(<$cAEAD0.1,                  h(<$cHash0.1,                     h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0,                                             h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                                                'g'^~yy>),                                             'K_2ae'>,                                           hkdfExtract(~ltk, 'g'^(~xx*~yy))),                                h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                                $cAEAD0),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk, 'g'^(~xx*~yy)))) @ #vk.44
3: !KU( hkdfExpand(<$cAEAD0.3,                  h(<$cHash0.3,                     h(<$cHash0.2,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.2,                                             h(<$cHash0.2,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.2,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.2),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~xx*~yy)))) @ #vk.47
4: !KU( 'g'^~xx ) @ #vk.32
5: !KU( 'g'^~yy ) @ #vk.17
6: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.2,                              h(<$cHash0.2,                                 <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.2,                     <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                     'g'^~yy.1>),                 $cAEAD0.2)) @ #vk.50
7: !KU( 'g'^~yy.1 ) @ #vk.52

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 161 (precomputed): !KU( ~xx ) @ #vk.54
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~yy ) @ #vk.54
1: !KU( ~yy.1 ) @ #vk.56
2: !KU( hkdfExpand(<$cAEAD0.1,                  h(<$cHash0.1,                     h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0,                                             h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                                                'g'^~yy>),                                             'K_2ae'>,                                           hkdfExtract(~ltk, 'g'^(~xx*~yy))),                                h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                                $cAEAD0),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk, 'g'^(~xx*~yy)))) @ #vk.44
3: !KU( hkdfExpand(<$cAEAD0.3,                  h(<$cHash0.3,                     h(<$cHash0.2,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.2,                                             h(<$cHash0.2,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.2,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.2),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~xx*~yy)))) @ #vk.47
4: !KU( 'g'^~xx ) @ #vk.32
5: !KU( 'g'^~yy ) @ #vk.17
6: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.2,                              h(<$cHash0.2,                                 <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.2,                     <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                     'g'^~yy.1>),                 $cAEAD0.2)) @ #vk.50
7: !KU( 'g'^~yy.1 ) @ #vk.52

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 151 (precomputed): !KU( ~yy ) @ #vk.54
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.55
1: !KU( ~yy ) @ #vk.56
2: !KU( ~yy.1 ) @ #vk.58
3: !KU( hkdfExpand(<$cAEAD0.1,                  h(<$cHash0.1,                     h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0,                                             h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                                                'g'^~yy>),                                             'K_2ae'>,                                           hkdfExtract(~ltk, 'g'^(~xx*~yy))),                                h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                                $cAEAD0),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk, 'g'^(~xx*~yy)))) @ #vk.44
4: !KU( hkdfExpand(<$cAEAD0.3,                  h(<$cHash0.3,                     h(<$cHash0.2,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.2,                                             h(<$cHash0.2,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.2,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.2),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~xx*~yy)))) @ #vk.47
5: !KU( 'g'^~xx ) @ #vk.32
6: !KU( 'g'^~yy ) @ #vk.17
7: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.2,                              h(<$cHash0.2,                                 <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.2,                     <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                     'g'^~yy.1>),                 $cAEAD0.2)) @ #vk.50
8: !KU( 'g'^~yy.1 ) @ #vk.52

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 152 (precomputed): !KU( ~xx ) @ #vk.55
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~yy ) @ #vk.70
1: !KU( ~yy.1 ) @ #vk.72
2: !KU( 'g'^(~xx*~yy*inv(~yy.2)) ) @ #vk.43
3: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~xx*~yy)))) @ #vk.56
4: !KU( hkdfExpand(<$cAEAD0.4,                  h(<$cHash0.4,                     h(<$cHash0.3,                        <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)), $U.2, $V.2>,                        'g'^~yy.2>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.3,                                             h(<$cHash0.3,                                                <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)),                                                 $U.2, $V.2>,                                                'g'^~yy.2>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.2, 'g'^(~xx*~yy))),                                h(<$cHash0.3,                                    <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)), $U.2, $V.2                                   >,                                    'g'^~yy.2>),                                $cAEAD0.3),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.2, 'g'^(~xx*~yy)))) @ #vk.62
5: !KU( 'g'^~xx ) @ #vk.52
6: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1,                                 <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.1,                     <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                     'g'^~yy.1>),                 $cAEAD0.1)) @ #vk.59
7: !KU( 'g'^~yy.1 ) @ #vk.61
8: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.3,                              h(<$cHash0.3,                                 <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)), $U.2, $V.2>,                                 'g'^~yy.2>),                              'K_2ae'>,                            hkdfExtract(~ltk.2, 'g'^(~xx*~yy))),                 h(<$cHash0.3,                     <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)), $U.2, $V.2>,                     'g'^~yy.2>),                 $cAEAD0.3)) @ #vk.65
9: !KU( 'g'^~yy.2 ) @ #vk.67
10: !KU( 'g'^~yy ) @ #vk.17

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 146 (precomputed): !KU( ~yy ) @ #vk.70
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.71
1: !KU( ~yy ) @ #vk.72
2: !KU( ~yy.1 ) @ #vk.74
3: !KU( 'g'^(~xx*~yy*inv(~yy.2)) ) @ #vk.43
4: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~xx*~yy)))) @ #vk.56
5: !KU( hkdfExpand(<$cAEAD0.4,                  h(<$cHash0.4,                     h(<$cHash0.3,                        <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)), $U.2, $V.2>,                        'g'^~yy.2>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.3,                                             h(<$cHash0.3,                                                <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)),                                                 $U.2, $V.2>,                                                'g'^~yy.2>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.2, 'g'^(~xx*~yy))),                                h(<$cHash0.3,                                    <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)), $U.2, $V.2                                   >,                                    'g'^~yy.2>),                                $cAEAD0.3),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.2, 'g'^(~xx*~yy)))) @ #vk.62
6: !KU( 'g'^~xx ) @ #vk.52
7: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1,                                 <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.1,                     <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                     'g'^~yy.1>),                 $cAEAD0.1)) @ #vk.59
8: !KU( 'g'^~yy.1 ) @ #vk.61
9: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.3,                              h(<$cHash0.3,                                 <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)), $U.2, $V.2>,                                 'g'^~yy.2>),                              'K_2ae'>,                            hkdfExtract(~ltk.2, 'g'^(~xx*~yy))),                 h(<$cHash0.3,                     <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)), $U.2, $V.2>,                     'g'^~yy.2>),                 $cAEAD0.3)) @ #vk.65
10: !KU( 'g'^~yy.2 ) @ #vk.67
11: !KU( 'g'^~yy ) @ #vk.17

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 147 (precomputed): !KU( ~xx ) @ #vk.71
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.70
1: !KU( ~yy.1 ) @ #vk.72
2: !KU( 'g'^(~xx*~yy*inv(~yy.2)) ) @ #vk.43
3: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~xx*~yy)))) @ #vk.56
4: !KU( hkdfExpand(<$cAEAD0.4,                  h(<$cHash0.4,                     h(<$cHash0.3,                        <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)), $U.2, $V.2>,                        'g'^~yy.2>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.3,                                             h(<$cHash0.3,                                                <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)),                                                 $U.2, $V.2>,                                                'g'^~yy.2>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.2, 'g'^(~xx*~yy))),                                h(<$cHash0.3,                                    <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)), $U.2, $V.2                                   >,                                    'g'^~yy.2>),                                $cAEAD0.3),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.2, 'g'^(~xx*~yy)))) @ #vk.62
5: !KU( 'g'^~xx ) @ #vk.52
6: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1,                                 <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.1,                     <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                     'g'^~yy.1>),                 $cAEAD0.1)) @ #vk.59
7: !KU( 'g'^~yy.1 ) @ #vk.61
8: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.3,                              h(<$cHash0.3,                                 <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)), $U.2, $V.2>,                                 'g'^~yy.2>),                              'K_2ae'>,                            hkdfExtract(~ltk.2, 'g'^(~xx*~yy))),                 h(<$cHash0.3,                     <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)), $U.2, $V.2>,                     'g'^~yy.2>),                 $cAEAD0.3)) @ #vk.65
9: !KU( 'g'^~yy.2 ) @ #vk.67
10: !KU( 'g'^~yy ) @ #vk.17

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 156 (precomputed): !KU( ~xx ) @ #vk.70
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( 'g'^(~xx*~yy*inv(~yy.1)) ) @ #vk.31
1: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~xx*~yy)))) @ #vk.44
2: !KU( hkdfExpand(<$cAEAD0.3,                  h(<$cHash0.3,                     h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0,                                             h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                                                'g'^~yy>),                                             'K_2ae'>,                                           hkdfExtract(~ltk, 'g'^(~xx*~yy))),                                h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                                $cAEAD0),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk, 'g'^(~xx*~yy)))) @ #vk.50
3: !KU( 'g'^~xx ) @ #vk.38
4: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1,                                 <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.1,                     <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                     'g'^~yy.1>),                 $cAEAD0.1)) @ #vk.47
5: !KU( 'g'^~yy.1 ) @ #vk.49
6: !KU( 'g'^~yy ) @ #vk.16

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 147 (precomputed):
    !KU( 'g'^(~xx*~yy*inv(~yy.1)) ) @ #vk.31
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( 'g'^(~xx*~yy*inv(~yy.1)) ) @ #vk.36
1: !KU( 'g'^(~xx*~yy*inv(~yy.2)) ) @ #vk.43
2: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~xx*~yy)))) @ #vk.56
3: !KU( hkdfExpand(<$cAEAD0.4,                  h(<$cHash0.4,                     h(<$cHash0.3,                        <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)), $U.2, $V.2>,                        'g'^~yy.2>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.3,                                             h(<$cHash0.3,                                                <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)),                                                 $U.2, $V.2>,                                                'g'^~yy.2>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.2, 'g'^(~xx*~yy))),                                h(<$cHash0.3,                                    <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)), $U.2, $V.2                                   >,                                    'g'^~yy.2>),                                $cAEAD0.3),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.2, 'g'^(~xx*~yy)))) @ #vk.62
4: !KU( 'g'^~xx ) @ #vk.52
5: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1,                                 <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.1,                     <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                     'g'^~yy.1>),                 $cAEAD0.1)) @ #vk.59
6: !KU( 'g'^~yy.1 ) @ #vk.61
7: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.3,                              h(<$cHash0.3,                                 <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)), $U.2, $V.2>,                                 'g'^~yy.2>),                              'K_2ae'>,                            hkdfExtract(~ltk.2, 'g'^(~xx*~yy))),                 h(<$cHash0.3,                     <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)), $U.2, $V.2>,                     'g'^~yy.2>),                 $cAEAD0.3)) @ #vk.65
8: !KU( 'g'^~yy.2 ) @ #vk.67
9: !KU( 'g'^~yy ) @ #vk.16

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 147 (precomputed):
    !KU( 'g'^(~xx*~yy*inv(~yy.1)) ) @ #vk.36
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~ltk ) @ #vk.72
1: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                      >),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                              >),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, impSk)),                                h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                  >),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, impSk))) @ #vk.59
2: !KU( hkdfExpand(<$cAEAD0.4,                  h(<$cHash0.4,                     h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.3,                                             h(<$cHash0.3,                                                <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.2, impSk)),                                h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                                    'g'^~yy.1>),                                $cAEAD0.3),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.2, impSk))) @ #vk.65
3: splitEqs(0)
4: splitEqs(3)
5: splitEqs(4)
6: !KU( 'g'^~xx ) @ #vk.55
7: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                               >),                              'K_2ae'>,                            hkdfExtract(~ltk.1, impSk)),                 h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                   >),                 $cAEAD0.1)) @ #vk.62
8: !KU( 'g'^~yy ) @ #vk.64
9: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.3,                              h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.2, impSk)),                 h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                     'g'^~yy.1>),                 $cAEAD0.3)) @ #vk.68
10: !KU( 'g'^~yy.1 ) @ #vk.70

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 135 (precomputed): !KU( ~ltk ) @ #vk.72
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.54
1: !KU( ~yy.1 ) @ #vk.56
2: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~xx*~yy)))) @ #vk.44
3: !KU( hkdfExpand(<$cAEAD0.3,                  h(<$cHash0.3,                     h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0,                                             h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                                                'g'^~yy>),                                             'K_2ae'>,                                           hkdfExtract(~ltk, 'g'^(~xx*~yy))),                                h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                                $cAEAD0),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk, 'g'^(~xx*~yy)))) @ #vk.50
4: !KU( 'g'^~xx ) @ #vk.38
5: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1,                                 <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.1,                     <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                     'g'^~yy.1>),                 $cAEAD0.1)) @ #vk.47
6: !KU( 'g'^~yy.1 ) @ #vk.49
7: !KU( 'g'^~yy ) @ #vk.17

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 161 (precomputed): !KU( ~xx ) @ #vk.54
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.55
1: !KU( ~yy ) @ #vk.56
2: !KU( ~yy.1 ) @ #vk.58
3: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~xx*~yy)))) @ #vk.44
4: !KU( hkdfExpand(<$cAEAD0.3,                  h(<$cHash0.3,                     h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0,                                             h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                                                'g'^~yy>),                                             'K_2ae'>,                                           hkdfExtract(~ltk, 'g'^(~xx*~yy))),                                h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                                $cAEAD0),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk, 'g'^(~xx*~yy)))) @ #vk.50
5: !KU( 'g'^~xx ) @ #vk.38
6: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1,                                 <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.1,                     <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                     'g'^~yy.1>),                 $cAEAD0.1)) @ #vk.47
7: !KU( 'g'^~yy.1 ) @ #vk.49
8: !KU( 'g'^~yy ) @ #vk.17

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~yy ) @ #vk.54
1: !KU( ~yy.1 ) @ #vk.56
2: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~xx*~yy)))) @ #vk.44
3: !KU( hkdfExpand(<$cAEAD0.3,                  h(<$cHash0.3,                     h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0,                                             h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                                                'g'^~yy>),                                             'K_2ae'>,                                           hkdfExtract(~ltk, 'g'^(~xx*~yy))),                                h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                                $cAEAD0),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk, 'g'^(~xx*~yy)))) @ #vk.50
4: !KU( 'g'^~xx ) @ #vk.38
5: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1,                                 <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.1,                     <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                     'g'^~yy.1>),                 $cAEAD0.1)) @ #vk.47
6: !KU( 'g'^~yy.1 ) @ #vk.49
7: !KU( 'g'^~yy ) @ #vk.17

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 152 (precomputed): !KU( ~xx ) @ #vk.55
  solved goal nr. 151 (precomputed): !KU( ~yy ) @ #vk.54
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~yy ) @ #vk.69
1: !KU( ~yy.1 ) @ #vk.71
2: !KU( 'g'^(~xx*~yy*inv(~yy.2)) ) @ #vk.43
3: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~xx*~yy)))) @ #vk.56
4: !KU( hkdfExpand(<$cAEAD0.4,                  h(<$cHash0.4,                     h(<$cHash0.3,                        <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)), $U.2, $V.2>,                        'g'^~yy.2>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.3,                                             h(<$cHash0.3,                                                <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)),                                                 $U.2, $V.2>,                                                'g'^~yy.2>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.2, 'g'^(~xx*~yy))),                                h(<$cHash0.3,                                    <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)), $U.2, $V.2                                   >,                                    'g'^~yy.2>),                                $cAEAD0.3),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.2, 'g'^(~xx*~yy)))) @ #vk.62
5: !KU( 'g'^~xx ) @ #vk.52
6: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1,                                 <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.1,                     <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                     'g'^~yy.1>),                 $cAEAD0.1)) @ #vk.59
7: !KU( 'g'^~yy.1 ) @ #vk.61
8: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.3,                              h(<$cHash0.3,                                 <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)), $U.2, $V.2>,                                 'g'^~yy.2>),                              'K_2ae'>,                            hkdfExtract(~ltk.2, 'g'^(~xx*~yy))),                 h(<$cHash0.3,                     <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)), $U.2, $V.2>,                     'g'^~yy.2>),                 $cAEAD0.3)) @ #vk.65
9: !KU( 'g'^~yy.2 ) @ #vk.67
10: !KU( 'g'^~yy ) @ #vk.17

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 151 (precomputed): !KU( ~yy ) @ #vk.69
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.69
1: !KU( ~yy.1 ) @ #vk.71
2: !KU( 'g'^(~xx*~yy*inv(~yy.2)) ) @ #vk.43
3: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~xx*~yy)))) @ #vk.56
4: !KU( hkdfExpand(<$cAEAD0.4,                  h(<$cHash0.4,                     h(<$cHash0.3,                        <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)), $U.2, $V.2>,                        'g'^~yy.2>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.3,                                             h(<$cHash0.3,                                                <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)),                                                 $U.2, $V.2>,                                                'g'^~yy.2>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.2, 'g'^(~xx*~yy))),                                h(<$cHash0.3,                                    <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)), $U.2, $V.2                                   >,                                    'g'^~yy.2>),                                $cAEAD0.3),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.2, 'g'^(~xx*~yy)))) @ #vk.62
5: !KU( 'g'^~xx ) @ #vk.52
6: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1,                                 <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.1,                     <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                     'g'^~yy.1>),                 $cAEAD0.1)) @ #vk.59
7: !KU( 'g'^~yy.1 ) @ #vk.61
8: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.3,                              h(<$cHash0.3,                                 <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)), $U.2, $V.2>,                                 'g'^~yy.2>),                              'K_2ae'>,                            hkdfExtract(~ltk.2, 'g'^(~xx*~yy))),                 h(<$cHash0.3,                     <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)), $U.2, $V.2>,                     'g'^~yy.2>),                 $cAEAD0.3)) @ #vk.65
9: !KU( 'g'^~yy.2 ) @ #vk.67
10: !KU( 'g'^~yy ) @ #vk.17

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 161 (precomputed): !KU( ~xx ) @ #vk.69
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.70
1: !KU( ~yy ) @ #vk.71
2: !KU( ~yy.1 ) @ #vk.73
3: !KU( 'g'^(~xx*~yy*inv(~yy.2)) ) @ #vk.43
4: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~xx*~yy)))) @ #vk.56
5: !KU( hkdfExpand(<$cAEAD0.4,                  h(<$cHash0.4,                     h(<$cHash0.3,                        <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)), $U.2, $V.2>,                        'g'^~yy.2>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.3,                                             h(<$cHash0.3,                                                <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)),                                                 $U.2, $V.2>,                                                'g'^~yy.2>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.2, 'g'^(~xx*~yy))),                                h(<$cHash0.3,                                    <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)), $U.2, $V.2                                   >,                                    'g'^~yy.2>),                                $cAEAD0.3),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.2, 'g'^(~xx*~yy)))) @ #vk.62
6: !KU( 'g'^~xx ) @ #vk.52
7: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1,                                 <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.1,                     <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                     'g'^~yy.1>),                 $cAEAD0.1)) @ #vk.59
8: !KU( 'g'^~yy.1 ) @ #vk.61
9: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.3,                              h(<$cHash0.3,                                 <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)), $U.2, $V.2>,                                 'g'^~yy.2>),                              'K_2ae'>,                            hkdfExtract(~ltk.2, 'g'^(~xx*~yy))),                 h(<$cHash0.3,                     <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)), $U.2, $V.2>,                     'g'^~yy.2>),                 $cAEAD0.3)) @ #vk.65
10: !KU( 'g'^~yy.2 ) @ #vk.67
11: !KU( 'g'^~yy ) @ #vk.17

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 152 (precomputed): !KU( ~xx ) @ #vk.70
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: splitEqs(4)
1: !KU( hkdfExpand(<$cAEAD0.1,                  h(<$cHash0.1,                     h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0,                                             h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                                                'g'^~yy>),                                             'K_2ae'>,                                           hkdfExtract(~ltk, 'g'^(~xx*~yy))),                                h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                                $cAEAD0),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk, 'g'^(~xx*~yy)))) @ #vk.44
2: !KU( hkdfExpand(<$cAEAD0.3,                  h(<$cHash0.3,                     h(<$cHash0.2, <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.2,                                             h(<$cHash0.2,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.2, <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                                    'g'^~yy.1>),                                $cAEAD0.2),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~xx*~yy)))) @ #vk.47
3: !KU( 'g'^x ) @ #vk.38
4: !KU( 'g'^~xx ) @ #vk.31
5: !KU( 'g'^~yy ) @ #vk.16
6: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.2,                              h(<$cHash0.2, <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.2, <'PSK', 'PSK', $cSUITE0.1, 'g'^x, $U.1, $V.1>,                     'g'^~yy.1>),                 $cAEAD0.2)) @ #vk.50
7: !KU( 'g'^~yy.1 ) @ #vk.52

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 47 (directly): splitEqs(4)
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: splitEqs(4)
1: !KU( 'g'^(~xx*~yy*inv(~yy.1)) ) @ #vk.36
2: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~xx*~yy)))) @ #vk.56
3: !KU( hkdfExpand(<$cAEAD0.4,                  h(<$cHash0.4,                     h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, 'g'^x, $U.2, $V.2>,                        'g'^~yy.2>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.3,                                             h(<$cHash0.3,                                                <'PSK', 'PSK', $cSUITE0.2, 'g'^x, $U.2, $V.2>,                                                'g'^~yy.2>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.2, 'g'^(~xx*~yy))),                                h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, 'g'^x, $U.2, $V.2>,                                    'g'^~yy.2>),                                $cAEAD0.3),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.2, 'g'^(~xx*~yy)))) @ #vk.62
4: !KU( 'g'^x ) @ #vk.43
5: !KU( 'g'^~xx ) @ #vk.52
6: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1,                                 <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.1,                     <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                     'g'^~yy.1>),                 $cAEAD0.1)) @ #vk.59
7: !KU( 'g'^~yy.1 ) @ #vk.61
8: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.3,                              h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, 'g'^x, $U.2, $V.2>,                                 'g'^~yy.2>),                              'K_2ae'>,                            hkdfExtract(~ltk.2, 'g'^(~xx*~yy))),                 h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, 'g'^x, $U.2, $V.2>,                     'g'^~yy.2>),                 $cAEAD0.3)) @ #vk.65
9: !KU( 'g'^~yy.2 ) @ #vk.67
10: !KU( 'g'^~yy ) @ #vk.16

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 47 (directly): splitEqs(4)
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( 'g'^(~xx*~yy*inv(~yy.1)) ) @ #vk.38
1: !KU( hkdfExpand(<$cAEAD0.1,                  h(<$cHash0.1,                     h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0,                                             h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                                                'g'^~yy>),                                             'K_2ae'>,                                           hkdfExtract(~ltk, 'g'^(~xx*~yy))),                                h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                                $cAEAD0),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk, 'g'^(~xx*~yy)))) @ #vk.44
2: !KU( hkdfExpand(<$cAEAD0.3,                  h(<$cHash0.3,                     h(<$cHash0.2,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.2,                                             h(<$cHash0.2,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.2,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.2),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~xx*~yy)))) @ #vk.47
3: !KU( 'g'^~xx ) @ #vk.31
4: !KU( 'g'^~yy ) @ #vk.16
5: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.2,                              h(<$cHash0.2,                                 <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.2,                     <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                     'g'^~yy.1>),                 $cAEAD0.2)) @ #vk.50
6: !KU( 'g'^~yy.1 ) @ #vk.52

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 143 (precomputed):
    !KU( 'g'^(~xx*~yy*inv(~yy.1)) ) @ #vk.38
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.56
1: !KU( ~yy ) @ #vk.57
2: !KU( ~yy.1 ) @ #vk.59
3: !KU( hkdfExpand(<$cAEAD0.1,                  h(<$cHash0.1,                     h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0,                                             h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                                                'g'^~yy>),                                             'K_2ae'>,                                           hkdfExtract(~ltk, 'g'^(~xx*~yy))),                                h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                                $cAEAD0),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk, 'g'^(~xx*~yy)))) @ #vk.44
4: !KU( hkdfExpand(<$cAEAD0.3,                  h(<$cHash0.3,                     h(<$cHash0.2,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.2,                                             h(<$cHash0.2,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.2,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.2),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~xx*~yy)))) @ #vk.47
5: !KU( 'g'^~xx ) @ #vk.32
6: !KU( 'g'^~yy ) @ #vk.17
7: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.2,                              h(<$cHash0.2,                                 <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.2,                     <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                     'g'^~yy.1>),                 $cAEAD0.2)) @ #vk.50
8: !KU( 'g'^~yy.1 ) @ #vk.52

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 147 (precomputed): !KU( ~xx ) @ #vk.56
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.55
1: !KU( ~yy.1 ) @ #vk.57
2: !KU( hkdfExpand(<$cAEAD0.1,                  h(<$cHash0.1,                     h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0,                                             h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                                                'g'^~yy>),                                             'K_2ae'>,                                           hkdfExtract(~ltk, 'g'^(~xx*~yy))),                                h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                                $cAEAD0),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk, 'g'^(~xx*~yy)))) @ #vk.44
3: !KU( hkdfExpand(<$cAEAD0.3,                  h(<$cHash0.3,                     h(<$cHash0.2,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.2,                                             h(<$cHash0.2,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.2,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.2),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~xx*~yy)))) @ #vk.47
4: !KU( 'g'^~xx ) @ #vk.32
5: !KU( 'g'^~yy ) @ #vk.17
6: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.2,                              h(<$cHash0.2,                                 <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.2,                     <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                     'g'^~yy.1>),                 $cAEAD0.2)) @ #vk.50
7: !KU( 'g'^~yy.1 ) @ #vk.52

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 156 (precomputed): !KU( ~xx ) @ #vk.55
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~yy ) @ #vk.55
1: !KU( ~yy.1 ) @ #vk.57
2: !KU( hkdfExpand(<$cAEAD0.1,                  h(<$cHash0.1,                     h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0,                                             h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                                                'g'^~yy>),                                             'K_2ae'>,                                           hkdfExtract(~ltk, 'g'^(~xx*~yy))),                                h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                                $cAEAD0),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk, 'g'^(~xx*~yy)))) @ #vk.44
3: !KU( hkdfExpand(<$cAEAD0.3,                  h(<$cHash0.3,                     h(<$cHash0.2,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.2,                                             h(<$cHash0.2,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.2,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.2),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~xx*~yy)))) @ #vk.47
4: !KU( 'g'^~xx ) @ #vk.32
5: !KU( 'g'^~yy ) @ #vk.17
6: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.2,                              h(<$cHash0.2,                                 <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.2,                     <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                     'g'^~yy.1>),                 $cAEAD0.2)) @ #vk.50
7: !KU( 'g'^~yy.1 ) @ #vk.52

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 146 (precomputed): !KU( ~yy ) @ #vk.55
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( 'g'^(~xx*~yy*inv(~yy.1)) ) @ #vk.31
1: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~xx*~yy)))) @ #vk.44
2: !KU( hkdfExpand(<$cAEAD0.3,                  h(<$cHash0.3,                     h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0,                                             h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                                                'g'^~yy>),                                             'K_2ae'>,                                           hkdfExtract(~ltk, 'g'^(~xx*~yy))),                                h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                                $cAEAD0),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk, 'g'^(~xx*~yy)))) @ #vk.50
3: !KU( 'g'^~xx ) @ #vk.38
4: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1,                                 <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.1,                     <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                     'g'^~yy.1>),                 $cAEAD0.1)) @ #vk.47
5: !KU( 'g'^~yy.1 ) @ #vk.49
6: !KU( 'g'^~yy ) @ #vk.16

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 142 (precomputed):
    !KU( 'g'^(~xx*~yy*inv(~yy.1)) ) @ #vk.31
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( 'g'^(~xx*~yy*inv(~yy.1)) ) @ #vk.36
1: !KU( 'g'^(~xx*~yy*inv(~yy.2)) ) @ #vk.43
2: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~xx*~yy)))) @ #vk.56
3: !KU( hkdfExpand(<$cAEAD0.4,                  h(<$cHash0.4,                     h(<$cHash0.3,                        <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)), $U.2, $V.2>,                        'g'^~yy.2>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.3,                                             h(<$cHash0.3,                                                <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)),                                                 $U.2, $V.2>,                                                'g'^~yy.2>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.2, 'g'^(~xx*~yy))),                                h(<$cHash0.3,                                    <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)), $U.2, $V.2                                   >,                                    'g'^~yy.2>),                                $cAEAD0.3),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.2, 'g'^(~xx*~yy)))) @ #vk.62
4: !KU( 'g'^~xx ) @ #vk.52
5: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1,                                 <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.1,                     <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                     'g'^~yy.1>),                 $cAEAD0.1)) @ #vk.59
6: !KU( 'g'^~yy.1 ) @ #vk.61
7: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.3,                              h(<$cHash0.3,                                 <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)), $U.2, $V.2>,                                 'g'^~yy.2>),                              'K_2ae'>,                            hkdfExtract(~ltk.2, 'g'^(~xx*~yy))),                 h(<$cHash0.3,                     <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)), $U.2, $V.2>,                     'g'^~yy.2>),                 $cAEAD0.3)) @ #vk.65
8: !KU( 'g'^~yy.2 ) @ #vk.67
9: !KU( 'g'^~yy ) @ #vk.16

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 142 (precomputed):
    !KU( 'g'^(~xx*~yy*inv(~yy.1)) ) @ #vk.36
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.56
1: !KU( ~yy ) @ #vk.57
2: !KU( ~yy.1 ) @ #vk.59
3: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~xx*~yy)))) @ #vk.44
4: !KU( hkdfExpand(<$cAEAD0.3,                  h(<$cHash0.3,                     h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0,                                             h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                                                'g'^~yy>),                                             'K_2ae'>,                                           hkdfExtract(~ltk, 'g'^(~xx*~yy))),                                h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                                $cAEAD0),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk, 'g'^(~xx*~yy)))) @ #vk.50
5: !KU( 'g'^~xx ) @ #vk.38
6: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1,                                 <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.1,                     <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                     'g'^~yy.1>),                 $cAEAD0.1)) @ #vk.47
7: !KU( 'g'^~yy.1 ) @ #vk.49
8: !KU( 'g'^~yy ) @ #vk.17

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 147 (precomputed): !KU( ~xx ) @ #vk.56
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.55
1: !KU( ~yy.1 ) @ #vk.57
2: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~xx*~yy)))) @ #vk.44
3: !KU( hkdfExpand(<$cAEAD0.3,                  h(<$cHash0.3,                     h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0,                                             h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                                                'g'^~yy>),                                             'K_2ae'>,                                           hkdfExtract(~ltk, 'g'^(~xx*~yy))),                                h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                                $cAEAD0),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk, 'g'^(~xx*~yy)))) @ #vk.50
4: !KU( 'g'^~xx ) @ #vk.38
5: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1,                                 <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.1,                     <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                     'g'^~yy.1>),                 $cAEAD0.1)) @ #vk.47
6: !KU( 'g'^~yy.1 ) @ #vk.49
7: !KU( 'g'^~yy ) @ #vk.17

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 156 (precomputed): !KU( ~xx ) @ #vk.55
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~yy ) @ #vk.55
1: !KU( ~yy.1 ) @ #vk.57
2: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~xx*~yy)))) @ #vk.44
3: !KU( hkdfExpand(<$cAEAD0.3,                  h(<$cHash0.3,                     h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0,                                             h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>,                                                'g'^~yy>),                                             'K_2ae'>,                                           hkdfExtract(~ltk, 'g'^(~xx*~yy))),                                h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, 'g'^~yy>),                                $cAEAD0),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk, 'g'^(~xx*~yy)))) @ #vk.50
4: !KU( 'g'^~xx ) @ #vk.38
5: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1,                                 <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.1,                     <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                     'g'^~yy.1>),                 $cAEAD0.1)) @ #vk.47
6: !KU( 'g'^~yy.1 ) @ #vk.49
7: !KU( 'g'^~yy ) @ #vk.17

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 146 (precomputed): !KU( ~yy ) @ #vk.55
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.71
1: !KU( ~yy ) @ #vk.72
2: !KU( ~yy.1 ) @ #vk.74
3: !KU( 'g'^(~xx*~yy*inv(~yy.2)) ) @ #vk.43
4: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~xx*~yy)))) @ #vk.56
5: !KU( hkdfExpand(<$cAEAD0.4,                  h(<$cHash0.4,                     h(<$cHash0.3,                        <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)), $U.2, $V.2>,                        'g'^~yy.2>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.3,                                             h(<$cHash0.3,                                                <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)),                                                 $U.2, $V.2>,                                                'g'^~yy.2>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.2, 'g'^(~xx*~yy))),                                h(<$cHash0.3,                                    <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)), $U.2, $V.2                                   >,                                    'g'^~yy.2>),                                $cAEAD0.3),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.2, 'g'^(~xx*~yy)))) @ #vk.62
6: !KU( 'g'^~xx ) @ #vk.52
7: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1,                                 <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.1,                     <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                     'g'^~yy.1>),                 $cAEAD0.1)) @ #vk.59
8: !KU( 'g'^~yy.1 ) @ #vk.61
9: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.3,                              h(<$cHash0.3,                                 <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)), $U.2, $V.2>,                                 'g'^~yy.2>),                              'K_2ae'>,                            hkdfExtract(~ltk.2, 'g'^(~xx*~yy))),                 h(<$cHash0.3,                     <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)), $U.2, $V.2>,                     'g'^~yy.2>),                 $cAEAD0.3)) @ #vk.65
10: !KU( 'g'^~yy.2 ) @ #vk.67
11: !KU( 'g'^~yy ) @ #vk.17

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 147 (precomputed): !KU( ~xx ) @ #vk.71
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.70
1: !KU( ~yy.1 ) @ #vk.72
2: !KU( 'g'^(~xx*~yy*inv(~yy.2)) ) @ #vk.43
3: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~xx*~yy)))) @ #vk.56
4: !KU( hkdfExpand(<$cAEAD0.4,                  h(<$cHash0.4,                     h(<$cHash0.3,                        <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)), $U.2, $V.2>,                        'g'^~yy.2>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.3,                                             h(<$cHash0.3,                                                <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)),                                                 $U.2, $V.2>,                                                'g'^~yy.2>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.2, 'g'^(~xx*~yy))),                                h(<$cHash0.3,                                    <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)), $U.2, $V.2                                   >,                                    'g'^~yy.2>),                                $cAEAD0.3),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.2, 'g'^(~xx*~yy)))) @ #vk.62
5: !KU( 'g'^~xx ) @ #vk.52
6: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1,                                 <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.1,                     <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                     'g'^~yy.1>),                 $cAEAD0.1)) @ #vk.59
7: !KU( 'g'^~yy.1 ) @ #vk.61
8: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.3,                              h(<$cHash0.3,                                 <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)), $U.2, $V.2>,                                 'g'^~yy.2>),                              'K_2ae'>,                            hkdfExtract(~ltk.2, 'g'^(~xx*~yy))),                 h(<$cHash0.3,                     <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)), $U.2, $V.2>,                     'g'^~yy.2>),                 $cAEAD0.3)) @ #vk.65
9: !KU( 'g'^~yy.2 ) @ #vk.67
10: !KU( 'g'^~yy ) @ #vk.17

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 156 (precomputed): !KU( ~xx ) @ #vk.70
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~yy ) @ #vk.70
1: !KU( ~yy.1 ) @ #vk.72
2: !KU( 'g'^(~xx*~yy*inv(~yy.2)) ) @ #vk.43
3: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1,                        <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)),                                                 $U.1, $V.1>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                                h(<$cHash0.1,                                    <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1                                   >,                                    'g'^~yy.1>),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, 'g'^(~xx*~yy)))) @ #vk.56
4: !KU( hkdfExpand(<$cAEAD0.4,                  h(<$cHash0.4,                     h(<$cHash0.3,                        <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)), $U.2, $V.2>,                        'g'^~yy.2>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.3,                                             h(<$cHash0.3,                                                <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)),                                                 $U.2, $V.2>,                                                'g'^~yy.2>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.2, 'g'^(~xx*~yy))),                                h(<$cHash0.3,                                    <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)), $U.2, $V.2                                   >,                                    'g'^~yy.2>),                                $cAEAD0.3),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.2, 'g'^(~xx*~yy)))) @ #vk.62
5: !KU( 'g'^~xx ) @ #vk.52
6: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1,                                 <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.1, 'g'^(~xx*~yy))),                 h(<$cHash0.1,                     <'PSK', 'PSK', $cSUITE0.1, 'g'^(~xx*~yy*inv(~yy.1)), $U.1, $V.1>,                     'g'^~yy.1>),                 $cAEAD0.1)) @ #vk.59
7: !KU( 'g'^~yy.1 ) @ #vk.61
8: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.3,                              h(<$cHash0.3,                                 <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)), $U.2, $V.2>,                                 'g'^~yy.2>),                              'K_2ae'>,                            hkdfExtract(~ltk.2, 'g'^(~xx*~yy))),                 h(<$cHash0.3,                     <'PSK', 'PSK', $cSUITE0.2, 'g'^(~xx*~yy*inv(~yy.2)), $U.2, $V.2>,                     'g'^~yy.2>),                 $cAEAD0.3)) @ #vk.65
9: !KU( 'g'^~yy.2 ) @ #vk.67
10: !KU( 'g'^~yy ) @ #vk.17

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 146 (precomputed): !KU( ~yy ) @ #vk.70
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~ltk ) @ #vk.72
1: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2,                     h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                      >),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.1,                                             h(<$cHash0.1,                                                <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                              >),                                             'K_2ae'>,                                           hkdfExtract(~ltk.1, impSk)),                                h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                                  >),                                $cAEAD0.1),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.1, impSk))) @ #vk.59
2: !KU( hkdfExpand(<$cAEAD0.4,                  h(<$cHash0.4,                     h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                        'g'^~yy.1>),                     aeadEncrypt('emptyStr',                                hkdfExpand(<$cAEAD0.3,                                             h(<$cHash0.3,                                                <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                                                'g'^~yy.1>),                                             'K_2ae'>,                                           hkdfExtract(~ltk.2, impSk)),                                h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                                    'g'^~yy.1>),                                $cAEAD0.3),                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(~ltk.2, impSk))) @ #vk.65
3: splitEqs(0)
4: splitEqs(3)
5: splitEqs(4)
6: !KU( 'g'^~xx ) @ #vk.55
7: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                               >),                              'K_2ae'>,                            hkdfExtract(~ltk.1, impSk)),                 h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy                   >),                 $cAEAD0.1)) @ #vk.62
8: !KU( 'g'^~yy ) @ #vk.64
9: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.3,                              h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                                 'g'^~yy.1>),                              'K_2ae'>,                            hkdfExtract(~ltk.2, impSk)),                 h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>,                     'g'^~yy.1>),                 $cAEAD0.3)) @ #vk.68
10: !KU( 'g'^~yy.1 ) @ #vk.70

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 135 (precomputed): !KU( ~ltk ) @ #vk.72
 OK.

theory edhoc_PSK_PSK_ACTIVE begin

// Function signature and definition of the equational theory E

builtins: diffie-hellman, xor
functions: aeadDecrypt/4, aeadEncrypt/4, decrypt/3, fst/1, h/1,
           hkdfExpand/2, hkdfExtract/2, pair/2, pk/1, sign/2, snd/1, true/0,
           verify/3
equations:
    aeadDecrypt(key, aeadEncrypt(key, pt, aad, algoId), aad, algoId) = pt,
    decrypt(key, aeadEncrypt(key, pt, aad, algoID), algoId) = pt,
    fst(<x.1, x.2>) = x.1,
    snd(<x.1, x.2>) = x.2,
    verify(sign(x.1, x.2), x.1, pk(x.2)) = true



restriction Eq:
  "∀ x y #i. (Eq( x, y ) @ #i) ⇒ (x = y)"
  // safety formula

rule (modulo E) I1_PSK_PSK:
   [ !LTK_PSK( <$U, $V>, ~ltk ), Fr( ~xx ), Fr( ~tid ) ]
  --[ I1( ~tid, $U, $V, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V> ) ]->
   [
   StI1_PSK_PSK( $U, ~ltk, $V, ~xx,
                 <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, ~tid
   ),
   Out( <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V> )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) R2_PSK_PSK:
   [
   !LTK_PSK( <$U, $V>, ~ltk ), In( <'PSK', 'PSK', $cSUITE0, gx, $U, $V> ),
   Fr( ~yy ), Fr( ~tid )
   ]
  --[
  ExpRunningR( ~tid, $V, gx^~yy ),
  R2( ~tid, $V, <'PSK', 'PSK', $cSUITE0, gx, $U, $V>,
      <'g'^~yy, 
       aeadEncrypt('emptyStr',
                   hkdfExpand(<$cAEAD0, 
                               h(<$cHash0, <'PSK', 'PSK', $cSUITE0, gx, $U, $V>, 'g'^~yy>), 'K_2ae'>,
                              hkdfExtract(~ltk, gx^~yy)),
                   h(<$cHash0, <'PSK', 'PSK', $cSUITE0, gx, $U, $V>, 'g'^~yy>), $cAEAD0)
      >
  )
  ]->
   [
   StR2_PSK_PSK( $U, $V, ~ltk, ~yy, hkdfExtract(~ltk, gx^~yy),
                 h(<$cHash0, <'PSK', 'PSK', $cSUITE0, gx, $U, $V>, 'g'^~yy>),
                 aeadEncrypt('emptyStr',
                             hkdfExpand(<$cAEAD0, 
                                         h(<$cHash0, <'PSK', 'PSK', $cSUITE0, gx, $U, $V>, 'g'^~yy>), 'K_2ae'
                                        >,
                                        hkdfExtract(~ltk, gx^~yy)),
                             h(<$cHash0, <'PSK', 'PSK', $cSUITE0, gx, $U, $V>, 'g'^~yy>), $cAEAD0),
                 gx^~yy, ~tid, <'PSK', 'PSK', $cSUITE0, gx, $U, $V>,
                 <'g'^~yy, 
                  aeadEncrypt('emptyStr',
                              hkdfExpand(<$cAEAD0, 
                                          h(<$cHash0, <'PSK', 'PSK', $cSUITE0, gx, $U, $V>, 'g'^~yy>), 'K_2ae'
                                         >,
                                         hkdfExtract(~ltk, gx^~yy)),
                              h(<$cHash0, <'PSK', 'PSK', $cSUITE0, gx, $U, $V>, 'g'^~yy>), $cAEAD0)
                 >
   ),
   Out( <'g'^~yy, 
         aeadEncrypt('emptyStr',
                     hkdfExpand(<$cAEAD0, 
                                 h(<$cHash0, <'PSK', 'PSK', $cSUITE0, gx, $U, $V>, 'g'^~yy>), 'K_2ae'>,
                                hkdfExtract(~ltk, gx^~yy)),
                     h(<$cHash0, <'PSK', 'PSK', $cSUITE0, gx, $U, $V>, 'g'^~yy>), $cAEAD0)
        >
   )
   ]

  /*
  rule (modulo AC) R2_PSK_PSK:
     [
     !LTK_PSK( <$U, $V>, ~ltk ), In( <'PSK', 'PSK', $cSUITE0, gx, $U, $V> ),
     Fr( ~yy ), Fr( ~tid )
     ]
    --[
    ExpRunningR( ~tid, $V, z ),
    R2( ~tid, $V, <'PSK', 'PSK', $cSUITE0, gx, $U, $V>,
        <'g'^~yy, 
         aeadEncrypt('emptyStr',
                     hkdfExpand(<$cAEAD0, 
                                 h(<$cHash0, <'PSK', 'PSK', $cSUITE0, gx, $U, $V>, 'g'^~yy>), 'K_2ae'>,
                                hkdfExtract(~ltk, z)),
                     h(<$cHash0, <'PSK', 'PSK', $cSUITE0, gx, $U, $V>, 'g'^~yy>), $cAEAD0)
        >
    )
    ]->
     [
     StR2_PSK_PSK( $U, $V, ~ltk, ~yy, hkdfExtract(~ltk, z),
                   h(<$cHash0, <'PSK', 'PSK', $cSUITE0, gx, $U, $V>, 'g'^~yy>),
                   aeadEncrypt('emptyStr',
                               hkdfExpand(<$cAEAD0, 
                                           h(<$cHash0, <'PSK', 'PSK', $cSUITE0, gx, $U, $V>, 'g'^~yy>), 
                                           'K_2ae'>,
                                          hkdfExtract(~ltk, z)),
                               h(<$cHash0, <'PSK', 'PSK', $cSUITE0, gx, $U, $V>, 'g'^~yy>), $cAEAD0),
                   z, ~tid, <'PSK', 'PSK', $cSUITE0, gx, $U, $V>,
                   <'g'^~yy, 
                    aeadEncrypt('emptyStr',
                                hkdfExpand(<$cAEAD0, 
                                            h(<$cHash0, <'PSK', 'PSK', $cSUITE0, gx, $U, $V>, 'g'^~yy>), 
                                            'K_2ae'>,
                                           hkdfExtract(~ltk, z)),
                                h(<$cHash0, <'PSK', 'PSK', $cSUITE0, gx, $U, $V>, 'g'^~yy>), $cAEAD0)
                   >
     ),
     Out( <'g'^~yy, 
           aeadEncrypt('emptyStr',
                       hkdfExpand(<$cAEAD0, 
                                   h(<$cHash0, <'PSK', 'PSK', $cSUITE0, gx, $U, $V>, 'g'^~yy>), 'K_2ae'>,
                                  hkdfExtract(~ltk, z)),
                       h(<$cHash0, <'PSK', 'PSK', $cSUITE0, gx, $U, $V>, 'g'^~yy>), $cAEAD0)
          >
     )
     ]
    variants (modulo AC)
    1. ~yy   = ~yy.14
       gx    = gx.15
       z     = gx.15^~yy.14
    
    2. ~yy   = ~yy.16
       gx    = z.19^inv(~yy.16)
       z     = z.19
    
    3. ~yy   = ~yy.68
       gx    = x.126^x.127
       z     = x.126^(~yy.68*x.127)
    
    4. ~yy   = ~yy.69
       gx    = x.128^inv((~yy.69*x.129))
       z     = x.128^inv(x.129)
    
    5. ~yy   = ~yy.69
       gx    = x.128^(x.129*inv(~yy.69))
       z     = x.128^x.129
    
    6. ~yy   = ~yy.70
       gx    = x.129^(x.130*inv((~yy.70*x.131)))
       z     = x.129^(x.130*inv(x.131))
  */

rule (modulo E) I3_PSK_PSK:
   [
   StI1_PSK_PSK( $U, ~ltk, $V, ~xx, m1, ~tid ),
   In( <gy, 
        aeadEncrypt('emptyStr',
                    hkdfExpand(<$cAEAD0, h(<$cHash0, m1, gy>), 'K_2ae'>,
                               hkdfExtract(~ltk, gy^~xx)),
                    h(<$cHash0, m1, gy>), $cAEAD0)
       >
   )
   ]
  --[
  ExpCommitI( ~tid, $U, $V, gy^~xx ), CommitI( ~tid, $U, $V, gy^~xx ),
  ExpRunningI( ~tid, $U, $V, gy^~xx ), RunningI( ~tid, $U, $V, gy^~xx ),
  I3( ~tid, $U, $V, m1,
      <gy, 
       aeadEncrypt('emptyStr',
                   hkdfExpand(<$cAEAD0, h(<$cHash0, m1, gy>), 'K_2ae'>,
                              hkdfExtract(~ltk, gy^~xx)),
                   h(<$cHash0, m1, gy>), $cAEAD0)
      >,
      <'emptyStr', 
       aeadEncrypt('emptyStr',
                   hkdfExpand(<$cAEAD0, 
                               h(<$cHash0, h(<$cHash0, m1, gy>), 
                                  aeadEncrypt('emptyStr',
                                              hkdfExpand(<$cAEAD0, h(<$cHash0, m1, gy>), 'K_2ae'>,
                                                         hkdfExtract(~ltk, gy^~xx)),
                                              h(<$cHash0, m1, gy>), $cAEAD0), 
                                  'emptyStr'>), 
                               'K_3ae'>,
                              hkdfExtract(~ltk, gy^~xx)),
                   h(<$cHash0, h(<$cHash0, m1, gy>), 
                      aeadEncrypt('emptyStr',
                                  hkdfExpand(<$cAEAD0, h(<$cHash0, m1, gy>), 'K_2ae'>,
                                             hkdfExtract(~ltk, gy^~xx)),
                                  h(<$cHash0, m1, gy>), $cAEAD0), 
                      'emptyStr'>),
                   $cAEAD0)
      >
  ),
  Eq( '1', '1' )
  ]->
   [
   Out( <'emptyStr', 
         aeadEncrypt('emptyStr',
                     hkdfExpand(<$cAEAD0, 
                                 h(<$cHash0, h(<$cHash0, m1, gy>), 
                                    aeadEncrypt('emptyStr',
                                                hkdfExpand(<$cAEAD0, h(<$cHash0, m1, gy>), 'K_2ae'>,
                                                           hkdfExtract(~ltk, gy^~xx)),
                                                h(<$cHash0, m1, gy>), $cAEAD0), 
                                    'emptyStr'>), 
                                 'K_3ae'>,
                                hkdfExtract(~ltk, gy^~xx)),
                     h(<$cHash0, h(<$cHash0, m1, gy>), 
                        aeadEncrypt('emptyStr',
                                    hkdfExpand(<$cAEAD0, h(<$cHash0, m1, gy>), 'K_2ae'>,
                                               hkdfExtract(~ltk, gy^~xx)),
                                    h(<$cHash0, m1, gy>), $cAEAD0), 
                        'emptyStr'>),
                     $cAEAD0)
        >
   )
   ]

  /*
  rule (modulo AC) I3_PSK_PSK:
     [
     StI1_PSK_PSK( $U, ~ltk, $V, ~xx, m1, ~tid ),
     In( <gy, 
          aeadEncrypt('emptyStr',
                      hkdfExpand(<$cAEAD0, h(<$cHash0, m1, gy>), 'K_2ae'>,
                                 hkdfExtract(~ltk, z)),
                      h(<$cHash0, m1, gy>), $cAEAD0)
         >
     )
     ]
    --[
    ExpCommitI( ~tid, $U, $V, z ), CommitI( ~tid, $U, $V, z ),
    ExpRunningI( ~tid, $U, $V, z ), RunningI( ~tid, $U, $V, z ),
    I3( ~tid, $U, $V, m1,
        <gy, 
         aeadEncrypt('emptyStr',
                     hkdfExpand(<$cAEAD0, h(<$cHash0, m1, gy>), 'K_2ae'>,
                                hkdfExtract(~ltk, z)),
                     h(<$cHash0, m1, gy>), $cAEAD0)
        >,
        <'emptyStr', 
         aeadEncrypt('emptyStr',
                     hkdfExpand(<$cAEAD0, 
                                 h(<$cHash0, h(<$cHash0, m1, gy>), 
                                    aeadEncrypt('emptyStr',
                                                hkdfExpand(<$cAEAD0, h(<$cHash0, m1, gy>), 'K_2ae'>,
                                                           hkdfExtract(~ltk, z)),
                                                h(<$cHash0, m1, gy>), $cAEAD0), 
                                    'emptyStr'>), 
                                 'K_3ae'>,
                                hkdfExtract(~ltk, z)),
                     h(<$cHash0, h(<$cHash0, m1, gy>), 
                        aeadEncrypt('emptyStr',
                                    hkdfExpand(<$cAEAD0, h(<$cHash0, m1, gy>), 'K_2ae'>,
                                               hkdfExtract(~ltk, z)),
                                    h(<$cHash0, m1, gy>), $cAEAD0), 
                        'emptyStr'>),
                     $cAEAD0)
        >
    ),
    Eq( '1', '1' )
    ]->
     [
     Out( <'emptyStr', 
           aeadEncrypt('emptyStr',
                       hkdfExpand(<$cAEAD0, 
                                   h(<$cHash0, h(<$cHash0, m1, gy>), 
                                      aeadEncrypt('emptyStr',
                                                  hkdfExpand(<$cAEAD0, h(<$cHash0, m1, gy>), 'K_2ae'>,
                                                             hkdfExtract(~ltk, z)),
                                                  h(<$cHash0, m1, gy>), $cAEAD0), 
                                      'emptyStr'>), 
                                   'K_3ae'>,
                                  hkdfExtract(~ltk, z)),
                       h(<$cHash0, h(<$cHash0, m1, gy>), 
                          aeadEncrypt('emptyStr',
                                      hkdfExpand(<$cAEAD0, h(<$cHash0, m1, gy>), 'K_2ae'>,
                                                 hkdfExtract(~ltk, z)),
                                      h(<$cHash0, m1, gy>), $cAEAD0), 
                          'emptyStr'>),
                       $cAEAD0)
          >
     )
     ]
    variants (modulo AC)
    1. ~xx   = ~xx.15
       gy    = gy.16
       z     = gy.16^~xx.15
    
    2. ~xx   = ~xx.19
       gy    = z.24^inv(~xx.19)
       z     = z.24
    
    3. ~xx   = ~xx.39
       gy    = x.69^x.70
       z     = x.69^(~xx.39*x.70)
    
    4. ~xx   = ~xx.40
       gy    = x.71^inv((~xx.40*x.72))
       z     = x.71^inv(x.72)
    
    5. ~xx   = ~xx.40
       gy    = x.71^(x.72*inv(~xx.40))
       z     = x.71^x.72
    
    6. ~xx   = ~xx.41
       gy    = x.72^(x.73*inv((~xx.41*x.74)))
       z     = x.72^(x.73*inv(x.74))
  */

rule (modulo E) R4_PSK_PSK:
   [
   StR2_PSK_PSK( $U, $V, ~ltk, ~yy, prk_3e2m, TH_2, CIPHERTEXT_2, gxy, ~tid,
                 m1, m2
   ),
   In( <'emptyStr', 
        aeadEncrypt('emptyStr',
                    hkdfExpand(<$cAEAD0, h(<$cHash0, TH_2, CIPHERTEXT_2, 'emptyStr'>), 
                                'K_3ae'>,
                               prk_3e2m),
                    h(<$cHash0, TH_2, CIPHERTEXT_2, 'emptyStr'>), $cAEAD0)
       >
   )
   ]
  --[
  ExpCommitR( ~tid, $U, $V, gxy ), CommitR( ~tid, $U, $V, gxy ),
  R4( ~tid, $U, $V, m1, m2,
      <'emptyStr', 
       aeadEncrypt('emptyStr',
                   hkdfExpand(<$cAEAD0, h(<$cHash0, TH_2, CIPHERTEXT_2, 'emptyStr'>), 
                               'K_3ae'>,
                              prk_3e2m),
                   h(<$cHash0, TH_2, CIPHERTEXT_2, 'emptyStr'>), $cAEAD0)
      >
  )
  ]->
   [ ]

  /* has exactly the trivial AC variant */

rule (modulo E) registerLTK_SIG:
   [ Fr( ~ltk ) ]
  --[ UniqLTK( $A, ~ltk ) ]->
   [ !LTK_SIG( $A, ~ltk ), !PK_SIG( $A, pk(~ltk) ), Out( <$A, pk(~ltk)> ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) registerLTK_STAT:
   [ Fr( ~ltk ) ]
  --[ UniqLTK( $A, 'g'^~ltk ) ]->
   [ !LTK_STAT( $A, ~ltk ), !PK_STAT( $A, 'g'^~ltk ), Out( <$A, 'g'^~ltk> )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) registerLTK_PSK:
   [ Fr( ~ltk ) ]
  --[ UniqLTK( <$A, $B>, ~ltk ) ]->
   [ !LTK_PSK( <$A, $B>, ~ltk ) ]

  /* has exactly the trivial AC variant */

restriction uniqLTKs:
  "∀ id k1 k2 #i #j.
    ((UniqLTK( id, k1 ) @ #i) ∧ (UniqLTK( id, k2 ) @ #j)) ⇒ (k1 = k2)"
  // safety formula

rule (modulo E) revealLTK_SIG:
   [ !LTK_SIG( $A, ~ltk ) ] --[ LTKRev( $A ) ]-> [ Out( ~ltk ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) revealLTK_STAT:
   [ !LTK_STAT( $A, ~ltk ) ] --[ LTKRev( $A ) ]-> [ Out( ~ltk ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) revealLTK_PSK:
   [ !LTK_PSK( <$A, $B>, ~ltk ) ] --[ LTKRev( <$A, $B> ) ]-> [ Out( ~ltk ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) revealSessionKeyPSK:
   [ CommitI( tid, u, v, sk ) ] --[ SKRev( sk ) ]-> [ Out( sk ) ]

  /* has exactly the trivial AC variant */

lemma sanityExecutableToTheEnd:
  exists-trace
  "∃ tidI tidR u v m1 m2 m3 sk sk2 #i #j #k #l.
    ((((((((((((I1( tidI, u, v, m1 ) @ #i) ∧ (R2( tidR, v, m1, m2 ) @ #j)) ∧
              (#i < #j)) ∧
             (I3( tidI, u, v, m1, m2, m3 ) @ #k)) ∧
            (#j < #k)) ∧
           (CommitI( tidI, u, v, sk ) @ #k)) ∧
          (ExpCommitI( tidI, u, v, sk2 ) @ #k)) ∧
         (RunningI( tidI, u, v, sk ) @ #k)) ∧
        (ExpRunningI( tidI, u, v, sk2 ) @ #k)) ∧
       (R4( tidR, u, v, m1, m2, m3 ) @ #l)) ∧
      (#k < #l)) ∧
     (CommitR( tidR, u, v, sk ) @ #l)) ∧
    (ExpCommitR( tidR, u, v, sk2 ) @ #l)"
/*
guarded formula characterizing all satisfying traces:
"∃ tidI tidR u v m1 m2 m3 sk sk2 #i #j #k #l.
  (I1( tidI, u, v, m1 ) @ #i) ∧
  (R2( tidR, v, m1, m2 ) @ #j) ∧
  (I3( tidI, u, v, m1, m2, m3 ) @ #k) ∧
  (CommitI( tidI, u, v, sk ) @ #k) ∧
  (ExpCommitI( tidI, u, v, sk2 ) @ #k) ∧
  (RunningI( tidI, u, v, sk ) @ #k) ∧
  (ExpRunningI( tidI, u, v, sk2 ) @ #k) ∧
  (R4( tidR, u, v, m1, m2, m3 ) @ #l) ∧
  (CommitR( tidR, u, v, sk ) @ #l) ∧
  (ExpCommitR( tidR, u, v, sk2 ) @ #l)
 ∧
  (#i < #j) ∧ (#j < #k) ∧ (#k < #l)"
*/
by sorry

lemma authInjAgreeGuaranteeForI:
  all-traces
  "∀ tidI u v expSk #i.
    (ExpCommitI( tidI, u, v, expSk ) @ #i) ⇒
    (((((∃ tidR #j. (ExpRunningR( tidR, v, expSk ) @ #j) ∧ (#j < #i)) ∧
        (¬(∃ tidI2 u2 v2 #i2.
            (ExpCommitI( tidI2, u2, v2, expSk ) @ #i2) ∧ (¬(#i = #i2))))) ∨
       (∃ #j. (LTKRev( <u, v> ) @ #j) ∧ (#j < #i))) ∨
      (∃ #j. (LTKRev( u ) @ #j) ∧ (#j < #i))) ∨
     (∃ #j. (LTKRev( v ) @ #j) ∧ (#j < #i)))"
/*
guarded formula characterizing all counter-examples:
"∃ tidI u v expSk #i.
  (ExpCommitI( tidI, u, v, expSk ) @ #i)
 ∧
  (((∀ tidR #j. (ExpRunningR( tidR, v, expSk ) @ #j) ⇒ ¬(#j < #i)) ∨
    (∃ tidI2 u2 v2 #i2.
      (ExpCommitI( tidI2, u2, v2, expSk ) @ #i2) ∧ ¬(#i = #i2)))) ∧
  (∀ #j. (LTKRev( <u, v> ) @ #j) ⇒ ¬(#j < #i)) ∧
  (∀ #j. (LTKRev( u ) @ #j) ⇒ ¬(#j < #i)) ∧
  (∀ #j. (LTKRev( v ) @ #j) ⇒ ¬(#j < #i))"
*/
by sorry

lemma authInjAgreeGuaranteeForR:
  all-traces
  "∀ tidR u v sk #i.
    (CommitR( tidR, u, v, sk ) @ #i) ⇒
    (((((∃ tidI #j. (RunningI( tidI, u, v, sk ) @ #j) ∧ (#j < #i)) ∧
        (¬(∃ tidR2 u2 v2 #i2.
            (CommitR( tidR2, u2, v2, sk ) @ #i2) ∧ (¬(#i = #i2))))) ∨
       (∃ #j. (LTKRev( <u, v> ) @ #j) ∧ (#j < #i))) ∨
      (∃ #j. (LTKRev( u ) @ #j) ∧ (#j < #i))) ∨
     (∃ #j. (LTKRev( v ) @ #j) ∧ (#j < #i)))"
/*
guarded formula characterizing all counter-examples:
"∃ tidR u v sk #i.
  (CommitR( tidR, u, v, sk ) @ #i)
 ∧
  (((∀ tidI #j. (RunningI( tidI, u, v, sk ) @ #j) ⇒ ¬(#j < #i)) ∨
    (∃ tidR2 u2 v2 #i2.
      (CommitR( tidR2, u2, v2, sk ) @ #i2) ∧ ¬(#i = #i2)))) ∧
  (∀ #j. (LTKRev( <u, v> ) @ #j) ⇒ ¬(#j < #i)) ∧
  (∀ #j. (LTKRev( u ) @ #j) ⇒ ¬(#j < #i)) ∧
  (∀ #j. (LTKRev( v ) @ #j) ⇒ ¬(#j < #i))"
*/
by sorry

lemma authGIYImplicitAuthGuaranteeForI:
  all-traces
  "∀ tidI u v impSk #i.
    (CommitI( tidI, u, v, impSk ) @ #i) ⇒
    ((((((∀ tidR u2 v2 #j.
           (CommitR( tidR, u2, v2, impSk ) @ #j) ⇒ ((u = u2) ∧ (v = v2))) ∧
         (¬(∃ #k. K( impSk ) @ #k))) ∧
        (¬(∃ tidR u.1 v.1 #j tidR2 u2 v2 #j2.
            ((CommitR( tidR, u.1, v.1, impSk ) @ #j) ∧
             (CommitR( tidR2, u2, v2, impSk ) @ #j2)) ∧
            (¬(#j = #j2))))) ∨
       (∃ #k. LTKRev( u ) @ #k)) ∨
      (∃ #k. LTKRev( v ) @ #k)) ∨
     (∃ #k. LTKRev( <u, v> ) @ #k))"
/*
guarded formula characterizing all counter-examples:
"∃ tidI u v impSk #i.
  (CommitI( tidI, u, v, impSk ) @ #i)
 ∧
  (((∃ tidR u2 v2 #j.
      (CommitR( tidR, u2, v2, impSk ) @ #j) ∧ ((¬(u = u2)) ∨ (¬(v = v2)))) ∨
    (∃ #k. (K( impSk ) @ #k)) ∨
    (∃ tidR u.1 v.1 #j tidR2 u2 v2 #j2.
      (CommitR( tidR, u.1, v.1, impSk ) @ #j) ∧
      (CommitR( tidR2, u2, v2, impSk ) @ #j2)
     ∧
      ¬(#j = #j2)))) ∧
  (∀ #k. (LTKRev( u ) @ #k) ⇒ ⊥) ∧
  (∀ #k. (LTKRev( v ) @ #k) ⇒ ⊥) ∧
  (∀ #k. (LTKRev( <u, v> ) @ #k) ⇒ ⊥)"
*/
simplify
solve( (∃ tidR u2 v2 #j.
         (CommitR( tidR, u2, v2, impSk ) @ #j) ∧ ((¬($U = u2)) ∨ (¬($V = v2))))  ∥
       (∃ #k. (K( impSk ) @ #k))  ∥
       (∃ tidR u v #j tidR2 u2 v2 #j2.
         (CommitR( tidR, u, v, impSk ) @ #j) ∧
         (CommitR( tidR2, u2, v2, impSk ) @ #j2)
        ∧
         ¬(#j = #j2)) )
  case case_1
  solve( (¬($U = $U.1))  ∥ (¬($V = $V.1)) )
    case case_1
    solve( StI1_PSK_PSK( $U, ~ltk, $V, ~xx, m1, ~tid ) ▶₀ #i )
      case I1_PSK_PSK
      solve( StR2_PSK_PSK( $U.1, $V.1, ~ltk.1, ~yy, prk_3e2m, TH_2,
                           CIPHERTEXT_2, impSk, ~tid.1, m1, m2
             ) ▶₀ #j )
        case R2_PSK_PSK
        solve( !KU( aeadEncrypt('emptyStr',
                                hkdfExpand(<$cAEAD0, 
                                            h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, gy>), 
                                            'K_2ae'>,
                                           hkdfExtract(~ltk, impSk)),
                                h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, gy>), $cAEAD0)
               ) @ #vk.2 )
          case R2_PSK_PSK
          solve( splitEqs(2) )
            case split_case_1
            by contradiction /* from formulas */
          next
            case split_case_2
            solve( !KU( 'g'^(~xx*~yy*inv(~yy.1)) ) @ #vk.14 )
              case I1_PSK_PSK
              by solve( !KU( ~yy ) @ #vk.26 )
            next
              case R2_PSK_PSK
              by solve( !KU( ~xx ) @ #vk.26 )
            next
              case c_exp
              by solve( !KU( ~xx ) @ #vk.27 )
            qed
          qed
        next
          case c_aeadEncrypt
          solve( !KU( h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, gy>)
                 ) @ #vk.17 )
            case c_h
            solve( !KU( aeadEncrypt('emptyStr',
                                    hkdfExpand(<$cAEAD0.2, 
                                                h(<$cHash0.2, 
                                                   h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 
                                                      'g'^~yy>), 
                                                   aeadEncrypt('emptyStr',
                                                               hkdfExpand(<$cAEAD0.1, 
                                                                           h(<$cHash0.1, 
                                                                              <'PSK', 'PSK', $cSUITE0.1, gx, 
                                                                               $U.1, $V.1>, 
                                                                              'g'^~yy>), 
                                                                           'K_2ae'>,
                                                                          hkdfExtract(~ltk.1, impSk)),
                                                               h(<$cHash0.1, 
                                                                  <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 
                                                                  'g'^~yy>),
                                                               $cAEAD0.1), 
                                                   'emptyStr'>), 
                                                'K_3ae'>,
                                               hkdfExtract(~ltk.1, impSk)),
                                    h(<$cHash0.2, 
                                       h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy>), 
                                       aeadEncrypt('emptyStr',
                                                   hkdfExpand(<$cAEAD0.1, 
                                                               h(<$cHash0.1, 
                                                                  <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 
                                                                  'g'^~yy>), 
                                                               'K_2ae'>,
                                                              hkdfExtract(~ltk.1, impSk)),
                                                   h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 
                                                      'g'^~yy>),
                                                   $cAEAD0.1), 
                                       'emptyStr'>),
                                    $cAEAD0.2)
                   ) @ #vk.7 )
              case I3_PSK_PSK
              solve( splitEqs(0) )
                case split_case_1
                by contradiction /* from formulas */
              next
                case split_case_2
                solve( !KU( 'g'^(~yy*~xx.1*inv(~xx)) ) @ #vk.5 )
                  case I1_PSK_PSK
                  by solve( !KU( ~yy ) @ #vk.35 )
                next
                  case R2_PSK_PSK
                  by solve( !KU( ~xx.1 ) @ #vk.35 )
                next
                  case c_exp
                  by solve( !KU( ~yy ) @ #vk.36 )
                qed
              qed
            next
              case c_aeadEncrypt
              solve( !KU( h(<$cHash0.2, 
                             h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy>), 
                             aeadEncrypt('emptyStr',
                                         hkdfExpand(<$cAEAD0.1, 
                                                     h(<$cHash0.1, 
                                                        <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy
                                                       >), 
                                                     'K_2ae'>,
                                                    hkdfExtract(~ltk.1, impSk)),
                                         h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy>),
                                         $cAEAD0.1), 
                             'emptyStr'>)
                     ) @ #vk.32 )
                case c_h
                solve( !KU( h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 
                               'g'^~yy>)
                       ) @ #vk.38 )
                  case c_h
                  solve( !KU( hkdfExpand(<$cAEAD0, 
                                          h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, gy>), 'K_2ae'
                                         >,
                                         hkdfExtract(~ltk, impSk))
                         ) @ #vk.26 )
                    case R2_PSK_PSK_case_1
                    solve( splitEqs(2) )
                      case split_case_1
                      by contradiction /* from formulas */
                    next
                      case split_case_2
                      solve( !KU( 'g'^(~xx*~yy*inv(~yy.1)) ) @ #vk.25 )
                        case I1_PSK_PSK
                        by solve( !KU( ~yy ) @ #vk.45 )
                      next
                        case R2_PSK_PSK
                        by solve( !KU( ~xx ) @ #vk.45 )
                      next
                        case c_exp
                        by solve( !KU( ~xx ) @ #vk.46 )
                      qed
                    qed
                  next
                    case R2_PSK_PSK_case_2
                    solve( splitEqs(2) )
                      case split_case_1
                      by contradiction /* from formulas */
                    next
                      case split_case_2
                      solve( !KU( 'g'^(~xx*~yy*inv(~yy.1)) ) @ #vk.25 )
                        case I1_PSK_PSK
                        by solve( !KU( ~yy ) @ #vk.46 )
                      next
                        case R2_PSK_PSK
                        by solve( !KU( ~xx ) @ #vk.46 )
                      next
                        case c_exp
                        by solve( !KU( ~xx ) @ #vk.47 )
                      qed
                    qed
                  next
                    case c_hkdfExpand
                    solve( !KU( hkdfExtract(~ltk, impSk) ) @ #vk.46 )
                      case c_hkdfExtract
                      solve( !KU( ~ltk ) @ #vk.48 )
                        case revealLTK_PSK
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  next
    case case_2
    solve( StI1_PSK_PSK( $U, ~ltk, $V, ~xx, m1, ~tid ) ▶₀ #i )
      case I1_PSK_PSK
      solve( StR2_PSK_PSK( $U.1, $V.1, ~ltk.1, ~yy, prk_3e2m, TH_2,
                           CIPHERTEXT_2, impSk, ~tid.1, m1, m2
             ) ▶₀ #j )
        case R2_PSK_PSK
        solve( !KU( aeadEncrypt('emptyStr',
                                hkdfExpand(<$cAEAD0, 
                                            h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, gy>), 
                                            'K_2ae'>,
                                           hkdfExtract(~ltk, impSk)),
                                h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, gy>), $cAEAD0)
               ) @ #vk.2 )
          case R2_PSK_PSK
          solve( splitEqs(2) )
            case split_case_1
            by contradiction /* from formulas */
          next
            case split_case_2
            solve( !KU( 'g'^(~xx*~yy*inv(~yy.1)) ) @ #vk.14 )
              case I1_PSK_PSK
              by solve( !KU( ~yy ) @ #vk.26 )
            next
              case R2_PSK_PSK
              by solve( !KU( ~xx ) @ #vk.26 )
            next
              case c_exp
              by solve( !KU( ~xx ) @ #vk.27 )
            qed
          qed
        next
          case c_aeadEncrypt
          solve( !KU( h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, gy>)
                 ) @ #vk.17 )
            case c_h
            solve( !KU( aeadEncrypt('emptyStr',
                                    hkdfExpand(<$cAEAD0.2, 
                                                h(<$cHash0.2, 
                                                   h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 
                                                      'g'^~yy>), 
                                                   aeadEncrypt('emptyStr',
                                                               hkdfExpand(<$cAEAD0.1, 
                                                                           h(<$cHash0.1, 
                                                                              <'PSK', 'PSK', $cSUITE0.1, gx, 
                                                                               $U.1, $V.1>, 
                                                                              'g'^~yy>), 
                                                                           'K_2ae'>,
                                                                          hkdfExtract(~ltk.1, impSk)),
                                                               h(<$cHash0.1, 
                                                                  <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 
                                                                  'g'^~yy>),
                                                               $cAEAD0.1), 
                                                   'emptyStr'>), 
                                                'K_3ae'>,
                                               hkdfExtract(~ltk.1, impSk)),
                                    h(<$cHash0.2, 
                                       h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy>), 
                                       aeadEncrypt('emptyStr',
                                                   hkdfExpand(<$cAEAD0.1, 
                                                               h(<$cHash0.1, 
                                                                  <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 
                                                                  'g'^~yy>), 
                                                               'K_2ae'>,
                                                              hkdfExtract(~ltk.1, impSk)),
                                                   h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 
                                                      'g'^~yy>),
                                                   $cAEAD0.1), 
                                       'emptyStr'>),
                                    $cAEAD0.2)
                   ) @ #vk.7 )
              case I3_PSK_PSK
              solve( splitEqs(0) )
                case split_case_1
                by contradiction /* from formulas */
              next
                case split_case_2
                solve( !KU( 'g'^(~yy*~xx.1*inv(~xx)) ) @ #vk.5 )
                  case I1_PSK_PSK
                  by solve( !KU( ~yy ) @ #vk.35 )
                next
                  case R2_PSK_PSK
                  by solve( !KU( ~xx.1 ) @ #vk.35 )
                next
                  case c_exp
                  by solve( !KU( ~yy ) @ #vk.36 )
                qed
              qed
            next
              case c_aeadEncrypt
              solve( !KU( h(<$cHash0.2, 
                             h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy>), 
                             aeadEncrypt('emptyStr',
                                         hkdfExpand(<$cAEAD0.1, 
                                                     h(<$cHash0.1, 
                                                        <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy
                                                       >), 
                                                     'K_2ae'>,
                                                    hkdfExtract(~ltk.1, impSk)),
                                         h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy>),
                                         $cAEAD0.1), 
                             'emptyStr'>)
                     ) @ #vk.32 )
                case c_h
                solve( !KU( h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 
                               'g'^~yy>)
                       ) @ #vk.38 )
                  case c_h
                  solve( !KU( hkdfExpand(<$cAEAD0, 
                                          h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, gy>), 'K_2ae'
                                         >,
                                         hkdfExtract(~ltk, impSk))
                         ) @ #vk.26 )
                    case R2_PSK_PSK_case_1
                    solve( splitEqs(2) )
                      case split_case_1
                      by contradiction /* from formulas */
                    next
                      case split_case_2
                      solve( !KU( 'g'^(~xx*~yy*inv(~yy.1)) ) @ #vk.25 )
                        case I1_PSK_PSK
                        by solve( !KU( ~yy ) @ #vk.45 )
                      next
                        case R2_PSK_PSK
                        by solve( !KU( ~xx ) @ #vk.45 )
                      next
                        case c_exp
                        by solve( !KU( ~xx ) @ #vk.46 )
                      qed
                    qed
                  next
                    case R2_PSK_PSK_case_2
                    solve( splitEqs(2) )
                      case split_case_1
                      by contradiction /* from formulas */
                    next
                      case split_case_2
                      solve( !KU( 'g'^(~xx*~yy*inv(~yy.1)) ) @ #vk.25 )
                        case I1_PSK_PSK
                        by solve( !KU( ~yy ) @ #vk.46 )
                      next
                        case R2_PSK_PSK
                        by solve( !KU( ~xx ) @ #vk.46 )
                      next
                        case c_exp
                        by solve( !KU( ~xx ) @ #vk.47 )
                      qed
                    qed
                  next
                    case c_hkdfExpand
                    solve( !KU( hkdfExtract(~ltk, impSk) ) @ #vk.46 )
                      case c_hkdfExtract
                      solve( !KU( ~ltk ) @ #vk.48 )
                        case revealLTK_PSK
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  qed
next
  case case_2
  solve( StI1_PSK_PSK( $U, ~ltk, $V, ~xx, m1, ~tid ) ▶₀ #i )
    case I1_PSK_PSK
    solve( !KU( aeadEncrypt('emptyStr',
                            hkdfExpand(<$cAEAD0, 
                                        h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, gy>), 'K_2ae'>,
                                       hkdfExtract(~ltk, impSk)),
                            h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, gy>), $cAEAD0)
           ) @ #vk.2 )
      case R2_PSK_PSK
      solve( !KU( 'g'^(~xx*~yy) ) @ #vk.3 )
        case I1_PSK_PSK
        by solve( !KU( ~yy ) @ #vk.14 )
      next
        case R2_PSK_PSK
        by solve( !KU( ~xx ) @ #vk.14 )
      next
        case c_exp
        by solve( !KU( ~xx ) @ #vk.16 )
      qed
    next
      case c_aeadEncrypt
      solve( !KU( h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, gy>)
             ) @ #vk.6 )
        case c_h
        solve( !KU( hkdfExpand(<$cAEAD0, 
                                h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, gy>), 'K_2ae'>,
                               hkdfExtract(~ltk, impSk))
               ) @ #vk.7 )
          case R2_PSK_PSK_case_1
          solve( !KU( 'g'^(~xx*~yy) ) @ #vk.7 )
            case I1_PSK_PSK
            by solve( !KU( ~yy ) @ #vk.21 )
          next
            case R2_PSK_PSK
            by solve( !KU( ~xx ) @ #vk.21 )
          next
            case c_exp
            by solve( !KU( ~xx ) @ #vk.23 )
          qed
        next
          case R2_PSK_PSK_case_2
          solve( !KU( 'g'^(~xx*~yy) ) @ #vk.7 )
            case I1_PSK_PSK
            by solve( !KU( ~yy ) @ #vk.22 )
          next
            case R2_PSK_PSK
            by solve( !KU( ~xx ) @ #vk.22 )
          next
            case c_exp
            by solve( !KU( ~xx ) @ #vk.24 )
          qed
        next
          case c_hkdfExpand
          solve( !KU( hkdfExtract(~ltk, impSk) ) @ #vk.23 )
            case c_hkdfExtract
            solve( !KU( ~ltk ) @ #vk.25 )
              case revealLTK_PSK
              by contradiction /* from formulas */
            qed
          qed
        qed
      qed
    qed
  qed
next
  case case_3
  solve( (#j < #j2)  ∥ (#j2 < #j) )
    case case_1
    solve( StI1_PSK_PSK( $U, ~ltk, $V, ~xx, m1, ~tid ) ▶₀ #i )
      case I1_PSK_PSK
      solve( StR2_PSK_PSK( $U.1, $V.1, ~ltk.1, ~yy, prk_3e2m, TH_2,
                           CIPHERTEXT_2, impSk, ~tid.1, m1, m2
             ) ▶₀ #j )
        case R2_PSK_PSK
        solve( StR2_PSK_PSK( $U.2, $V.2, ~ltk.2, ~yy.1, prk_3e2m, TH_2,
                             CIPHERTEXT_2, impSk, ~tid.2, m1, m2
               ) ▶₀ #j2 )
          case R2_PSK_PSK
          solve( !KU( aeadEncrypt('emptyStr',
                                  hkdfExpand(<$cAEAD0, 
                                              h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, gy>), 
                                              'K_2ae'>,
                                             hkdfExtract(~ltk, impSk)),
                                  h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, gy>), $cAEAD0)
                 ) @ #vk.2 )
            case R2_PSK_PSK
            solve( splitEqs(3) )
              case split_case_1
              solve( splitEqs(4) )
                case split_case_1
                by contradiction /* cyclic */
              next
                case split_case_2
                solve( !KU( 'g'^(~xx*~yy*inv(~yy.1)) ) @ #vk.23 )
                  case I1_PSK_PSK
                  by solve( !KU( ~yy ) @ #vk.28 )
                next
                  case R2_PSK_PSK
                  by solve( !KU( ~xx ) @ #vk.28 )
                next
                  case c_exp
                  by solve( !KU( ~xx ) @ #vk.29 )
                qed
              qed
            next
              case split_case_2
              solve( splitEqs(4) )
                case split_case_1
                solve( !KU( 'g'^(~xx*~yy*inv(~yy.1)) ) @ #vk.16 )
                  case I1_PSK_PSK
                  by solve( !KU( ~yy ) @ #vk.28 )
                next
                  case R2_PSK_PSK
                  by solve( !KU( ~xx ) @ #vk.28 )
                next
                  case c_exp
                  by solve( !KU( ~xx ) @ #vk.29 )
                qed
              next
                case split_case_2
                solve( !KU( 'g'^(~xx*~yy*inv(~yy.1)) ) @ #vk.18 )
                  case I1_PSK_PSK
                  by solve( !KU( ~yy ) @ #vk.37 )
                next
                  case R2_PSK_PSK
                  by solve( !KU( ~xx ) @ #vk.37 )
                next
                  case c_exp
                  by solve( !KU( ~xx ) @ #vk.38 )
                qed
              qed
            qed
          next
            case c_aeadEncrypt
            solve( !KU( h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, gy>)
                   ) @ #vk.28 )
              case c_h
              solve( !KU( aeadEncrypt('emptyStr',
                                      hkdfExpand(<$cAEAD0.2, 
                                                  h(<$cHash0.2, 
                                                     h(<$cHash0.1, 
                                                        <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy
                                                       >), 
                                                     aeadEncrypt('emptyStr',
                                                                 hkdfExpand(<$cAEAD0.1, 
                                                                             h(<$cHash0.1, 
                                                                                <'PSK', 'PSK', $cSUITE0.1, 
                                                                                 gx, $U.1, $V.1>, 
                                                                                'g'^~yy>), 
                                                                             'K_2ae'>,
                                                                            hkdfExtract(~ltk.1, impSk)),
                                                                 h(<$cHash0.1, 
                                                                    <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1
                                                                    >, 
                                                                    'g'^~yy>),
                                                                 $cAEAD0.1), 
                                                     'emptyStr'>), 
                                                  'K_3ae'>,
                                                 hkdfExtract(~ltk.1, impSk)),
                                      h(<$cHash0.2, 
                                         h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy>), 
                                         aeadEncrypt('emptyStr',
                                                     hkdfExpand(<$cAEAD0.1, 
                                                                 h(<$cHash0.1, 
                                                                    <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1
                                                                    >, 
                                                                    'g'^~yy>), 
                                                                 'K_2ae'>,
                                                                hkdfExtract(~ltk.1, impSk)),
                                                     h(<$cHash0.1, 
                                                        <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy>),
                                                     $cAEAD0.1), 
                                         'emptyStr'>),
                                      $cAEAD0.2)
                     ) @ #vk.8 )
                case I3_PSK_PSK
                solve( splitEqs(0) )
                  case split_case_1
                  solve( splitEqs(4) )
                    case split_case_1
                    by contradiction /* cyclic */
                  next
                    case split_case_2
                    solve( !KU( 'g'^(~xx*~yy*inv(~yy.1)) ) @ #vk.26 )
                      case I1_PSK_PSK
                      by solve( !KU( ~yy ) @ #vk.34 )
                    next
                      case R2_PSK_PSK
                      by solve( !KU( ~xx ) @ #vk.34 )
                    next
                      case c_exp
                      by solve( !KU( ~xx ) @ #vk.35 )
                    qed
                  qed
                next
                  case split_case_2
                  solve( splitEqs(4) )
                    case split_case_1
                    by contradiction /* cyclic */
                  next
                    case split_case_2
                    solve( !KU( 'g'^(~yy*~xx.1*inv(~xx)) ) @ #vk.5 )
                      case I1_PSK_PSK
                      by solve( !KU( ~yy ) @ #vk.46 )
                    next
                      case R2_PSK_PSK
                      by solve( !KU( ~xx.1 ) @ #vk.46 )
                    next
                      case c_exp
                      by solve( !KU( ~yy ) @ #vk.47 )
                    qed
                  qed
                qed
              next
                case c_aeadEncrypt
                solve( !KU( h(<$cHash0.2, 
                               h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy>), 
                               aeadEncrypt('emptyStr',
                                           hkdfExpand(<$cAEAD0.1, 
                                                       h(<$cHash0.1, 
                                                          <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy
                                                         >), 
                                                       'K_2ae'>,
                                                      hkdfExtract(~ltk.1, impSk)),
                                           h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy
                                             >),
                                           $cAEAD0.1), 
                               'emptyStr'>)
                       ) @ #vk.43 )
                  case c_h
                  solve( !KU( h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 
                                 'g'^~yy>)
                         ) @ #vk.49 )
                    case c_h
                    solve( !KU( aeadEncrypt('emptyStr',
                                            hkdfExpand(<$cAEAD0.4, 
                                                        h(<$cHash0.4, 
                                                           h(<$cHash0.3, 
                                                              <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>, 
                                                              'g'^~yy.1>), 
                                                           aeadEncrypt('emptyStr',
                                                                       hkdfExpand(<$cAEAD0.3, 
                                                                                   h(<$cHash0.3, 
                                                                                      <'PSK', 'PSK', 
                                                                                       $cSUITE0.2, gx.1, 
                                                                                       $U.2, $V.2>, 
                                                                                      'g'^~yy.1>), 
                                                                                   'K_2ae'>,
                                                                                  hkdfExtract(~ltk.2, impSk)),
                                                                       h(<$cHash0.3, 
                                                                          <'PSK', 'PSK', $cSUITE0.2, gx.1, 
                                                                           $U.2, $V.2>, 
                                                                          'g'^~yy.1>),
                                                                       $cAEAD0.3), 
                                                           'emptyStr'>), 
                                                        'K_3ae'>,
                                                       hkdfExtract(~ltk.2, impSk)),
                                            h(<$cHash0.4, 
                                               h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>, 
                                                  'g'^~yy.1>), 
                                               aeadEncrypt('emptyStr',
                                                           hkdfExpand(<$cAEAD0.3, 
                                                                       h(<$cHash0.3, 
                                                                          <'PSK', 'PSK', $cSUITE0.2, gx.1, 
                                                                           $U.2, $V.2>, 
                                                                          'g'^~yy.1>), 
                                                                       'K_2ae'>,
                                                                      hkdfExtract(~ltk.2, impSk)),
                                                           h(<$cHash0.3, 
                                                              <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>, 
                                                              'g'^~yy.1>),
                                                           $cAEAD0.3), 
                                               'emptyStr'>),
                                            $cAEAD0.4)
                           ) @ #vk.14 )
                      case I3_PSK_PSK
                      solve( splitEqs(0) )
                        case split_case_1
                        solve( splitEqs(3) )
                          case split
                          solve( !KU( 'g'^(~xx*~yy*inv(~yy.1)) ) @ #vk.26 )
                            case I1_PSK_PSK
                            by solve( !KU( ~yy ) @ #vk.47 )
                          next
                            case R2_PSK_PSK
                            by solve( !KU( ~xx ) @ #vk.47 )
                          next
                            case c_exp
                            by solve( !KU( ~xx ) @ #vk.48 )
                          qed
                        qed
                      next
                        case split_case_2
                        solve( splitEqs(3) )
                          case split
                          solve( !KU( 'g'^(~yy*~xx.1*inv(~xx)) ) @ #vk.11 )
                            case I1_PSK_PSK
                            by solve( !KU( ~yy ) @ #vk.59 )
                          next
                            case R2_PSK_PSK
                            by solve( !KU( ~xx.1 ) @ #vk.59 )
                          next
                            case c_exp
                            by solve( !KU( ~yy ) @ #vk.60 )
                          qed
                        qed
                      qed
                    next
                      case c_aeadEncrypt
                      solve( !KU( h(<$cHash0.4, 
                                     h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>, 'g'^~yy.1>), 
                                     aeadEncrypt('emptyStr',
                                                 hkdfExpand(<$cAEAD0.3, 
                                                             h(<$cHash0.3, 
                                                                <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>, 
                                                                'g'^~yy.1>), 
                                                             'K_2ae'>,
                                                            hkdfExtract(~ltk.2, impSk)),
                                                 h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>, 
                                                    'g'^~yy.1>),
                                                 $cAEAD0.3), 
                                     'emptyStr'>)
                             ) @ #vk.56 )
                        case c_h
                        solve( !KU( h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>, 
                                       'g'^~yy.1>)
                               ) @ #vk.62 )
                          case c_h
                          solve( !KU( hkdfExpand(<$cAEAD0, 
                                                  h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, gy
                                                    >), 
                                                  'K_2ae'>,
                                                 hkdfExtract(~ltk, impSk))
                                 ) @ #vk.44 )
                            case R2_PSK_PSK_case_1
                            solve( splitEqs(3) )
                              case split_case_1
                              solve( splitEqs(4) )
                                case split_case_1
                                by contradiction /* cyclic */
                              next
                                case split_case_2
                                solve( !KU( 'g'^(~xx*~yy*inv(~yy.1)) ) @ #vk.38 )
                                  case I1_PSK_PSK
                                  by solve( !KU( ~yy ) @ #vk.54 )
                                next
                                  case R2_PSK_PSK
                                  by solve( !KU( ~xx ) @ #vk.54 )
                                next
                                  case c_exp
                                  by solve( !KU( ~xx ) @ #vk.55 )
                                qed
                              qed
                            next
                              case split_case_2
                              solve( splitEqs(4) )
                                case split_case_1
                                solve( !KU( 'g'^(~xx*~yy*inv(~yy.1)) ) @ #vk.31 )
                                  case I1_PSK_PSK
                                  by solve( !KU( ~yy ) @ #vk.54 )
                                next
                                  case R2_PSK_PSK
                                  by solve( !KU( ~xx ) @ #vk.54 )
                                next
                                  case c_exp
                                  by solve( !KU( ~xx ) @ #vk.55 )
                                qed
                              next
                                case split_case_2
                                solve( !KU( 'g'^(~xx*~yy*inv(~yy.1)) ) @ #vk.36 )
                                  case I1_PSK_PSK
                                  by solve( !KU( ~yy ) @ #vk.69 )
                                next
                                  case R2_PSK_PSK
                                  by solve( !KU( ~xx ) @ #vk.69 )
                                next
                                  case c_exp
                                  by solve( !KU( ~xx ) @ #vk.70 )
                                qed
                              qed
                            qed
                          next
                            case R2_PSK_PSK_case_2
                            solve( splitEqs(3) )
                              case split_case_1
                              solve( splitEqs(4) )
                                case split_case_1
                                by contradiction /* cyclic */
                              next
                                case split_case_2
                                solve( !KU( 'g'^(~xx*~yy*inv(~yy.1)) ) @ #vk.38 )
                                  case I1_PSK_PSK
                                  by solve( !KU( ~yy ) @ #vk.55 )
                                next
                                  case R2_PSK_PSK
                                  by solve( !KU( ~xx ) @ #vk.55 )
                                next
                                  case c_exp
                                  by solve( !KU( ~xx ) @ #vk.56 )
                                qed
                              qed
                            next
                              case split_case_2
                              solve( splitEqs(4) )
                                case split_case_1
                                solve( !KU( 'g'^(~xx*~yy*inv(~yy.1)) ) @ #vk.31 )
                                  case I1_PSK_PSK
                                  by solve( !KU( ~yy ) @ #vk.55 )
                                next
                                  case R2_PSK_PSK
                                  by solve( !KU( ~xx ) @ #vk.55 )
                                next
                                  case c_exp
                                  by solve( !KU( ~xx ) @ #vk.56 )
                                qed
                              next
                                case split_case_2
                                solve( !KU( 'g'^(~xx*~yy*inv(~yy.1)) ) @ #vk.36 )
                                  case I1_PSK_PSK
                                  by solve( !KU( ~yy ) @ #vk.70 )
                                next
                                  case R2_PSK_PSK
                                  by solve( !KU( ~xx ) @ #vk.70 )
                                next
                                  case c_exp
                                  by solve( !KU( ~xx ) @ #vk.71 )
                                qed
                              qed
                            qed
                          next
                            case c_hkdfExpand
                            solve( !KU( hkdfExtract(~ltk, impSk) ) @ #vk.70 )
                              case c_hkdfExtract
                              solve( !KU( ~ltk ) @ #vk.72 )
                                case revealLTK_PSK
                                by contradiction /* from formulas */
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  next
    case case_2
    solve( StI1_PSK_PSK( $U, ~ltk, $V, ~xx, m1, ~tid ) ▶₀ #i )
      case I1_PSK_PSK
      solve( StR2_PSK_PSK( $U.1, $V.1, ~ltk.1, ~yy, prk_3e2m, TH_2,
                           CIPHERTEXT_2, impSk, ~tid.1, m1, m2
             ) ▶₀ #j )
        case R2_PSK_PSK
        solve( StR2_PSK_PSK( $U.2, $V.2, ~ltk.2, ~yy.1, prk_3e2m, TH_2,
                             CIPHERTEXT_2, impSk, ~tid.2, m1, m2
               ) ▶₀ #j2 )
          case R2_PSK_PSK
          solve( !KU( aeadEncrypt('emptyStr',
                                  hkdfExpand(<$cAEAD0, 
                                              h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, gy>), 
                                              'K_2ae'>,
                                             hkdfExtract(~ltk, impSk)),
                                  h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, gy>), $cAEAD0)
                 ) @ #vk.2 )
            case R2_PSK_PSK
            solve( splitEqs(3) )
              case split_case_1
              solve( splitEqs(4) )
                case split_case_1
                by contradiction /* cyclic */
              next
                case split_case_2
                solve( !KU( 'g'^(~xx*~yy*inv(~yy.1)) ) @ #vk.23 )
                  case I1_PSK_PSK
                  by solve( !KU( ~yy ) @ #vk.28 )
                next
                  case R2_PSK_PSK
                  by solve( !KU( ~xx ) @ #vk.28 )
                next
                  case c_exp
                  by solve( !KU( ~xx ) @ #vk.29 )
                qed
              qed
            next
              case split_case_2
              solve( splitEqs(4) )
                case split_case_1
                solve( !KU( 'g'^(~xx*~yy*inv(~yy.1)) ) @ #vk.16 )
                  case I1_PSK_PSK
                  by solve( !KU( ~yy ) @ #vk.28 )
                next
                  case R2_PSK_PSK
                  by solve( !KU( ~xx ) @ #vk.28 )
                next
                  case c_exp
                  by solve( !KU( ~xx ) @ #vk.29 )
                qed
              next
                case split_case_2
                solve( !KU( 'g'^(~xx*~yy*inv(~yy.1)) ) @ #vk.18 )
                  case I1_PSK_PSK
                  by solve( !KU( ~yy ) @ #vk.37 )
                next
                  case R2_PSK_PSK
                  by solve( !KU( ~xx ) @ #vk.37 )
                next
                  case c_exp
                  by solve( !KU( ~xx ) @ #vk.38 )
                qed
              qed
            qed
          next
            case c_aeadEncrypt
            solve( !KU( h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, gy>)
                   ) @ #vk.28 )
              case c_h
              solve( !KU( aeadEncrypt('emptyStr',
                                      hkdfExpand(<$cAEAD0.2, 
                                                  h(<$cHash0.2, 
                                                     h(<$cHash0.1, 
                                                        <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy
                                                       >), 
                                                     aeadEncrypt('emptyStr',
                                                                 hkdfExpand(<$cAEAD0.1, 
                                                                             h(<$cHash0.1, 
                                                                                <'PSK', 'PSK', $cSUITE0.1, 
                                                                                 gx, $U.1, $V.1>, 
                                                                                'g'^~yy>), 
                                                                             'K_2ae'>,
                                                                            hkdfExtract(~ltk.1, impSk)),
                                                                 h(<$cHash0.1, 
                                                                    <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1
                                                                    >, 
                                                                    'g'^~yy>),
                                                                 $cAEAD0.1), 
                                                     'emptyStr'>), 
                                                  'K_3ae'>,
                                                 hkdfExtract(~ltk.1, impSk)),
                                      h(<$cHash0.2, 
                                         h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy>), 
                                         aeadEncrypt('emptyStr',
                                                     hkdfExpand(<$cAEAD0.1, 
                                                                 h(<$cHash0.1, 
                                                                    <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1
                                                                    >, 
                                                                    'g'^~yy>), 
                                                                 'K_2ae'>,
                                                                hkdfExtract(~ltk.1, impSk)),
                                                     h(<$cHash0.1, 
                                                        <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy>),
                                                     $cAEAD0.1), 
                                         'emptyStr'>),
                                      $cAEAD0.2)
                     ) @ #vk.8 )
                case I3_PSK_PSK
                solve( splitEqs(0) )
                  case split_case_1
                  solve( splitEqs(4) )
                    case split_case_1
                    by contradiction /* cyclic */
                  next
                    case split_case_2
                    solve( !KU( 'g'^(~xx*~yy*inv(~yy.1)) ) @ #vk.26 )
                      case I1_PSK_PSK
                      by solve( !KU( ~yy ) @ #vk.34 )
                    next
                      case R2_PSK_PSK
                      by solve( !KU( ~xx ) @ #vk.34 )
                    next
                      case c_exp
                      by solve( !KU( ~xx ) @ #vk.35 )
                    qed
                  qed
                next
                  case split_case_2
                  solve( splitEqs(4) )
                    case split_case_1
                    by contradiction /* cyclic */
                  next
                    case split_case_2
                    solve( !KU( 'g'^(~yy*~xx.1*inv(~xx)) ) @ #vk.5 )
                      case I1_PSK_PSK
                      by solve( !KU( ~yy ) @ #vk.46 )
                    next
                      case R2_PSK_PSK
                      by solve( !KU( ~xx.1 ) @ #vk.46 )
                    next
                      case c_exp
                      by solve( !KU( ~yy ) @ #vk.47 )
                    qed
                  qed
                qed
              next
                case c_aeadEncrypt
                solve( !KU( h(<$cHash0.2, 
                               h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy>), 
                               aeadEncrypt('emptyStr',
                                           hkdfExpand(<$cAEAD0.1, 
                                                       h(<$cHash0.1, 
                                                          <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy
                                                         >), 
                                                       'K_2ae'>,
                                                      hkdfExtract(~ltk.1, impSk)),
                                           h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy
                                             >),
                                           $cAEAD0.1), 
                               'emptyStr'>)
                       ) @ #vk.43 )
                  case c_h
                  solve( !KU( h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 
                                 'g'^~yy>)
                         ) @ #vk.49 )
                    case c_h
                    solve( !KU( aeadEncrypt('emptyStr',
                                            hkdfExpand(<$cAEAD0.4, 
                                                        h(<$cHash0.4, 
                                                           h(<$cHash0.3, 
                                                              <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>, 
                                                              'g'^~yy.1>), 
                                                           aeadEncrypt('emptyStr',
                                                                       hkdfExpand(<$cAEAD0.3, 
                                                                                   h(<$cHash0.3, 
                                                                                      <'PSK', 'PSK', 
                                                                                       $cSUITE0.2, gx.1, 
                                                                                       $U.2, $V.2>, 
                                                                                      'g'^~yy.1>), 
                                                                                   'K_2ae'>,
                                                                                  hkdfExtract(~ltk.2, impSk)),
                                                                       h(<$cHash0.3, 
                                                                          <'PSK', 'PSK', $cSUITE0.2, gx.1, 
                                                                           $U.2, $V.2>, 
                                                                          'g'^~yy.1>),
                                                                       $cAEAD0.3), 
                                                           'emptyStr'>), 
                                                        'K_3ae'>,
                                                       hkdfExtract(~ltk.2, impSk)),
                                            h(<$cHash0.4, 
                                               h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>, 
                                                  'g'^~yy.1>), 
                                               aeadEncrypt('emptyStr',
                                                           hkdfExpand(<$cAEAD0.3, 
                                                                       h(<$cHash0.3, 
                                                                          <'PSK', 'PSK', $cSUITE0.2, gx.1, 
                                                                           $U.2, $V.2>, 
                                                                          'g'^~yy.1>), 
                                                                       'K_2ae'>,
                                                                      hkdfExtract(~ltk.2, impSk)),
                                                           h(<$cHash0.3, 
                                                              <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>, 
                                                              'g'^~yy.1>),
                                                           $cAEAD0.3), 
                                               'emptyStr'>),
                                            $cAEAD0.4)
                           ) @ #vk.14 )
                      case I3_PSK_PSK
                      solve( splitEqs(0) )
                        case split_case_1
                        solve( splitEqs(3) )
                          case split
                          solve( !KU( 'g'^(~xx*~yy*inv(~yy.1)) ) @ #vk.26 )
                            case I1_PSK_PSK
                            by solve( !KU( ~yy ) @ #vk.47 )
                          next
                            case R2_PSK_PSK
                            by solve( !KU( ~xx ) @ #vk.47 )
                          next
                            case c_exp
                            by solve( !KU( ~xx ) @ #vk.48 )
                          qed
                        qed
                      next
                        case split_case_2
                        solve( splitEqs(3) )
                          case split
                          solve( !KU( 'g'^(~yy*~xx.1*inv(~xx)) ) @ #vk.11 )
                            case I1_PSK_PSK
                            by solve( !KU( ~yy ) @ #vk.59 )
                          next
                            case R2_PSK_PSK
                            by solve( !KU( ~xx.1 ) @ #vk.59 )
                          next
                            case c_exp
                            by solve( !KU( ~yy ) @ #vk.60 )
                          qed
                        qed
                      qed
                    next
                      case c_aeadEncrypt
                      solve( !KU( h(<$cHash0.4, 
                                     h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>, 'g'^~yy.1>), 
                                     aeadEncrypt('emptyStr',
                                                 hkdfExpand(<$cAEAD0.3, 
                                                             h(<$cHash0.3, 
                                                                <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>, 
                                                                'g'^~yy.1>), 
                                                             'K_2ae'>,
                                                            hkdfExtract(~ltk.2, impSk)),
                                                 h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>, 
                                                    'g'^~yy.1>),
                                                 $cAEAD0.3), 
                                     'emptyStr'>)
                             ) @ #vk.56 )
                        case c_h
                        solve( !KU( h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>, 
                                       'g'^~yy.1>)
                               ) @ #vk.62 )
                          case c_h
                          solve( !KU( hkdfExpand(<$cAEAD0, 
                                                  h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, gy
                                                    >), 
                                                  'K_2ae'>,
                                                 hkdfExtract(~ltk, impSk))
                                 ) @ #vk.44 )
                            case R2_PSK_PSK_case_1
                            solve( splitEqs(3) )
                              case split_case_1
                              solve( splitEqs(4) )
                                case split_case_1
                                by contradiction /* cyclic */
                              next
                                case split_case_2
                                solve( !KU( 'g'^(~xx*~yy*inv(~yy.1)) ) @ #vk.38 )
                                  case I1_PSK_PSK
                                  by solve( !KU( ~yy ) @ #vk.54 )
                                next
                                  case R2_PSK_PSK
                                  by solve( !KU( ~xx ) @ #vk.54 )
                                next
                                  case c_exp
                                  by solve( !KU( ~xx ) @ #vk.55 )
                                qed
                              qed
                            next
                              case split_case_2
                              solve( splitEqs(4) )
                                case split_case_1
                                solve( !KU( 'g'^(~xx*~yy*inv(~yy.1)) ) @ #vk.31 )
                                  case I1_PSK_PSK
                                  by solve( !KU( ~yy ) @ #vk.54 )
                                next
                                  case R2_PSK_PSK
                                  by solve( !KU( ~xx ) @ #vk.54 )
                                next
                                  case c_exp
                                  by solve( !KU( ~xx ) @ #vk.55 )
                                qed
                              next
                                case split_case_2
                                solve( !KU( 'g'^(~xx*~yy*inv(~yy.1)) ) @ #vk.36 )
                                  case I1_PSK_PSK
                                  by solve( !KU( ~yy ) @ #vk.69 )
                                next
                                  case R2_PSK_PSK
                                  by solve( !KU( ~xx ) @ #vk.69 )
                                next
                                  case c_exp
                                  by solve( !KU( ~xx ) @ #vk.70 )
                                qed
                              qed
                            qed
                          next
                            case R2_PSK_PSK_case_2
                            solve( splitEqs(3) )
                              case split_case_1
                              solve( splitEqs(4) )
                                case split_case_1
                                by contradiction /* cyclic */
                              next
                                case split_case_2
                                solve( !KU( 'g'^(~xx*~yy*inv(~yy.1)) ) @ #vk.38 )
                                  case I1_PSK_PSK
                                  by solve( !KU( ~yy ) @ #vk.55 )
                                next
                                  case R2_PSK_PSK
                                  by solve( !KU( ~xx ) @ #vk.55 )
                                next
                                  case c_exp
                                  by solve( !KU( ~xx ) @ #vk.56 )
                                qed
                              qed
                            next
                              case split_case_2
                              solve( splitEqs(4) )
                                case split_case_1
                                solve( !KU( 'g'^(~xx*~yy*inv(~yy.1)) ) @ #vk.31 )
                                  case I1_PSK_PSK
                                  by solve( !KU( ~yy ) @ #vk.55 )
                                next
                                  case R2_PSK_PSK
                                  by solve( !KU( ~xx ) @ #vk.55 )
                                next
                                  case c_exp
                                  by solve( !KU( ~xx ) @ #vk.56 )
                                qed
                              next
                                case split_case_2
                                solve( !KU( 'g'^(~xx*~yy*inv(~yy.1)) ) @ #vk.36 )
                                  case I1_PSK_PSK
                                  by solve( !KU( ~yy ) @ #vk.70 )
                                next
                                  case R2_PSK_PSK
                                  by solve( !KU( ~xx ) @ #vk.70 )
                                next
                                  case c_exp
                                  by solve( !KU( ~xx ) @ #vk.71 )
                                qed
                              qed
                            qed
                          next
                            case c_hkdfExpand
                            solve( !KU( hkdfExtract(~ltk, impSk) ) @ #vk.70 )
                              case c_hkdfExtract
                              solve( !KU( ~ltk ) @ #vk.72 )
                                case revealLTK_PSK
                                by contradiction /* from formulas */
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  qed
qed

lemma authGIYImplicitAuthGuaranteeForI2:
  all-traces
  "∀ tidI u v impSk #i.
    (CommitI( tidI, u, v, impSk ) @ #i) ⇒
    ((((∀ tidR u2 v2 #j.
         (CommitR( tidR, u2, v2, impSk ) @ #j) ⇒
         ((((u = u2) ∧ (v = v2)) ∧
           (∀ tidR2 u3 v3 #j2.
             (CommitR( tidR2, u3, v3, impSk ) @ #j2) ⇒ (#j = #j2))) ∧
          (¬(∃ #k. K( impSk ) @ #k)))) ∨
       (∃ #k. LTKRev( u ) @ #k)) ∨
      (∃ #k. LTKRev( v ) @ #k)) ∨
     (∃ #k. LTKRev( <u, v> ) @ #k))"
/*
guarded formula characterizing all counter-examples:
"∃ tidI u v impSk #i.
  (CommitI( tidI, u, v, impSk ) @ #i)
 ∧
  (∃ tidR u2 v2 #j.
    (CommitR( tidR, u2, v2, impSk ) @ #j)
   ∧
    ((¬(u = u2)) ∨
     (¬(v = v2)) ∨
     (∃ tidR2 u3 v3 #j2.
       (CommitR( tidR2, u3, v3, impSk ) @ #j2) ∧ ¬(#j = #j2)) ∨
     (∃ #k. (K( impSk ) @ #k)))) ∧
  (∀ #k. (LTKRev( u ) @ #k) ⇒ ⊥) ∧
  (∀ #k. (LTKRev( v ) @ #k) ⇒ ⊥) ∧
  (∀ #k. (LTKRev( <u, v> ) @ #k) ⇒ ⊥)"
*/
simplify
solve( (¬($U = $U.1))  ∥ (¬($V = $V.1))  ∥
       (∃ tidR2 u3 v3 #j2.
         (CommitR( tidR2, u3, v3, impSk ) @ #j2) ∧ ¬(#j = #j2))  ∥
       (∃ #k. (K( impSk ) @ #k)) )
  case case_1
  solve( StI1_PSK_PSK( $U, ~ltk, $V, ~xx, m1, ~tid ) ▶₀ #i )
    case I1_PSK_PSK
    solve( StR2_PSK_PSK( $U.1, $V.1, ~ltk.1, ~yy, prk_3e2m, TH_2,
                         CIPHERTEXT_2, impSk, ~tid.1, m1, m2
           ) ▶₀ #j )
      case R2_PSK_PSK
      solve( !KU( aeadEncrypt('emptyStr',
                              hkdfExpand(<$cAEAD0, 
                                          h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, gy>), 'K_2ae'
                                         >,
                                         hkdfExtract(~ltk, impSk)),
                              h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, gy>), $cAEAD0)
             ) @ #vk.2 )
        case R2_PSK_PSK
        solve( splitEqs(2) )
          case split_case_1
          by contradiction /* from formulas */
        next
          case split_case_2
          solve( !KU( 'g'^(~xx*~yy*inv(~yy.1)) ) @ #vk.14 )
            case I1_PSK_PSK
            by solve( !KU( ~yy ) @ #vk.26 )
          next
            case R2_PSK_PSK
            by solve( !KU( ~xx ) @ #vk.26 )
          next
            case c_exp
            by solve( !KU( ~xx ) @ #vk.27 )
          qed
        qed
      next
        case c_aeadEncrypt
        solve( !KU( h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, gy>)
               ) @ #vk.17 )
          case c_h
          solve( !KU( aeadEncrypt('emptyStr',
                                  hkdfExpand(<$cAEAD0.2, 
                                              h(<$cHash0.2, 
                                                 h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 
                                                    'g'^~yy>), 
                                                 aeadEncrypt('emptyStr',
                                                             hkdfExpand(<$cAEAD0.1, 
                                                                         h(<$cHash0.1, 
                                                                            <'PSK', 'PSK', $cSUITE0.1, gx, 
                                                                             $U.1, $V.1>, 
                                                                            'g'^~yy>), 
                                                                         'K_2ae'>,
                                                                        hkdfExtract(~ltk.1, impSk)),
                                                             h(<$cHash0.1, 
                                                                <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 
                                                                'g'^~yy>),
                                                             $cAEAD0.1), 
                                                 'emptyStr'>), 
                                              'K_3ae'>,
                                             hkdfExtract(~ltk.1, impSk)),
                                  h(<$cHash0.2, 
                                     h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy>), 
                                     aeadEncrypt('emptyStr',
                                                 hkdfExpand(<$cAEAD0.1, 
                                                             h(<$cHash0.1, 
                                                                <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 
                                                                'g'^~yy>), 
                                                             'K_2ae'>,
                                                            hkdfExtract(~ltk.1, impSk)),
                                                 h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 
                                                    'g'^~yy>),
                                                 $cAEAD0.1), 
                                     'emptyStr'>),
                                  $cAEAD0.2)
                 ) @ #vk.7 )
            case I3_PSK_PSK
            solve( splitEqs(0) )
              case split_case_1
              by contradiction /* from formulas */
            next
              case split_case_2
              solve( !KU( 'g'^(~yy*~xx.1*inv(~xx)) ) @ #vk.5 )
                case I1_PSK_PSK
                by solve( !KU( ~yy ) @ #vk.35 )
              next
                case R2_PSK_PSK
                by solve( !KU( ~xx.1 ) @ #vk.35 )
              next
                case c_exp
                by solve( !KU( ~yy ) @ #vk.36 )
              qed
            qed
          next
            case c_aeadEncrypt
            solve( !KU( h(<$cHash0.2, 
                           h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy>), 
                           aeadEncrypt('emptyStr',
                                       hkdfExpand(<$cAEAD0.1, 
                                                   h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 
                                                      'g'^~yy>), 
                                                   'K_2ae'>,
                                                  hkdfExtract(~ltk.1, impSk)),
                                       h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy>),
                                       $cAEAD0.1), 
                           'emptyStr'>)
                   ) @ #vk.32 )
              case c_h
              solve( !KU( h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 
                             'g'^~yy>)
                     ) @ #vk.38 )
                case c_h
                solve( !KU( hkdfExpand(<$cAEAD0, 
                                        h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, gy>), 'K_2ae'>,
                                       hkdfExtract(~ltk, impSk))
                       ) @ #vk.26 )
                  case R2_PSK_PSK_case_1
                  solve( splitEqs(2) )
                    case split_case_1
                    by contradiction /* from formulas */
                  next
                    case split_case_2
                    solve( !KU( 'g'^(~xx*~yy*inv(~yy.1)) ) @ #vk.25 )
                      case I1_PSK_PSK
                      by solve( !KU( ~yy ) @ #vk.45 )
                    next
                      case R2_PSK_PSK
                      by solve( !KU( ~xx ) @ #vk.45 )
                    next
                      case c_exp
                      by solve( !KU( ~xx ) @ #vk.46 )
                    qed
                  qed
                next
                  case R2_PSK_PSK_case_2
                  solve( splitEqs(2) )
                    case split_case_1
                    by contradiction /* from formulas */
                  next
                    case split_case_2
                    solve( !KU( 'g'^(~xx*~yy*inv(~yy.1)) ) @ #vk.25 )
                      case I1_PSK_PSK
                      by solve( !KU( ~yy ) @ #vk.46 )
                    next
                      case R2_PSK_PSK
                      by solve( !KU( ~xx ) @ #vk.46 )
                    next
                      case c_exp
                      by solve( !KU( ~xx ) @ #vk.47 )
                    qed
                  qed
                next
                  case c_hkdfExpand
                  solve( !KU( hkdfExtract(~ltk, impSk) ) @ #vk.46 )
                    case c_hkdfExtract
                    solve( !KU( ~ltk ) @ #vk.48 )
                      case revealLTK_PSK
                      by contradiction /* from formulas */
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  qed
next
  case case_2
  solve( StI1_PSK_PSK( $U, ~ltk, $V, ~xx, m1, ~tid ) ▶₀ #i )
    case I1_PSK_PSK
    solve( StR2_PSK_PSK( $U.1, $V.1, ~ltk.1, ~yy, prk_3e2m, TH_2,
                         CIPHERTEXT_2, impSk, ~tid.1, m1, m2
           ) ▶₀ #j )
      case R2_PSK_PSK
      solve( !KU( aeadEncrypt('emptyStr',
                              hkdfExpand(<$cAEAD0, 
                                          h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, gy>), 'K_2ae'
                                         >,
                                         hkdfExtract(~ltk, impSk)),
                              h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, gy>), $cAEAD0)
             ) @ #vk.2 )
        case R2_PSK_PSK
        solve( splitEqs(2) )
          case split_case_1
          by contradiction /* from formulas */
        next
          case split_case_2
          solve( !KU( 'g'^(~xx*~yy*inv(~yy.1)) ) @ #vk.14 )
            case I1_PSK_PSK
            by solve( !KU( ~yy ) @ #vk.26 )
          next
            case R2_PSK_PSK
            by solve( !KU( ~xx ) @ #vk.26 )
          next
            case c_exp
            by solve( !KU( ~xx ) @ #vk.27 )
          qed
        qed
      next
        case c_aeadEncrypt
        solve( !KU( h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, gy>)
               ) @ #vk.17 )
          case c_h
          solve( !KU( aeadEncrypt('emptyStr',
                                  hkdfExpand(<$cAEAD0.2, 
                                              h(<$cHash0.2, 
                                                 h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 
                                                    'g'^~yy>), 
                                                 aeadEncrypt('emptyStr',
                                                             hkdfExpand(<$cAEAD0.1, 
                                                                         h(<$cHash0.1, 
                                                                            <'PSK', 'PSK', $cSUITE0.1, gx, 
                                                                             $U.1, $V.1>, 
                                                                            'g'^~yy>), 
                                                                         'K_2ae'>,
                                                                        hkdfExtract(~ltk.1, impSk)),
                                                             h(<$cHash0.1, 
                                                                <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 
                                                                'g'^~yy>),
                                                             $cAEAD0.1), 
                                                 'emptyStr'>), 
                                              'K_3ae'>,
                                             hkdfExtract(~ltk.1, impSk)),
                                  h(<$cHash0.2, 
                                     h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy>), 
                                     aeadEncrypt('emptyStr',
                                                 hkdfExpand(<$cAEAD0.1, 
                                                             h(<$cHash0.1, 
                                                                <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 
                                                                'g'^~yy>), 
                                                             'K_2ae'>,
                                                            hkdfExtract(~ltk.1, impSk)),
                                                 h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 
                                                    'g'^~yy>),
                                                 $cAEAD0.1), 
                                     'emptyStr'>),
                                  $cAEAD0.2)
                 ) @ #vk.7 )
            case I3_PSK_PSK
            solve( splitEqs(0) )
              case split_case_1
              by contradiction /* from formulas */
            next
              case split_case_2
              solve( !KU( 'g'^(~yy*~xx.1*inv(~xx)) ) @ #vk.5 )
                case I1_PSK_PSK
                by solve( !KU( ~yy ) @ #vk.35 )
              next
                case R2_PSK_PSK
                by solve( !KU( ~xx.1 ) @ #vk.35 )
              next
                case c_exp
                by solve( !KU( ~yy ) @ #vk.36 )
              qed
            qed
          next
            case c_aeadEncrypt
            solve( !KU( h(<$cHash0.2, 
                           h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy>), 
                           aeadEncrypt('emptyStr',
                                       hkdfExpand(<$cAEAD0.1, 
                                                   h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 
                                                      'g'^~yy>), 
                                                   'K_2ae'>,
                                                  hkdfExtract(~ltk.1, impSk)),
                                       h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy>),
                                       $cAEAD0.1), 
                           'emptyStr'>)
                   ) @ #vk.32 )
              case c_h
              solve( !KU( h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 
                             'g'^~yy>)
                     ) @ #vk.38 )
                case c_h
                solve( !KU( hkdfExpand(<$cAEAD0, 
                                        h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, gy>), 'K_2ae'>,
                                       hkdfExtract(~ltk, impSk))
                       ) @ #vk.26 )
                  case R2_PSK_PSK_case_1
                  solve( splitEqs(2) )
                    case split_case_1
                    by contradiction /* from formulas */
                  next
                    case split_case_2
                    solve( !KU( 'g'^(~xx*~yy*inv(~yy.1)) ) @ #vk.25 )
                      case I1_PSK_PSK
                      by solve( !KU( ~yy ) @ #vk.45 )
                    next
                      case R2_PSK_PSK
                      by solve( !KU( ~xx ) @ #vk.45 )
                    next
                      case c_exp
                      by solve( !KU( ~xx ) @ #vk.46 )
                    qed
                  qed
                next
                  case R2_PSK_PSK_case_2
                  solve( splitEqs(2) )
                    case split_case_1
                    by contradiction /* from formulas */
                  next
                    case split_case_2
                    solve( !KU( 'g'^(~xx*~yy*inv(~yy.1)) ) @ #vk.25 )
                      case I1_PSK_PSK
                      by solve( !KU( ~yy ) @ #vk.46 )
                    next
                      case R2_PSK_PSK
                      by solve( !KU( ~xx ) @ #vk.46 )
                    next
                      case c_exp
                      by solve( !KU( ~xx ) @ #vk.47 )
                    qed
                  qed
                next
                  case c_hkdfExpand
                  solve( !KU( hkdfExtract(~ltk, impSk) ) @ #vk.46 )
                    case c_hkdfExtract
                    solve( !KU( ~ltk ) @ #vk.48 )
                      case revealLTK_PSK
                      by contradiction /* from formulas */
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  qed
next
  case case_3
  solve( (#j < #j2)  ∥ (#j2 < #j) )
    case case_1
    solve( StI1_PSK_PSK( $U, ~ltk, $V, ~xx, m1, ~tid ) ▶₀ #i )
      case I1_PSK_PSK
      solve( StR2_PSK_PSK( $U.1, $V.1, ~ltk.1, ~yy, prk_3e2m, TH_2,
                           CIPHERTEXT_2, impSk, ~tid.1, m1, m2
             ) ▶₀ #j )
        case R2_PSK_PSK
        solve( StR2_PSK_PSK( $U.2, $V.2, ~ltk.2, ~yy.1, prk_3e2m, TH_2,
                             CIPHERTEXT_2, impSk, ~tid.2, m1, m2
               ) ▶₀ #j2 )
          case R2_PSK_PSK
          solve( !KU( aeadEncrypt('emptyStr',
                                  hkdfExpand(<$cAEAD0, 
                                              h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, gy>), 
                                              'K_2ae'>,
                                             hkdfExtract(~ltk, impSk)),
                                  h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, gy>), $cAEAD0)
                 ) @ #vk.2 )
            case R2_PSK_PSK
            solve( splitEqs(3) )
              case split_case_1
              solve( splitEqs(4) )
                case split_case_1
                by contradiction /* cyclic */
              next
                case split_case_2
                solve( !KU( 'g'^(~xx*~yy*inv(~yy.1)) ) @ #vk.23 )
                  case I1_PSK_PSK
                  by solve( !KU( ~yy ) @ #vk.28 )
                next
                  case R2_PSK_PSK
                  by solve( !KU( ~xx ) @ #vk.28 )
                next
                  case c_exp
                  by solve( !KU( ~xx ) @ #vk.29 )
                qed
              qed
            next
              case split_case_2
              solve( splitEqs(4) )
                case split_case_1
                solve( !KU( 'g'^(~xx*~yy*inv(~yy.1)) ) @ #vk.16 )
                  case I1_PSK_PSK
                  by solve( !KU( ~yy ) @ #vk.28 )
                next
                  case R2_PSK_PSK
                  by solve( !KU( ~xx ) @ #vk.28 )
                next
                  case c_exp
                  by solve( !KU( ~xx ) @ #vk.29 )
                qed
              next
                case split_case_2
                solve( !KU( 'g'^(~xx*~yy*inv(~yy.1)) ) @ #vk.18 )
                  case I1_PSK_PSK
                  by solve( !KU( ~yy ) @ #vk.37 )
                next
                  case R2_PSK_PSK
                  by solve( !KU( ~xx ) @ #vk.37 )
                next
                  case c_exp
                  by solve( !KU( ~xx ) @ #vk.38 )
                qed
              qed
            qed
          next
            case c_aeadEncrypt
            solve( !KU( h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, gy>)
                   ) @ #vk.28 )
              case c_h
              solve( !KU( aeadEncrypt('emptyStr',
                                      hkdfExpand(<$cAEAD0.2, 
                                                  h(<$cHash0.2, 
                                                     h(<$cHash0.1, 
                                                        <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy
                                                       >), 
                                                     aeadEncrypt('emptyStr',
                                                                 hkdfExpand(<$cAEAD0.1, 
                                                                             h(<$cHash0.1, 
                                                                                <'PSK', 'PSK', $cSUITE0.1, 
                                                                                 gx, $U.1, $V.1>, 
                                                                                'g'^~yy>), 
                                                                             'K_2ae'>,
                                                                            hkdfExtract(~ltk.1, impSk)),
                                                                 h(<$cHash0.1, 
                                                                    <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1
                                                                    >, 
                                                                    'g'^~yy>),
                                                                 $cAEAD0.1), 
                                                     'emptyStr'>), 
                                                  'K_3ae'>,
                                                 hkdfExtract(~ltk.1, impSk)),
                                      h(<$cHash0.2, 
                                         h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy>), 
                                         aeadEncrypt('emptyStr',
                                                     hkdfExpand(<$cAEAD0.1, 
                                                                 h(<$cHash0.1, 
                                                                    <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1
                                                                    >, 
                                                                    'g'^~yy>), 
                                                                 'K_2ae'>,
                                                                hkdfExtract(~ltk.1, impSk)),
                                                     h(<$cHash0.1, 
                                                        <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy>),
                                                     $cAEAD0.1), 
                                         'emptyStr'>),
                                      $cAEAD0.2)
                     ) @ #vk.8 )
                case I3_PSK_PSK
                solve( splitEqs(0) )
                  case split_case_1
                  solve( splitEqs(4) )
                    case split_case_1
                    by contradiction /* cyclic */
                  next
                    case split_case_2
                    solve( !KU( 'g'^(~xx*~yy*inv(~yy.1)) ) @ #vk.26 )
                      case I1_PSK_PSK
                      by solve( !KU( ~yy ) @ #vk.34 )
                    next
                      case R2_PSK_PSK
                      by solve( !KU( ~xx ) @ #vk.34 )
                    next
                      case c_exp
                      by solve( !KU( ~xx ) @ #vk.35 )
                    qed
                  qed
                next
                  case split_case_2
                  solve( splitEqs(4) )
                    case split_case_1
                    by contradiction /* cyclic */
                  next
                    case split_case_2
                    solve( !KU( 'g'^(~yy*~xx.1*inv(~xx)) ) @ #vk.5 )
                      case I1_PSK_PSK
                      by solve( !KU( ~yy ) @ #vk.46 )
                    next
                      case R2_PSK_PSK
                      by solve( !KU( ~xx.1 ) @ #vk.46 )
                    next
                      case c_exp
                      by solve( !KU( ~yy ) @ #vk.47 )
                    qed
                  qed
                qed
              next
                case c_aeadEncrypt
                solve( !KU( h(<$cHash0.2, 
                               h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy>), 
                               aeadEncrypt('emptyStr',
                                           hkdfExpand(<$cAEAD0.1, 
                                                       h(<$cHash0.1, 
                                                          <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy
                                                         >), 
                                                       'K_2ae'>,
                                                      hkdfExtract(~ltk.1, impSk)),
                                           h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy
                                             >),
                                           $cAEAD0.1), 
                               'emptyStr'>)
                       ) @ #vk.43 )
                  case c_h
                  solve( !KU( h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 
                                 'g'^~yy>)
                         ) @ #vk.49 )
                    case c_h
                    solve( !KU( aeadEncrypt('emptyStr',
                                            hkdfExpand(<$cAEAD0.4, 
                                                        h(<$cHash0.4, 
                                                           h(<$cHash0.3, 
                                                              <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>, 
                                                              'g'^~yy.1>), 
                                                           aeadEncrypt('emptyStr',
                                                                       hkdfExpand(<$cAEAD0.3, 
                                                                                   h(<$cHash0.3, 
                                                                                      <'PSK', 'PSK', 
                                                                                       $cSUITE0.2, gx.1, 
                                                                                       $U.2, $V.2>, 
                                                                                      'g'^~yy.1>), 
                                                                                   'K_2ae'>,
                                                                                  hkdfExtract(~ltk.2, impSk)),
                                                                       h(<$cHash0.3, 
                                                                          <'PSK', 'PSK', $cSUITE0.2, gx.1, 
                                                                           $U.2, $V.2>, 
                                                                          'g'^~yy.1>),
                                                                       $cAEAD0.3), 
                                                           'emptyStr'>), 
                                                        'K_3ae'>,
                                                       hkdfExtract(~ltk.2, impSk)),
                                            h(<$cHash0.4, 
                                               h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>, 
                                                  'g'^~yy.1>), 
                                               aeadEncrypt('emptyStr',
                                                           hkdfExpand(<$cAEAD0.3, 
                                                                       h(<$cHash0.3, 
                                                                          <'PSK', 'PSK', $cSUITE0.2, gx.1, 
                                                                           $U.2, $V.2>, 
                                                                          'g'^~yy.1>), 
                                                                       'K_2ae'>,
                                                                      hkdfExtract(~ltk.2, impSk)),
                                                           h(<$cHash0.3, 
                                                              <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>, 
                                                              'g'^~yy.1>),
                                                           $cAEAD0.3), 
                                               'emptyStr'>),
                                            $cAEAD0.4)
                           ) @ #vk.14 )
                      case I3_PSK_PSK
                      solve( splitEqs(0) )
                        case split_case_1
                        solve( splitEqs(3) )
                          case split
                          solve( !KU( 'g'^(~xx*~yy*inv(~yy.1)) ) @ #vk.26 )
                            case I1_PSK_PSK
                            by solve( !KU( ~yy ) @ #vk.47 )
                          next
                            case R2_PSK_PSK
                            by solve( !KU( ~xx ) @ #vk.47 )
                          next
                            case c_exp
                            by solve( !KU( ~xx ) @ #vk.48 )
                          qed
                        qed
                      next
                        case split_case_2
                        solve( splitEqs(3) )
                          case split
                          solve( !KU( 'g'^(~yy*~xx.1*inv(~xx)) ) @ #vk.11 )
                            case I1_PSK_PSK
                            by solve( !KU( ~yy ) @ #vk.59 )
                          next
                            case R2_PSK_PSK
                            by solve( !KU( ~xx.1 ) @ #vk.59 )
                          next
                            case c_exp
                            by solve( !KU( ~yy ) @ #vk.60 )
                          qed
                        qed
                      qed
                    next
                      case c_aeadEncrypt
                      solve( !KU( h(<$cHash0.4, 
                                     h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>, 'g'^~yy.1>), 
                                     aeadEncrypt('emptyStr',
                                                 hkdfExpand(<$cAEAD0.3, 
                                                             h(<$cHash0.3, 
                                                                <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>, 
                                                                'g'^~yy.1>), 
                                                             'K_2ae'>,
                                                            hkdfExtract(~ltk.2, impSk)),
                                                 h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>, 
                                                    'g'^~yy.1>),
                                                 $cAEAD0.3), 
                                     'emptyStr'>)
                             ) @ #vk.56 )
                        case c_h
                        solve( !KU( h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>, 
                                       'g'^~yy.1>)
                               ) @ #vk.62 )
                          case c_h
                          solve( !KU( hkdfExpand(<$cAEAD0, 
                                                  h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, gy
                                                    >), 
                                                  'K_2ae'>,
                                                 hkdfExtract(~ltk, impSk))
                                 ) @ #vk.44 )
                            case R2_PSK_PSK_case_1
                            solve( splitEqs(3) )
                              case split_case_1
                              solve( splitEqs(4) )
                                case split_case_1
                                by contradiction /* cyclic */
                              next
                                case split_case_2
                                solve( !KU( 'g'^(~xx*~yy*inv(~yy.1)) ) @ #vk.38 )
                                  case I1_PSK_PSK
                                  by solve( !KU( ~yy ) @ #vk.54 )
                                next
                                  case R2_PSK_PSK
                                  by solve( !KU( ~xx ) @ #vk.54 )
                                next
                                  case c_exp
                                  by solve( !KU( ~xx ) @ #vk.55 )
                                qed
                              qed
                            next
                              case split_case_2
                              solve( splitEqs(4) )
                                case split_case_1
                                solve( !KU( 'g'^(~xx*~yy*inv(~yy.1)) ) @ #vk.31 )
                                  case I1_PSK_PSK
                                  by solve( !KU( ~yy ) @ #vk.54 )
                                next
                                  case R2_PSK_PSK
                                  by solve( !KU( ~xx ) @ #vk.54 )
                                next
                                  case c_exp
                                  by solve( !KU( ~xx ) @ #vk.55 )
                                qed
                              next
                                case split_case_2
                                solve( !KU( 'g'^(~xx*~yy*inv(~yy.1)) ) @ #vk.36 )
                                  case I1_PSK_PSK
                                  by solve( !KU( ~yy ) @ #vk.69 )
                                next
                                  case R2_PSK_PSK
                                  by solve( !KU( ~xx ) @ #vk.69 )
                                next
                                  case c_exp
                                  by solve( !KU( ~xx ) @ #vk.70 )
                                qed
                              qed
                            qed
                          next
                            case R2_PSK_PSK_case_2
                            solve( splitEqs(3) )
                              case split_case_1
                              solve( splitEqs(4) )
                                case split_case_1
                                by contradiction /* cyclic */
                              next
                                case split_case_2
                                solve( !KU( 'g'^(~xx*~yy*inv(~yy.1)) ) @ #vk.38 )
                                  case I1_PSK_PSK
                                  by solve( !KU( ~yy ) @ #vk.55 )
                                next
                                  case R2_PSK_PSK
                                  by solve( !KU( ~xx ) @ #vk.55 )
                                next
                                  case c_exp
                                  by solve( !KU( ~xx ) @ #vk.56 )
                                qed
                              qed
                            next
                              case split_case_2
                              solve( splitEqs(4) )
                                case split_case_1
                                solve( !KU( 'g'^(~xx*~yy*inv(~yy.1)) ) @ #vk.31 )
                                  case I1_PSK_PSK
                                  by solve( !KU( ~yy ) @ #vk.55 )
                                next
                                  case R2_PSK_PSK
                                  by solve( !KU( ~xx ) @ #vk.55 )
                                next
                                  case c_exp
                                  by solve( !KU( ~xx ) @ #vk.56 )
                                qed
                              next
                                case split_case_2
                                solve( !KU( 'g'^(~xx*~yy*inv(~yy.1)) ) @ #vk.36 )
                                  case I1_PSK_PSK
                                  by solve( !KU( ~yy ) @ #vk.70 )
                                next
                                  case R2_PSK_PSK
                                  by solve( !KU( ~xx ) @ #vk.70 )
                                next
                                  case c_exp
                                  by solve( !KU( ~xx ) @ #vk.71 )
                                qed
                              qed
                            qed
                          next
                            case c_hkdfExpand
                            solve( !KU( hkdfExtract(~ltk, impSk) ) @ #vk.70 )
                              case c_hkdfExtract
                              solve( !KU( ~ltk ) @ #vk.72 )
                                case revealLTK_PSK
                                by contradiction /* from formulas */
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  next
    case case_2
    solve( StI1_PSK_PSK( $U, ~ltk, $V, ~xx, m1, ~tid ) ▶₀ #i )
      case I1_PSK_PSK
      solve( StR2_PSK_PSK( $U.1, $V.1, ~ltk.1, ~yy, prk_3e2m, TH_2,
                           CIPHERTEXT_2, impSk, ~tid.1, m1, m2
             ) ▶₀ #j )
        case R2_PSK_PSK
        solve( StR2_PSK_PSK( $U.2, $V.2, ~ltk.2, ~yy.1, prk_3e2m, TH_2,
                             CIPHERTEXT_2, impSk, ~tid.2, m1, m2
               ) ▶₀ #j2 )
          case R2_PSK_PSK
          solve( !KU( aeadEncrypt('emptyStr',
                                  hkdfExpand(<$cAEAD0, 
                                              h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, gy>), 
                                              'K_2ae'>,
                                             hkdfExtract(~ltk, impSk)),
                                  h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, gy>), $cAEAD0)
                 ) @ #vk.2 )
            case R2_PSK_PSK
            solve( splitEqs(3) )
              case split_case_1
              solve( splitEqs(4) )
                case split_case_1
                by contradiction /* cyclic */
              next
                case split_case_2
                solve( !KU( 'g'^(~xx*~yy*inv(~yy.1)) ) @ #vk.23 )
                  case I1_PSK_PSK
                  by solve( !KU( ~yy ) @ #vk.28 )
                next
                  case R2_PSK_PSK
                  by solve( !KU( ~xx ) @ #vk.28 )
                next
                  case c_exp
                  by solve( !KU( ~xx ) @ #vk.29 )
                qed
              qed
            next
              case split_case_2
              solve( splitEqs(4) )
                case split_case_1
                solve( !KU( 'g'^(~xx*~yy*inv(~yy.1)) ) @ #vk.16 )
                  case I1_PSK_PSK
                  by solve( !KU( ~yy ) @ #vk.28 )
                next
                  case R2_PSK_PSK
                  by solve( !KU( ~xx ) @ #vk.28 )
                next
                  case c_exp
                  by solve( !KU( ~xx ) @ #vk.29 )
                qed
              next
                case split_case_2
                solve( !KU( 'g'^(~xx*~yy*inv(~yy.1)) ) @ #vk.18 )
                  case I1_PSK_PSK
                  by solve( !KU( ~yy ) @ #vk.37 )
                next
                  case R2_PSK_PSK
                  by solve( !KU( ~xx ) @ #vk.37 )
                next
                  case c_exp
                  by solve( !KU( ~xx ) @ #vk.38 )
                qed
              qed
            qed
          next
            case c_aeadEncrypt
            solve( !KU( h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, gy>)
                   ) @ #vk.28 )
              case c_h
              solve( !KU( aeadEncrypt('emptyStr',
                                      hkdfExpand(<$cAEAD0.2, 
                                                  h(<$cHash0.2, 
                                                     h(<$cHash0.1, 
                                                        <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy
                                                       >), 
                                                     aeadEncrypt('emptyStr',
                                                                 hkdfExpand(<$cAEAD0.1, 
                                                                             h(<$cHash0.1, 
                                                                                <'PSK', 'PSK', $cSUITE0.1, 
                                                                                 gx, $U.1, $V.1>, 
                                                                                'g'^~yy>), 
                                                                             'K_2ae'>,
                                                                            hkdfExtract(~ltk.1, impSk)),
                                                                 h(<$cHash0.1, 
                                                                    <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1
                                                                    >, 
                                                                    'g'^~yy>),
                                                                 $cAEAD0.1), 
                                                     'emptyStr'>), 
                                                  'K_3ae'>,
                                                 hkdfExtract(~ltk.1, impSk)),
                                      h(<$cHash0.2, 
                                         h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy>), 
                                         aeadEncrypt('emptyStr',
                                                     hkdfExpand(<$cAEAD0.1, 
                                                                 h(<$cHash0.1, 
                                                                    <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1
                                                                    >, 
                                                                    'g'^~yy>), 
                                                                 'K_2ae'>,
                                                                hkdfExtract(~ltk.1, impSk)),
                                                     h(<$cHash0.1, 
                                                        <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy>),
                                                     $cAEAD0.1), 
                                         'emptyStr'>),
                                      $cAEAD0.2)
                     ) @ #vk.8 )
                case I3_PSK_PSK
                solve( splitEqs(0) )
                  case split_case_1
                  solve( splitEqs(4) )
                    case split_case_1
                    by contradiction /* cyclic */
                  next
                    case split_case_2
                    solve( !KU( 'g'^(~xx*~yy*inv(~yy.1)) ) @ #vk.26 )
                      case I1_PSK_PSK
                      by solve( !KU( ~yy ) @ #vk.34 )
                    next
                      case R2_PSK_PSK
                      by solve( !KU( ~xx ) @ #vk.34 )
                    next
                      case c_exp
                      by solve( !KU( ~xx ) @ #vk.35 )
                    qed
                  qed
                next
                  case split_case_2
                  solve( splitEqs(4) )
                    case split_case_1
                    by contradiction /* cyclic */
                  next
                    case split_case_2
                    solve( !KU( 'g'^(~yy*~xx.1*inv(~xx)) ) @ #vk.5 )
                      case I1_PSK_PSK
                      by solve( !KU( ~yy ) @ #vk.46 )
                    next
                      case R2_PSK_PSK
                      by solve( !KU( ~xx.1 ) @ #vk.46 )
                    next
                      case c_exp
                      by solve( !KU( ~yy ) @ #vk.47 )
                    qed
                  qed
                qed
              next
                case c_aeadEncrypt
                solve( !KU( h(<$cHash0.2, 
                               h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy>), 
                               aeadEncrypt('emptyStr',
                                           hkdfExpand(<$cAEAD0.1, 
                                                       h(<$cHash0.1, 
                                                          <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy
                                                         >), 
                                                       'K_2ae'>,
                                                      hkdfExtract(~ltk.1, impSk)),
                                           h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy
                                             >),
                                           $cAEAD0.1), 
                               'emptyStr'>)
                       ) @ #vk.43 )
                  case c_h
                  solve( !KU( h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 
                                 'g'^~yy>)
                         ) @ #vk.49 )
                    case c_h
                    solve( !KU( aeadEncrypt('emptyStr',
                                            hkdfExpand(<$cAEAD0.4, 
                                                        h(<$cHash0.4, 
                                                           h(<$cHash0.3, 
                                                              <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>, 
                                                              'g'^~yy.1>), 
                                                           aeadEncrypt('emptyStr',
                                                                       hkdfExpand(<$cAEAD0.3, 
                                                                                   h(<$cHash0.3, 
                                                                                      <'PSK', 'PSK', 
                                                                                       $cSUITE0.2, gx.1, 
                                                                                       $U.2, $V.2>, 
                                                                                      'g'^~yy.1>), 
                                                                                   'K_2ae'>,
                                                                                  hkdfExtract(~ltk.2, impSk)),
                                                                       h(<$cHash0.3, 
                                                                          <'PSK', 'PSK', $cSUITE0.2, gx.1, 
                                                                           $U.2, $V.2>, 
                                                                          'g'^~yy.1>),
                                                                       $cAEAD0.3), 
                                                           'emptyStr'>), 
                                                        'K_3ae'>,
                                                       hkdfExtract(~ltk.2, impSk)),
                                            h(<$cHash0.4, 
                                               h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>, 
                                                  'g'^~yy.1>), 
                                               aeadEncrypt('emptyStr',
                                                           hkdfExpand(<$cAEAD0.3, 
                                                                       h(<$cHash0.3, 
                                                                          <'PSK', 'PSK', $cSUITE0.2, gx.1, 
                                                                           $U.2, $V.2>, 
                                                                          'g'^~yy.1>), 
                                                                       'K_2ae'>,
                                                                      hkdfExtract(~ltk.2, impSk)),
                                                           h(<$cHash0.3, 
                                                              <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>, 
                                                              'g'^~yy.1>),
                                                           $cAEAD0.3), 
                                               'emptyStr'>),
                                            $cAEAD0.4)
                           ) @ #vk.14 )
                      case I3_PSK_PSK
                      solve( splitEqs(0) )
                        case split_case_1
                        solve( splitEqs(3) )
                          case split
                          solve( !KU( 'g'^(~xx*~yy*inv(~yy.1)) ) @ #vk.26 )
                            case I1_PSK_PSK
                            by solve( !KU( ~yy ) @ #vk.47 )
                          next
                            case R2_PSK_PSK
                            by solve( !KU( ~xx ) @ #vk.47 )
                          next
                            case c_exp
                            by solve( !KU( ~xx ) @ #vk.48 )
                          qed
                        qed
                      next
                        case split_case_2
                        solve( splitEqs(3) )
                          case split
                          solve( !KU( 'g'^(~yy*~xx.1*inv(~xx)) ) @ #vk.11 )
                            case I1_PSK_PSK
                            by solve( !KU( ~yy ) @ #vk.59 )
                          next
                            case R2_PSK_PSK
                            by solve( !KU( ~xx.1 ) @ #vk.59 )
                          next
                            case c_exp
                            by solve( !KU( ~yy ) @ #vk.60 )
                          qed
                        qed
                      qed
                    next
                      case c_aeadEncrypt
                      solve( !KU( h(<$cHash0.4, 
                                     h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>, 'g'^~yy.1>), 
                                     aeadEncrypt('emptyStr',
                                                 hkdfExpand(<$cAEAD0.3, 
                                                             h(<$cHash0.3, 
                                                                <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>, 
                                                                'g'^~yy.1>), 
                                                             'K_2ae'>,
                                                            hkdfExtract(~ltk.2, impSk)),
                                                 h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>, 
                                                    'g'^~yy.1>),
                                                 $cAEAD0.3), 
                                     'emptyStr'>)
                             ) @ #vk.56 )
                        case c_h
                        solve( !KU( h(<$cHash0.3, <'PSK', 'PSK', $cSUITE0.2, gx.1, $U.2, $V.2>, 
                                       'g'^~yy.1>)
                               ) @ #vk.62 )
                          case c_h
                          solve( !KU( hkdfExpand(<$cAEAD0, 
                                                  h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, gy
                                                    >), 
                                                  'K_2ae'>,
                                                 hkdfExtract(~ltk, impSk))
                                 ) @ #vk.44 )
                            case R2_PSK_PSK_case_1
                            solve( splitEqs(3) )
                              case split_case_1
                              solve( splitEqs(4) )
                                case split_case_1
                                by contradiction /* cyclic */
                              next
                                case split_case_2
                                solve( !KU( 'g'^(~xx*~yy*inv(~yy.1)) ) @ #vk.38 )
                                  case I1_PSK_PSK
                                  by solve( !KU( ~yy ) @ #vk.54 )
                                next
                                  case R2_PSK_PSK
                                  by solve( !KU( ~xx ) @ #vk.54 )
                                next
                                  case c_exp
                                  by solve( !KU( ~xx ) @ #vk.55 )
                                qed
                              qed
                            next
                              case split_case_2
                              solve( splitEqs(4) )
                                case split_case_1
                                solve( !KU( 'g'^(~xx*~yy*inv(~yy.1)) ) @ #vk.31 )
                                  case I1_PSK_PSK
                                  by solve( !KU( ~yy ) @ #vk.54 )
                                next
                                  case R2_PSK_PSK
                                  by solve( !KU( ~xx ) @ #vk.54 )
                                next
                                  case c_exp
                                  by solve( !KU( ~xx ) @ #vk.55 )
                                qed
                              next
                                case split_case_2
                                solve( !KU( 'g'^(~xx*~yy*inv(~yy.1)) ) @ #vk.36 )
                                  case I1_PSK_PSK
                                  by solve( !KU( ~yy ) @ #vk.69 )
                                next
                                  case R2_PSK_PSK
                                  by solve( !KU( ~xx ) @ #vk.69 )
                                next
                                  case c_exp
                                  by solve( !KU( ~xx ) @ #vk.70 )
                                qed
                              qed
                            qed
                          next
                            case R2_PSK_PSK_case_2
                            solve( splitEqs(3) )
                              case split_case_1
                              solve( splitEqs(4) )
                                case split_case_1
                                by contradiction /* cyclic */
                              next
                                case split_case_2
                                solve( !KU( 'g'^(~xx*~yy*inv(~yy.1)) ) @ #vk.38 )
                                  case I1_PSK_PSK
                                  by solve( !KU( ~yy ) @ #vk.55 )
                                next
                                  case R2_PSK_PSK
                                  by solve( !KU( ~xx ) @ #vk.55 )
                                next
                                  case c_exp
                                  by solve( !KU( ~xx ) @ #vk.56 )
                                qed
                              qed
                            next
                              case split_case_2
                              solve( splitEqs(4) )
                                case split_case_1
                                solve( !KU( 'g'^(~xx*~yy*inv(~yy.1)) ) @ #vk.31 )
                                  case I1_PSK_PSK
                                  by solve( !KU( ~yy ) @ #vk.55 )
                                next
                                  case R2_PSK_PSK
                                  by solve( !KU( ~xx ) @ #vk.55 )
                                next
                                  case c_exp
                                  by solve( !KU( ~xx ) @ #vk.56 )
                                qed
                              next
                                case split_case_2
                                solve( !KU( 'g'^(~xx*~yy*inv(~yy.1)) ) @ #vk.36 )
                                  case I1_PSK_PSK
                                  by solve( !KU( ~yy ) @ #vk.70 )
                                next
                                  case R2_PSK_PSK
                                  by solve( !KU( ~xx ) @ #vk.70 )
                                next
                                  case c_exp
                                  by solve( !KU( ~xx ) @ #vk.71 )
                                qed
                              qed
                            qed
                          next
                            case c_hkdfExpand
                            solve( !KU( hkdfExtract(~ltk, impSk) ) @ #vk.70 )
                              case c_hkdfExtract
                              solve( !KU( ~ltk ) @ #vk.72 )
                                case revealLTK_PSK
                                by contradiction /* from formulas */
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  qed
next
  case case_4
  solve( StI1_PSK_PSK( $U, ~ltk, $V, ~xx, m1, ~tid ) ▶₀ #i )
    case I1_PSK_PSK
    solve( StR2_PSK_PSK( $U.1, $V.1, ~ltk.1, ~yy, prk_3e2m, TH_2,
                         CIPHERTEXT_2, impSk, ~tid.1, m1, m2
           ) ▶₀ #j )
      case R2_PSK_PSK
      solve( !KU( aeadEncrypt('emptyStr',
                              hkdfExpand(<$cAEAD0, 
                                          h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, gy>), 'K_2ae'
                                         >,
                                         hkdfExtract(~ltk, impSk)),
                              h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, gy>), $cAEAD0)
             ) @ #vk.2 )
        case R2_PSK_PSK
        solve( splitEqs(2) )
          case split_case_1
          solve( !KU( 'g'^(~xx*~yy) ) @ #vk.6 )
            case I1_PSK_PSK
            by solve( !KU( ~yy ) @ #vk.17 )
          next
            case R2_PSK_PSK
            by solve( !KU( ~xx ) @ #vk.17 )
          next
            case c_exp
            by solve( !KU( ~xx ) @ #vk.19 )
          qed
        next
          case split_case_2
          solve( !KU( 'g'^(~xx*~yy) ) @ #vk.6 )
            case I1_PSK_PSK
            by solve( !KU( ~yy ) @ #vk.26 )
          next
            case R2_PSK_PSK
            by solve( !KU( ~xx ) @ #vk.26 )
          next
            case c_exp
            by solve( !KU( ~xx ) @ #vk.28 )
          qed
        qed
      next
        case c_aeadEncrypt
        solve( !KU( h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, gy>)
               ) @ #vk.18 )
          case c_h
          solve( !KU( aeadEncrypt('emptyStr',
                                  hkdfExpand(<$cAEAD0.2, 
                                              h(<$cHash0.2, 
                                                 h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 
                                                    'g'^~yy>), 
                                                 aeadEncrypt('emptyStr',
                                                             hkdfExpand(<$cAEAD0.1, 
                                                                         h(<$cHash0.1, 
                                                                            <'PSK', 'PSK', $cSUITE0.1, gx, 
                                                                             $U.1, $V.1>, 
                                                                            'g'^~yy>), 
                                                                         'K_2ae'>,
                                                                        hkdfExtract(~ltk.1, impSk)),
                                                             h(<$cHash0.1, 
                                                                <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 
                                                                'g'^~yy>),
                                                             $cAEAD0.1), 
                                                 'emptyStr'>), 
                                              'K_3ae'>,
                                             hkdfExtract(~ltk.1, impSk)),
                                  h(<$cHash0.2, 
                                     h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy>), 
                                     aeadEncrypt('emptyStr',
                                                 hkdfExpand(<$cAEAD0.1, 
                                                             h(<$cHash0.1, 
                                                                <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 
                                                                'g'^~yy>), 
                                                             'K_2ae'>,
                                                            hkdfExtract(~ltk.1, impSk)),
                                                 h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 
                                                    'g'^~yy>),
                                                 $cAEAD0.1), 
                                     'emptyStr'>),
                                  $cAEAD0.2)
                 ) @ #vk.7 )
            case I3_PSK_PSK
            solve( splitEqs(0) )
              case split_case_1
              solve( !KU( 'g'^(~xx*~yy) ) @ #vk.9 )
                case I1_PSK_PSK
                by solve( !KU( ~yy ) @ #vk.23 )
              next
                case R2_PSK_PSK
                by solve( !KU( ~xx ) @ #vk.23 )
              next
                case c_exp
                by solve( !KU( ~xx ) @ #vk.25 )
              qed
            next
              case split_case_2
              solve( !KU( 'g'^(~yy*~xx.1*inv(~xx)) ) @ #vk.5 )
                case I1_PSK_PSK
                by solve( !KU( ~yy ) @ #vk.36 )
              next
                case R2_PSK_PSK
                by solve( !KU( ~xx.1 ) @ #vk.36 )
              next
                case c_exp
                by solve( !KU( ~yy ) @ #vk.37 )
              qed
            qed
          next
            case c_aeadEncrypt
            solve( !KU( h(<$cHash0.2, 
                           h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy>), 
                           aeadEncrypt('emptyStr',
                                       hkdfExpand(<$cAEAD0.1, 
                                                   h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 
                                                      'g'^~yy>), 
                                                   'K_2ae'>,
                                                  hkdfExtract(~ltk.1, impSk)),
                                       h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 'g'^~yy>),
                                       $cAEAD0.1), 
                           'emptyStr'>)
                   ) @ #vk.33 )
              case c_h
              solve( !KU( h(<$cHash0.1, <'PSK', 'PSK', $cSUITE0.1, gx, $U.1, $V.1>, 
                             'g'^~yy>)
                     ) @ #vk.39 )
                case c_h
                solve( !KU( hkdfExpand(<$cAEAD0, 
                                        h(<$cHash0, <'PSK', 'PSK', $cSUITE0, 'g'^~xx, $U, $V>, gy>), 'K_2ae'>,
                                       hkdfExtract(~ltk, impSk))
                       ) @ #vk.27 )
                  case R2_PSK_PSK_case_1
                  solve( splitEqs(2) )
                    case split_case_1
                    solve( !KU( 'g'^(~xx*~yy) ) @ #vk.14 )
                      case I1_PSK_PSK
                      by solve( !KU( ~yy ) @ #vk.30 )
                    next
                      case R2_PSK_PSK
                      by solve( !KU( ~xx ) @ #vk.30 )
                    next
                      case c_exp
                      by solve( !KU( ~xx ) @ #vk.32 )
                    qed
                  next
                    case split_case_2
                    solve( !KU( 'g'^(~xx*~yy) ) @ #vk.15 )
                      case I1_PSK_PSK
                      by solve( !KU( ~yy ) @ #vk.45 )
                    next
                      case R2_PSK_PSK
                      by solve( !KU( ~xx ) @ #vk.45 )
                    next
                      case c_exp
                      by solve( !KU( ~xx ) @ #vk.47 )
                    qed
                  qed
                next
                  case R2_PSK_PSK_case_2
                  solve( splitEqs(2) )
                    case split_case_1
                    solve( !KU( 'g'^(~xx*~yy) ) @ #vk.14 )
                      case I1_PSK_PSK
                      by solve( !KU( ~yy ) @ #vk.31 )
                    next
                      case R2_PSK_PSK
                      by solve( !KU( ~xx ) @ #vk.31 )
                    next
                      case c_exp
                      by solve( !KU( ~xx ) @ #vk.33 )
                    qed
                  next
                    case split_case_2
                    solve( !KU( 'g'^(~xx*~yy) ) @ #vk.15 )
                      case I1_PSK_PSK
                      by solve( !KU( ~yy ) @ #vk.46 )
                    next
                      case R2_PSK_PSK
                      by solve( !KU( ~xx ) @ #vk.46 )
                    next
                      case c_exp
                      by solve( !KU( ~xx ) @ #vk.48 )
                    qed
                  qed
                next
                  case c_hkdfExpand
                  solve( !KU( hkdfExtract(~ltk, impSk) ) @ #vk.47 )
                    case c_hkdfExtract
                    solve( !KU( ~ltk ) @ #vk.49 )
                      case revealLTK_PSK
                      by contradiction /* from formulas */
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  qed
qed

lemma secrecyPFSGIYSessionKey:
  all-traces
  "(∀ tid u v sk #i #j.
     ((K( sk ) @ #i) ∧ (CommitI( tid, u, v, sk ) @ #j)) ⇒
     ((∃ #l. (LTKRev( <u, v> ) @ #l) ∧ (#l < #j)) ∨
      (∃ #l. SKRev( sk ) @ #l))) ∧
   (∀ tid u v sk #i #j.
     ((K( sk ) @ #i) ∧ (CommitR( tid, u, v, sk ) @ #j)) ⇒
     ((∃ #l. (LTKRev( <u, v> ) @ #l) ∧ (#l < #j)) ∨
      (∃ #l. SKRev( sk ) @ #l)))"
/*
guarded formula characterizing all counter-examples:
"((∃ tid u v sk #i #j.
    (K( sk ) @ #i) ∧ (CommitI( tid, u, v, sk ) @ #j)
   ∧
    (∀ #l. (LTKRev( <u, v> ) @ #l) ⇒ ¬(#l < #j)) ∧
    (∀ #l. (SKRev( sk ) @ #l) ⇒ ⊥)) ∨
  (∃ tid u v sk #i #j.
    (K( sk ) @ #i) ∧ (CommitR( tid, u, v, sk ) @ #j)
   ∧
    (∀ #l. (LTKRev( <u, v> ) @ #l) ⇒ ¬(#l < #j)) ∧
    (∀ #l. (SKRev( sk ) @ #l) ⇒ ⊥)))"
*/
by sorry

/* All well-formedness checks were successful. */

end

==============================================================================
summary of summaries:

analyzed: TMP_edhoc_PSK_PSK.spthy

  sanityExecutableToTheEnd (exists-trace): analysis incomplete (1 steps)
  authInjAgreeGuaranteeForI (all-traces): analysis incomplete (1 steps)
  authInjAgreeGuaranteeForR (all-traces): analysis incomplete (1 steps)
  authGIYImplicitAuthGuaranteeForI (all-traces): verified (267 steps)
  authGIYImplicitAuthGuaranteeForI2 (all-traces): verified (294 steps)
  secrecyPFSGIYSessionKey (all-traces): analysis incomplete (1 steps)

==============================================================================

real	0m53,666s
user	2m42,794s
sys	0m23,539s
