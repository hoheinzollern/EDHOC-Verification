maude tool: 'maude'
 checking version: 2.7.1. OK.
 checking installation: OK.
SAPIC tool: 'sapic'
Checking availablity ...>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0:  (∃ tid u v sk #i #j.   (K( sk ) @ #i) ∧ (CommitI( tid, u, v, sk ) @ #j)  ∧   (∀ #l. (LTKRev( u ) @ #l) ⇒ ¬(#l < #j)) ∧   (∀ #l. (LTKRev( v ) @ #l) ⇒ ¬(#l < #j)) ∧   (∀ #l. (SKRev( sk ) @ #l) ⇒ ⊥))  ∥ (∃ tid u v sk #i #j.   (K( sk ) @ #i) ∧ (CommitR( tid, u, v, sk ) @ #j)  ∧   (∀ #l. (LTKRev( u ) @ #l) ⇒ ¬(#l < #j)) ∧   (∀ #l. (LTKRev( v ) @ #l) ⇒ ¬(#l < #j)) ∧   (∀ #l. (SKRev( sk ) @ #l) ⇒ ⊥))

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 0 (directly): !LTK_PSK( t.1, t.2 ) ▶₀ #i
  solved goal nr. 0 (directly): !LTK_SIG( t.1, t.2 ) ▶₀ #i
  solved goal nr. 0 (directly): !PK_SIG( t.1, t.2 ) ▶₀ #i
  solved goal nr. 0 (directly): !LTK_STAT( t.1, t.2 ) ▶₀ #i
  solved goal nr. 0 (directly): !PK_STAT( t.1, t.2 ) ▶₀ #i
  solved goal nr. 0 (directly): CommitI( t.1, t.2, t.3, t.4 ) ▶₀ #i
  solved goal nr. 0 (directly): CommitR( t.1, t.2, t.3, t.4 ) ▶₀ #i
  solved goal nr. 0 (directly): !KU( ~t.1 ) @ #i
  solved goal nr. 0 (directly):
    StI1_SIG_STAT( t.1, t.2, t.3, t.4, t.5, t.6 ) ▶₀ #i
  solved goal nr. 0 (directly):
    StR2_SIG_STAT( t.1, t.2, t.3, t.4, t.5, t.6, t.7, t.8, t.9, t.10,
                   t.11
    ) ▶₀ #i
  solved goal nr. 0 (directly):
    !KU( aeadDecrypt(t.1, t.2, t.3, t.4) ) @ #i
  solved goal nr. 0 (directly):
    !KU( aeadEncrypt(t.1, t.2, t.3, t.4) ) @ #i
  solved goal nr. 0 (directly): !KU( decrypt(t.1, t.2, t.3) ) @ #i
  solved goal nr. 0 (directly): !KU( t.1^t.2 ) @ #i
  solved goal nr. 0 (directly): !KU( h(t.1) ) @ #i
  solved goal nr. 0 (directly): !KU( fst(t.1) ) @ #i
  solved goal nr. 0 (directly): !KU( hkdfExpand(t.1, t.2) ) @ #i
  solved goal nr. 0 (directly): !KU( hkdfExtract(t.1, t.2) ) @ #i
  solved goal nr. 0 (directly): !KU( pk(t.1) ) @ #i
  solved goal nr. 0 (directly): !KU( snd(t.1) ) @ #i
  solved goal nr. 0 (directly): !KU( sign(t.1, t.2) ) @ #i
  solved goal nr. 0 (directly): !KU( verify(t.1, t.2, t.3) ) @ #i
  solved goal nr. 2 (directly): !LTK_SIG( $U.8, ~ltk.8 ) ▶₀ #vr.7
  solved goal nr. 2 (directly): !LTK_STAT( $V.13, ~ltk.13 ) ▶₀ #vr.12
  solved goal nr. 4 (directly): !LTK_SIG( $U.10, ~ltk.10 ) ▶₀ #vr.9
  solved goal nr. 4 (directly): !LTK_SIG( $U.10, ~ltk.10 ) ▶₀ #vr.9
  solved goal nr. 3 (directly): !PK_STAT( $V.13, pkV.13 ) ▶₁ #vr.12
  solved goal nr. 4 (directly): !LTK_STAT( $V.10, ~ltk.10 ) ▶₀ #vr.9
  solved goal nr. 5 (directly): !PK_STAT( $V.10, pkV.10 ) ▶₁ #vr.9
  solved goal nr. 4 (directly): !LTK_STAT( $V.10, ~ltk.10 ) ▶₀ #vr.9
  solved goal nr. 5 (directly): !PK_STAT( $V.10, pkV.10 ) ▶₁ #vr.9
  solved goal nr. 4 (directly): !LTK_STAT( $V.31, ~ltk.10 ) ▶₀ #vr.9
  solved goal nr. 5 (directly): !PK_STAT( $V.31, pkV.10 ) ▶₁ #vr.9
  solved goal nr. 4 (directly): !LTK_STAT( $V.37, ~ltk.16 ) ▶₀ #vr.15
  solved goal nr. 4 (directly): !LTK_STAT( $V.31, ~ltk.10 ) ▶₀ #vr.9
  solved goal nr. 5 (directly): !PK_STAT( $V.37, pkV.43 ) ▶₁ #vr.15
  solved goal nr. 5 (directly): !PK_STAT( $V.31, pkV.37 ) ▶₁ #vr.9
  solved goal nr. 4 (directly): !LTK_STAT( $V.31, ~ltk.10 ) ▶₀ #vr.9
  solved goal nr. 5 (directly): !PK_STAT( $V.31, pkV.37 ) ▶₁ #vr.9
  solved goal nr. 4 (directly):
    CommitI( tid.7, u.7, v.7, t.5 ) ▶₀ #vr.6
  solved goal nr. 4 (directly):
    CommitR( tid.7, u.7, v.7, t.5 ) ▶₀ #vr.6
  solved goal nr. 4 (directly): !LTK_STAT( $V.31, ~ltk.10 ) ▶₀ #vr.9
  solved goal nr. 4 (directly):
    StI1_SIG_STAT( $U.16, ~ltk.16, $V.16, ~xx.16, m1.16, ~tid.16
    ) ▶₀ #vr.15
  solved goal nr. 5 (directly): !PK_STAT( $V.16, pkV.16 ) ▶₁ #vr.15
  solved goal nr. 6 (directly): !PK_SIG( $U.16, pkU.16 ) ▶₂ #vr.15
  solved goal nr. 5 (directly): !PK_STAT( $V.31, pkV.37 ) ▶₁ #vr.9
  solved goal nr. 16 (directly): !LTK_SIG( $U.16, ~ltk.16 ) ▶₀ #vr.68
  solved goal nr. 4 (directly):
    CommitI( tid.16, u.16, v.16, t.14 ) ▶₀ #vr.15
  solved goal nr. 4 (directly):
    CommitR( tid.16, u.16, v.16, t.14 ) ▶₀ #vr.15
  solved goal nr. 4 (directly):
    CommitI( tid.10, u.10, v.10, t.8 ) ▶₀ #vr.9
  solved goal nr. 4 (directly):
    CommitR( tid.10, u.10, v.10, t.8 ) ▶₀ #vr.9
  solved goal nr. 4 (directly):
    CommitI( tid.7, u.7, v.7, t.5 ) ▶₀ #vr.6
  solved goal nr. 4 (directly):
    CommitR( tid.7, u.7, v.7, t.5 ) ▶₀ #vr.6
  solved goal nr. 4 (directly):
    CommitI( tid.16, u.16, v.16, t.14 ) ▶₀ #vr.15
  solved goal nr. 4 (directly):
    CommitR( tid.16, u.16, v.16, t.14 ) ▶₀ #vr.15
  solved goal nr. 4 (directly):
    CommitI( tid.7, u.7, v.7, t.5 ) ▶₀ #vr.6
  solved goal nr. 4 (directly):
    CommitR( tid.7, u.7, v.7, t.5 ) ▶₀ #vr.6
  solved goal nr. 4 (directly):
    CommitI( tid.7, u.7, v.7, t.5 ) ▶₀ #vr.6
  solved goal nr. 4 (directly):
    CommitR( tid.7, u.7, v.7, t.5 ) ▶₀ #vr.6
  solved goal nr. 4 (directly):
    CommitI( tid.10, u.10, v.10, t.8 ) ▶₀ #vr.9
  solved goal nr. 4 (directly):
    CommitR( tid.10, u.10, v.10, t.8 ) ▶₀ #vr.9
  solved goal nr. 4 (directly):
    CommitI( tid.10, u.10, v.10, t.8 ) ▶₀ #vr.9
  solved goal nr. 4 (directly):
    CommitR( tid.10, u.10, v.10, t.8 ) ▶₀ #vr.9
  solved goal nr. 4 (directly): !LTK_SIG( $A.7, ~t.1 ) ▶₀ #vr.6
  solved goal nr. 4 (directly): !LTK_STAT( $A.7, ~t.1 ) ▶₀ #vr.6
  solved goal nr. 4 (directly):
    !LTK_PSK( <$A.7, $B.7>, ~t.1 ) ▶₀ #vr.6
  solved goal nr. 4 (directly):
    CommitI( tid.7, u.7, v.7, t.5 ) ▶₀ #vr.6
  solved goal nr. 4 (directly):
    CommitI( tid.13, u.13, v.13, t.11 ) ▶₀ #vr.12
  solved goal nr. 4 (directly):
    CommitR( tid.7, u.7, v.7, t.5 ) ▶₀ #vr.6
  solved goal nr. 4 (directly):
    CommitR( tid.13, u.13, v.13, t.11 ) ▶₀ #vr.12
  solved goal nr. 4 (directly):
    CommitI( tid.13, u.13, v.13, t.11 ) ▶₀ #vr.12
  solved goal nr. 4 (directly):
    CommitR( tid.13, u.13, v.13, t.11 ) ▶₀ #vr.12
  solved goal nr. 4 (directly):
    StI1_SIG_STAT( $U.10, ~ltk.10, $V.10, ~xx.10, m1.10, ~tid.10
    ) ▶₀ #vr.9
  solved goal nr. 5 (directly): !PK_STAT( $V.10, pkV.10 ) ▶₁ #vr.9
  solved goal nr. 6 (directly): !PK_SIG( $U.10, pkU.10 ) ▶₂ #vr.9
  solved goal nr. 26 (directly): !LTK_SIG( $U.10, ~ltk.10 ) ▶₀ #vr.69
  solved goal nr. 4 (directly):
    StI1_SIG_STAT( $U.10, ~ltk.10, $V.10, ~xx.10, m1.10, ~tid.10
    ) ▶₀ #vr.9
  solved goal nr. 5 (directly): !PK_STAT( $V.10, pkV.10 ) ▶₁ #vr.9
  solved goal nr. 6 (directly): !PK_SIG( $U.10, pkU.10 ) ▶₂ #vr.9
  solved goal nr. 23 (directly): !LTK_SIG( $U.10, ~ltk.10 ) ▶₀ #vr.68
  solved goal nr. 4 (directly):
    CommitI( tid.10, u.10, v.10, t.8 ) ▶₀ #vr.9
  solved goal nr. 4 (directly):
    CommitR( tid.10, u.10, v.10, t.8 ) ▶₀ #vr.9
  solved goal nr. 31 (precomputed):
    !KU( h(<$cHash0.33, <'SIG', 'STAT', $cSUITE0.34, gx.36>, 'g'^~yy.35
           >)
    ) @ #vk.47
  solved goal nr. 23 (precomputed):
    !KU( h(<$cHash0.10, 
            h(<$cHash0.10, <'SIG', 'STAT', $cSUITE0.70, 'g'^~xx.10>, gy.10>), 
            <
             ($V.10⊕
              hkdfExpand(<$cAEAD0.10, 
                          h(<$cHash0.10, <'SIG', 'STAT', $cSUITE0.70, 'g'^~xx.10>, gy.10>), 
                          'K_2e', '1'>,
                         hkdfExtract('emptyStr', z.11))
             ), 
             (
              aeadEncrypt('emptyStr',
                          hkdfExpand(<$cAEAD0.10, 
                                      h(<$cHash0.10, <'SIG', 'STAT', $cSUITE0.70, 'g'^~xx.10>, gy.10
                                        >), 
                                      'K_2m'>,
                                     hkdfExtract(hkdfExtract('emptyStr', z.11),
                                                 'g'^(~xx.10*~ltk.74))),
                          <$V.10, 
                           h(<$cHash0.10, <'SIG', 'STAT', $cSUITE0.70, 'g'^~xx.10>, gy.10>), 
                           'g'^~ltk.74>,
                          $cAEAD0.10)⊕
              hkdfExpand(<$cAEAD0.10, 
                          h(<$cHash0.10, <'SIG', 'STAT', $cSUITE0.70, 'g'^~xx.10>, gy.10>), 
                          'K_2e', '2'>,
                         hkdfExtract('emptyStr', z.11))
             )
            >, 
            'emptyStr'>)
    ) @ #vk.65
  solved goal nr. 22 (precomputed):
    !KU( sign(<
               <$U.10, 
                h(<$cHash0.10, 
                   h(<$cHash0.10, <'SIG', 'STAT', $cSUITE0.70, 'g'^~xx.10>, gy.10>), 
                   <
                    ($V.10⊕
                     hkdfExpand(<$cAEAD0.10, 
                                 h(<$cHash0.10, <'SIG', 'STAT', $cSUITE0.70, 'g'^~xx.10>, gy.10>), 
                                 'K_2e', '1'>,
                                hkdfExtract('emptyStr', z.11))
                    ), 
                    (
                     aeadEncrypt('emptyStr',
                                 hkdfExpand(<$cAEAD0.10, 
                                             h(<$cHash0.10, 
                                                <'SIG', 'STAT', $cSUITE0.70, 'g'^~xx.10>, gy.10>), 
                                             'K_2m'>,
                                            hkdfExtract(hkdfExtract('emptyStr', z.11),
                                                        'g'^(~xx.10*~ltk.74))),
                                 <$V.10, 
                                  h(<$cHash0.10, <'SIG', 'STAT', $cSUITE0.70, 'g'^~xx.10>, gy.10>), 
                                  'g'^~ltk.74>,
                                 $cAEAD0.10)⊕
                     hkdfExpand(<$cAEAD0.10, 
                                 h(<$cHash0.10, <'SIG', 'STAT', $cSUITE0.70, 'g'^~xx.10>, gy.10>), 
                                 'K_2e', '2'>,
                                hkdfExtract('emptyStr', z.11))
                    )
                   >, 
                   'emptyStr'>), 
                pk(~ltk.10)>, 
               aeadEncrypt('emptyStr',
                           hkdfExpand(<$cAEAD0.10, 
                                       h(<$cHash0.10, 
                                          h(<$cHash0.10, <'SIG', 'STAT', $cSUITE0.70, 'g'^~xx.10>, 
                                             gy.10>), 
                                          <
                                           ($V.10⊕
                                            hkdfExpand(<$cAEAD0.10, 
                                                        h(<$cHash0.10, 
                                                           <'SIG', 'STAT', $cSUITE0.70, 'g'^~xx.10
                                                           >, 
                                                           gy.10>), 
                                                        'K_2e', '1'>,
                                                       hkdfExtract('emptyStr', z.11))
                                           ), 
                                           (
                                            aeadEncrypt('emptyStr',
                                                        hkdfExpand(<$cAEAD0.10, 
                                                                    h(<$cHash0.10, 
                                                                       <'SIG', 'STAT', $cSUITE0.70, 
                                                                        'g'^~xx.10>, 
                                                                       gy.10>), 
                                                                    'K_2m'>,
                                                                   hkdfExtract(hkdfExtract('emptyStr',
                                                                                           z.11),
                                                                               'g'^(~xx.10*~ltk.74
                                                                                   ))),
                                                        <$V.10, 
                                                         h(<$cHash0.10, 
                                                            <'SIG', 'STAT', $cSUITE0.70, 'g'^~xx.10
                                                            >, 
                                                            gy.10>), 
                                                         'g'^~ltk.74>,
                                                        $cAEAD0.10)⊕
                                            hkdfExpand(<$cAEAD0.10, 
                                                        h(<$cHash0.10, 
                                                           <'SIG', 'STAT', $cSUITE0.70, 'g'^~xx.10
                                                           >, 
                                                           gy.10>), 
                                                        'K_2e', '2'>,
                                                       hkdfExtract('emptyStr', z.11))
                                           )
                                          >, 
                                          'emptyStr'>), 
                                       'K_3m'>,
                                      hkdfExtract(hkdfExtract('emptyStr', z.11),
                                                  'g'^(~xx.10*~ltk.74))),
                           <$U.10, 
                            h(<$cHash0.10, 
                               h(<$cHash0.10, <'SIG', 'STAT', $cSUITE0.70, 'g'^~xx.10>, gy.10>), 
                               <
                                ($V.10⊕
                                 hkdfExpand(<$cAEAD0.10, 
                                             h(<$cHash0.10, 
                                                <'SIG', 'STAT', $cSUITE0.70, 'g'^~xx.10>, gy.10>), 
                                             'K_2e', '1'>,
                                            hkdfExtract('emptyStr', z.11))
                                ), 
                                (
                                 aeadEncrypt('emptyStr',
                                             hkdfExpand(<$cAEAD0.10, 
                                                         h(<$cHash0.10, 
                                                            <'SIG', 'STAT', $cSUITE0.70, 'g'^~xx.10
                                                            >, 
                                                            gy.10>), 
                                                         'K_2m'>,
                                                        hkdfExtract(hkdfExtract('emptyStr', z.11),
                                                                    'g'^(~xx.10*~ltk.74))),
                                             <$V.10, 
                                              h(<$cHash0.10, 
                                                 <'SIG', 'STAT', $cSUITE0.70, 'g'^~xx.10>, gy.10>), 
                                              'g'^~ltk.74>,
                                             $cAEAD0.10)⊕
                                 hkdfExpand(<$cAEAD0.10, 
                                             h(<$cHash0.10, 
                                                <'SIG', 'STAT', $cSUITE0.70, 'g'^~xx.10>, gy.10>), 
                                             'K_2e', '2'>,
                                            hkdfExtract('emptyStr', z.11))
                                )
                               >, 
                               'emptyStr'>), 
                            pk(~ltk.10)>,
                           $cAEAD0.10)
              >,
              ~ltk.10)
    ) @ #vk.68
  solved goal nr. 21 (precomputed):
    !KU( sign(<
               <$U.10, 
                h(<$cHash0.10, 
                   h(<$cHash0.10, <'SIG', 'STAT', $cSUITE0.69, 'g'^~xx.10>, gy.10>), 
                   <
                    ($V.10⊕
                     hkdfExpand(<$cAEAD0.10, 
                                 h(<$cHash0.10, <'SIG', 'STAT', $cSUITE0.69, 'g'^~xx.10>, gy.10>), 
                                 'K_2e', '1'>,
                                hkdfExtract('emptyStr', z.11))
                    ), 
                    (
                     aeadEncrypt('emptyStr',
                                 hkdfExpand(<$cAEAD0.10, 
                                             h(<$cHash0.10, 
                                                <'SIG', 'STAT', $cSUITE0.69, 'g'^~xx.10>, gy.10>), 
                                             'K_2m'>,
                                            hkdfExtract(hkdfExtract('emptyStr', z.11),
                                                        'g'^(~xx.10*~ltk.73))),
                                 <$V.10, 
                                  h(<$cHash0.10, <'SIG', 'STAT', $cSUITE0.69, 'g'^~xx.10>, gy.10>), 
                                  'g'^~ltk.73>,
                                 $cAEAD0.10)⊕
                     hkdfExpand(<$cAEAD0.10, 
                                 h(<$cHash0.10, <'SIG', 'STAT', $cSUITE0.69, 'g'^~xx.10>, gy.10>), 
                                 'K_2e', '2'>,
                                hkdfExtract('emptyStr', z.11))
                    )
                   >, 
                   'emptyStr'>), 
                pk(~ltk.10)>, 
               aeadEncrypt('emptyStr',
                           hkdfExpand(<$cAEAD0.10, 
                                       h(<$cHash0.10, 
                                          h(<$cHash0.10, <'SIG', 'STAT', $cSUITE0.69, 'g'^~xx.10>, 
                                             gy.10>), 
                                          <
                                           ($V.10⊕
                                            hkdfExpand(<$cAEAD0.10, 
                                                        h(<$cHash0.10, 
                                                           <'SIG', 'STAT', $cSUITE0.69, 'g'^~xx.10
                                                           >, 
                                                           gy.10>), 
                                                        'K_2e', '1'>,
                                                       hkdfExtract('emptyStr', z.11))
                                           ), 
                                           (
                                            aeadEncrypt('emptyStr',
                                                        hkdfExpand(<$cAEAD0.10, 
                                                                    h(<$cHash0.10, 
                                                                       <'SIG', 'STAT', $cSUITE0.69, 
                                                                        'g'^~xx.10>, 
                                                                       gy.10>), 
                                                                    'K_2m'>,
                                                                   hkdfExtract(hkdfExtract('emptyStr',
                                                                                           z.11),
                                                                               'g'^(~xx.10*~ltk.73
                                                                                   ))),
                                                        <$V.10, 
                                                         h(<$cHash0.10, 
                                                            <'SIG', 'STAT', $cSUITE0.69, 'g'^~xx.10
                                                            >, 
                                                            gy.10>), 
                                                         'g'^~ltk.73>,
                                                        $cAEAD0.10)⊕
                                            hkdfExpand(<$cAEAD0.10, 
                                                        h(<$cHash0.10, 
                                                           <'SIG', 'STAT', $cSUITE0.69, 'g'^~xx.10
                                                           >, 
                                                           gy.10>), 
                                                        'K_2e', '2'>,
                                                       hkdfExtract('emptyStr', z.11))
                                           )
                                          >, 
                                          'emptyStr'>), 
                                       'K_3m'>,
                                      hkdfExtract(hkdfExtract('emptyStr', z.11),
                                                  'g'^(~xx.10*~ltk.73))),
                           <$U.10, 
                            h(<$cHash0.10, 
                               h(<$cHash0.10, <'SIG', 'STAT', $cSUITE0.69, 'g'^~xx.10>, gy.10>), 
                               <
                                ($V.10⊕
                                 hkdfExpand(<$cAEAD0.10, 
                                             h(<$cHash0.10, 
                                                <'SIG', 'STAT', $cSUITE0.69, 'g'^~xx.10>, gy.10>), 
                                             'K_2e', '1'>,
                                            hkdfExtract('emptyStr', z.11))
                                ), 
                                (
                                 aeadEncrypt('emptyStr',
                                             hkdfExpand(<$cAEAD0.10, 
                                                         h(<$cHash0.10, 
                                                            <'SIG', 'STAT', $cSUITE0.69, 'g'^~xx.10
                                                            >, 
                                                            gy.10>), 
                                                         'K_2m'>,
                                                        hkdfExtract(hkdfExtract('emptyStr', z.11),
                                                                    'g'^(~xx.10*~ltk.73))),
                                             <$V.10, 
                                              h(<$cHash0.10, 
                                                 <'SIG', 'STAT', $cSUITE0.69, 'g'^~xx.10>, gy.10>), 
                                              'g'^~ltk.73>,
                                             $cAEAD0.10)⊕
                                 hkdfExpand(<$cAEAD0.10, 
                                             h(<$cHash0.10, 
                                                <'SIG', 'STAT', $cSUITE0.69, 'g'^~xx.10>, gy.10>), 
                                             'K_2e', '2'>,
                                            hkdfExtract('emptyStr', z.11))
                                )
                               >, 
                               'emptyStr'>), 
                            pk(~ltk.10)>,
                           $cAEAD0.10)
              >,
              ~ltk.10)
    ) @ #vk.67
  solved goal nr. 33 (precomputed):
    !KU( h(<$cHash0.10, 
            h(<$cHash0.10, <'SIG', 'STAT', $cSUITE0.69, 'g'^~xx.10>, gy.10>), 
            <
             ($V.10⊕
              hkdfExpand(<$cAEAD0.10, 
                          h(<$cHash0.10, <'SIG', 'STAT', $cSUITE0.69, 'g'^~xx.10>, gy.10>), 
                          'K_2e', '1'>,
                         hkdfExtract('emptyStr', z.11))
             ), 
             (
              aeadEncrypt('emptyStr',
                          hkdfExpand(<$cAEAD0.10, 
                                      h(<$cHash0.10, <'SIG', 'STAT', $cSUITE0.69, 'g'^~xx.10>, gy.10
                                        >), 
                                      'K_2m'>,
                                     hkdfExtract(hkdfExtract('emptyStr', z.11),
                                                 'g'^(~xx.10*~ltk.73))),
                          <$V.10, 
                           h(<$cHash0.10, <'SIG', 'STAT', $cSUITE0.69, 'g'^~xx.10>, gy.10>), 
                           'g'^~ltk.73>,
                          $cAEAD0.10)⊕
              hkdfExpand(<$cAEAD0.10, 
                          h(<$cHash0.10, <'SIG', 'STAT', $cSUITE0.69, 'g'^~xx.10>, gy.10>), 
                          'K_2e', '2'>,
                         hkdfExtract('emptyStr', z.11))
             )
            >, 
            'emptyStr'>)
    ) @ #vk.90
  solved goal nr. 34 (precomputed):
    !KU( h(<$cHash0.10, <'SIG', 'STAT', $cSUITE0.70, 'g'^~xx.10>, gy.10
           >)
    ) @ #vk.88
  solved goal nr. 40 (precomputed):
    !KU( h(<$cHash0.10, <'SIG', 'STAT', $cSUITE0.69, 'g'^~xx.10>, gy.10
           >)
    ) @ #vk.96
  solved goal nr. 0 (directly):
     (∃ tid u v sk #i #j.
       (K( sk ) @ #i) ∧ (CommitI( tid, u, v, sk ) @ #j)
      ∧
       (∀ #l. (LTKRev( u ) @ #l) ⇒ ¬(#l < #j)) ∧
       (∀ #l. (LTKRev( v ) @ #l) ⇒ ¬(#l < #j)) ∧
       (∀ #l. (SKRev( sk ) @ #l) ⇒ ⊥))  ∥
     (∃ tid u v sk #i #j.
       (K( sk ) @ #i) ∧ (CommitR( tid, u, v, sk ) @ #j)
      ∧
       (∀ #l. (LTKRev( u ) @ #l) ⇒ ¬(#l < #j)) ∧
       (∀ #l. (LTKRev( v ) @ #l) ⇒ ¬(#l < #j)) ∧
       (∀ #l. (SKRev( sk ) @ #l) ⇒ ⊥))
  solved goal nr. 1 (directly): K( sk.3 ) @ #i.4
  solved goal nr. 2 (directly): CommitI( tid, u.1, v.2, sk.3 ) @ #j.5
  solved goal nr. 1 (directly): K( sk.3 ) @ #i.4
  solved goal nr. 2 (directly): CommitR( tid, u.1, v.2, sk.3 ) @ #j.5
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0:  (last(#j))  ∥ (last(#i))  ∥ (∃ #l. (LTKRev( $U ) @ #l) ∧ (¬(last(#l))) ∧ (#l < #j))  ∥ (∃ #l. (LTKRev( $V ) @ #l) ∧ (¬(last(#l))) ∧ (#l < #j))  ∥ (∃ #l. (SKRev( <gxy, grx> ) @ #l) ∧ ¬(last(#l)))
1: StR2_SIG_STAT( $V, ~ltk, grx, ~yy, prk_3e2m, TH_2, CIPHERTEXT_2,               gxy, ~tid, m1, m2) ▶₀ #j
2: !PK_SIG( $U, pk(x) ) ▶₁ #j
3: !PK_STAT( $V, pkV ) ▶₂ #j
4: !KU( aeadEncrypt(<$U,                   sign(<<$U, h(<$cHash0, TH_2, CIPHERTEXT_2, 'emptyStr'>), pk(x)>,                         aeadEncrypt('emptyStr',                                    hkdfExpand(<$cAEAD0,                                                 h(<$cHash0, TH_2, CIPHERTEXT_2, 'emptyStr'>), 'K_3m'                                               >,                                               prk_3e2m),                                    <$U, h(<$cHash0, TH_2, CIPHERTEXT_2, 'emptyStr'>), pk(x)>,                                    $cAEAD0)                       >,                       x)                 >,                 hkdfExpand(<$cAEAD0, h(<$cHash0, TH_2, CIPHERTEXT_2, 'emptyStr'>),                              'K_3ae'>,                            prk_3e2m),                 extAad3Outer, $cAEAD0)) @ #vk.3

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 14 (directly):
     (last(#j))  ∥ (last(#i))  ∥
     (∃ #l. (LTKRev( $U ) @ #l) ∧ (¬(last(#l))) ∧ (#l < #j))  ∥
     (∃ #l. (LTKRev( $V ) @ #l) ∧ (¬(last(#l))) ∧ (#l < #j))  ∥
     (∃ #l. (SKRev( <gxy, grx> ) @ #l) ∧ ¬(last(#l)))
  simplified formula:
      "((#last.7 < #l.6) ∨ (#l.6 < #last.7))"
    to
      "#l.6 < #last.7"
  solved goal nr. 16 (simplified):
     (#last.7 < #l.6)  ∥ (#l.6 < #last.7)
  simplified formula:
      "((#l.6 = #j) ∨ (#j < #l.6))"
    to
      "⊥"
  solved goal nr. 17 (simplified): (#l.6 = #j)  ∥ (#j < #l.6)
  simplified formula:
      "((#last.7 < #l.6) ∨ (#l.6 < #last.7))"
    to
      "#l.6 < #last.7"
  solved goal nr. 16 (simplified):
     (#last.7 < #l.6)  ∥ (#l.6 < #last.7)
  simplified formula:
      "((#l.6 = #j) ∨ (#j < #l.6))"
    to
      "⊥"
  solved goal nr. 17 (simplified): (#l.6 = #j)  ∥ (#j < #l.6)
  simplified formula:
      "((#last.7 < #l.6) ∨ (#l.6 < #last.7))"
    to
      "#l.6 < #last.7"
  solved goal nr. 16 (simplified):
     (#last.7 < #l.6)  ∥ (#l.6 < #last.7)
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0:  (last(#j))  ∥ (last(#i))  ∥ (∃ #l. (LTKRev( $U ) @ #l) ∧ (¬(last(#l))) ∧ (#l < #j))  ∥ (∃ #l. (LTKRev( $V ) @ #l) ∧ (¬(last(#l))) ∧ (#l < #j))  ∥ (∃ #l. (SKRev( <z, z.1> ) @ #l) ∧ ¬(last(#l)))
1: StI1_SIG_STAT( $U, ~ltk, $V, ~xx, m1, ~tid ) ▶₀ #j
2: !PK_STAT( $V, pkV ) ▶₁ #j
3: !PK_SIG( $U, pkU ) ▶₂ #j
4: splitEqs(0)
5: !KU( ($V⊕      hkdfExpand(<$cAEAD0, h(<$cHash0, m1, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.4
6: !KU( (      aeadEncrypt('emptyStr',                  hkdfExpand(<$cAEAD0, h(<$cHash0, m1, gy>), 'K_2m'>,                             hkdfExtract(hkdfExtract('emptyStr', z), z.1)),                  <$V, h(<$cHash0, m1, gy>), pkV>, $cAEAD0)⊕      hkdfExpand(<$cAEAD0, h(<$cHash0, m1, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.5

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 17 (directly):
     (last(#j))  ∥ (last(#i))  ∥
     (∃ #l. (LTKRev( $U ) @ #l) ∧ (¬(last(#l))) ∧ (#l < #j))  ∥
     (∃ #l. (LTKRev( $V ) @ #l) ∧ (¬(last(#l))) ∧ (#l < #j))  ∥
     (∃ #l. (SKRev( <z, z.1> ) @ #l) ∧ ¬(last(#l)))
  simplified formula:
      "((#last.9 < #l.8) ∨ (#l.8 < #last.9))"
    to
      "#l.8 < #last.9"
  solved goal nr. 19 (simplified):
     (#last.9 < #l.8)  ∥ (#l.8 < #last.9)
  simplified formula:
      "((#l.8 = #j) ∨ (#j < #l.8))"
    to
      "⊥"
  solved goal nr. 20 (simplified): (#l.8 = #j)  ∥ (#j < #l.8)
  simplified formula:
      "((#last.9 < #l.8) ∨ (#l.8 < #last.9))"
    to
      "#l.8 < #last.9"
  solved goal nr. 19 (simplified):
     (#last.9 < #l.8)  ∥ (#l.8 < #last.9)
  simplified formula:
      "((#l.8 = #j) ∨ (#j < #l.8))"
    to
      "⊥"
  solved goal nr. 20 (simplified): (#l.8 = #j)  ∥ (#j < #l.8)
  simplified formula:
      "((#last.9 < #l.8) ∨ (#l.8 < #last.9))"
    to
      "#l.8 < #last.9"
  solved goal nr. 19 (simplified):
     (#last.9 < #l.8)  ∥ (#l.8 < #last.9)
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: StI1_SIG_STAT( $U, ~ltk, $V, ~xx, m1, ~tid ) ▶₀ #j
1: !PK_STAT( $V, pkV ) ▶₁ #j
2: !PK_SIG( $U, pkU ) ▶₂ #j
3: splitEqs(0)
4: !KU( ($V⊕      hkdfExpand(<$cAEAD0, h(<$cHash0, m1, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.4
5: !KU( (      aeadEncrypt('emptyStr',                  hkdfExpand(<$cAEAD0, h(<$cHash0, m1, gy>), 'K_2m'>,                             hkdfExtract(hkdfExtract('emptyStr', z), z.1)),                  <$V, h(<$cHash0, m1, gy>), pkV>, $cAEAD0)⊕      hkdfExpand(<$cAEAD0, h(<$cHash0, m1, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.5

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 5 (precomputed):
    StI1_SIG_STAT( $U, ~ltk, $V, ~xx, m1, ~tid ) ▶₀ #j
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: StI1_SIG_STAT( $U, ~ltk, $V, ~xx, m1, ~tid ) ▶₀ #j
1: !PK_STAT( $V, pkV ) ▶₁ #j
2: !PK_SIG( $U, pkU ) ▶₂ #j
3: splitEqs(0)
4: !KU( ($V⊕      hkdfExpand(<$cAEAD0, h(<$cHash0, m1, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.4
5: !KU( (      aeadEncrypt('emptyStr',                  hkdfExpand(<$cAEAD0, h(<$cHash0, m1, gy>), 'K_2m'>,                             hkdfExtract(hkdfExtract('emptyStr', z), z.1)),                  <$V, h(<$cHash0, m1, gy>), pkV>, $cAEAD0)⊕      hkdfExpand(<$cAEAD0, h(<$cHash0, m1, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.5

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 5 (precomputed):
    StI1_SIG_STAT( $U, ~ltk, $V, ~xx, m1, ~tid ) ▶₀ #j
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !PK_STAT( $V, pkV ) ▶₁ #j
1: !PK_SIG( $U, pkU ) ▶₂ #j
2: !KU( ($V⊕      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.4
3: !KU( (      aeadEncrypt('emptyStr',                  hkdfExpand(<$cAEAD0,                               h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                             hkdfExtract(hkdfExtract('emptyStr', z), z.1)),                  <$V, h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), pkV>,                  $cAEAD0)⊕      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.5
4: splitEqs(0)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 6 (precomputed): !PK_STAT( $V, pkV ) ▶₁ #j
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !PK_SIG( $U, pkU ) ▶₂ #j
1: !KU( 'g'^(~ltk*~xx) ) @ #vk.7
2: !KU( ($V⊕      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.4
3: !KU( (      aeadEncrypt('emptyStr',                  hkdfExpand(<$cAEAD0,                               h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                             hkdfExtract(hkdfExtract('emptyStr', z), 'g'^(~ltk*~xx))),                  <$V, h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'g'^~ltk                  >,                  $cAEAD0)⊕      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.5
4: splitEqs(0)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 7 (precomputed): !PK_SIG( $U, pkU ) ▶₂ #j
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( 'g'^(~ltk*~xx) ) @ #vk.7
1: !KU( ($V⊕      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.4
2: !KU( (      aeadEncrypt('emptyStr',                  hkdfExpand(<$cAEAD0,                               h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                             hkdfExtract(hkdfExtract('emptyStr', z), 'g'^(~ltk*~xx))),                  <$V, h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'g'^~ltk                  >,                  $cAEAD0)⊕      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.5
3: splitEqs(0)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 21 (precomputed): !KU( 'g'^(~ltk*~xx) ) @ #vk.7
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !PK_STAT( $V, pkV ) ▶₁ #j
1: !PK_SIG( $U, pkU ) ▶₂ #j
2: !KU( ($V⊕      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.4
3: !KU( (      aeadEncrypt('emptyStr',                  hkdfExpand(<$cAEAD0,                               h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                             hkdfExtract(hkdfExtract('emptyStr', z), z.1)),                  <$V, h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), pkV>,                  $cAEAD0)⊕      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.5
4: splitEqs(0)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 6 (precomputed): !PK_STAT( $V, pkV ) ▶₁ #j
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !PK_SIG( $U, pkU ) ▶₂ #j
1: !KU( 'g'^(~ltk*~xx) ) @ #vk.7
2: !KU( ($V⊕      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.4
3: !KU( (      aeadEncrypt('emptyStr',                  hkdfExpand(<$cAEAD0,                               h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                             hkdfExtract(hkdfExtract('emptyStr', z), 'g'^(~ltk*~xx))),                  <$V, h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'g'^~ltk                  >,                  $cAEAD0)⊕      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.5
4: splitEqs(0)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 7 (precomputed): !PK_SIG( $U, pkU ) ▶₂ #j
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( 'g'^(~ltk*~xx) ) @ #vk.7
1: !KU( ($V⊕      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.4
2: !KU( (      aeadEncrypt('emptyStr',                  hkdfExpand(<$cAEAD0,                               h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                             hkdfExtract(hkdfExtract('emptyStr', z), 'g'^(~ltk*~xx))),                  <$V, h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'g'^~ltk                  >,                  $cAEAD0)⊕      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.5
3: splitEqs(0)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 21 (precomputed): !KU( 'g'^(~ltk*~xx) ) @ #vk.7
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: StR2_SIG_STAT( $V, ~ltk, grx, ~yy, prk_3e2m, TH_2, CIPHERTEXT_2,               gxy, ~tid, m1, m2) ▶₀ #j
1: !PK_SIG( $U, pk(x) ) ▶₁ #j
2: !PK_STAT( $V, pkV ) ▶₂ #j
3: !KU( aeadEncrypt(<$U,                   sign(<<$U, h(<$cHash0, TH_2, CIPHERTEXT_2, 'emptyStr'>), pk(x)>,                         aeadEncrypt('emptyStr',                                    hkdfExpand(<$cAEAD0,                                                 h(<$cHash0, TH_2, CIPHERTEXT_2, 'emptyStr'>), 'K_3m'                                               >,                                               prk_3e2m),                                    <$U, h(<$cHash0, TH_2, CIPHERTEXT_2, 'emptyStr'>), pk(x)>,                                    $cAEAD0)                       >,                       x)                 >,                 hkdfExpand(<$cAEAD0, h(<$cHash0, TH_2, CIPHERTEXT_2, 'emptyStr'>),                              'K_3ae'>,                            prk_3e2m),                 extAad3Outer, $cAEAD0)) @ #vk.3

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: StR2_SIG_STAT( $V, ~ltk, grx, ~yy, prk_3e2m, TH_2, CIPHERTEXT_2,               gxy, ~tid, m1, m2) ▶₀ #j
1: !PK_SIG( $U, pk(x) ) ▶₁ #j
2: !PK_STAT( $V, pkV ) ▶₂ #j
3: !KU( aeadEncrypt(<$U,                   sign(<<$U, h(<$cHash0, TH_2, CIPHERTEXT_2, 'emptyStr'>), pk(x)>,                         aeadEncrypt('emptyStr',                                    hkdfExpand(<$cAEAD0,                                                 h(<$cHash0, TH_2, CIPHERTEXT_2, 'emptyStr'>), 'K_3m'                                               >,                                               prk_3e2m),                                    <$U, h(<$cHash0, TH_2, CIPHERTEXT_2, 'emptyStr'>), pk(x)>,                                    $cAEAD0)                       >,                       x)                 >,                 hkdfExpand(<$cAEAD0, h(<$cHash0, TH_2, CIPHERTEXT_2, 'emptyStr'>),                              'K_3ae'>,                            prk_3e2m),                 extAad3Outer, $cAEAD0)) @ #vk.3

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 5 (precomputed):
    StR2_SIG_STAT( $V, ~ltk, grx, ~yy, prk_3e2m, TH_2, CIPHERTEXT_2,
                   gxy, ~tid, m1, m2
    ) ▶₀ #j
  solved goal nr. 5 (precomputed):
    StR2_SIG_STAT( $V, ~ltk, grx, ~yy, prk_3e2m, TH_2, CIPHERTEXT_2,
                   gxy, ~tid, m1, m2
    ) ▶₀ #j
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !PK_SIG( $U, pk(x) ) ▶₁ #j
1: !PK_STAT( $V, pkV ) ▶₂ #j
2: !KU( aeadEncrypt(<$U,                   sign(<                        <$U,                          h(<$cHash0.1,                             h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy>),                             <                             ($V⊕                              hkdfExpand(<$cAEAD0,                                           h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy>),                                           'K_2e', '1'>,                                         hkdfExtract('emptyStr', gxy))                             ),                              (                              aeadEncrypt('emptyStr',                                          hkdfExpand(<$cAEAD0,                                                       h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>,                                                          'g'^~yy>),                                                       'K_2m'>,                                                     hkdfExtract(hkdfExtract('emptyStr', gxy),                                                                 grx)),                                          <$V,                                            h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy>),                                            'g'^~ltk>,                                          $cAEAD0)⊕                              hkdfExpand(<$cAEAD0,                                           h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy>),                                           'K_2e', '2'>,                                         hkdfExtract('emptyStr', gxy))                             )                            >,                             'emptyStr'>),                          pk(x)>,                         aeadEncrypt('emptyStr',                                    hkdfExpand(<$cAEAD0.1,                                                 h(<$cHash0.1,                                                    h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>,                                                       'g'^~yy>),                                                    <                                                    ($V⊕                                                     hkdfExpand(<$cAEAD0,                                                                  h(<$cHash0,                                                                     <'SIG', 'STAT', $cSUITE0, gx>,                                                                     'g'^~yy>),                                                                  'K_2e', '1'>,                                                                hkdfExtract('emptyStr', gxy))                                                    ),                                                     (                                                     aeadEncrypt('emptyStr',                                                                 hkdfExpand(<$cAEAD0,                                                                              h(<$cHash0,                                                                                 <'SIG', 'STAT',                                                                                  $cSUITE0, gx>,                                                                                 'g'^~yy>),                                                                              'K_2m'>,                                                                            hkdfExtract(hkdfExtract('emptyStr',                                                                                                    gxy),                                                                                        grx)),                                                                 <$V,                                                                   h(<$cHash0,                                                                      <'SIG', 'STAT', $cSUITE0, gx>,                                                                      'g'^~yy>),                                                                   'g'^~ltk>,                                                                 $cAEAD0)⊕                                                     hkdfExpand(<$cAEAD0,                                                                  h(<$cHash0,                                                                     <'SIG', 'STAT', $cSUITE0, gx>,                                                                     'g'^~yy>),                                                                  'K_2e', '2'>,                                                                hkdfExtract('emptyStr', gxy))                                                    )                                                   >,                                                    'emptyStr'>),                                                 'K_3m'>,                                               hkdfExtract(hkdfExtract('emptyStr', gxy), grx)),                                    <$U,                                      h(<$cHash0.1,                                         h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy>),                                         <                                         ($V⊕                                          hkdfExpand(<$cAEAD0,                                                       h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>,                                                          'g'^~yy>),                                                       'K_2e', '1'>,                                                     hkdfExtract('emptyStr', gxy))                                         ),                                          (                                          aeadEncrypt('emptyStr',                                                      hkdfExpand(<$cAEAD0,                                                                   h(<$cHash0,                                                                      <'SIG', 'STAT', $cSUITE0, gx>,                                                                      'g'^~yy>),                                                                   'K_2m'>,                                                                 hkdfExtract(hkdfExtract('emptyStr',                                                                                         gxy),                                                                             grx)),                                                      <$V,                                                        h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>,                                                           'g'^~yy>),                                                        'g'^~ltk>,                                                      $cAEAD0)⊕                                          hkdfExpand(<$cAEAD0,                                                       h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>,                                                          'g'^~yy>),                                                       'K_2e', '2'>,                                                     hkdfExtract('emptyStr', gxy))                                         )                                        >,                                         'emptyStr'>),                                      pk(x)>,                                    $cAEAD0.1)                       >,                       x)                 >,                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1,                                 h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy>),                                 <                                 ($V⊕                                  hkdfExpand(<$cAEAD0,                                               h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy>),                                               'K_2e', '1'>,                                             hkdfExtract('emptyStr', gxy))                                 ),                                  (                                  aeadEncrypt('emptyStr',                                              hkdfExpand(<$cAEAD0,                                                           h(<$cHash0,                                                              <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy                                                            >),                                                           'K_2m'>,                                                         hkdfExtract(hkdfExtract('emptyStr', gxy),                                                                     grx)),                                              <$V,                                                h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy                                                 >),                                                'g'^~ltk>,                                              $cAEAD0)⊕                                  hkdfExpand(<$cAEAD0,                                               h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy>),                                               'K_2e', '2'>,                                             hkdfExtract('emptyStr', gxy))                                 )                                >,                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(hkdfExtract('emptyStr', gxy), grx)),                 extAad3Outer, $cAEAD0.1)) @ #vk.3
3: splitEqs(1)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 6 (precomputed): !PK_SIG( $U, pk(x) ) ▶₁ #j
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !PK_STAT( $V, pkV ) ▶₂ #j
1: !KU( aeadEncrypt(<$U,                   sign(<                        <$U,                          h(<$cHash0.1,                             h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy>),                             <                             ($V⊕                              hkdfExpand(<$cAEAD0,                                           h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy>),                                           'K_2e', '1'>,                                         hkdfExtract('emptyStr', gxy))                             ),                              (                              aeadEncrypt('emptyStr',                                          hkdfExpand(<$cAEAD0,                                                       h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>,                                                          'g'^~yy>),                                                       'K_2m'>,                                                     hkdfExtract(hkdfExtract('emptyStr', gxy),                                                                 grx)),                                          <$V,                                            h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy>),                                            'g'^~ltk>,                                          $cAEAD0)⊕                              hkdfExpand(<$cAEAD0,                                           h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy>),                                           'K_2e', '2'>,                                         hkdfExtract('emptyStr', gxy))                             )                            >,                             'emptyStr'>),                          pk(~ltk.1)>,                         aeadEncrypt('emptyStr',                                    hkdfExpand(<$cAEAD0.1,                                                 h(<$cHash0.1,                                                    h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>,                                                       'g'^~yy>),                                                    <                                                    ($V⊕                                                     hkdfExpand(<$cAEAD0,                                                                  h(<$cHash0,                                                                     <'SIG', 'STAT', $cSUITE0, gx>,                                                                     'g'^~yy>),                                                                  'K_2e', '1'>,                                                                hkdfExtract('emptyStr', gxy))                                                    ),                                                     (                                                     aeadEncrypt('emptyStr',                                                                 hkdfExpand(<$cAEAD0,                                                                              h(<$cHash0,                                                                                 <'SIG', 'STAT',                                                                                  $cSUITE0, gx>,                                                                                 'g'^~yy>),                                                                              'K_2m'>,                                                                            hkdfExtract(hkdfExtract('emptyStr',                                                                                                    gxy),                                                                                        grx)),                                                                 <$V,                                                                   h(<$cHash0,                                                                      <'SIG', 'STAT', $cSUITE0, gx>,                                                                      'g'^~yy>),                                                                   'g'^~ltk>,                                                                 $cAEAD0)⊕                                                     hkdfExpand(<$cAEAD0,                                                                  h(<$cHash0,                                                                     <'SIG', 'STAT', $cSUITE0, gx>,                                                                     'g'^~yy>),                                                                  'K_2e', '2'>,                                                                hkdfExtract('emptyStr', gxy))                                                    )                                                   >,                                                    'emptyStr'>),                                                 'K_3m'>,                                               hkdfExtract(hkdfExtract('emptyStr', gxy), grx)),                                    <$U,                                      h(<$cHash0.1,                                         h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy>),                                         <                                         ($V⊕                                          hkdfExpand(<$cAEAD0,                                                       h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>,                                                          'g'^~yy>),                                                       'K_2e', '1'>,                                                     hkdfExtract('emptyStr', gxy))                                         ),                                          (                                          aeadEncrypt('emptyStr',                                                      hkdfExpand(<$cAEAD0,                                                                   h(<$cHash0,                                                                      <'SIG', 'STAT', $cSUITE0, gx>,                                                                      'g'^~yy>),                                                                   'K_2m'>,                                                                 hkdfExtract(hkdfExtract('emptyStr',                                                                                         gxy),                                                                             grx)),                                                      <$V,                                                        h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>,                                                           'g'^~yy>),                                                        'g'^~ltk>,                                                      $cAEAD0)⊕                                          hkdfExpand(<$cAEAD0,                                                       h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>,                                                          'g'^~yy>),                                                       'K_2e', '2'>,                                                     hkdfExtract('emptyStr', gxy))                                         )                                        >,                                         'emptyStr'>),                                      pk(~ltk.1)>,                                    $cAEAD0.1)                       >,                       ~ltk.1)                 >,                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1,                                 h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy>),                                 <                                 ($V⊕                                  hkdfExpand(<$cAEAD0,                                               h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy>),                                               'K_2e', '1'>,                                             hkdfExtract('emptyStr', gxy))                                 ),                                  (                                  aeadEncrypt('emptyStr',                                              hkdfExpand(<$cAEAD0,                                                           h(<$cHash0,                                                              <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy                                                            >),                                                           'K_2m'>,                                                         hkdfExtract(hkdfExtract('emptyStr', gxy),                                                                     grx)),                                              <$V,                                                h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy                                                 >),                                                'g'^~ltk>,                                              $cAEAD0)⊕                                  hkdfExpand(<$cAEAD0,                                               h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy>),                                               'K_2e', '2'>,                                             hkdfExtract('emptyStr', gxy))                                 )                                >,                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(hkdfExtract('emptyStr', gxy), grx)),                 extAad3Outer, $cAEAD0.1)) @ #vk.3
2: splitEqs(1)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 7 (precomputed): !PK_STAT( $V, pkV ) ▶₂ #j
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( aeadEncrypt(<$U,                   sign(<                        <$U,                          h(<$cHash0.1,                             h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy>),                             <                             ($V⊕                              hkdfExpand(<$cAEAD0,                                           h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy>),                                           'K_2e', '1'>,                                         hkdfExtract('emptyStr', gxy))                             ),                              (                              aeadEncrypt('emptyStr',                                          hkdfExpand(<$cAEAD0,                                                       h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>,                                                          'g'^~yy>),                                                       'K_2m'>,                                                     hkdfExtract(hkdfExtract('emptyStr', gxy),                                                                 grx)),                                          <$V,                                            h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy>),                                            'g'^~ltk>,                                          $cAEAD0)⊕                              hkdfExpand(<$cAEAD0,                                           h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy>),                                           'K_2e', '2'>,                                         hkdfExtract('emptyStr', gxy))                             )                            >,                             'emptyStr'>),                          pk(~ltk.1)>,                         aeadEncrypt('emptyStr',                                    hkdfExpand(<$cAEAD0.1,                                                 h(<$cHash0.1,                                                    h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>,                                                       'g'^~yy>),                                                    <                                                    ($V⊕                                                     hkdfExpand(<$cAEAD0,                                                                  h(<$cHash0,                                                                     <'SIG', 'STAT', $cSUITE0, gx>,                                                                     'g'^~yy>),                                                                  'K_2e', '1'>,                                                                hkdfExtract('emptyStr', gxy))                                                    ),                                                     (                                                     aeadEncrypt('emptyStr',                                                                 hkdfExpand(<$cAEAD0,                                                                              h(<$cHash0,                                                                                 <'SIG', 'STAT',                                                                                  $cSUITE0, gx>,                                                                                 'g'^~yy>),                                                                              'K_2m'>,                                                                            hkdfExtract(hkdfExtract('emptyStr',                                                                                                    gxy),                                                                                        grx)),                                                                 <$V,                                                                   h(<$cHash0,                                                                      <'SIG', 'STAT', $cSUITE0, gx>,                                                                      'g'^~yy>),                                                                   'g'^~ltk>,                                                                 $cAEAD0)⊕                                                     hkdfExpand(<$cAEAD0,                                                                  h(<$cHash0,                                                                     <'SIG', 'STAT', $cSUITE0, gx>,                                                                     'g'^~yy>),                                                                  'K_2e', '2'>,                                                                hkdfExtract('emptyStr', gxy))                                                    )                                                   >,                                                    'emptyStr'>),                                                 'K_3m'>,                                               hkdfExtract(hkdfExtract('emptyStr', gxy), grx)),                                    <$U,                                      h(<$cHash0.1,                                         h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy>),                                         <                                         ($V⊕                                          hkdfExpand(<$cAEAD0,                                                       h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>,                                                          'g'^~yy>),                                                       'K_2e', '1'>,                                                     hkdfExtract('emptyStr', gxy))                                         ),                                          (                                          aeadEncrypt('emptyStr',                                                      hkdfExpand(<$cAEAD0,                                                                   h(<$cHash0,                                                                      <'SIG', 'STAT', $cSUITE0, gx>,                                                                      'g'^~yy>),                                                                   'K_2m'>,                                                                 hkdfExtract(hkdfExtract('emptyStr',                                                                                         gxy),                                                                             grx)),                                                      <$V,                                                        h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>,                                                           'g'^~yy>),                                                        'g'^~ltk>,                                                      $cAEAD0)⊕                                          hkdfExpand(<$cAEAD0,                                                       h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>,                                                          'g'^~yy>),                                                       'K_2e', '2'>,                                                     hkdfExtract('emptyStr', gxy))                                         )                                        >,                                         'emptyStr'>),                                      pk(~ltk.1)>,                                    $cAEAD0.1)                       >,                       ~ltk.1)                 >,                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1,                                 h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy>),                                 <                                 ($V⊕                                  hkdfExpand(<$cAEAD0,                                               h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy>),                                               'K_2e', '1'>,                                             hkdfExtract('emptyStr', gxy))                                 ),                                  (                                  aeadEncrypt('emptyStr',                                              hkdfExpand(<$cAEAD0,                                                           h(<$cHash0,                                                              <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy                                                            >),                                                           'K_2m'>,                                                         hkdfExtract(hkdfExtract('emptyStr', gxy),                                                                     grx)),                                              <$V,                                                h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy                                                 >),                                                'g'^~ltk>,                                              $cAEAD0)⊕                                  hkdfExpand(<$cAEAD0,                                               h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy>),                                               'K_2e', '2'>,                                             hkdfExtract('emptyStr', gxy))                                 )                                >,                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(hkdfExtract('emptyStr', gxy), grx)),                 extAad3Outer, $cAEAD0.1)) @ #vk.3
1: splitEqs(1)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 10 (precomputed):
    !KU( aeadEncrypt(<$U, 
                      sign(<
                            <$U, 
                             h(<$cHash0.1, 
                                h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy>), 
                                <
                                 ($V⊕
                                  hkdfExpand(<$cAEAD0, 
                                              h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy>), 
                                              'K_2e', '1'>,
                                             hkdfExtract('emptyStr', gxy))
                                 ), 
                                 (
                                  aeadEncrypt('emptyStr',
                                              hkdfExpand(<$cAEAD0, 
                                                          h(<$cHash0, 
                                                             <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy
                                                            >), 
                                                          'K_2m'>,
                                                         hkdfExtract(hkdfExtract('emptyStr', gxy),
                                                                     grx)),
                                              <$V, 
                                               h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy
                                                 >), 
                                               'g'^~ltk>,
                                              $cAEAD0)⊕
                                  hkdfExpand(<$cAEAD0, 
                                              h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy>), 
                                              'K_2e', '2'>,
                                             hkdfExtract('emptyStr', gxy))
                                 )
                                >, 
                                'emptyStr'>), 
                             pk(~ltk.1)>, 
                            aeadEncrypt('emptyStr',
                                        hkdfExpand(<$cAEAD0.1, 
                                                    h(<$cHash0.1, 
                                                       h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 
                                                          'g'^~yy>), 
                                                       <
                                                        ($V⊕
                                                         hkdfExpand(<$cAEAD0, 
                                                                     h(<$cHash0, 
                                                                        <'SIG', 'STAT', $cSUITE0, gx
                                                                        >, 
                                                                        'g'^~yy>), 
                                                                     'K_2e', '1'>,
                                                                    hkdfExtract('emptyStr', gxy))
                                                        ), 
                                                        (
                                                         aeadEncrypt('emptyStr',
                                                                     hkdfExpand(<$cAEAD0, 
                                                                                 h(<$cHash0, 
                                                                                    <'SIG', 'STAT', 
                                                                                     $cSUITE0, gx>, 
                                                                                    'g'^~yy>), 
                                                                                 'K_2m'>,
                                                                                hkdfExtract(hkdfExtract('emptyStr',
                                                                                                        gxy),
                                                                                            grx)),
                                                                     <$V, 
                                                                      h(<$cHash0, 
                                                                         <'SIG', 'STAT', $cSUITE0, 
                                                                          gx>, 
                                                                         'g'^~yy>), 
                                                                      'g'^~ltk>,
                                                                     $cAEAD0)⊕
                                                         hkdfExpand(<$cAEAD0, 
                                                                     h(<$cHash0, 
                                                                        <'SIG', 'STAT', $cSUITE0, gx
                                                                        >, 
                                                                        'g'^~yy>), 
                                                                     'K_2e', '2'>,
                                                                    hkdfExtract('emptyStr', gxy))
                                                        )
                                                       >, 
                                                       'emptyStr'>), 
                                                    'K_3m'>,
                                                   hkdfExtract(hkdfExtract('emptyStr', gxy), grx)),
                                        <$U, 
                                         h(<$cHash0.1, 
                                            h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy>), 
                                            <
                                             ($V⊕
                                              hkdfExpand(<$cAEAD0, 
                                                          h(<$cHash0, 
                                                             <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy
                                                            >), 
                                                          'K_2e', '1'>,
                                                         hkdfExtract('emptyStr', gxy))
                                             ), 
                                             (
                                              aeadEncrypt('emptyStr',
                                                          hkdfExpand(<$cAEAD0, 
                                                                      h(<$cHash0, 
                                                                         <'SIG', 'STAT', $cSUITE0, 
                                                                          gx>, 
                                                                         'g'^~yy>), 
                                                                      'K_2m'>,
                                                                     hkdfExtract(hkdfExtract('emptyStr',
                                                                                             gxy),
                                                                                 grx)),
                                                          <$V, 
                                                           h(<$cHash0, 
                                                              <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy
                                                             >), 
                                                           'g'^~ltk>,
                                                          $cAEAD0)⊕
                                              hkdfExpand(<$cAEAD0, 
                                                          h(<$cHash0, 
                                                             <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy
                                                            >), 
                                                          'K_2e', '2'>,
                                                         hkdfExtract('emptyStr', gxy))
                                             )
                                            >, 
                                            'emptyStr'>), 
                                         pk(~ltk.1)>,
                                        $cAEAD0.1)
                           >,
                           ~ltk.1)
                     >,
                     hkdfExpand(<$cAEAD0.1, 
                                 h(<$cHash0.1, 
                                    h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy>), 
                                    <
                                     ($V⊕
                                      hkdfExpand(<$cAEAD0, 
                                                  h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy
                                                    >), 
                                                  'K_2e', '1'>,
                                                 hkdfExtract('emptyStr', gxy))
                                     ), 
                                     (
                                      aeadEncrypt('emptyStr',
                                                  hkdfExpand(<$cAEAD0, 
                                                              h(<$cHash0, 
                                                                 <'SIG', 'STAT', $cSUITE0, gx>, 
                                                                 'g'^~yy>), 
                                                              'K_2m'>,
                                                             hkdfExtract(hkdfExtract('emptyStr',
                                                                                     gxy),
                                                                         grx)),
                                                  <$V, 
                                                   h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 
                                                      'g'^~yy>), 
                                                   'g'^~ltk>,
                                                  $cAEAD0)⊕
                                      hkdfExpand(<$cAEAD0, 
                                                  h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy
                                                    >), 
                                                  'K_2e', '2'>,
                                                 hkdfExtract('emptyStr', gxy))
                                     )
                                    >, 
                                    'emptyStr'>), 
                                 'K_3ae'>,
                                hkdfExtract(hkdfExtract('emptyStr', gxy), grx)),
                     extAad3Outer, $cAEAD0.1)
    ) @ #vk.3
  simplified formula:
      "((last(#vr.19)) ∨
        (last(#i)) ∨
        (∃ #l. (LTKRev( $U ) @ #l) ∧ (¬(last(#l))) ∧ (#l < #vr.19)) ∨
        (∃ #l. (LTKRev( $V ) @ #l) ∧ (¬(last(#l))) ∧ (#l < #vr.19)) ∨
        (∃ #l.
          (SKRev( <'g'^(~yy*~xx.13), 'g'^(~ltk*~xx.13)> ) @ #l)
         ∧
          ¬(last(#l))))"
    to
      "((∃ #l. (LTKRev( $U ) @ #l) ∧ (¬(last(#l))) ∧ (#l < #vr.19)) ∨
        (∃ #l. (LTKRev( $V ) @ #l) ∧ (¬(last(#l))) ∧ (#l < #vr.19)) ∨
        (∃ #l.
          (SKRev( <'g'^(~yy*~xx.13), 'g'^(~ltk*~xx.13)> ) @ #l)
         ∧
          ¬(last(#l))))"
  solved goal nr. 41 (simplified):
     (last(#vr.19))  ∥ (last(#i))  ∥
     (∃ #l. (LTKRev( $U ) @ #l) ∧ (¬(last(#l))) ∧ (#l < #vr.19))  ∥
     (∃ #l. (LTKRev( $V ) @ #l) ∧ (¬(last(#l))) ∧ (#l < #vr.19))  ∥
     (∃ #l.
       (SKRev( <'g'^(~yy*~xx.13), 'g'^(~ltk*~xx.13)> ) @ #l)
      ∧
       ¬(last(#l)))
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !PK_SIG( $U, pk(x) ) ▶₁ #j
1: !PK_STAT( $V, pkV ) ▶₂ #j
2: !KU( aeadEncrypt(<$U,                   sign(<                        <$U,                          h(<$cHash0.1,                             h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy>),                             <                             ($V⊕                              hkdfExpand(<$cAEAD0,                                           h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy>),                                           'K_2e', '1'>,                                         hkdfExtract('emptyStr', gxy))                             ),                              (                              aeadEncrypt('emptyStr',                                          hkdfExpand(<$cAEAD0,                                                       h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>,                                                          'g'^~yy>),                                                       'K_2m'>,                                                     hkdfExtract(hkdfExtract('emptyStr', gxy),                                                                 grx)),                                          <$V,                                            h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy>),                                            'g'^~ltk>,                                          $cAEAD0)⊕                              hkdfExpand(<$cAEAD0,                                           h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy>),                                           'K_2e', '2'>,                                         hkdfExtract('emptyStr', gxy))                             )                            >,                             'emptyStr'>),                          pk(x)>,                         aeadEncrypt('emptyStr',                                    hkdfExpand(<$cAEAD0.1,                                                 h(<$cHash0.1,                                                    h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>,                                                       'g'^~yy>),                                                    <                                                    ($V⊕                                                     hkdfExpand(<$cAEAD0,                                                                  h(<$cHash0,                                                                     <'SIG', 'STAT', $cSUITE0, gx>,                                                                     'g'^~yy>),                                                                  'K_2e', '1'>,                                                                hkdfExtract('emptyStr', gxy))                                                    ),                                                     (                                                     aeadEncrypt('emptyStr',                                                                 hkdfExpand(<$cAEAD0,                                                                              h(<$cHash0,                                                                                 <'SIG', 'STAT',                                                                                  $cSUITE0, gx>,                                                                                 'g'^~yy>),                                                                              'K_2m'>,                                                                            hkdfExtract(hkdfExtract('emptyStr',                                                                                                    gxy),                                                                                        grx)),                                                                 <$V,                                                                   h(<$cHash0,                                                                      <'SIG', 'STAT', $cSUITE0, gx>,                                                                      'g'^~yy>),                                                                   'g'^~ltk>,                                                                 $cAEAD0)⊕                                                     hkdfExpand(<$cAEAD0,                                                                  h(<$cHash0,                                                                     <'SIG', 'STAT', $cSUITE0, gx>,                                                                     'g'^~yy>),                                                                  'K_2e', '2'>,                                                                hkdfExtract('emptyStr', gxy))                                                    )                                                   >,                                                    'emptyStr'>),                                                 'K_3m'>,                                               hkdfExtract(hkdfExtract('emptyStr', gxy), grx)),                                    <$U,                                      h(<$cHash0.1,                                         h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy>),                                         <                                         ($V⊕                                          hkdfExpand(<$cAEAD0,                                                       h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>,                                                          'g'^~yy>),                                                       'K_2e', '1'>,                                                     hkdfExtract('emptyStr', gxy))                                         ),                                          (                                          aeadEncrypt('emptyStr',                                                      hkdfExpand(<$cAEAD0,                                                                   h(<$cHash0,                                                                      <'SIG', 'STAT', $cSUITE0, gx>,                                                                      'g'^~yy>),                                                                   'K_2m'>,                                                                 hkdfExtract(hkdfExtract('emptyStr',                                                                                         gxy),                                                                             grx)),                                                      <$V,                                                        h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>,                                                           'g'^~yy>),                                                        'g'^~ltk>,                                                      $cAEAD0)⊕                                          hkdfExpand(<$cAEAD0,                                                       h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>,                                                          'g'^~yy>),                                                       'K_2e', '2'>,                                                     hkdfExtract('emptyStr', gxy))                                         )                                        >,                                         'emptyStr'>),                                      pk(x)>,                                    $cAEAD0.1)                       >,                       x)                 >,                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1,                                 h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy>),                                 <                                 ($V⊕                                  hkdfExpand(<$cAEAD0,                                               h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy>),                                               'K_2e', '1'>,                                             hkdfExtract('emptyStr', gxy))                                 ),                                  (                                  aeadEncrypt('emptyStr',                                              hkdfExpand(<$cAEAD0,                                                           h(<$cHash0,                                                              <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy                                                            >),                                                           'K_2m'>,                                                         hkdfExtract(hkdfExtract('emptyStr', gxy),                                                                     grx)),                                              <$V,                                                h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy                                                 >),                                                'g'^~ltk>,                                              $cAEAD0)⊕                                  hkdfExpand(<$cAEAD0,                                               h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy>),                                               'K_2e', '2'>,                                             hkdfExtract('emptyStr', gxy))                                 )                                >,                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(hkdfExtract('emptyStr', gxy), grx)),                 extAad3Outer, $cAEAD0.1)) @ #vk.3
3: splitEqs(1)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 6 (precomputed): !PK_SIG( $U, pk(x) ) ▶₁ #j
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !PK_STAT( $V, pkV ) ▶₂ #j
1: !KU( aeadEncrypt(<$U,                   sign(<                        <$U,                          h(<$cHash0.1,                             h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy>),                             <                             ($V⊕                              hkdfExpand(<$cAEAD0,                                           h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy>),                                           'K_2e', '1'>,                                         hkdfExtract('emptyStr', gxy))                             ),                              (                              aeadEncrypt('emptyStr',                                          hkdfExpand(<$cAEAD0,                                                       h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>,                                                          'g'^~yy>),                                                       'K_2m'>,                                                     hkdfExtract(hkdfExtract('emptyStr', gxy),                                                                 grx)),                                          <$V,                                            h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy>),                                            'g'^~ltk>,                                          $cAEAD0)⊕                              hkdfExpand(<$cAEAD0,                                           h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy>),                                           'K_2e', '2'>,                                         hkdfExtract('emptyStr', gxy))                             )                            >,                             'emptyStr'>),                          pk(~ltk.1)>,                         aeadEncrypt('emptyStr',                                    hkdfExpand(<$cAEAD0.1,                                                 h(<$cHash0.1,                                                    h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>,                                                       'g'^~yy>),                                                    <                                                    ($V⊕                                                     hkdfExpand(<$cAEAD0,                                                                  h(<$cHash0,                                                                     <'SIG', 'STAT', $cSUITE0, gx>,                                                                     'g'^~yy>),                                                                  'K_2e', '1'>,                                                                hkdfExtract('emptyStr', gxy))                                                    ),                                                     (                                                     aeadEncrypt('emptyStr',                                                                 hkdfExpand(<$cAEAD0,                                                                              h(<$cHash0,                                                                                 <'SIG', 'STAT',                                                                                  $cSUITE0, gx>,                                                                                 'g'^~yy>),                                                                              'K_2m'>,                                                                            hkdfExtract(hkdfExtract('emptyStr',                                                                                                    gxy),                                                                                        grx)),                                                                 <$V,                                                                   h(<$cHash0,                                                                      <'SIG', 'STAT', $cSUITE0, gx>,                                                                      'g'^~yy>),                                                                   'g'^~ltk>,                                                                 $cAEAD0)⊕                                                     hkdfExpand(<$cAEAD0,                                                                  h(<$cHash0,                                                                     <'SIG', 'STAT', $cSUITE0, gx>,                                                                     'g'^~yy>),                                                                  'K_2e', '2'>,                                                                hkdfExtract('emptyStr', gxy))                                                    )                                                   >,                                                    'emptyStr'>),                                                 'K_3m'>,                                               hkdfExtract(hkdfExtract('emptyStr', gxy), grx)),                                    <$U,                                      h(<$cHash0.1,                                         h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy>),                                         <                                         ($V⊕                                          hkdfExpand(<$cAEAD0,                                                       h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>,                                                          'g'^~yy>),                                                       'K_2e', '1'>,                                                     hkdfExtract('emptyStr', gxy))                                         ),                                          (                                          aeadEncrypt('emptyStr',                                                      hkdfExpand(<$cAEAD0,                                                                   h(<$cHash0,                                                                      <'SIG', 'STAT', $cSUITE0, gx>,                                                                      'g'^~yy>),                                                                   'K_2m'>,                                                                 hkdfExtract(hkdfExtract('emptyStr',                                                                                         gxy),                                                                             grx)),                                                      <$V,                                                        h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>,                                                           'g'^~yy>),                                                        'g'^~ltk>,                                                      $cAEAD0)⊕                                          hkdfExpand(<$cAEAD0,                                                       h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>,                                                          'g'^~yy>),                                                       'K_2e', '2'>,                                                     hkdfExtract('emptyStr', gxy))                                         )                                        >,                                         'emptyStr'>),                                      pk(~ltk.1)>,                                    $cAEAD0.1)                       >,                       ~ltk.1)                 >,                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1,                                 h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy>),                                 <                                 ($V⊕                                  hkdfExpand(<$cAEAD0,                                               h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy>),                                               'K_2e', '1'>,                                             hkdfExtract('emptyStr', gxy))                                 ),                                  (                                  aeadEncrypt('emptyStr',                                              hkdfExpand(<$cAEAD0,                                                           h(<$cHash0,                                                              <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy                                                            >),                                                           'K_2m'>,                                                         hkdfExtract(hkdfExtract('emptyStr', gxy),                                                                     grx)),                                              <$V,                                                h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy                                                 >),                                                'g'^~ltk>,                                              $cAEAD0)⊕                                  hkdfExpand(<$cAEAD0,                                               h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy>),                                               'K_2e', '2'>,                                             hkdfExtract('emptyStr', gxy))                                 )                                >,                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(hkdfExtract('emptyStr', gxy), grx)),                 extAad3Outer, $cAEAD0.1)) @ #vk.3
2: splitEqs(1)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 7 (precomputed): !PK_STAT( $V, pkV ) ▶₂ #j
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( aeadEncrypt(<$U,                   sign(<                        <$U,                          h(<$cHash0.1,                             h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy>),                             <                             ($V⊕                              hkdfExpand(<$cAEAD0,                                           h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy>),                                           'K_2e', '1'>,                                         hkdfExtract('emptyStr', gxy))                             ),                              (                              aeadEncrypt('emptyStr',                                          hkdfExpand(<$cAEAD0,                                                       h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>,                                                          'g'^~yy>),                                                       'K_2m'>,                                                     hkdfExtract(hkdfExtract('emptyStr', gxy),                                                                 grx)),                                          <$V,                                            h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy>),                                            'g'^~ltk>,                                          $cAEAD0)⊕                              hkdfExpand(<$cAEAD0,                                           h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy>),                                           'K_2e', '2'>,                                         hkdfExtract('emptyStr', gxy))                             )                            >,                             'emptyStr'>),                          pk(~ltk.1)>,                         aeadEncrypt('emptyStr',                                    hkdfExpand(<$cAEAD0.1,                                                 h(<$cHash0.1,                                                    h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>,                                                       'g'^~yy>),                                                    <                                                    ($V⊕                                                     hkdfExpand(<$cAEAD0,                                                                  h(<$cHash0,                                                                     <'SIG', 'STAT', $cSUITE0, gx>,                                                                     'g'^~yy>),                                                                  'K_2e', '1'>,                                                                hkdfExtract('emptyStr', gxy))                                                    ),                                                     (                                                     aeadEncrypt('emptyStr',                                                                 hkdfExpand(<$cAEAD0,                                                                              h(<$cHash0,                                                                                 <'SIG', 'STAT',                                                                                  $cSUITE0, gx>,                                                                                 'g'^~yy>),                                                                              'K_2m'>,                                                                            hkdfExtract(hkdfExtract('emptyStr',                                                                                                    gxy),                                                                                        grx)),                                                                 <$V,                                                                   h(<$cHash0,                                                                      <'SIG', 'STAT', $cSUITE0, gx>,                                                                      'g'^~yy>),                                                                   'g'^~ltk>,                                                                 $cAEAD0)⊕                                                     hkdfExpand(<$cAEAD0,                                                                  h(<$cHash0,                                                                     <'SIG', 'STAT', $cSUITE0, gx>,                                                                     'g'^~yy>),                                                                  'K_2e', '2'>,                                                                hkdfExtract('emptyStr', gxy))                                                    )                                                   >,                                                    'emptyStr'>),                                                 'K_3m'>,                                               hkdfExtract(hkdfExtract('emptyStr', gxy), grx)),                                    <$U,                                      h(<$cHash0.1,                                         h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy>),                                         <                                         ($V⊕                                          hkdfExpand(<$cAEAD0,                                                       h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>,                                                          'g'^~yy>),                                                       'K_2e', '1'>,                                                     hkdfExtract('emptyStr', gxy))                                         ),                                          (                                          aeadEncrypt('emptyStr',                                                      hkdfExpand(<$cAEAD0,                                                                   h(<$cHash0,                                                                      <'SIG', 'STAT', $cSUITE0, gx>,                                                                      'g'^~yy>),                                                                   'K_2m'>,                                                                 hkdfExtract(hkdfExtract('emptyStr',                                                                                         gxy),                                                                             grx)),                                                      <$V,                                                        h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>,                                                           'g'^~yy>),                                                        'g'^~ltk>,                                                      $cAEAD0)⊕                                          hkdfExpand(<$cAEAD0,                                                       h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>,                                                          'g'^~yy>),                                                       'K_2e', '2'>,                                                     hkdfExtract('emptyStr', gxy))                                         )                                        >,                                         'emptyStr'>),                                      pk(~ltk.1)>,                                    $cAEAD0.1)                       >,                       ~ltk.1)                 >,                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1,                                 h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy>),                                 <                                 ($V⊕                                  hkdfExpand(<$cAEAD0,                                               h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy>),                                               'K_2e', '1'>,                                             hkdfExtract('emptyStr', gxy))                                 ),                                  (                                  aeadEncrypt('emptyStr',                                              hkdfExpand(<$cAEAD0,                                                           h(<$cHash0,                                                              <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy                                                            >),                                                           'K_2m'>,                                                         hkdfExtract(hkdfExtract('emptyStr', gxy),                                                                     grx)),                                              <$V,                                                h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy                                                 >),                                                'g'^~ltk>,                                              $cAEAD0)⊕                                  hkdfExpand(<$cAEAD0,                                               h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy>),                                               'K_2e', '2'>,                                             hkdfExtract('emptyStr', gxy))                                 )                                >,                                 'emptyStr'>),                              'K_3ae'>,                            hkdfExtract(hkdfExtract('emptyStr', gxy), grx)),                 extAad3Outer, $cAEAD0.1)) @ #vk.3
1: splitEqs(1)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 10 (precomputed):
    !KU( aeadEncrypt(<$U, 
                      sign(<
                            <$U, 
                             h(<$cHash0.1, 
                                h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy>), 
                                <
                                 ($V⊕
                                  hkdfExpand(<$cAEAD0, 
                                              h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy>), 
                                              'K_2e', '1'>,
                                             hkdfExtract('emptyStr', gxy))
                                 ), 
                                 (
                                  aeadEncrypt('emptyStr',
                                              hkdfExpand(<$cAEAD0, 
                                                          h(<$cHash0, 
                                                             <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy
                                                            >), 
                                                          'K_2m'>,
                                                         hkdfExtract(hkdfExtract('emptyStr', gxy),
                                                                     grx)),
                                              <$V, 
                                               h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy
                                                 >), 
                                               'g'^~ltk>,
                                              $cAEAD0)⊕
                                  hkdfExpand(<$cAEAD0, 
                                              h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy>), 
                                              'K_2e', '2'>,
                                             hkdfExtract('emptyStr', gxy))
                                 )
                                >, 
                                'emptyStr'>), 
                             pk(~ltk.1)>, 
                            aeadEncrypt('emptyStr',
                                        hkdfExpand(<$cAEAD0.1, 
                                                    h(<$cHash0.1, 
                                                       h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 
                                                          'g'^~yy>), 
                                                       <
                                                        ($V⊕
                                                         hkdfExpand(<$cAEAD0, 
                                                                     h(<$cHash0, 
                                                                        <'SIG', 'STAT', $cSUITE0, gx
                                                                        >, 
                                                                        'g'^~yy>), 
                                                                     'K_2e', '1'>,
                                                                    hkdfExtract('emptyStr', gxy))
                                                        ), 
                                                        (
                                                         aeadEncrypt('emptyStr',
                                                                     hkdfExpand(<$cAEAD0, 
                                                                                 h(<$cHash0, 
                                                                                    <'SIG', 'STAT', 
                                                                                     $cSUITE0, gx>, 
                                                                                    'g'^~yy>), 
                                                                                 'K_2m'>,
                                                                                hkdfExtract(hkdfExtract('emptyStr',
                                                                                                        gxy),
                                                                                            grx)),
                                                                     <$V, 
                                                                      h(<$cHash0, 
                                                                         <'SIG', 'STAT', $cSUITE0, 
                                                                          gx>, 
                                                                         'g'^~yy>), 
                                                                      'g'^~ltk>,
                                                                     $cAEAD0)⊕
                                                         hkdfExpand(<$cAEAD0, 
                                                                     h(<$cHash0, 
                                                                        <'SIG', 'STAT', $cSUITE0, gx
                                                                        >, 
                                                                        'g'^~yy>), 
                                                                     'K_2e', '2'>,
                                                                    hkdfExtract('emptyStr', gxy))
                                                        )
                                                       >, 
                                                       'emptyStr'>), 
                                                    'K_3m'>,
                                                   hkdfExtract(hkdfExtract('emptyStr', gxy), grx)),
                                        <$U, 
                                         h(<$cHash0.1, 
                                            h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy>), 
                                            <
                                             ($V⊕
                                              hkdfExpand(<$cAEAD0, 
                                                          h(<$cHash0, 
                                                             <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy
                                                            >), 
                                                          'K_2e', '1'>,
                                                         hkdfExtract('emptyStr', gxy))
                                             ), 
                                             (
                                              aeadEncrypt('emptyStr',
                                                          hkdfExpand(<$cAEAD0, 
                                                                      h(<$cHash0, 
                                                                         <'SIG', 'STAT', $cSUITE0, 
                                                                          gx>, 
                                                                         'g'^~yy>), 
                                                                      'K_2m'>,
                                                                     hkdfExtract(hkdfExtract('emptyStr',
                                                                                             gxy),
                                                                                 grx)),
                                                          <$V, 
                                                           h(<$cHash0, 
                                                              <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy
                                                             >), 
                                                           'g'^~ltk>,
                                                          $cAEAD0)⊕
                                              hkdfExpand(<$cAEAD0, 
                                                          h(<$cHash0, 
                                                             <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy
                                                            >), 
                                                          'K_2e', '2'>,
                                                         hkdfExtract('emptyStr', gxy))
                                             )
                                            >, 
                                            'emptyStr'>), 
                                         pk(~ltk.1)>,
                                        $cAEAD0.1)
                           >,
                           ~ltk.1)
                     >,
                     hkdfExpand(<$cAEAD0.1, 
                                 h(<$cHash0.1, 
                                    h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy>), 
                                    <
                                     ($V⊕
                                      hkdfExpand(<$cAEAD0, 
                                                  h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy
                                                    >), 
                                                  'K_2e', '1'>,
                                                 hkdfExtract('emptyStr', gxy))
                                     ), 
                                     (
                                      aeadEncrypt('emptyStr',
                                                  hkdfExpand(<$cAEAD0, 
                                                              h(<$cHash0, 
                                                                 <'SIG', 'STAT', $cSUITE0, gx>, 
                                                                 'g'^~yy>), 
                                                              'K_2m'>,
                                                             hkdfExtract(hkdfExtract('emptyStr',
                                                                                     gxy),
                                                                         grx)),
                                                  <$V, 
                                                   h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 
                                                      'g'^~yy>), 
                                                   'g'^~ltk>,
                                                  $cAEAD0)⊕
                                      hkdfExpand(<$cAEAD0, 
                                                  h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy
                                                    >), 
                                                  'K_2e', '2'>,
                                                 hkdfExtract('emptyStr', gxy))
                                     )
                                    >, 
                                    'emptyStr'>), 
                                 'K_3ae'>,
                                hkdfExtract(hkdfExtract('emptyStr', gxy), grx)),
                     extAad3Outer, $cAEAD0.1)
    ) @ #vk.3
  simplified formula:
      "((last(#vr.19)) ∨
        (last(#i)) ∨
        (∃ #l. (LTKRev( $U ) @ #l) ∧ (¬(last(#l))) ∧ (#l < #vr.19)) ∨
        (∃ #l. (LTKRev( $V ) @ #l) ∧ (¬(last(#l))) ∧ (#l < #vr.19)) ∨
        (∃ #l.
          (SKRev( <'g'^(~yy*~xx.13), 'g'^(~ltk*~xx.13)> ) @ #l)
         ∧
          ¬(last(#l))))"
    to
      "⊤"
  solved goal nr. 41 (simplified):
     (last(#vr.19))  ∥ (last(#i))  ∥
     (∃ #l. (LTKRev( $U ) @ #l) ∧ (¬(last(#l))) ∧ (#l < #vr.19))  ∥
     (∃ #l. (LTKRev( $V ) @ #l) ∧ (¬(last(#l))) ∧ (#l < #vr.19))  ∥
     (∃ #l.
       (SKRev( <'g'^(~yy*~xx.13), 'g'^(~ltk*~xx.13)> ) @ #l)
      ∧
       ¬(last(#l)))
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~ltk ) @ #vk.10
1: !KU( ~xx ) @ #vk.11
2: !KU( ($V⊕      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.5
3: !KU( (      aeadEncrypt('emptyStr',                  hkdfExpand(<$cAEAD0,                               h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                             hkdfExtract(hkdfExtract('emptyStr', z), 'g'^(~ltk*~xx))),                  <$V, h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'g'^~ltk                  >,                  $cAEAD0)⊕      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.6
4: splitEqs(0)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 26 (precomputed): !KU( ~ltk ) @ #vk.10
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~ltk ) @ #vk.8
1: !KU( ($V⊕      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.5
2: !KU( (      aeadEncrypt('emptyStr',                  hkdfExpand(<$cAEAD0,                               h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                             hkdfExtract(hkdfExtract('emptyStr', z), 'g'^(~ltk*~xx))),                  <$V, h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'g'^~ltk                  >,                  $cAEAD0)⊕      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.6
3: splitEqs(0)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 24 (precomputed): !KU( ~ltk ) @ #vk.8
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.8
1: !KU( ($V⊕      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.5
2: !KU( (      aeadEncrypt('emptyStr',                  hkdfExpand(<$cAEAD0,                               h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                             hkdfExtract(hkdfExtract('emptyStr', z), 'g'^(~ltk*~xx))),                  <$V, h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'g'^~ltk                  >,                  $cAEAD0)⊕      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.6
3: splitEqs(0)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 24 (precomputed): !KU( ~xx ) @ #vk.8
  simplified formula:
      "((#vr.13 = #j) ∨ (#j < #vr.13))"
    to
      "⊥"
  solved goal nr. 30 (simplified): (#vr.13 = #j)  ∥ (#j < #vr.13)
  simplified formula:
      "((#vr.10 = #j) ∨ (#j < #vr.10))"
    to
      "⊥"
  solved goal nr. 28 (simplified): (#vr.10 = #j)  ∥ (#j < #vr.10)
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.8
1: !KU( ($V⊕      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.5
2: !KU( (      aeadEncrypt('emptyStr',                  hkdfExpand(<$cAEAD0,                               h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                             hkdfExtract(hkdfExtract('emptyStr', z), 'g'^(~ltk*~xx))),                  <$V, h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'g'^~ltk                  >,                  $cAEAD0)⊕      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.6
3: splitEqs(0)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 24 (precomputed): !KU( ~xx ) @ #vk.8
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~ltk ) @ #vk.8
1: !KU( ($V⊕      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.5
2: !KU( (      aeadEncrypt('emptyStr',                  hkdfExpand(<$cAEAD0,                               h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                             hkdfExtract(hkdfExtract('emptyStr', z), 'g'^(~ltk*~xx))),                  <$V, h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'g'^~ltk                  >,                  $cAEAD0)⊕      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.6
3: splitEqs(0)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 24 (precomputed): !KU( ~ltk ) @ #vk.8
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~ltk ) @ #vk.10
1: !KU( ~xx ) @ #vk.11
2: !KU( ($V⊕      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.5
3: !KU( (      aeadEncrypt('emptyStr',                  hkdfExpand(<$cAEAD0,                               h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                             hkdfExtract(hkdfExtract('emptyStr', z), 'g'^(~ltk*~xx))),                  <$V, h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'g'^~ltk                  >,                  $cAEAD0)⊕      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.6
4: splitEqs(0)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 26 (precomputed): !KU( ~ltk ) @ #vk.10
  simplified formula:
      "((#vr.13 = #j) ∨ (#j < #vr.13))"
    to
      "#j < #vr.13"
  solved goal nr. 30 (simplified): (#vr.13 = #j)  ∥ (#j < #vr.13)
  simplified formula:
      "((#vr.10 = #j) ∨ (#j < #vr.10))"
    to
      "#j < #vr.10"
  solved goal nr. 28 (simplified): (#vr.10 = #j)  ∥ (#j < #vr.10)
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ($V⊕      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.6
1: !KU( (      aeadEncrypt('emptyStr',                  hkdfExpand(<$cAEAD0,                               h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                             hkdfExtract(hkdfExtract('emptyStr', z), 'g'^(~ltk*~xx))),                  <$V, h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'g'^~ltk                  >,                  $cAEAD0)⊕      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.7
2: splitEqs(0)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 11 (directly):
    !KU( ($V⊕
          hkdfExpand(<$cAEAD0, 
                      h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,
                     hkdfExtract('emptyStr', z))
         )
    ) @ #vk.6
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KD( ($V⊕      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', z))     )) ▶₀ #vk.2
1: !KU( (      aeadEncrypt('emptyStr',                  hkdfExpand(<$cAEAD0,                               h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                             hkdfExtract(hkdfExtract('emptyStr', z), 'g'^(~ltk*~xx))),                  <$V, h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'g'^~ltk                  >,                  $cAEAD0)⊕      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.7
2: splitEqs(0)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( (      aeadEncrypt('emptyStr',                  hkdfExpand(<$cAEAD0,                               h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                             hkdfExtract(hkdfExtract('emptyStr', z), 'g'^(~ltk*~xx))),                  <$V, h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'g'^~ltk                  >,                  $cAEAD0)⊕      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.7
1: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                hkdfExtract('emptyStr', z))) @ #vk.9
2: splitEqs(0)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 16 (directly):
    !KU( (
          aeadEncrypt('emptyStr',
                      hkdfExpand(<$cAEAD0, 
                                  h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,
                                 hkdfExtract(hkdfExtract('emptyStr', z), 'g'^(~ltk*~xx))),
                      <$V, h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'g'^~ltk
                      >,
                      $cAEAD0)⊕
          hkdfExpand(<$cAEAD0, 
                      h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,
                     hkdfExtract('emptyStr', z))
         )
    ) @ #vk.7
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                hkdfExtract('emptyStr', z))) @ #vk.9
1: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                hkdfExtract('emptyStr', z))) @ #vk.11
2: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0,                              h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                            hkdfExtract(hkdfExtract('emptyStr', z), 'g'^(~ltk*~xx))),                 <$V, h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'g'^~ltk                 >,                 $cAEAD0)) @ #vk.12
3: splitEqs(0)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KD( (      aeadEncrypt('emptyStr',                  hkdfExpand(<$cAEAD0,                               h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                             hkdfExtract(hkdfExtract('emptyStr', z), 'g'^(~ltk*~xx))),                  <$V, h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'g'^~ltk                  >,                  $cAEAD0)⊕      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', z))     )) ▶₀ #vk.3
1: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                hkdfExtract('emptyStr', z))) @ #vk.9
2: splitEqs(0)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 29 (precomputed):
    !KU( hkdfExpand(<$cAEAD0, 
                     h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,
                    hkdfExtract('emptyStr', z))
    ) @ #vk.9
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>)) @ #vk.17
1: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                hkdfExtract('emptyStr', z))) @ #vk.11
2: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0,                              h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                            hkdfExtract(hkdfExtract('emptyStr', z), 'g'^(~ltk*~xx))),                 <$V, h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'g'^~ltk                 >,                 $cAEAD0)) @ #vk.12
3: splitEqs(0)
4: !KU( hkdfExtract('emptyStr', z) ) @ #vk.14

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 38 (precomputed):
    !KU( h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>)
    ) @ #vk.17
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( 'g'^(~xx*~yy) ) @ #vk.13
1: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                  '2'>,                hkdfExtract('emptyStr', 'g'^(~xx*~yy)))) @ #vk.15
2: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0,                              h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'>,                            hkdfExtract(hkdfExtract('emptyStr', 'g'^(~xx*~yy)),                                        'g'^(~ltk*~xx))),                 <$V, h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                   'g'^~ltk>,                 $cAEAD0)) @ #vk.16
3: !KU( 'g'^~xx ) @ #vk.11
4: !KU( 'g'^~yy ) @ #vk.12

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 45 (precomputed): !KU( 'g'^(~xx*~yy) ) @ #vk.13
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.23
1: !KU( ~yy ) @ #vk.24
2: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                  '2'>,                hkdfExtract('emptyStr', 'g'^(~xx*~yy)))) @ #vk.15
3: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0,                              h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'>,                            hkdfExtract(hkdfExtract('emptyStr', 'g'^(~xx*~yy)),                                        'g'^(~ltk*~xx))),                 <$V, h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                   'g'^~ltk>,                 $cAEAD0)) @ #vk.16
4: !KU( 'g'^~xx ) @ #vk.11
5: !KU( 'g'^~yy ) @ #vk.13

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 49 (precomputed): !KU( ~xx ) @ #vk.23
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~yy ) @ #vk.21
1: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                  '2'>,                hkdfExtract('emptyStr', 'g'^(~xx*~yy)))) @ #vk.15
2: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0,                              h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'>,                            hkdfExtract(hkdfExtract('emptyStr', 'g'^(~xx*~yy)),                                        'g'^(~ltk*~xx))),                 <$V, h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                   'g'^~ltk>,                 $cAEAD0)) @ #vk.16
3: !KU( 'g'^~xx ) @ #vk.11
4: !KU( 'g'^~yy ) @ #vk.13

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 47 (precomputed): !KU( ~yy ) @ #vk.21
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.21
1: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                  '2'>,                hkdfExtract('emptyStr', 'g'^(~xx*~yy)))) @ #vk.15
2: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0,                              h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'>,                            hkdfExtract(hkdfExtract('emptyStr', 'g'^(~xx*~yy)),                                        'g'^(~ltk*~xx))),                 <$V, h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                   'g'^~ltk>,                 $cAEAD0)) @ #vk.16
3: !KU( 'g'^~xx ) @ #vk.11
4: !KU( 'g'^~yy ) @ #vk.13

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 54 (precomputed): !KU( ~xx ) @ #vk.21
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                hkdfExtract('emptyStr', z))) @ #vk.17
1: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0,                              h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                            hkdfExtract(hkdfExtract('emptyStr', z), 'g'^(~ltk*~xx))),                 <$V, h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'g'^~ltk                 >,                 $cAEAD0)) @ #vk.18
2: splitEqs(0)
3: !KU( hkdfExtract('emptyStr', z) ) @ #vk.20
4: !KU( 'g'^~xx ) @ #vk.11

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 31 (precomputed):
    !KU( hkdfExpand(<$cAEAD0, 
                     h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,
                    hkdfExtract('emptyStr', z))
    ) @ #vk.17
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0,                              h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                            hkdfExtract(hkdfExtract('emptyStr', z), 'g'^(~ltk*~xx))),                 <$V, h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'g'^~ltk                 >,                 $cAEAD0)) @ #vk.21
1: splitEqs(0)
2: !KU( hkdfExtract('emptyStr', z) ) @ #vk.23
3: !KU( 'g'^~xx ) @ #vk.14

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 32 (precomputed):
    !KU( aeadEncrypt('emptyStr',
                     hkdfExpand(<$cAEAD0, 
                                 h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,
                                hkdfExtract(hkdfExtract('emptyStr', z), 'g'^(~ltk*~xx))),
                     <$V, h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'g'^~ltk
                     >,
                     $cAEAD0)
    ) @ #vk.21
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( hkdfExtract('emptyStr', 'g'^(~xx*~yy)) ) @ #vk.22
1: !KU( 'g'^(~xx*~yy) ) @ #vk.18
2: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0,                              h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'>,                            hkdfExtract(hkdfExtract('emptyStr', 'g'^(~xx*~yy)),                                        'g'^(~ltk*~xx))),                 <$V, h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                   'g'^~ltk>,                 $cAEAD0)) @ #vk.20
3: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0,                              h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'>,                            hkdfExtract(hkdfExtract('emptyStr', 'g'^(~xx*~yy)),                                        'g'^(~xx*~ltk.2))),                 <$V.1, h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                   'g'^~ltk.2>,                 $cAEAD0)) @ #vk.31
4: !KU( 'g'^~xx ) @ #vk.13
5: !KU( 'g'^~yy ) @ #vk.16

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 35 (precomputed):
    !KU( hkdfExtract('emptyStr', 'g'^(~xx*~yy)) ) @ #vk.22
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( 'g'^(~xx*~yy) ) @ #vk.20
1: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0,                              h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'>,                            hkdfExtract(hkdfExtract('emptyStr', 'g'^(~xx*~yy)),                                        'g'^(~ltk*~xx))),                 <$V, h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                   'g'^~ltk>,                 $cAEAD0)) @ #vk.22
2: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0,                              h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'>,                            hkdfExtract(hkdfExtract('emptyStr', 'g'^(~xx*~yy)),                                        'g'^(~xx*~ltk.2))),                 <$V.1, h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                   'g'^~ltk.2>,                 $cAEAD0)) @ #vk.31
3: !KU( 'g'^~xx ) @ #vk.14
4: !KU( 'g'^~yy ) @ #vk.19

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 66 (precomputed): !KU( 'g'^(~xx*~yy) ) @ #vk.20
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                hkdfExtract(hkdfExtract('emptyStr', z), 'g'^(~ltk*~xx)))) @ #vk.38
1: splitEqs(0)
2: !KU( hkdfExtract('emptyStr', z) ) @ #vk.26
3: !KU( 'g'^~xx ) @ #vk.16
4: !KU( 'g'^~ltk ) @ #vk.39

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 65 (precomputed):
    !KU( hkdfExpand(<$cAEAD0, 
                     h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,
                    hkdfExtract(hkdfExtract('emptyStr', z), 'g'^(~ltk*~xx)))
    ) @ #vk.38
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( hkdfExtract('emptyStr', 'g'^(~xx*~yy)) ) @ #vk.24
1: !KU( 'g'^(~xx*~yy) ) @ #vk.22
2: !KU( 'g'^~xx ) @ #vk.15
3: !KU( 'g'^~yy ) @ #vk.21

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 35 (precomputed):
    !KU( hkdfExtract('emptyStr', 'g'^(~xx*~yy)) ) @ #vk.24
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( 'g'^(~xx*~yy) ) @ #vk.23
1: !KU( 'g'^~xx ) @ #vk.17
2: !KU( 'g'^~yy ) @ #vk.22

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 75 (precomputed): !KU( 'g'^(~xx*~yy) ) @ #vk.23
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( hkdfExtract('emptyStr', 'g'^(~xx*~yy)) ) @ #vk.27
1: !KU( 'g'^(~xx*~yy) ) @ #vk.25
2: !KU( 'g'^~xx ) @ #vk.17
3: !KU( 'g'^~ltk ) @ #vk.39
4: !KU( 'g'^~yy ) @ #vk.24

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 35 (precomputed):
    !KU( hkdfExtract('emptyStr', 'g'^(~xx*~yy)) ) @ #vk.27
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( hkdfExtract('emptyStr', 'g'^(~xx*~yy)) ) @ #vk.27
1: !KU( 'g'^(~xx*~yy) ) @ #vk.25
2: !KU( 'g'^~xx ) @ #vk.17
3: !KU( 'g'^~ltk ) @ #vk.39
4: !KU( 'g'^~yy ) @ #vk.24

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 35 (precomputed):
    !KU( hkdfExtract('emptyStr', 'g'^(~xx*~yy)) ) @ #vk.27
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vl.2, 0) ~~> (#vk.3, 0)
1: !LTK_STAT( $V.1, ~ltk.2 ) ▶₀ #vr.8
2: !PK_STAT( $V.1, pkV ) ▶₁ #vr.8
3: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                hkdfExtract('emptyStr', z))) @ #vk.9
4: splitEqs(0)
5: splitEqs(1)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vl.2, 0) ~~> (#vk.3, 0)
1: StI1_SIG_STAT( $U.1, ~ltk.2, $V.1, ~xx.1, m1, ~tid.1 ) ▶₀ #vr.8
2: !PK_STAT( $V.1, pkV ) ▶₁ #vr.8
3: !PK_SIG( $U.1, pkU ) ▶₂ #vr.8
4: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                hkdfExtract('emptyStr', z))) @ #vk.9
5: splitEqs(0)
6: splitEqs(1)
7: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', z.1))     )) @ #vk.14
8: !KU( (      aeadEncrypt('emptyStr',                  hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2m'>,                             hkdfExtract(hkdfExtract('emptyStr', z.1), z.2)),                  <$V.1, h(<$cHash0.1, m1, gy.1>), pkV>, $cAEAD0.1)⊕      hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', z.1))     )) @ #vk.15

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: CommitI( tid.1, u, v, t ) ▶₀ #vr.8
1: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                hkdfExtract('emptyStr', z))) @ #vk.9
2: splitEqs(0)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 34 (precomputed):
    CommitI( tid.1, u, v, t ) ▶₀ #vr.8
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: CommitR( tid.1, u, v, t ) ▶₀ #vr.8
1: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                hkdfExtract('emptyStr', z))) @ #vk.9
2: splitEqs(0)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 34 (precomputed):
    CommitR( tid.1, u, v, t ) ▶₀ #vr.8
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.9, 0) ~~> (#vk.3, 0)
1: StI1_SIG_STAT( $U.1, ~ltk.2, $V.1, ~xx.1, m1, ~tid.1 ) ▶₀ #vr.8
2: !PK_STAT( $V.1, pkV ) ▶₁ #vr.8
3: !PK_SIG( $U.1, pkU ) ▶₂ #vr.8
4: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                hkdfExtract('emptyStr', z))) @ #vk.9
5: splitEqs(0)
6: splitEqs(1)
7: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', z.1))     )) @ #vk.14
8: !KU( (      aeadEncrypt('emptyStr',                  hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2m'>,                             hkdfExtract(hkdfExtract('emptyStr', z.1), z.2)),                  <$V.1, h(<$cHash0.1, m1, gy.1>), pkV>, $cAEAD0.1)⊕      hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', z.1))     )) @ #vk.15

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.10, 0) ~~> (#vk.3, 0)
1: StI1_SIG_STAT( $U.1, ~ltk.2, $V.1, ~xx.1, m1, ~tid.1 ) ▶₀ #vr.8
2: !PK_STAT( $V.1, pkV ) ▶₁ #vr.8
3: !PK_SIG( $U.1, pkU ) ▶₂ #vr.8
4: !KU( sign(<           <$U.1,             h(<$cHash0.1, h(<$cHash0.1, m1, gy.1>),                <                ($V.1⊕                 hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2e', '1'>,                            hkdfExtract('emptyStr', z.1))                ),                 (                 aeadEncrypt('emptyStr',                             hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2m'>,                                        hkdfExtract(hkdfExtract('emptyStr', z.1), z.2)),                             <$V.1, h(<$cHash0.1, m1, gy.1>), pkV>, $cAEAD0.1)⊕                 hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2e', '2'>,                            hkdfExtract('emptyStr', z.1))                )               >,                'emptyStr'>),             pkU>,            aeadEncrypt('emptyStr',                       hkdfExpand(<$cAEAD0.1,                                    h(<$cHash0.1, h(<$cHash0.1, m1, gy.1>),                                       <                                       ($V.1⊕                                        hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2e', '1'                                                   >,                                                   hkdfExtract('emptyStr', z.1))                                       ),                                        (                                        aeadEncrypt('emptyStr',                                                    hkdfExpand(<$cAEAD0.1,                                                                 h(<$cHash0.1, m1, gy.1>), 'K_2m'>,                                                               hkdfExtract(hkdfExtract('emptyStr',                                                                                       z.1),                                                                           z.2)),                                                    <$V.1, h(<$cHash0.1, m1, gy.1>), pkV>,                                                    $cAEAD0.1)⊕                                        hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2e', '2'                                                   >,                                                   hkdfExtract('emptyStr', z.1))                                       )                                      >,                                       'emptyStr'>),                                    'K_3m'>,                                  hkdfExtract(hkdfExtract('emptyStr', z.1), z.2)),                       <$U.1,                         h(<$cHash0.1, h(<$cHash0.1, m1, gy.1>),                            <                            ($V.1⊕                             hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2e', '1'>,                                        hkdfExtract('emptyStr', z.1))                            ),                             (                             aeadEncrypt('emptyStr',                                         hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2m'>,                                                    hkdfExtract(hkdfExtract('emptyStr', z.1), z.2)),                                         <$V.1, h(<$cHash0.1, m1, gy.1>), pkV>, $cAEAD0.1)⊕                             hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2e', '2'>,                                        hkdfExtract('emptyStr', z.1))                            )                           >,                            'emptyStr'>),                         pkU>,                       $cAEAD0.1)          >,          ~ltk.2)) @ #vk.19
5: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                hkdfExtract('emptyStr', z))) @ #vk.9
6: splitEqs(0)
7: splitEqs(1)
8: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', z.1))     )) @ #vk.14
9: !KU( (      aeadEncrypt('emptyStr',                  hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2m'>,                             hkdfExtract(hkdfExtract('emptyStr', z.1), z.2)),                  <$V.1, h(<$cHash0.1, m1, gy.1>), pkV>, $cAEAD0.1)⊕      hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', z.1))     )) @ #vk.15

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.10, 0) ~~> (#vk.3, 0)
1: StI1_SIG_STAT( $U.1, ~ltk.2, $V.1, ~xx.1, m1, ~tid.1 ) ▶₀ #vr.8
2: !PK_STAT( $V.1, pkV ) ▶₁ #vr.8
3: !PK_SIG( $U.1, pkU ) ▶₂ #vr.8
4: !KU( sign(<           <$U.1,             h(<$cHash0.1, h(<$cHash0.1, m1, gy.1>),                <                ($V.1⊕                 hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2e', '1'>,                            hkdfExtract('emptyStr', z.1))                ),                 (                 aeadEncrypt('emptyStr',                             hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2m'>,                                        hkdfExtract(hkdfExtract('emptyStr', z.1), z.2)),                             <$V.1, h(<$cHash0.1, m1, gy.1>), pkV>, $cAEAD0.1)⊕                 hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2e', '2'>,                            hkdfExtract('emptyStr', z.1))                )               >,                'emptyStr'>),             pkU>,            aeadEncrypt('emptyStr',                       hkdfExpand(<$cAEAD0.1,                                    h(<$cHash0.1, h(<$cHash0.1, m1, gy.1>),                                       <                                       ($V.1⊕                                        hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2e', '1'                                                   >,                                                   hkdfExtract('emptyStr', z.1))                                       ),                                        (                                        aeadEncrypt('emptyStr',                                                    hkdfExpand(<$cAEAD0.1,                                                                 h(<$cHash0.1, m1, gy.1>), 'K_2m'>,                                                               hkdfExtract(hkdfExtract('emptyStr',                                                                                       z.1),                                                                           z.2)),                                                    <$V.1, h(<$cHash0.1, m1, gy.1>), pkV>,                                                    $cAEAD0.1)⊕                                        hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2e', '2'                                                   >,                                                   hkdfExtract('emptyStr', z.1))                                       )                                      >,                                       'emptyStr'>),                                    'K_3m'>,                                  hkdfExtract(hkdfExtract('emptyStr', z.1), z.2)),                       <$U.1,                         h(<$cHash0.1, h(<$cHash0.1, m1, gy.1>),                            <                            ($V.1⊕                             hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2e', '1'>,                                        hkdfExtract('emptyStr', z.1))                            ),                             (                             aeadEncrypt('emptyStr',                                         hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2m'>,                                                    hkdfExtract(hkdfExtract('emptyStr', z.1), z.2)),                                         <$V.1, h(<$cHash0.1, m1, gy.1>), pkV>, $cAEAD0.1)⊕                             hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2e', '2'>,                                        hkdfExtract('emptyStr', z.1))                            )                           >,                            'emptyStr'>),                         pkU>,                       $cAEAD0.1)          >,          ~ltk.2)) @ #vk.20
5: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                hkdfExtract('emptyStr', z))) @ #vk.9
6: splitEqs(0)
7: splitEqs(1)
8: !KU( h(<$cHash0.1, h(<$cHash0.1, m1, gy.1>),         <         ($V.1⊕          hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2e', '1'>,                     hkdfExtract('emptyStr', z.1))         ),          (          aeadEncrypt('emptyStr',                      hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2m'>,                                 hkdfExtract(hkdfExtract('emptyStr', z.1), z.2)),                      <$V.1, h(<$cHash0.1, m1, gy.1>), pkV>, $cAEAD0.1)⊕          hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2e', '2'>,                     hkdfExtract('emptyStr', z.1))         )        >,         'emptyStr'>)) @ #vk.17
9: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', z.1))     )) @ #vk.14
10: !KU( (      aeadEncrypt('emptyStr',                  hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2m'>,                             hkdfExtract(hkdfExtract('emptyStr', z.1), z.2)),                  <$V.1, h(<$cHash0.1, m1, gy.1>), pkV>, $cAEAD0.1)⊕      hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', z.1))     )) @ #vk.15

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.9, 0) ~~> (#vk.3, 0)
1: !LTK_STAT( $V.1, ~ltk.2 ) ▶₀ #vr.8
2: !PK_STAT( $V.1, pkV ) ▶₁ #vr.8
3: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                hkdfExtract('emptyStr', z))) @ #vk.9
4: splitEqs(0)
5: splitEqs(1)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.10, 0) ~~> (#vk.3, 0)
1: !LTK_STAT( $V.1, ~ltk.2 ) ▶₀ #vr.8
2: !PK_STAT( $V.1, pkV ) ▶₁ #vr.8
3: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                hkdfExtract('emptyStr', z))) @ #vk.9
4: splitEqs(0)
5: splitEqs(1)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.10, 0) ~~> (#vk.3, 0)
1: !LTK_STAT( $V.1, ~ltk.2 ) ▶₀ #vr.8
2: !PK_STAT( $V.1, pkV ) ▶₁ #vr.8
3: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                hkdfExtract('emptyStr', z))) @ #vk.9
4: splitEqs(0)
5: splitEqs(1)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.11, 0) ~~> (#vk.3, 0)
1: !LTK_STAT( $V.1, ~ltk.2 ) ▶₀ #vr.8
2: !PK_STAT( $V.1, pkV ) ▶₁ #vr.8
3: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                hkdfExtract('emptyStr', z))) @ #vk.9
4: !KU( (z.3⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'STAT', $cSUITE0.1, gx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z.1))     )) @ #vk.18
5: splitEqs(0)
6: splitEqs(1)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.11, 0) ~~> (#vk.3, 0)
1: !LTK_STAT( $V.1, ~ltk.2 ) ▶₀ #vr.8
2: !PK_STAT( $V.1, pkV ) ▶₁ #vr.8
3: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                hkdfExtract('emptyStr', z))) @ #vk.9
4: splitEqs(0)
5: splitEqs(1)
6: !KU( ($V.1⊕z.3) ) @ #vk.18

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.11, 0) ~~> (#vk.3, 0)
1: !LTK_STAT( $V.1, ~ltk.2 ) ▶₀ #vr.8
2: !PK_STAT( $V.1, pkV ) ▶₁ #vr.8
3: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                hkdfExtract('emptyStr', z))) @ #vk.9
4: splitEqs(0)
5: splitEqs(1)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.11, 0) ~~> (#vk.3, 0)
1: !LTK_STAT( $V.1, ~ltk.2 ) ▶₀ #vr.8
2: !PK_STAT( $V.1, pkV ) ▶₁ #vr.8
3: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                hkdfExtract('emptyStr', z))) @ #vk.9
4: !KU( (z.3⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'STAT', $cSUITE0.1, gx>, 'g'^~yy>), 'K_2e',                   '2'>,                 hkdfExtract('emptyStr', z.1))     )) @ #vk.18
5: splitEqs(0)
6: splitEqs(1)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !LTK_STAT( $V, ~ltk ) ▶₀ #vr.8
1: !PK_STAT( $V, 'g'^~ltk ) ▶₁ #vr.8
2: !KU( 'g'^(~xx*~yy) ) @ #vk.12
3: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                  '1'>,                hkdfExtract('emptyStr', 'g'^(~xx*~yy)))) @ #vk.13
4: !KU( 'g'^~yy ) @ #vk.11
5: !KU( 'g'^~xx ) @ #vk.10

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 34 (precomputed): !LTK_STAT( $V, ~ltk ) ▶₀ #vr.8
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.11, 0) ~~> (#vk.3, 0)
1: !LTK_STAT( $V.1, ~ltk.2 ) ▶₀ #vr.8
2: !PK_STAT( $V.1, pkV ) ▶₁ #vr.8
3: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                hkdfExtract('emptyStr', z))) @ #vk.9
4: !KU( hkdfExpand(<$cAEAD0.1,                  h(<$cHash0.1, <'SIG', 'STAT', $cSUITE0.1, gx>, 'g'^~yy>), 'K_2e',                  '2'>,                hkdfExtract('emptyStr', z.1))) @ #vk.18
5: splitEqs(0)
6: splitEqs(1)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.11, 0) ~~> (#vk.3, 0)
1: !LTK_STAT( $V.1, ~ltk.2 ) ▶₀ #vr.8
2: !PK_STAT( $V.1, pkV ) ▶₁ #vr.8
3: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                hkdfExtract('emptyStr', z))) @ #vk.9
4: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1, <'SIG', 'STAT', $cSUITE0.1, gx>, 'g'^~yy>), 'K_2m'>,                            hkdfExtract(hkdfExtract('emptyStr', z.1), z.2)),                 <$V.1, h(<$cHash0.1, <'SIG', 'STAT', $cSUITE0.1, gx>, 'g'^~yy>),                   pkV>,                 $cAEAD0.1)) @ #vk.18
5: splitEqs(0)
6: splitEqs(1)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.11, 0) ~~> (#vk.3, 0)
1: !LTK_STAT( $V.1, ~ltk.2 ) ▶₀ #vr.8
2: !PK_STAT( $V.1, pkV ) ▶₁ #vr.8
3: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                hkdfExtract('emptyStr', z))) @ #vk.9
4: !KU( (z.3⊕      aeadEncrypt('emptyStr',                  hkdfExpand(<$cAEAD0.1,                               h(<$cHash0.1, <'SIG', 'STAT', $cSUITE0.1, gx>, 'g'^~yy>), 'K_2m'>,                             hkdfExtract(hkdfExtract('emptyStr', z.1), z.2)),                  <$V.1, h(<$cHash0.1, <'SIG', 'STAT', $cSUITE0.1, gx>, 'g'^~yy>),                    pkV>,                  $cAEAD0.1)     )) @ #vk.18
5: splitEqs(0)
6: splitEqs(1)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !PK_STAT( $V, 'g'^~ltk ) ▶₁ #vr.8
1: !KU( 'g'^(~xx*~yy) ) @ #vk.12
2: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                  '1'>,                hkdfExtract('emptyStr', 'g'^(~xx*~yy)))) @ #vk.13
3: !KU( 'g'^~yy ) @ #vk.11
4: !KU( 'g'^~xx ) @ #vk.10

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 35 (precomputed): !PK_STAT( $V, 'g'^~ltk ) ▶₁ #vr.8
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.12, 0) ~~> (#vk.3, 0)
1: !LTK_STAT( $V.1, ~ltk.2 ) ▶₀ #vr.8
2: !PK_STAT( $V.1, pkV ) ▶₁ #vr.8
3: !KU( h(<$cHash0.1, <'SIG', 'STAT', $cSUITE0.1, gx>, 'g'^~yy>)) @ #vk.24
4: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                hkdfExtract('emptyStr', z))) @ #vk.9
5: !KU( hkdfExpand(<$cAEAD0.1,                  h(<$cHash0.1, <'SIG', 'STAT', $cSUITE0.1, gx>, 'g'^~yy>), 'K_2e',                  '2'>,                hkdfExtract('emptyStr', z.1))) @ #vk.18
6: splitEqs(0)
7: splitEqs(1)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.12, 0) ~~> (#vk.3, 0)
1: !LTK_STAT( $V.1, ~ltk.2 ) ▶₀ #vr.8
2: !PK_STAT( $V.1, pkV ) ▶₁ #vr.8
3: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                hkdfExtract('emptyStr', z))) @ #vk.9
4: !KU( hkdfExpand(<$cAEAD0.1,                  h(<$cHash0.1, <'SIG', 'STAT', $cSUITE0.1, gx>, 'g'^~yy>), 'K_2e',                  '2'>,                hkdfExtract('emptyStr', z.1))) @ #vk.18
5: splitEqs(0)
6: splitEqs(1)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !LTK_STAT( $V.1, ~ltk.2 ) ▶₀ #vr.8
1: !PK_STAT( $V.1, pkV ) ▶₁ #vr.8
2: !KU( 'g'^(~xx*~yy) ) @ #vk.12
3: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                  '1'>,                hkdfExtract('emptyStr', 'g'^(~xx*~yy)))) @ #vk.13
4: !KU( (      aeadEncrypt('emptyStr',                  hkdfExpand(<$cAEAD0,                               h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'>,                             hkdfExtract(hkdfExtract('emptyStr', 'g'^(~xx*~yy)),                                         'g'^(~ltk*~xx))),                  <$V, h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                    'g'^~ltk>,                  $cAEAD0)⊕      aeadEncrypt('emptyStr',                  hkdfExpand(<$cAEAD0,                               h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'>,                             hkdfExtract(hkdfExtract('emptyStr', 'g'^(~xx*~yy)),                                         'g'^(~xx*~ltk.2))),                  <$V.1, h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                    pkV>,                  $cAEAD0)     )) @ #vk.18
5: !KU( 'g'^~yy ) @ #vk.11
6: !KU( 'g'^~xx ) @ #vk.10

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 34 (precomputed):
    !LTK_STAT( $V.1, ~ltk.2 ) ▶₀ #vr.8
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vl.2, 0) ~~> (#vk.2, 0)
1: !LTK_STAT( $V.1, ~ltk.2 ) ▶₀ #vr.8
2: !PK_STAT( $V.1, pkV ) ▶₁ #vr.8
3: !KU( (      aeadEncrypt('emptyStr',                  hkdfExpand(<$cAEAD0,                               h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                             hkdfExtract(hkdfExtract('emptyStr', z), 'g'^(~ltk*~xx))),                  <$V, h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'g'^~ltk                  >,                  $cAEAD0)⊕      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.7
4: splitEqs(0)
5: splitEqs(1)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: CommitI( tid.1, u, v, t ) ▶₀ #vr.8
1: !KU( (      aeadEncrypt('emptyStr',                  hkdfExpand(<$cAEAD0,                               h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                             hkdfExtract(hkdfExtract('emptyStr', z), 'g'^(~ltk*~xx))),                  <$V, h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'g'^~ltk                  >,                  $cAEAD0)⊕      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.7
2: splitEqs(0)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 32 (precomputed):
    CommitI( tid.1, u, v, t ) ▶₀ #vr.8
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: CommitR( tid.1, u, v, t ) ▶₀ #vr.8
1: !KU( (      aeadEncrypt('emptyStr',                  hkdfExpand(<$cAEAD0,                               h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                             hkdfExtract(hkdfExtract('emptyStr', z), 'g'^(~ltk*~xx))),                  <$V, h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'g'^~ltk                  >,                  $cAEAD0)⊕      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.7
2: splitEqs(0)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vl.2, 0) ~~> (#vk.2, 0)
1: StI1_SIG_STAT( $U.1, ~ltk.2, $V.1, ~xx.1, m1, ~tid.1 ) ▶₀ #vr.8
2: !PK_STAT( $V.1, pkV ) ▶₁ #vr.8
3: !PK_SIG( $U.1, pkU ) ▶₂ #vr.8
4: !KU( (      aeadEncrypt('emptyStr',                  hkdfExpand(<$cAEAD0,                               h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                             hkdfExtract(hkdfExtract('emptyStr', z), 'g'^(~ltk*~xx))),                  <$V, h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'g'^~ltk                  >,                  $cAEAD0)⊕      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.7
5: splitEqs(0)
6: splitEqs(1)
7: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', z.1))     )) @ #vk.12
8: !KU( (      aeadEncrypt('emptyStr',                  hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2m'>,                             hkdfExtract(hkdfExtract('emptyStr', z.1), z.2)),                  <$V.1, h(<$cHash0.1, m1, gy.1>), pkV>, $cAEAD0.1)⊕      hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', z.1))     )) @ #vk.13

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 32 (precomputed):
    CommitR( tid.1, u, v, t ) ▶₀ #vr.8
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.9, 0) ~~> (#vk.2, 0)
1: StI1_SIG_STAT( $U.1, ~ltk.2, $V.1, ~xx.1, m1, ~tid.1 ) ▶₀ #vr.8
2: !PK_STAT( $V.1, pkV ) ▶₁ #vr.8
3: !PK_SIG( $U.1, pkU ) ▶₂ #vr.8
4: !KU( (      aeadEncrypt('emptyStr',                  hkdfExpand(<$cAEAD0,                               h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                             hkdfExtract(hkdfExtract('emptyStr', z), 'g'^(~ltk*~xx))),                  <$V, h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'g'^~ltk                  >,                  $cAEAD0)⊕      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.7
5: splitEqs(0)
6: splitEqs(1)
7: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', z.1))     )) @ #vk.12
8: !KU( (      aeadEncrypt('emptyStr',                  hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2m'>,                             hkdfExtract(hkdfExtract('emptyStr', z.1), z.2)),                  <$V.1, h(<$cHash0.1, m1, gy.1>), pkV>, $cAEAD0.1)⊕      hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', z.1))     )) @ #vk.13

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.10, 0) ~~> (#vk.2, 0)
1: StI1_SIG_STAT( $U.1, ~ltk.2, $V.1, ~xx.1, m1, ~tid.1 ) ▶₀ #vr.8
2: !PK_STAT( $V.1, pkV ) ▶₁ #vr.8
3: !PK_SIG( $U.1, pkU ) ▶₂ #vr.8
4: !KU( sign(<           <$U.1,             h(<$cHash0.1, h(<$cHash0.1, m1, gy.1>),                <                ($V.1⊕                 hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2e', '1'>,                            hkdfExtract('emptyStr', z.1))                ),                 (                 aeadEncrypt('emptyStr',                             hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2m'>,                                        hkdfExtract(hkdfExtract('emptyStr', z.1), z.2)),                             <$V.1, h(<$cHash0.1, m1, gy.1>), pkV>, $cAEAD0.1)⊕                 hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2e', '2'>,                            hkdfExtract('emptyStr', z.1))                )               >,                'emptyStr'>),             pkU>,            aeadEncrypt('emptyStr',                       hkdfExpand(<$cAEAD0.1,                                    h(<$cHash0.1, h(<$cHash0.1, m1, gy.1>),                                       <                                       ($V.1⊕                                        hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2e', '1'                                                   >,                                                   hkdfExtract('emptyStr', z.1))                                       ),                                        (                                        aeadEncrypt('emptyStr',                                                    hkdfExpand(<$cAEAD0.1,                                                                 h(<$cHash0.1, m1, gy.1>), 'K_2m'>,                                                               hkdfExtract(hkdfExtract('emptyStr',                                                                                       z.1),                                                                           z.2)),                                                    <$V.1, h(<$cHash0.1, m1, gy.1>), pkV>,                                                    $cAEAD0.1)⊕                                        hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2e', '2'                                                   >,                                                   hkdfExtract('emptyStr', z.1))                                       )                                      >,                                       'emptyStr'>),                                    'K_3m'>,                                  hkdfExtract(hkdfExtract('emptyStr', z.1), z.2)),                       <$U.1,                         h(<$cHash0.1, h(<$cHash0.1, m1, gy.1>),                            <                            ($V.1⊕                             hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2e', '1'>,                                        hkdfExtract('emptyStr', z.1))                            ),                             (                             aeadEncrypt('emptyStr',                                         hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2m'>,                                                    hkdfExtract(hkdfExtract('emptyStr', z.1), z.2)),                                         <$V.1, h(<$cHash0.1, m1, gy.1>), pkV>, $cAEAD0.1)⊕                             hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2e', '2'>,                                        hkdfExtract('emptyStr', z.1))                            )                           >,                            'emptyStr'>),                         pkU>,                       $cAEAD0.1)          >,          ~ltk.2)) @ #vk.17
5: !KU( (      aeadEncrypt('emptyStr',                  hkdfExpand(<$cAEAD0,                               h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                             hkdfExtract(hkdfExtract('emptyStr', z), 'g'^(~ltk*~xx))),                  <$V, h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'g'^~ltk                  >,                  $cAEAD0)⊕      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.7
6: splitEqs(0)
7: splitEqs(1)
8: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', z.1))     )) @ #vk.12
9: !KU( (      aeadEncrypt('emptyStr',                  hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2m'>,                             hkdfExtract(hkdfExtract('emptyStr', z.1), z.2)),                  <$V.1, h(<$cHash0.1, m1, gy.1>), pkV>, $cAEAD0.1)⊕      hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', z.1))     )) @ #vk.13

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.10, 0) ~~> (#vk.2, 0)
1: StI1_SIG_STAT( $U.1, ~ltk.2, $V.1, ~xx.1, m1, ~tid.1 ) ▶₀ #vr.8
2: !PK_STAT( $V.1, pkV ) ▶₁ #vr.8
3: !PK_SIG( $U.1, pkU ) ▶₂ #vr.8
4: !KU( sign(<           <$U.1,             h(<$cHash0.1, h(<$cHash0.1, m1, gy.1>),                <                ($V.1⊕                 hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2e', '1'>,                            hkdfExtract('emptyStr', z.1))                ),                 (                 aeadEncrypt('emptyStr',                             hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2m'>,                                        hkdfExtract(hkdfExtract('emptyStr', z.1), z.2)),                             <$V.1, h(<$cHash0.1, m1, gy.1>), pkV>, $cAEAD0.1)⊕                 hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2e', '2'>,                            hkdfExtract('emptyStr', z.1))                )               >,                'emptyStr'>),             pkU>,            aeadEncrypt('emptyStr',                       hkdfExpand(<$cAEAD0.1,                                    h(<$cHash0.1, h(<$cHash0.1, m1, gy.1>),                                       <                                       ($V.1⊕                                        hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2e', '1'                                                   >,                                                   hkdfExtract('emptyStr', z.1))                                       ),                                        (                                        aeadEncrypt('emptyStr',                                                    hkdfExpand(<$cAEAD0.1,                                                                 h(<$cHash0.1, m1, gy.1>), 'K_2m'>,                                                               hkdfExtract(hkdfExtract('emptyStr',                                                                                       z.1),                                                                           z.2)),                                                    <$V.1, h(<$cHash0.1, m1, gy.1>), pkV>,                                                    $cAEAD0.1)⊕                                        hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2e', '2'                                                   >,                                                   hkdfExtract('emptyStr', z.1))                                       )                                      >,                                       'emptyStr'>),                                    'K_3m'>,                                  hkdfExtract(hkdfExtract('emptyStr', z.1), z.2)),                       <$U.1,                         h(<$cHash0.1, h(<$cHash0.1, m1, gy.1>),                            <                            ($V.1⊕                             hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2e', '1'>,                                        hkdfExtract('emptyStr', z.1))                            ),                             (                             aeadEncrypt('emptyStr',                                         hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2m'>,                                                    hkdfExtract(hkdfExtract('emptyStr', z.1), z.2)),                                         <$V.1, h(<$cHash0.1, m1, gy.1>), pkV>, $cAEAD0.1)⊕                             hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2e', '2'>,                                        hkdfExtract('emptyStr', z.1))                            )                           >,                            'emptyStr'>),                         pkU>,                       $cAEAD0.1)          >,          ~ltk.2)) @ #vk.18
5: !KU( (      aeadEncrypt('emptyStr',                  hkdfExpand(<$cAEAD0,                               h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                             hkdfExtract(hkdfExtract('emptyStr', z), 'g'^(~ltk*~xx))),                  <$V, h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'g'^~ltk                  >,                  $cAEAD0)⊕      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.7
6: splitEqs(0)
7: splitEqs(1)
8: !KU( h(<$cHash0.1, h(<$cHash0.1, m1, gy.1>),         <         ($V.1⊕          hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2e', '1'>,                     hkdfExtract('emptyStr', z.1))         ),          (          aeadEncrypt('emptyStr',                      hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2m'>,                                 hkdfExtract(hkdfExtract('emptyStr', z.1), z.2)),                      <$V.1, h(<$cHash0.1, m1, gy.1>), pkV>, $cAEAD0.1)⊕          hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2e', '2'>,                     hkdfExtract('emptyStr', z.1))         )        >,         'emptyStr'>)) @ #vk.15
9: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', z.1))     )) @ #vk.12
10: !KU( (      aeadEncrypt('emptyStr',                  hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2m'>,                             hkdfExtract(hkdfExtract('emptyStr', z.1), z.2)),                  <$V.1, h(<$cHash0.1, m1, gy.1>), pkV>, $cAEAD0.1)⊕      hkdfExpand(<$cAEAD0.1, h(<$cHash0.1, m1, gy.1>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', z.1))     )) @ #vk.13

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.9, 0) ~~> (#vk.2, 0)
1: !LTK_STAT( $V.1, ~ltk.2 ) ▶₀ #vr.8
2: !PK_STAT( $V.1, pkV ) ▶₁ #vr.8
3: !KU( (      aeadEncrypt('emptyStr',                  hkdfExpand(<$cAEAD0,                               h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                             hkdfExtract(hkdfExtract('emptyStr', z), 'g'^(~ltk*~xx))),                  <$V, h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'g'^~ltk                  >,                  $cAEAD0)⊕      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.7
4: splitEqs(0)
5: splitEqs(1)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.10, 0) ~~> (#vk.2, 0)
1: !LTK_STAT( $V.1, ~ltk.2 ) ▶₀ #vr.8
2: !PK_STAT( $V.1, pkV ) ▶₁ #vr.8
3: !KU( (      aeadEncrypt('emptyStr',                  hkdfExpand(<$cAEAD0,                               h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                             hkdfExtract(hkdfExtract('emptyStr', z), 'g'^(~ltk*~xx))),                  <$V, h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'g'^~ltk                  >,                  $cAEAD0)⊕      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.7
4: splitEqs(0)
5: splitEqs(1)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.10, 0) ~~> (#vk.2, 0)
1: !LTK_STAT( $V.1, ~ltk.2 ) ▶₀ #vr.8
2: !PK_STAT( $V.1, pkV ) ▶₁ #vr.8
3: !KU( (      aeadEncrypt('emptyStr',                  hkdfExpand(<$cAEAD0,                               h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                             hkdfExtract(hkdfExtract('emptyStr', z), 'g'^(~ltk*~xx))),                  <$V, h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'g'^~ltk                  >,                  $cAEAD0)⊕      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.7
4: splitEqs(0)
5: splitEqs(1)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.11, 0) ~~> (#vk.2, 0)
1: !LTK_STAT( $V.1, ~ltk.2 ) ▶₀ #vr.8
2: !PK_STAT( $V.1, pkV ) ▶₁ #vr.8
3: !KU( (      aeadEncrypt('emptyStr',                  hkdfExpand(<$cAEAD0,                               h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                             hkdfExtract(hkdfExtract('emptyStr', z), 'g'^(~ltk*~xx))),                  <$V, h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'g'^~ltk                  >,                  $cAEAD0)⊕      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.7
4: !KU( (z.3⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'STAT', $cSUITE0.1, gx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z.1))     )) @ #vk.16
5: splitEqs(0)
6: splitEqs(1)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.11, 0) ~~> (#vk.2, 0)
1: !LTK_STAT( $V.1, ~ltk.2 ) ▶₀ #vr.8
2: !PK_STAT( $V.1, pkV ) ▶₁ #vr.8
3: !KU( (      aeadEncrypt('emptyStr',                  hkdfExpand(<$cAEAD0,                               h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                             hkdfExtract(hkdfExtract('emptyStr', z), 'g'^(~ltk*~xx))),                  <$V, h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'g'^~ltk                  >,                  $cAEAD0)⊕      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.7
4: splitEqs(0)
5: splitEqs(1)
6: !KU( ($V.1⊕z.3) ) @ #vk.16

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !LTK_STAT( $V, ~ltk.2 ) ▶₀ #vr.8
1: !PK_STAT( $V, pkV ) ▶₁ #vr.8
2: !KU( 'g'^(~xx*~yy) ) @ #vk.12
3: !KU( (      aeadEncrypt('emptyStr',                  hkdfExpand(<$cAEAD0,                               h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'>,                             hkdfExtract(hkdfExtract('emptyStr', 'g'^(~xx*~yy)),                                         'g'^(~ltk*~xx))),                  <$V, h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                    'g'^~ltk>,                  $cAEAD0)⊕      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                   '2'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))     )) @ #vk.11
4: !KU( 'g'^~yy ) @ #vk.10
5: !KU( 'g'^~xx ) @ #vk.9

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 32 (precomputed): !LTK_STAT( $V, ~ltk.2 ) ▶₀ #vr.8
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.11, 0) ~~> (#vk.2, 0)
1: !LTK_STAT( $V.1, ~ltk.2 ) ▶₀ #vr.8
2: !PK_STAT( $V.1, pkV ) ▶₁ #vr.8
3: !KU( (      aeadEncrypt('emptyStr',                  hkdfExpand(<$cAEAD0,                               h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                             hkdfExtract(hkdfExtract('emptyStr', z), 'g'^(~ltk*~xx))),                  <$V, h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'g'^~ltk                  >,                  $cAEAD0)⊕      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.7
4: splitEqs(0)
5: splitEqs(1)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !PK_STAT( $V, pkV ) ▶₁ #vr.8
1: !KU( 'g'^(~xx*~yy) ) @ #vk.12
2: !KU( (      aeadEncrypt('emptyStr',                  hkdfExpand(<$cAEAD0,                               h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'>,                             hkdfExtract(hkdfExtract('emptyStr', 'g'^(~xx*~yy)),                                         'g'^(~ltk*~xx))),                  <$V, h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                    'g'^~ltk>,                  $cAEAD0)⊕      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                   '2'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))     )) @ #vk.11
3: !KU( 'g'^~yy ) @ #vk.10
4: !KU( 'g'^~xx ) @ #vk.9

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 33 (precomputed): !PK_STAT( $V, pkV ) ▶₁ #vr.8
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !LTK_STAT( $V, ~ltk.2 ) ▶₀ #vr.8
1: !PK_STAT( $V, pkV ) ▶₁ #vr.8
2: !KU( (      aeadEncrypt('emptyStr',                  hkdfExpand(<$cAEAD0,                               h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                             hkdfExtract(hkdfExtract('emptyStr', z), 'g'^(~ltk*~xx))),                  <$V, h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'g'^~ltk                  >,                  $cAEAD0)⊕      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.7
3: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', z))⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'STAT', $cSUITE0.1, gx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z.1))     )) @ #vk.16
4: splitEqs(0)
5: splitEqs(1)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 32 (precomputed): !LTK_STAT( $V, ~ltk.2 ) ▶₀ #vr.8
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !PK_STAT( $V, pkV ) ▶₁ #vr.8
1: !KU( (      aeadEncrypt('emptyStr',                  hkdfExpand(<$cAEAD0,                               h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                             hkdfExtract(hkdfExtract('emptyStr', z), 'g'^(~ltk*~xx))),                  <$V, h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'g'^~ltk                  >,                  $cAEAD0)⊕      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.7
2: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', z))⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'STAT', $cSUITE0.1, gx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z.1))     )) @ #vk.16
3: splitEqs(0)
4: splitEqs(1)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 33 (precomputed): !PK_STAT( $V, pkV ) ▶₁ #vr.8
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !LTK_STAT( $V.1, ~ltk.2 ) ▶₀ #vr.8
1: !PK_STAT( $V.1, pkV ) ▶₁ #vr.8
2: !KU( 'g'^(~xx*~yy) ) @ #vk.12
3: !KU( (      aeadEncrypt('emptyStr',                  hkdfExpand(<$cAEAD0,                               h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'>,                             hkdfExtract(hkdfExtract('emptyStr', 'g'^(~xx*~yy)),                                         'g'^(~ltk*~xx))),                  <$V, h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                    'g'^~ltk>,                  $cAEAD0)⊕      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                   '2'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))     )) @ #vk.11
4: !KU( ($V⊕$V.1) ) @ #vk.16
5: !KU( 'g'^~yy ) @ #vk.10
6: !KU( 'g'^~xx ) @ #vk.9

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 32 (precomputed):
    !LTK_STAT( $V.1, ~ltk.2 ) ▶₀ #vr.8
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.11, 0) ~~> (#vk.2, 0)
1: !LTK_STAT( $V.1, ~ltk.2 ) ▶₀ #vr.8
2: !PK_STAT( $V.1, pkV ) ▶₁ #vr.8
3: !KU( (      aeadEncrypt('emptyStr',                  hkdfExpand(<$cAEAD0,                               h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                             hkdfExtract(hkdfExtract('emptyStr', z), 'g'^(~ltk*~xx))),                  <$V, h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'g'^~ltk                  >,                  $cAEAD0)⊕      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.7
4: !KU( (z.3⊕      aeadEncrypt('emptyStr',                  hkdfExpand(<$cAEAD0.1,                               h(<$cHash0.1, <'SIG', 'STAT', $cSUITE0.1, gx>, 'g'^~yy>), 'K_2m'>,                             hkdfExtract(hkdfExtract('emptyStr', z.1), z.2)),                  <$V.1, h(<$cHash0.1, <'SIG', 'STAT', $cSUITE0.1, gx>, 'g'^~yy>),                    pkV>,                  $cAEAD0.1)     )) @ #vk.16
5: splitEqs(0)
6: splitEqs(1)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.11, 0) ~~> (#vk.2, 0)
1: !LTK_STAT( $V.1, ~ltk.2 ) ▶₀ #vr.8
2: !PK_STAT( $V.1, pkV ) ▶₁ #vr.8
3: !KU( (      aeadEncrypt('emptyStr',                  hkdfExpand(<$cAEAD0,                               h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                             hkdfExtract(hkdfExtract('emptyStr', z), 'g'^(~ltk*~xx))),                  <$V, h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'g'^~ltk                  >,                  $cAEAD0)⊕      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.7
4: !KU( hkdfExpand(<$cAEAD0.1,                  h(<$cHash0.1, <'SIG', 'STAT', $cSUITE0.1, gx>, 'g'^~yy>), 'K_2e',                  '2'>,                hkdfExtract('emptyStr', z.1))) @ #vk.16
5: splitEqs(0)
6: splitEqs(1)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.11, 0) ~~> (#vk.2, 0)
1: !LTK_STAT( $V.1, ~ltk.2 ) ▶₀ #vr.8
2: !PK_STAT( $V.1, pkV ) ▶₁ #vr.8
3: !KU( (      aeadEncrypt('emptyStr',                  hkdfExpand(<$cAEAD0,                               h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                             hkdfExtract(hkdfExtract('emptyStr', z), 'g'^(~ltk*~xx))),                  <$V, h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'g'^~ltk                  >,                  $cAEAD0)⊕      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.7
4: !KU( (z.3⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'STAT', $cSUITE0.1, gx>, 'g'^~yy>), 'K_2e',                   '2'>,                 hkdfExtract('emptyStr', z.1))     )) @ #vk.16
5: splitEqs(0)
6: splitEqs(1)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.11, 0) ~~> (#vk.2, 0)
1: !LTK_STAT( $V.1, ~ltk.2 ) ▶₀ #vr.8
2: !PK_STAT( $V.1, pkV ) ▶₁ #vr.8
3: !KU( (      aeadEncrypt('emptyStr',                  hkdfExpand(<$cAEAD0,                               h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                             hkdfExtract(hkdfExtract('emptyStr', z), 'g'^(~ltk*~xx))),                  <$V, h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'g'^~ltk                  >,                  $cAEAD0)⊕      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.7
4: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1, <'SIG', 'STAT', $cSUITE0.1, gx>, 'g'^~yy>), 'K_2m'>,                            hkdfExtract(hkdfExtract('emptyStr', z.1), z.2)),                 <$V.1, h(<$cHash0.1, <'SIG', 'STAT', $cSUITE0.1, gx>, 'g'^~yy>),                   pkV>,                 $cAEAD0.1)) @ #vk.16
5: splitEqs(0)
6: splitEqs(1)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.12, 0) ~~> (#vk.2, 0)
1: !LTK_STAT( $V.1, ~ltk.2 ) ▶₀ #vr.8
2: !PK_STAT( $V.1, pkV ) ▶₁ #vr.8
3: !KU( (      aeadEncrypt('emptyStr',                  hkdfExpand(<$cAEAD0,                               h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                             hkdfExtract(hkdfExtract('emptyStr', z), 'g'^(~ltk*~xx))),                  <$V, h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'g'^~ltk                  >,                  $cAEAD0)⊕      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.7
4: !KU( hkdfExpand(<$cAEAD0.1,                  h(<$cHash0.1, <'SIG', 'STAT', $cSUITE0.1, gx>, 'g'^~yy>), 'K_2e',                  '2'>,                hkdfExtract('emptyStr', z.1))) @ #vk.16
5: splitEqs(0)
6: splitEqs(1)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.12, 0) ~~> (#vk.2, 0)
1: !LTK_STAT( $V.1, ~ltk.2 ) ▶₀ #vr.8
2: !PK_STAT( $V.1, pkV ) ▶₁ #vr.8
3: !KU( h(<$cHash0.1, <'SIG', 'STAT', $cSUITE0.1, gx>, 'g'^~yy>)) @ #vk.22
4: !KU( (      aeadEncrypt('emptyStr',                  hkdfExpand(<$cAEAD0,                               h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                             hkdfExtract(hkdfExtract('emptyStr', z), 'g'^(~ltk*~xx))),                  <$V, h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'g'^~ltk                  >,                  $cAEAD0)⊕      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.7
5: !KU( hkdfExpand(<$cAEAD0.1,                  h(<$cHash0.1, <'SIG', 'STAT', $cSUITE0.1, gx>, 'g'^~yy>), 'K_2e',                  '2'>,                hkdfExtract('emptyStr', z.1))) @ #vk.16
6: splitEqs(0)
7: splitEqs(1)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.11
1: !KU( ($V⊕      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.6
2: !KU( (      aeadEncrypt('emptyStr',                  hkdfExpand(<$cAEAD0,                               h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                             hkdfExtract(hkdfExtract('emptyStr', z), 'g'^(~ltk*~xx))),                  <$V, h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'g'^~ltk                  >,                  $cAEAD0)⊕      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.7
3: splitEqs(0)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 27 (precomputed): !KU( ~xx ) @ #vk.11
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( sign(<           <$U,             h(<$cHash0.1,                h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy>),                <                ($V⊕                 hkdfExpand(<$cAEAD0,                              h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy>), 'K_2e', '1'>,                            hkdfExtract('emptyStr', gxy))                ),                 (                 aeadEncrypt('emptyStr',                             hkdfExpand(<$cAEAD0,                                          h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy>),                                          'K_2m'>,                                        hkdfExtract(hkdfExtract('emptyStr', gxy), grx)),                             <$V, h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy>), 'g'^~ltk                             >,                             $cAEAD0)⊕                 hkdfExpand(<$cAEAD0,                              h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy>), 'K_2e', '2'>,                            hkdfExtract('emptyStr', gxy))                )               >,                'emptyStr'>),             pk(~ltk.1)>,            aeadEncrypt('emptyStr',                       hkdfExpand(<$cAEAD0.1,                                    h(<$cHash0.1,                                       h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy>),                                       <                                       ($V⊕                                        hkdfExpand(<$cAEAD0,                                                     h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>,                                                        'g'^~yy>),                                                     'K_2e', '1'>,                                                   hkdfExtract('emptyStr', gxy))                                       ),                                        (                                        aeadEncrypt('emptyStr',                                                    hkdfExpand(<$cAEAD0,                                                                 h(<$cHash0,                                                                    <'SIG', 'STAT', $cSUITE0, gx>,                                                                    'g'^~yy>),                                                                 'K_2m'>,                                                               hkdfExtract(hkdfExtract('emptyStr',                                                                                       gxy),                                                                           grx)),                                                    <$V,                                                      h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>,                                                         'g'^~yy>),                                                      'g'^~ltk>,                                                    $cAEAD0)⊕                                        hkdfExpand(<$cAEAD0,                                                     h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>,                                                        'g'^~yy>),                                                     'K_2e', '2'>,                                                   hkdfExtract('emptyStr', gxy))                                       )                                      >,                                       'emptyStr'>),                                    'K_3m'>,                                  hkdfExtract(hkdfExtract('emptyStr', gxy), grx)),                       <$U,                         h(<$cHash0.1,                            h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy>),                            <                            ($V⊕                             hkdfExpand(<$cAEAD0,                                          h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy>),                                          'K_2e', '1'>,                                        hkdfExtract('emptyStr', gxy))                            ),                             (                             aeadEncrypt('emptyStr',                                         hkdfExpand(<$cAEAD0,                                                      h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>,                                                         'g'^~yy>),                                                      'K_2m'>,                                                    hkdfExtract(hkdfExtract('emptyStr', gxy), grx)),                                         <$V, h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy>),                                           'g'^~ltk>,                                         $cAEAD0)⊕                             hkdfExpand(<$cAEAD0,                                          h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy>),                                          'K_2e', '2'>,                                        hkdfExtract('emptyStr', gxy))                            )                           >,                            'emptyStr'>),                         pk(~ltk.1)>,                       $cAEAD0.1)          >,          ~ltk.1)) @ #vk.18
1: !KU( hkdfExpand(<$cAEAD0.1,                  h(<$cHash0.1,                     h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy>),                     <                     ($V⊕                      hkdfExpand(<$cAEAD0,                                   h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy>), 'K_2e', '1'                                 >,                                 hkdfExtract('emptyStr', gxy))                     ),                      (                      aeadEncrypt('emptyStr',                                  hkdfExpand(<$cAEAD0,                                               h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy>),                                               'K_2m'>,                                             hkdfExtract(hkdfExtract('emptyStr', gxy), grx)),                                  <$V, h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy>),                                    'g'^~ltk>,                                  $cAEAD0)⊕                      hkdfExpand(<$cAEAD0,                                   h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy>), 'K_2e', '2'                                 >,                                 hkdfExtract('emptyStr', gxy))                     )                    >,                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(hkdfExtract('emptyStr', gxy), grx))) @ #vk.14
2: splitEqs(1)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 34 (precomputed):
    !KU( sign(<
               <$U, 
                h(<$cHash0.1, 
                   h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy>), 
                   <
                    ($V⊕
                     hkdfExpand(<$cAEAD0, 
                                 h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy>), 'K_2e', '1'>,
                                hkdfExtract('emptyStr', gxy))
                    ), 
                    (
                     aeadEncrypt('emptyStr',
                                 hkdfExpand(<$cAEAD0, 
                                             h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy>), 
                                             'K_2m'>,
                                            hkdfExtract(hkdfExtract('emptyStr', gxy), grx)),
                                 <$V, h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy>), 'g'^~ltk
                                 >,
                                 $cAEAD0)⊕
                     hkdfExpand(<$cAEAD0, 
                                 h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy>), 'K_2e', '2'>,
                                hkdfExtract('emptyStr', gxy))
                    )
                   >, 
                   'emptyStr'>), 
                pk(~ltk.1)>, 
               aeadEncrypt('emptyStr',
                           hkdfExpand(<$cAEAD0.1, 
                                       h(<$cHash0.1, 
                                          h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy>), 
                                          <
                                           ($V⊕
                                            hkdfExpand(<$cAEAD0, 
                                                        h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 
                                                           'g'^~yy>), 
                                                        'K_2e', '1'>,
                                                       hkdfExtract('emptyStr', gxy))
                                           ), 
                                           (
                                            aeadEncrypt('emptyStr',
                                                        hkdfExpand(<$cAEAD0, 
                                                                    h(<$cHash0, 
                                                                       <'SIG', 'STAT', $cSUITE0, gx
                                                                       >, 
                                                                       'g'^~yy>), 
                                                                    'K_2m'>,
                                                                   hkdfExtract(hkdfExtract('emptyStr',
                                                                                           gxy),
                                                                               grx)),
                                                        <$V, 
                                                         h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 
                                                            'g'^~yy>), 
                                                         'g'^~ltk>,
                                                        $cAEAD0)⊕
                                            hkdfExpand(<$cAEAD0, 
                                                        h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 
                                                           'g'^~yy>), 
                                                        'K_2e', '2'>,
                                                       hkdfExtract('emptyStr', gxy))
                                           )
                                          >, 
                                          'emptyStr'>), 
                                       'K_3m'>,
                                      hkdfExtract(hkdfExtract('emptyStr', gxy), grx)),
                           <$U, 
                            h(<$cHash0.1, 
                               h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy>), 
                               <
                                ($V⊕
                                 hkdfExpand(<$cAEAD0, 
                                             h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy>), 
                                             'K_2e', '1'>,
                                            hkdfExtract('emptyStr', gxy))
                                ), 
                                (
                                 aeadEncrypt('emptyStr',
                                             hkdfExpand(<$cAEAD0, 
                                                         h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 
                                                            'g'^~yy>), 
                                                         'K_2m'>,
                                                        hkdfExtract(hkdfExtract('emptyStr', gxy),
                                                                    grx)),
                                             <$V, 
                                              h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy>), 
                                              'g'^~ltk>,
                                             $cAEAD0)⊕
                                 hkdfExpand(<$cAEAD0, 
                                             h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy>), 
                                             'K_2e', '2'>,
                                            hkdfExtract('emptyStr', gxy))
                                )
                               >, 
                               'emptyStr'>), 
                            pk(~ltk.1)>,
                           $cAEAD0.1)
              >,
              ~ltk.1)
    ) @ #vk.18
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0:  (∃ #l. (LTKRev( $U ) @ #l) ∧ (¬(last(#l))) ∧ (#l < #vr.3))  ∥ (∃ #l. (LTKRev( $V ) @ #l) ∧ (¬(last(#l))) ∧ (#l < #vr.3))  ∥ (∃ #l.   (SKRev( <'g'^(~xx*~yy), 'g'^(~ltk*~xx)> ) @ #l) ∧ ¬(last(#l)))
1: !KU( 'g'^(~xx*~yy) ) @ #vk.4
2: !KU( 'g'^(~ltk*~xx) ) @ #vk.5
3: !KU( 'g'^~yy ) @ #vk.14
4: !KU( ($V⊕      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))     )) @ #vk.16
5: !KU( (      aeadEncrypt('emptyStr',                  hkdfExpand(<$cAEAD0,                               h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'>,                             hkdfExtract(hkdfExtract('emptyStr', 'g'^(~xx*~yy)),                                         'g'^(~ltk*~xx))),                  <$V, h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                    'g'^~ltk>,                  $cAEAD0)⊕      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                   '2'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))     )) @ #vk.17
6: !KU( 'g'^~xx ) @ #vk.12

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 42 (directly):
     (∃ #l. (LTKRev( $U ) @ #l) ∧ (¬(last(#l))) ∧ (#l < #vr.3))  ∥
     (∃ #l. (LTKRev( $V ) @ #l) ∧ (¬(last(#l))) ∧ (#l < #vr.3))  ∥
     (∃ #l.
       (SKRev( <'g'^(~xx*~yy), 'g'^(~ltk*~xx)> ) @ #l) ∧ ¬(last(#l)))
  simplified formula:
      "((#j < #l.18) ∨ (#l.18 < #j))"
    to
      "⊤"
  solved goal nr. 44 (simplified): (#j < #l.18)  ∥ (#l.18 < #j)
  simplified formula:
      "((#l.18 = #j) ∨ (#j < #l.18))"
    to
      "⊥"
  solved goal nr. 45 (simplified): (#l.18 = #j)  ∥ (#j < #l.18)
  simplified formula:
      "((#j < #l.18) ∨ (#l.18 < #j))"
    to
      "⊤"
  solved goal nr. 44 (simplified): (#j < #l.18)  ∥ (#l.18 < #j)
  simplified formula:
      "((#l.18 = #j) ∨ (#j < #l.18))"
    to
      "⊥"
  solved goal nr. 45 (simplified): (#l.18 = #j)  ∥ (#j < #l.18)
  simplified formula:
      "((#j < #l.18) ∨ (#l.18 < #j))"
    to
      "#l.18 < #j"
  solved goal nr. 44 (simplified): (#j < #l.18)  ∥ (#l.18 < #j)
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~ltk.1 ) @ #vk.21
1: !KU( h(<$cHash0.1,         h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy>),         <         ($V⊕          hkdfExpand(<$cAEAD0,                       h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy>), 'K_2e', '1'>,                     hkdfExtract('emptyStr', gxy))         ),          (          aeadEncrypt('emptyStr',                      hkdfExpand(<$cAEAD0,                                   h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy>), 'K_2m'>,                                 hkdfExtract(hkdfExtract('emptyStr', gxy), grx)),                      <$V, h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy>), 'g'^~ltk                      >,                      $cAEAD0)⊕          hkdfExpand(<$cAEAD0,                       h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy>), 'K_2e', '2'>,                     hkdfExtract('emptyStr', gxy))         )        >,         'emptyStr'>)) @ #vk.23
2: !KU( hkdfExpand(<$cAEAD0.1,                  h(<$cHash0.1,                     h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy>),                     <                     ($V⊕                      hkdfExpand(<$cAEAD0,                                   h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy>), 'K_2e', '1'                                 >,                                 hkdfExtract('emptyStr', gxy))                     ),                      (                      aeadEncrypt('emptyStr',                                  hkdfExpand(<$cAEAD0,                                               h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy>),                                               'K_2m'>,                                             hkdfExtract(hkdfExtract('emptyStr', gxy), grx)),                                  <$V, h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy>),                                    'g'^~ltk>,                                  $cAEAD0)⊕                      hkdfExpand(<$cAEAD0,                                   h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy>), 'K_2e', '2'                                 >,                                 hkdfExtract('emptyStr', gxy))                     )                    >,                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(hkdfExtract('emptyStr', gxy), grx))) @ #vk.15
3: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1,                                 h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy>),                                 <                                 ($V⊕                                  hkdfExpand(<$cAEAD0,                                               h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy>),                                               'K_2e', '1'>,                                             hkdfExtract('emptyStr', gxy))                                 ),                                  (                                  aeadEncrypt('emptyStr',                                              hkdfExpand(<$cAEAD0,                                                           h(<$cHash0,                                                              <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy                                                            >),                                                           'K_2m'>,                                                         hkdfExtract(hkdfExtract('emptyStr', gxy),                                                                     grx)),                                              <$V,                                                h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy                                                 >),                                                'g'^~ltk>,                                              $cAEAD0)⊕                                  hkdfExpand(<$cAEAD0,                                               h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy>),                                               'K_2e', '2'>,                                             hkdfExtract('emptyStr', gxy))                                 )                                >,                                 'emptyStr'>),                              'K_3m'>,                            hkdfExtract(hkdfExtract('emptyStr', gxy), grx)),                 <$U,                   h(<$cHash0.1,                      h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy>),                      <                      ($V⊕                       hkdfExpand(<$cAEAD0,                                    h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy>), 'K_2e', '1'                                  >,                                  hkdfExtract('emptyStr', gxy))                      ),                       (                       aeadEncrypt('emptyStr',                                   hkdfExpand(<$cAEAD0,                                                h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy                                                 >),                                                'K_2m'>,                                              hkdfExtract(hkdfExtract('emptyStr', gxy), grx)),                                   <$V, h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy>),                                     'g'^~ltk>,                                   $cAEAD0)⊕                       hkdfExpand(<$cAEAD0,                                    h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy>), 'K_2e', '2'                                  >,                                  hkdfExtract('emptyStr', gxy))                      )                     >,                      'emptyStr'>),                   pk(~ltk.1)>,                 $cAEAD0.1)) @ #vk.25
4: splitEqs(1)
5: !KU( pk(~ltk.1) ) @ #vk.24

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 37 (precomputed): !KU( ~ltk.1 ) @ #vk.21
  simplified formula:
      "((#vr.27 = #j) ∨ (#j < #vr.27))"
    to
      "⊥"
  solved goal nr. 46 (simplified): (#vr.27 = #j)  ∥ (#j < #vr.27)
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( sign(<           <$U,             h(<$cHash0.1,                h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy>),                <                ($V⊕                 hkdfExpand(<$cAEAD0,                              h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy>), 'K_2e', '1'>,                            hkdfExtract('emptyStr', gxy))                ),                 (                 aeadEncrypt('emptyStr',                             hkdfExpand(<$cAEAD0,                                          h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy>),                                          'K_2m'>,                                        hkdfExtract(hkdfExtract('emptyStr', gxy), grx)),                             <$V, h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy>), 'g'^~ltk                             >,                             $cAEAD0)⊕                 hkdfExpand(<$cAEAD0,                              h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy>), 'K_2e', '2'>,                            hkdfExtract('emptyStr', gxy))                )               >,                'emptyStr'>),             pk(~ltk.1)>,            aeadEncrypt('emptyStr',                       hkdfExpand(<$cAEAD0.1,                                    h(<$cHash0.1,                                       h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy>),                                       <                                       ($V⊕                                        hkdfExpand(<$cAEAD0,                                                     h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>,                                                        'g'^~yy>),                                                     'K_2e', '1'>,                                                   hkdfExtract('emptyStr', gxy))                                       ),                                        (                                        aeadEncrypt('emptyStr',                                                    hkdfExpand(<$cAEAD0,                                                                 h(<$cHash0,                                                                    <'SIG', 'STAT', $cSUITE0, gx>,                                                                    'g'^~yy>),                                                                 'K_2m'>,                                                               hkdfExtract(hkdfExtract('emptyStr',                                                                                       gxy),                                                                           grx)),                                                    <$V,                                                      h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>,                                                         'g'^~yy>),                                                      'g'^~ltk>,                                                    $cAEAD0)⊕                                        hkdfExpand(<$cAEAD0,                                                     h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>,                                                        'g'^~yy>),                                                     'K_2e', '2'>,                                                   hkdfExtract('emptyStr', gxy))                                       )                                      >,                                       'emptyStr'>),                                    'K_3m'>,                                  hkdfExtract(hkdfExtract('emptyStr', gxy), grx)),                       <$U,                         h(<$cHash0.1,                            h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy>),                            <                            ($V⊕                             hkdfExpand(<$cAEAD0,                                          h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy>),                                          'K_2e', '1'>,                                        hkdfExtract('emptyStr', gxy))                            ),                             (                             aeadEncrypt('emptyStr',                                         hkdfExpand(<$cAEAD0,                                                      h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>,                                                         'g'^~yy>),                                                      'K_2m'>,                                                    hkdfExtract(hkdfExtract('emptyStr', gxy), grx)),                                         <$V, h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy>),                                           'g'^~ltk>,                                         $cAEAD0)⊕                             hkdfExpand(<$cAEAD0,                                          h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy>),                                          'K_2e', '2'>,                                        hkdfExtract('emptyStr', gxy))                            )                           >,                            'emptyStr'>),                         pk(~ltk.1)>,                       $cAEAD0.1)          >,          ~ltk.1)) @ #vk.18
1: !KU( hkdfExpand(<$cAEAD0.1,                  h(<$cHash0.1,                     h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy>),                     <                     ($V⊕                      hkdfExpand(<$cAEAD0,                                   h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy>), 'K_2e', '1'                                 >,                                 hkdfExtract('emptyStr', gxy))                     ),                      (                      aeadEncrypt('emptyStr',                                  hkdfExpand(<$cAEAD0,                                               h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy>),                                               'K_2m'>,                                             hkdfExtract(hkdfExtract('emptyStr', gxy), grx)),                                  <$V, h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy>),                                    'g'^~ltk>,                                  $cAEAD0)⊕                      hkdfExpand(<$cAEAD0,                                   h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy>), 'K_2e', '2'                                 >,                                 hkdfExtract('emptyStr', gxy))                     )                    >,                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(hkdfExtract('emptyStr', gxy), grx))) @ #vk.14
2: splitEqs(1)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 34 (precomputed):
    !KU( sign(<
               <$U, 
                h(<$cHash0.1, 
                   h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy>), 
                   <
                    ($V⊕
                     hkdfExpand(<$cAEAD0, 
                                 h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy>), 'K_2e', '1'>,
                                hkdfExtract('emptyStr', gxy))
                    ), 
                    (
                     aeadEncrypt('emptyStr',
                                 hkdfExpand(<$cAEAD0, 
                                             h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy>), 
                                             'K_2m'>,
                                            hkdfExtract(hkdfExtract('emptyStr', gxy), grx)),
                                 <$V, h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy>), 'g'^~ltk
                                 >,
                                 $cAEAD0)⊕
                     hkdfExpand(<$cAEAD0, 
                                 h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy>), 'K_2e', '2'>,
                                hkdfExtract('emptyStr', gxy))
                    )
                   >, 
                   'emptyStr'>), 
                pk(~ltk.1)>, 
               aeadEncrypt('emptyStr',
                           hkdfExpand(<$cAEAD0.1, 
                                       h(<$cHash0.1, 
                                          h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy>), 
                                          <
                                           ($V⊕
                                            hkdfExpand(<$cAEAD0, 
                                                        h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 
                                                           'g'^~yy>), 
                                                        'K_2e', '1'>,
                                                       hkdfExtract('emptyStr', gxy))
                                           ), 
                                           (
                                            aeadEncrypt('emptyStr',
                                                        hkdfExpand(<$cAEAD0, 
                                                                    h(<$cHash0, 
                                                                       <'SIG', 'STAT', $cSUITE0, gx
                                                                       >, 
                                                                       'g'^~yy>), 
                                                                    'K_2m'>,
                                                                   hkdfExtract(hkdfExtract('emptyStr',
                                                                                           gxy),
                                                                               grx)),
                                                        <$V, 
                                                         h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 
                                                            'g'^~yy>), 
                                                         'g'^~ltk>,
                                                        $cAEAD0)⊕
                                            hkdfExpand(<$cAEAD0, 
                                                        h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 
                                                           'g'^~yy>), 
                                                        'K_2e', '2'>,
                                                       hkdfExtract('emptyStr', gxy))
                                           )
                                          >, 
                                          'emptyStr'>), 
                                       'K_3m'>,
                                      hkdfExtract(hkdfExtract('emptyStr', gxy), grx)),
                           <$U, 
                            h(<$cHash0.1, 
                               h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy>), 
                               <
                                ($V⊕
                                 hkdfExpand(<$cAEAD0, 
                                             h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy>), 
                                             'K_2e', '1'>,
                                            hkdfExtract('emptyStr', gxy))
                                ), 
                                (
                                 aeadEncrypt('emptyStr',
                                             hkdfExpand(<$cAEAD0, 
                                                         h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 
                                                            'g'^~yy>), 
                                                         'K_2m'>,
                                                        hkdfExtract(hkdfExtract('emptyStr', gxy),
                                                                    grx)),
                                             <$V, 
                                              h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy>), 
                                              'g'^~ltk>,
                                             $cAEAD0)⊕
                                 hkdfExpand(<$cAEAD0, 
                                             h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy>), 
                                             'K_2e', '2'>,
                                            hkdfExtract('emptyStr', gxy))
                                )
                               >, 
                               'emptyStr'>), 
                            pk(~ltk.1)>,
                           $cAEAD0.1)
              >,
              ~ltk.1)
    ) @ #vk.18
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( 'g'^(~xx*~yy) ) @ #vk.4
1: !KU( 'g'^(~ltk*~xx) ) @ #vk.5
2: !KU( 'g'^~yy ) @ #vk.14
3: !KU( ($V⊕      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))     )) @ #vk.16
4: !KU( (      aeadEncrypt('emptyStr',                  hkdfExpand(<$cAEAD0,                               h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'>,                             hkdfExtract(hkdfExtract('emptyStr', 'g'^(~xx*~yy)),                                         'g'^(~ltk*~xx))),                  <$V, h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                    'g'^~ltk>,                  $cAEAD0)⊕      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                   '2'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))     )) @ #vk.17
5: !KU( 'g'^~xx ) @ #vk.12

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 38 (precomputed): !KU( 'g'^(~xx*~yy) ) @ #vk.4
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.18
1: !KU( 'g'^(~ltk*~xx) ) @ #vk.5
2: !KU( 'g'^~yy ) @ #vk.14
3: !KU( ($V⊕      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))     )) @ #vk.16
4: !KU( (      aeadEncrypt('emptyStr',                  hkdfExpand(<$cAEAD0,                               h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'>,                             hkdfExtract(hkdfExtract('emptyStr', 'g'^(~xx*~yy)),                                         'g'^(~ltk*~xx))),                  <$V, h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                    'g'^~ltk>,                  $cAEAD0)⊕      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                   '2'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))     )) @ #vk.17
5: !KU( 'g'^~xx ) @ #vk.12

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 50 (precomputed): !KU( ~xx ) @ #vk.18
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.20
1: !KU( ~yy ) @ #vk.21
2: !KU( 'g'^(~ltk*~xx) ) @ #vk.5
3: !KU( 'g'^~yy ) @ #vk.14
4: !KU( ($V⊕      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))     )) @ #vk.16
5: !KU( (      aeadEncrypt('emptyStr',                  hkdfExpand(<$cAEAD0,                               h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'>,                             hkdfExtract(hkdfExtract('emptyStr', 'g'^(~xx*~yy)),                                         'g'^(~ltk*~xx))),                  <$V, h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                    'g'^~ltk>,                  $cAEAD0)⊕      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                   '2'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))     )) @ #vk.17
6: !KU( 'g'^~xx ) @ #vk.12

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 45 (precomputed): !KU( ~xx ) @ #vk.20
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~yy ) @ #vk.18
1: !KU( 'g'^(~ltk*~xx) ) @ #vk.5
2: !KU( 'g'^~yy ) @ #vk.14
3: !KU( ($V⊕      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))     )) @ #vk.16
4: !KU( (      aeadEncrypt('emptyStr',                  hkdfExpand(<$cAEAD0,                               h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'>,                             hkdfExtract(hkdfExtract('emptyStr', 'g'^(~xx*~yy)),                                         'g'^(~ltk*~xx))),                  <$V, h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                    'g'^~ltk>,                  $cAEAD0)⊕      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                   '2'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))     )) @ #vk.17
5: !KU( 'g'^~xx ) @ #vk.12

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 43 (precomputed): !KU( ~yy ) @ #vk.18
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~ltk.1 ) @ #vk.21
1: !KU( h(<$cHash0.1,         h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy>),         <         ($V⊕          hkdfExpand(<$cAEAD0,                       h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy>), 'K_2e', '1'>,                     hkdfExtract('emptyStr', gxy))         ),          (          aeadEncrypt('emptyStr',                      hkdfExpand(<$cAEAD0,                                   h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy>), 'K_2m'>,                                 hkdfExtract(hkdfExtract('emptyStr', gxy), grx)),                      <$V, h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy>), 'g'^~ltk                      >,                      $cAEAD0)⊕          hkdfExpand(<$cAEAD0,                       h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy>), 'K_2e', '2'>,                     hkdfExtract('emptyStr', gxy))         )        >,         'emptyStr'>)) @ #vk.23
2: !KU( hkdfExpand(<$cAEAD0.1,                  h(<$cHash0.1,                     h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy>),                     <                     ($V⊕                      hkdfExpand(<$cAEAD0,                                   h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy>), 'K_2e', '1'                                 >,                                 hkdfExtract('emptyStr', gxy))                     ),                      (                      aeadEncrypt('emptyStr',                                  hkdfExpand(<$cAEAD0,                                               h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy>),                                               'K_2m'>,                                             hkdfExtract(hkdfExtract('emptyStr', gxy), grx)),                                  <$V, h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy>),                                    'g'^~ltk>,                                  $cAEAD0)⊕                      hkdfExpand(<$cAEAD0,                                   h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy>), 'K_2e', '2'                                 >,                                 hkdfExtract('emptyStr', gxy))                     )                    >,                     'emptyStr'>),                  'K_3ae'>,                hkdfExtract(hkdfExtract('emptyStr', gxy), grx))) @ #vk.15
3: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.1,                              h(<$cHash0.1,                                 h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy>),                                 <                                 ($V⊕                                  hkdfExpand(<$cAEAD0,                                               h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy>),                                               'K_2e', '1'>,                                             hkdfExtract('emptyStr', gxy))                                 ),                                  (                                  aeadEncrypt('emptyStr',                                              hkdfExpand(<$cAEAD0,                                                           h(<$cHash0,                                                              <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy                                                            >),                                                           'K_2m'>,                                                         hkdfExtract(hkdfExtract('emptyStr', gxy),                                                                     grx)),                                              <$V,                                                h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy                                                 >),                                                'g'^~ltk>,                                              $cAEAD0)⊕                                  hkdfExpand(<$cAEAD0,                                               h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy>),                                               'K_2e', '2'>,                                             hkdfExtract('emptyStr', gxy))                                 )                                >,                                 'emptyStr'>),                              'K_3m'>,                            hkdfExtract(hkdfExtract('emptyStr', gxy), grx)),                 <$U,                   h(<$cHash0.1,                      h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy>),                      <                      ($V⊕                       hkdfExpand(<$cAEAD0,                                    h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy>), 'K_2e', '1'                                  >,                                  hkdfExtract('emptyStr', gxy))                      ),                       (                       aeadEncrypt('emptyStr',                                   hkdfExpand(<$cAEAD0,                                                h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy                                                 >),                                                'K_2m'>,                                              hkdfExtract(hkdfExtract('emptyStr', gxy), grx)),                                   <$V, h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy>),                                     'g'^~ltk>,                                   $cAEAD0)⊕                       hkdfExpand(<$cAEAD0,                                    h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy>), 'K_2e', '2'                                  >,                                  hkdfExtract('emptyStr', gxy))                      )                     >,                      'emptyStr'>),                   pk(~ltk.1)>,                 $cAEAD0.1)) @ #vk.25
4: splitEqs(1)
5: !KU( pk(~ltk.1) ) @ #vk.24

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 37 (precomputed): !KU( ~ltk.1 ) @ #vk.21
  simplified formula:
      "((#vr.27 = #j) ∨ (#j < #vr.27))"
    to
      "⊥"
  solved goal nr. 46 (simplified): (#vr.27 = #j)  ∥ (#j < #vr.27)
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.33
1: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0,                              h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'>,                            hkdfExtract(hkdfExtract('emptyStr', 'g'^(~xx*~yy)),                                        'g'^(~ltk*~xx))),                 <$V, h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                   'g'^~ltk>,                 $cAEAD0)) @ #vk.22
2: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0,                              h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'>,                            hkdfExtract(hkdfExtract('emptyStr', 'g'^(~xx*~yy)),                                        'g'^(~xx*~ltk.2))),                 <$V.1, h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                   'g'^~ltk.2>,                 $cAEAD0)) @ #vk.31
3: !KU( 'g'^~xx ) @ #vk.15
4: !KU( 'g'^~yy ) @ #vk.20

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 78 (precomputed): !KU( ~xx ) @ #vk.33
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.35
1: !KU( ~yy ) @ #vk.36
2: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0,                              h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'>,                            hkdfExtract(hkdfExtract('emptyStr', 'g'^(~xx*~yy)),                                        'g'^(~ltk*~xx))),                 <$V, h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                   'g'^~ltk>,                 $cAEAD0)) @ #vk.22
3: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0,                              h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'>,                            hkdfExtract(hkdfExtract('emptyStr', 'g'^(~xx*~yy)),                                        'g'^(~xx*~ltk.2))),                 <$V.1, h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                   'g'^~ltk.2>,                 $cAEAD0)) @ #vk.31
4: !KU( 'g'^~xx ) @ #vk.15
5: !KU( 'g'^~yy ) @ #vk.20

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 73 (precomputed): !KU( ~xx ) @ #vk.35
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~yy ) @ #vk.33
1: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0,                              h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'>,                            hkdfExtract(hkdfExtract('emptyStr', 'g'^(~xx*~yy)),                                        'g'^(~ltk*~xx))),                 <$V, h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                   'g'^~ltk>,                 $cAEAD0)) @ #vk.22
2: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0,                              h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'>,                            hkdfExtract(hkdfExtract('emptyStr', 'g'^(~xx*~yy)),                                        'g'^(~xx*~ltk.2))),                 <$V.1, h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                   'g'^~ltk.2>,                 $cAEAD0)) @ #vk.31
3: !KU( 'g'^~xx ) @ #vk.15
4: !KU( 'g'^~yy ) @ #vk.20

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 71 (precomputed): !KU( ~yy ) @ #vk.33
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~yy ) @ #vk.36
1: !KU( 'g'^~xx ) @ #vk.18
2: !KU( 'g'^~yy ) @ #vk.23

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 80 (precomputed): !KU( ~yy ) @ #vk.36
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.36
1: !KU( 'g'^~xx ) @ #vk.18
2: !KU( 'g'^~yy ) @ #vk.23

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 87 (precomputed): !KU( ~xx ) @ #vk.36
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.38
1: !KU( ~yy ) @ #vk.39
2: !KU( 'g'^~xx ) @ #vk.18
3: !KU( 'g'^~yy ) @ #vk.23

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 82 (precomputed): !KU( ~xx ) @ #vk.38
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( hkdfExtract(hkdfExtract('emptyStr', z), 'g'^(~ltk*~xx))) @ #vk.42
1: splitEqs(0)
2: !KU( hkdfExtract('emptyStr', z) ) @ #vk.28
3: !KU( 'g'^~xx ) @ #vk.18
4: !KU( 'g'^~ltk ) @ #vk.41

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 74 (precomputed):
    !KU( hkdfExtract(hkdfExtract('emptyStr', z), 'g'^(~ltk*~xx))
    ) @ #vk.42
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( 'g'^(~xx*~yy) ) @ #vk.26
1: !KU( 'g'^~xx ) @ #vk.19
2: !KU( 'g'^~ltk ) @ #vk.39
3: !KU( 'g'^~yy ) @ #vk.25

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 95 (precomputed): !KU( 'g'^(~xx*~yy) ) @ #vk.26
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~yy ) @ #vk.40
1: !KU( 'g'^~xx ) @ #vk.20
2: !KU( 'g'^~ltk ) @ #vk.39
3: !KU( 'g'^~yy ) @ #vk.26

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 100 (precomputed): !KU( ~yy ) @ #vk.40
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.42
1: !KU( ~yy ) @ #vk.43
2: !KU( 'g'^~xx ) @ #vk.20
3: !KU( 'g'^~ltk ) @ #vk.39
4: !KU( 'g'^~yy ) @ #vk.26

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 102 (precomputed): !KU( ~xx ) @ #vk.42
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.40
1: !KU( 'g'^~xx ) @ #vk.20
2: !KU( 'g'^~ltk ) @ #vk.39
3: !KU( 'g'^~yy ) @ #vk.26

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 107 (precomputed): !KU( ~xx ) @ #vk.40
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( 'g'^(~xx*~yy) ) @ #vk.26
1: !KU( 'g'^~xx ) @ #vk.19
2: !KU( 'g'^~ltk ) @ #vk.39
3: !KU( 'g'^~yy ) @ #vk.25

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 86 (precomputed): !KU( 'g'^(~xx*~yy) ) @ #vk.26
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.43
1: !KU( ~yy ) @ #vk.44
2: !KU( 'g'^~xx ) @ #vk.20
3: !KU( 'g'^~ltk ) @ #vk.39
4: !KU( 'g'^~yy ) @ #vk.26

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 93 (precomputed): !KU( ~xx ) @ #vk.43
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~yy ) @ #vk.41
1: !KU( 'g'^~xx ) @ #vk.20
2: !KU( 'g'^~ltk ) @ #vk.39
3: !KU( 'g'^~yy ) @ #vk.26

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 91 (precomputed): !KU( ~yy ) @ #vk.41
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.41
1: !KU( 'g'^~xx ) @ #vk.20
2: !KU( 'g'^~ltk ) @ #vk.39
3: !KU( 'g'^~yy ) @ #vk.26

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 98 (precomputed): !KU( ~xx ) @ #vk.41
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( 'g'^(~xx*~yy) ) @ #vk.12
1: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                  '1'>,                hkdfExtract('emptyStr', 'g'^(~xx*~yy)))) @ #vk.13
2: !KU( 'g'^~yy ) @ #vk.11
3: !KU( 'g'^~xx ) @ #vk.10

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 48 (precomputed): !KU( 'g'^(~xx*~yy) ) @ #vk.12
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~yy ) @ #vk.18
1: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                  '1'>,                hkdfExtract('emptyStr', 'g'^(~xx*~yy)))) @ #vk.13
2: !KU( 'g'^~yy ) @ #vk.12
3: !KU( 'g'^~xx ) @ #vk.11

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 53 (precomputed): !KU( ~yy ) @ #vk.18
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.20
1: !KU( ~yy ) @ #vk.21
2: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                  '1'>,                hkdfExtract('emptyStr', 'g'^(~xx*~yy)))) @ #vk.13
3: !KU( 'g'^~yy ) @ #vk.12
4: !KU( 'g'^~xx ) @ #vk.11

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 55 (precomputed): !KU( ~xx ) @ #vk.20
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.18
1: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                  '1'>,                hkdfExtract('emptyStr', 'g'^(~xx*~yy)))) @ #vk.13
2: !KU( 'g'^~yy ) @ #vk.12
3: !KU( 'g'^~xx ) @ #vk.11

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 60 (precomputed): !KU( ~xx ) @ #vk.18
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !PK_STAT( $V.1, pkV ) ▶₁ #vr.8
1: !KU( 'g'^(~xx*~yy) ) @ #vk.12
2: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                  '1'>,                hkdfExtract('emptyStr', 'g'^(~xx*~yy)))) @ #vk.13
3: !KU( (      aeadEncrypt('emptyStr',                  hkdfExpand(<$cAEAD0,                               h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'>,                             hkdfExtract(hkdfExtract('emptyStr', 'g'^(~xx*~yy)),                                         'g'^(~ltk*~xx))),                  <$V, h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                    'g'^~ltk>,                  $cAEAD0)⊕      aeadEncrypt('emptyStr',                  hkdfExpand(<$cAEAD0,                               h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'>,                             hkdfExtract(hkdfExtract('emptyStr', 'g'^(~xx*~yy)),                                         'g'^(~xx*~ltk.2))),                  <$V.1, h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                    pkV>,                  $cAEAD0)     )) @ #vk.18
4: !KU( 'g'^~yy ) @ #vk.11
5: !KU( 'g'^~xx ) @ #vk.9

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 35 (precomputed): !PK_STAT( $V.1, pkV ) ▶₁ #vr.8
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( 'g'^(~xx*~yy) ) @ #vk.12
1: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                  '1'>,                hkdfExtract('emptyStr', 'g'^(~xx*~yy)))) @ #vk.13
2: !KU( (      aeadEncrypt('emptyStr',                  hkdfExpand(<$cAEAD0,                               h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'>,                             hkdfExtract(hkdfExtract('emptyStr', 'g'^(~xx*~yy)),                                         'g'^(~ltk*~xx))),                  <$V, h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                    'g'^~ltk>,                  $cAEAD0)⊕      aeadEncrypt('emptyStr',                  hkdfExpand(<$cAEAD0,                               h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'>,                             hkdfExtract(hkdfExtract('emptyStr', 'g'^(~xx*~yy)),                                         'g'^(~xx*~ltk.2))),                  <$V.1, h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                    'g'^~ltk.2>,                  $cAEAD0)     )) @ #vk.18
3: !KU( 'g'^~yy ) @ #vk.11
4: !KU( 'g'^~xx ) @ #vk.9

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 52 (precomputed): !KU( 'g'^(~xx*~yy) ) @ #vk.12
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.21
1: !KU( ~yy ) @ #vk.22
2: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                  '1'>,                hkdfExtract('emptyStr', 'g'^(~xx*~yy)))) @ #vk.13
3: !KU( (      aeadEncrypt('emptyStr',                  hkdfExpand(<$cAEAD0,                               h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'>,                             hkdfExtract(hkdfExtract('emptyStr', 'g'^(~xx*~yy)),                                         'g'^(~ltk*~xx))),                  <$V, h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                    'g'^~ltk>,                  $cAEAD0)⊕      aeadEncrypt('emptyStr',                  hkdfExpand(<$cAEAD0,                               h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'>,                             hkdfExtract(hkdfExtract('emptyStr', 'g'^(~xx*~yy)),                                         'g'^(~xx*~ltk.2))),                  <$V.1, h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                    'g'^~ltk.2>,                  $cAEAD0)     )) @ #vk.18
4: !KU( 'g'^~yy ) @ #vk.12
5: !KU( 'g'^~xx ) @ #vk.10

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 59 (precomputed): !KU( ~xx ) @ #vk.21
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~yy ) @ #vk.19
1: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                  '1'>,                hkdfExtract('emptyStr', 'g'^(~xx*~yy)))) @ #vk.13
2: !KU( (      aeadEncrypt('emptyStr',                  hkdfExpand(<$cAEAD0,                               h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'>,                             hkdfExtract(hkdfExtract('emptyStr', 'g'^(~xx*~yy)),                                         'g'^(~ltk*~xx))),                  <$V, h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                    'g'^~ltk>,                  $cAEAD0)⊕      aeadEncrypt('emptyStr',                  hkdfExpand(<$cAEAD0,                               h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'>,                             hkdfExtract(hkdfExtract('emptyStr', 'g'^(~xx*~yy)),                                         'g'^(~xx*~ltk.2))),                  <$V.1, h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                    'g'^~ltk.2>,                  $cAEAD0)     )) @ #vk.18
3: !KU( 'g'^~yy ) @ #vk.12
4: !KU( 'g'^~xx ) @ #vk.10

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 57 (precomputed): !KU( ~yy ) @ #vk.19
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.19
1: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                  '1'>,                hkdfExtract('emptyStr', 'g'^(~xx*~yy)))) @ #vk.13
2: !KU( (      aeadEncrypt('emptyStr',                  hkdfExpand(<$cAEAD0,                               h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'>,                             hkdfExtract(hkdfExtract('emptyStr', 'g'^(~xx*~yy)),                                         'g'^(~ltk*~xx))),                  <$V, h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                    'g'^~ltk>,                  $cAEAD0)⊕      aeadEncrypt('emptyStr',                  hkdfExpand(<$cAEAD0,                               h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'>,                             hkdfExtract(hkdfExtract('emptyStr', 'g'^(~xx*~yy)),                                         'g'^(~xx*~ltk.2))),                  <$V.1, h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                    'g'^~ltk.2>,                  $cAEAD0)     )) @ #vk.18
3: !KU( 'g'^~yy ) @ #vk.12
4: !KU( 'g'^~xx ) @ #vk.10

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 64 (precomputed): !KU( ~xx ) @ #vk.19
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( 'g'^(~xx*~yy) ) @ #vk.12
1: !KU( (      aeadEncrypt('emptyStr',                  hkdfExpand(<$cAEAD0,                               h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'>,                             hkdfExtract(hkdfExtract('emptyStr', 'g'^(~xx*~yy)),                                         'g'^(~ltk*~xx))),                  <$V, h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                    'g'^~ltk>,                  $cAEAD0)⊕      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                   '2'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))     )) @ #vk.11
2: !KU( 'g'^~yy ) @ #vk.10
3: !KU( 'g'^~xx ) @ #vk.9

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 46 (precomputed): !KU( 'g'^(~xx*~yy) ) @ #vk.12
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.18
1: !KU( ~yy ) @ #vk.19
2: !KU( (      aeadEncrypt('emptyStr',                  hkdfExpand(<$cAEAD0,                               h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'>,                             hkdfExtract(hkdfExtract('emptyStr', 'g'^(~xx*~yy)),                                         'g'^(~ltk*~xx))),                  <$V, h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                    'g'^~ltk>,                  $cAEAD0)⊕      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                   '2'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))     )) @ #vk.12
3: !KU( 'g'^~yy ) @ #vk.11
4: !KU( 'g'^~xx ) @ #vk.10

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 53 (precomputed): !KU( ~xx ) @ #vk.18
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.16
1: !KU( (      aeadEncrypt('emptyStr',                  hkdfExpand(<$cAEAD0,                               h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'>,                             hkdfExtract(hkdfExtract('emptyStr', 'g'^(~xx*~yy)),                                         'g'^(~ltk*~xx))),                  <$V, h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                    'g'^~ltk>,                  $cAEAD0)⊕      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                   '2'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))     )) @ #vk.12
2: !KU( 'g'^~yy ) @ #vk.11
3: !KU( 'g'^~xx ) @ #vk.10

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 58 (precomputed): !KU( ~xx ) @ #vk.16
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~yy ) @ #vk.16
1: !KU( (      aeadEncrypt('emptyStr',                  hkdfExpand(<$cAEAD0,                               h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'>,                             hkdfExtract(hkdfExtract('emptyStr', 'g'^(~xx*~yy)),                                         'g'^(~ltk*~xx))),                  <$V, h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                    'g'^~ltk>,                  $cAEAD0)⊕      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                   '2'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))     )) @ #vk.12
2: !KU( 'g'^~yy ) @ #vk.11
3: !KU( 'g'^~xx ) @ #vk.10

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 51 (precomputed): !KU( ~yy ) @ #vk.16
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( (      aeadEncrypt('emptyStr',                  hkdfExpand(<$cAEAD0,                               h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                             hkdfExtract(hkdfExtract('emptyStr', z), 'g'^(~ltk*~xx))),                  <$V, h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'g'^~ltk                  >,                  $cAEAD0)⊕      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.7
1: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', z))⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'STAT', $cSUITE0.1, gx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z.1))     )) @ #vk.16
2: splitEqs(0)
3: splitEqs(1)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 16 (directly):
    !KU( (
          aeadEncrypt('emptyStr',
                      hkdfExpand(<$cAEAD0, 
                                  h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,
                                 hkdfExtract(hkdfExtract('emptyStr', z), 'g'^(~ltk*~xx))),
                      <$V, h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'g'^~ltk
                      >,
                      $cAEAD0)⊕
          hkdfExpand(<$cAEAD0, 
                      h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,
                     hkdfExtract('emptyStr', z))
         )
    ) @ #vk.7
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', z))⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'STAT', $cSUITE0.1, gx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z.1))     )) @ #vk.16
1: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                hkdfExtract('emptyStr', z))) @ #vk.17
2: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0,                              h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                            hkdfExtract(hkdfExtract('emptyStr', z), 'g'^(~ltk*~xx))),                 <$V, h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'g'^~ltk                 >,                 $cAEAD0)) @ #vk.18
3: splitEqs(0)
4: splitEqs(1)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 46 (directly):
    !KU( (
          hkdfExpand(<$cAEAD0, 
                      h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,
                     hkdfExtract('emptyStr', z))⊕
          hkdfExpand(<$cAEAD0.1, 
                      h(<$cHash0.1, <'SIG', 'STAT', $cSUITE0.1, gx>, 'g'^~yy>), 'K_2e', 
                      '1'>,
                     hkdfExtract('emptyStr', z.1))
         )
    ) @ #vk.16
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KD( (      aeadEncrypt('emptyStr',                  hkdfExpand(<$cAEAD0,                               h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                             hkdfExtract(hkdfExtract('emptyStr', z), 'g'^(~ltk*~xx))),                  <$V, h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'g'^~ltk                  >,                  $cAEAD0)⊕      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', z))     )) ▶₀ #vk.3
1: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', z))⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'STAT', $cSUITE0.1, gx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z.1))     )) @ #vk.16
2: splitEqs(0)
3: splitEqs(1)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KD( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', z))⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'STAT', $cSUITE0.1, gx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z.1))     )) ▶₀ #vk.4
1: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                hkdfExtract('emptyStr', z))) @ #vk.17
2: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0,                              h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                            hkdfExtract(hkdfExtract('emptyStr', z), 'g'^(~ltk*~xx))),                 <$V, h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'g'^~ltk                 >,                 $cAEAD0)) @ #vk.18
3: splitEqs(0)
4: splitEqs(1)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                hkdfExtract('emptyStr', z))) @ #vk.17
1: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0,                              h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                            hkdfExtract(hkdfExtract('emptyStr', z), 'g'^(~ltk*~xx))),                 <$V, h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'g'^~ltk                 >,                 $cAEAD0)) @ #vk.18
2: !KU( hkdfExpand(<$cAEAD0.1,                  h(<$cHash0.1, <'SIG', 'STAT', $cSUITE0.1, gx>, 'g'^~yy>), 'K_2e',                  '1'>,                hkdfExtract('emptyStr', z.1))) @ #vk.19
3: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                hkdfExtract('emptyStr', z))) @ #vk.20
4: splitEqs(0)
5: splitEqs(1)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 53 (precomputed):
    !KU( hkdfExpand(<$cAEAD0, 
                     h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,
                    hkdfExtract('emptyStr', z))
    ) @ #vk.17
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>)) @ #vk.25
1: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0,                              h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                            hkdfExtract(hkdfExtract('emptyStr', z), 'g'^(~ltk*~xx))),                 <$V, h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'g'^~ltk                 >,                 $cAEAD0)) @ #vk.18
2: !KU( hkdfExpand(<$cAEAD0.1,                  h(<$cHash0.1, <'SIG', 'STAT', $cSUITE0.1, gx>, 'g'^~yy>), 'K_2e',                  '1'>,                hkdfExtract('emptyStr', z.1))) @ #vk.19
3: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                hkdfExtract('emptyStr', z))) @ #vk.20
4: splitEqs(0)
5: splitEqs(1)
6: !KU( hkdfExtract('emptyStr', z) ) @ #vk.22

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 62 (precomputed):
    !KU( h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>)
    ) @ #vk.25
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( 'g'^(~xx*~yy) ) @ #vk.14
1: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0,                              h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'>,                            hkdfExtract(hkdfExtract('emptyStr', 'g'^(~xx*~yy)),                                        'g'^(~ltk*~xx))),                 <$V, h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                   'g'^~ltk>,                 $cAEAD0)) @ #vk.22
2: !KU( hkdfExpand(<$cAEAD0.1,                  h(<$cHash0.1, <'SIG', 'STAT', $cSUITE0.1, gx>, 'g'^~yy.1>),                  'K_2e', '1'>,                hkdfExtract('emptyStr', z))) @ #vk.23
3: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                  '1'>,                hkdfExtract('emptyStr', 'g'^(~xx*~yy)))) @ #vk.24
4: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0,                              h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'>,                            hkdfExtract(hkdfExtract('emptyStr', 'g'^(~xx*~yy)),                                        'g'^(~xx*~ltk.2))),                 <$V.1, h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                   'g'^~ltk.2>,                 $cAEAD0)) @ #vk.26
5: splitEqs(1)
6: !KU( 'g'^~xx ) @ #vk.11
7: !KU( 'g'^~yy ) @ #vk.13

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 69 (precomputed): !KU( 'g'^(~xx*~yy) ) @ #vk.14
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~yy ) @ #vk.27
1: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0,                              h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'>,                            hkdfExtract(hkdfExtract('emptyStr', 'g'^(~xx*~yy)),                                        'g'^(~ltk*~xx))),                 <$V, h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                   'g'^~ltk>,                 $cAEAD0)) @ #vk.22
2: !KU( hkdfExpand(<$cAEAD0.1,                  h(<$cHash0.1, <'SIG', 'STAT', $cSUITE0.1, gx>, 'g'^~yy.1>),                  'K_2e', '1'>,                hkdfExtract('emptyStr', z))) @ #vk.23
3: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                  '1'>,                hkdfExtract('emptyStr', 'g'^(~xx*~yy)))) @ #vk.24
4: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0,                              h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'>,                            hkdfExtract(hkdfExtract('emptyStr', 'g'^(~xx*~yy)),                                        'g'^(~xx*~ltk.2))),                 <$V.1, h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                   'g'^~ltk.2>,                 $cAEAD0)) @ #vk.26
5: splitEqs(1)
6: !KU( 'g'^~xx ) @ #vk.12
7: !KU( 'g'^~yy ) @ #vk.14

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 71 (precomputed): !KU( ~yy ) @ #vk.27
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.27
1: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0,                              h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'>,                            hkdfExtract(hkdfExtract('emptyStr', 'g'^(~xx*~yy)),                                        'g'^(~ltk*~xx))),                 <$V, h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                   'g'^~ltk>,                 $cAEAD0)) @ #vk.22
2: !KU( hkdfExpand(<$cAEAD0.1,                  h(<$cHash0.1, <'SIG', 'STAT', $cSUITE0.1, gx>, 'g'^~yy.1>),                  'K_2e', '1'>,                hkdfExtract('emptyStr', z))) @ #vk.23
3: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                  '1'>,                hkdfExtract('emptyStr', 'g'^(~xx*~yy)))) @ #vk.24
4: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0,                              h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'>,                            hkdfExtract(hkdfExtract('emptyStr', 'g'^(~xx*~yy)),                                        'g'^(~xx*~ltk.2))),                 <$V.1, h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                   'g'^~ltk.2>,                 $cAEAD0)) @ #vk.26
5: splitEqs(1)
6: !KU( 'g'^~xx ) @ #vk.12
7: !KU( 'g'^~yy ) @ #vk.14

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 78 (precomputed): !KU( ~xx ) @ #vk.27
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.29
1: !KU( ~yy ) @ #vk.30
2: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0,                              h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'>,                            hkdfExtract(hkdfExtract('emptyStr', 'g'^(~xx*~yy)),                                        'g'^(~ltk*~xx))),                 <$V, h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                   'g'^~ltk>,                 $cAEAD0)) @ #vk.22
3: !KU( hkdfExpand(<$cAEAD0.1,                  h(<$cHash0.1, <'SIG', 'STAT', $cSUITE0.1, gx>, 'g'^~yy.1>),                  'K_2e', '1'>,                hkdfExtract('emptyStr', z))) @ #vk.23
4: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                  '1'>,                hkdfExtract('emptyStr', 'g'^(~xx*~yy)))) @ #vk.24
5: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0,                              h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'>,                            hkdfExtract(hkdfExtract('emptyStr', 'g'^(~xx*~yy)),                                        'g'^(~xx*~ltk.2))),                 <$V.1, h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                   'g'^~ltk.2>,                 $cAEAD0)) @ #vk.26
6: splitEqs(1)
7: !KU( 'g'^~xx ) @ #vk.12
8: !KU( 'g'^~yy ) @ #vk.14

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 73 (precomputed): !KU( ~xx ) @ #vk.29
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0,                              h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                            hkdfExtract(hkdfExtract('emptyStr', z), 'g'^(~ltk*~xx))),                 <$V, h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'g'^~ltk                 >,                 $cAEAD0)) @ #vk.24
1: !KU( hkdfExpand(<$cAEAD0.1,                  h(<$cHash0.1, <'SIG', 'STAT', $cSUITE0.1, gx>, 'g'^~yy>), 'K_2e',                  '1'>,                hkdfExtract('emptyStr', z.1))) @ #vk.25
2: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                hkdfExtract('emptyStr', z))) @ #vk.26
3: splitEqs(0)
4: splitEqs(1)
5: !KU( hkdfExtract('emptyStr', z) ) @ #vk.28
6: !KU( 'g'^~xx ) @ #vk.12

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 54 (precomputed):
    !KU( aeadEncrypt('emptyStr',
                     hkdfExpand(<$cAEAD0, 
                                 h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,
                                hkdfExtract(hkdfExtract('emptyStr', z), 'g'^(~ltk*~xx))),
                     <$V, h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'g'^~ltk
                     >,
                     $cAEAD0)
    ) @ #vk.24
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( hkdfExpand(<$cAEAD0.1,                  h(<$cHash0.1, <'SIG', 'STAT', $cSUITE0.1, gx>, 'g'^~yy>), 'K_2e',                  '1'>,                hkdfExtract('emptyStr', z.1))) @ #vk.28
1: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                hkdfExtract('emptyStr', z))) @ #vk.29
2: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                hkdfExtract(hkdfExtract('emptyStr', z), 'g'^(~ltk*~xx)))) @ #vk.39
3: splitEqs(0)
4: splitEqs(1)
5: !KU( hkdfExtract('emptyStr', z) ) @ #vk.31
6: !KU( 'g'^~xx ) @ #vk.13
7: !KU( 'g'^~ltk ) @ #vk.42

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 55 (precomputed):
    !KU( hkdfExpand(<$cAEAD0.1, 
                     h(<$cHash0.1, <'SIG', 'STAT', $cSUITE0.1, gx>, 'g'^~yy>), 'K_2e', 
                     '1'>,
                    hkdfExtract('emptyStr', z.1))
    ) @ #vk.28
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( hkdfExtract('emptyStr', 'g'^(~xx*~yy)) ) @ #vk.30
1: !KU( 'g'^(~xx*~yy) ) @ #vk.19
2: !KU( hkdfExpand(<$cAEAD0.1,                  h(<$cHash0.1, <'SIG', 'STAT', $cSUITE0.1, gx>, 'g'^~yy.1>),                  'K_2e', '1'>,                hkdfExtract('emptyStr', z))) @ #vk.27
3: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                  '1'>,                hkdfExtract('emptyStr', 'g'^(~xx*~yy)))) @ #vk.28
4: splitEqs(1)
5: !KU( 'g'^~xx ) @ #vk.13
6: !KU( 'g'^~yy ) @ #vk.17

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 59 (precomputed):
    !KU( hkdfExtract('emptyStr', 'g'^(~xx*~yy)) ) @ #vk.30
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( 'g'^(~xx*~yy) ) @ #vk.21
1: !KU( hkdfExpand(<$cAEAD0.1,                  h(<$cHash0.1, <'SIG', 'STAT', $cSUITE0.1, gx>, 'g'^~yy.1>),                  'K_2e', '1'>,                hkdfExtract('emptyStr', z))) @ #vk.29
2: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                  '1'>,                hkdfExtract('emptyStr', 'g'^(~xx*~yy)))) @ #vk.30
3: splitEqs(1)
4: !KU( 'g'^~xx ) @ #vk.15
5: !KU( 'g'^~yy ) @ #vk.20

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 90 (precomputed): !KU( 'g'^(~xx*~yy) ) @ #vk.21
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.38
1: !KU( hkdfExpand(<$cAEAD0.1,                  h(<$cHash0.1, <'SIG', 'STAT', $cSUITE0.1, gx>, 'g'^~yy.1>),                  'K_2e', '1'>,                hkdfExtract('emptyStr', z))) @ #vk.29
2: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                  '1'>,                hkdfExtract('emptyStr', 'g'^(~xx*~yy)))) @ #vk.30
3: splitEqs(1)
4: !KU( 'g'^~xx ) @ #vk.16
5: !KU( 'g'^~yy ) @ #vk.21

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 102 (precomputed): !KU( ~xx ) @ #vk.38
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.40
1: !KU( ~yy ) @ #vk.41
2: !KU( hkdfExpand(<$cAEAD0.1,                  h(<$cHash0.1, <'SIG', 'STAT', $cSUITE0.1, gx>, 'g'^~yy.1>),                  'K_2e', '1'>,                hkdfExtract('emptyStr', z))) @ #vk.29
3: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                  '1'>,                hkdfExtract('emptyStr', 'g'^(~xx*~yy)))) @ #vk.30
4: splitEqs(1)
5: !KU( 'g'^~xx ) @ #vk.16
6: !KU( 'g'^~yy ) @ #vk.21

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 97 (precomputed): !KU( ~xx ) @ #vk.40
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~yy ) @ #vk.38
1: !KU( hkdfExpand(<$cAEAD0.1,                  h(<$cHash0.1, <'SIG', 'STAT', $cSUITE0.1, gx>, 'g'^~yy.1>),                  'K_2e', '1'>,                hkdfExtract('emptyStr', z))) @ #vk.29
2: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                  '1'>,                hkdfExtract('emptyStr', 'g'^(~xx*~yy)))) @ #vk.30
3: splitEqs(1)
4: !KU( 'g'^~xx ) @ #vk.16
5: !KU( 'g'^~yy ) @ #vk.21

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 95 (precomputed): !KU( ~yy ) @ #vk.38
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                hkdfExtract('emptyStr', z))) @ #vk.31
1: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                hkdfExtract(hkdfExtract('emptyStr', z), 'g'^(~ltk*~xx)))) @ #vk.40
2: splitEqs(0)
3: splitEqs(1)
4: splitEqs(6)
5: !KU( hkdfExtract('emptyStr', z) ) @ #vk.32
6: !KU( 'g'^~xx ) @ #vk.14
7: !KU( 'g'^~ltk ) @ #vk.42

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( h(<$cHash0.1, <'SIG', 'STAT', $cSUITE0.1, gx>, 'g'^~yy>)) @ #vk.48
1: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                hkdfExtract('emptyStr', z))) @ #vk.31
2: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                hkdfExtract(hkdfExtract('emptyStr', z), 'g'^(~ltk*~xx)))) @ #vk.41
3: splitEqs(0)
4: splitEqs(1)
5: !KU( hkdfExtract('emptyStr', z) ) @ #vk.32
6: !KU( hkdfExtract('emptyStr', z.1) ) @ #vk.45
7: !KU( 'g'^~xx ) @ #vk.14
8: !KU( 'g'^~ltk ) @ #vk.43

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 92 (precomputed):
    !KU( h(<$cHash0.1, <'SIG', 'STAT', $cSUITE0.1, gx>, 'g'^~yy>)
    ) @ #vk.48
  solved goal nr. 56 (precomputed):
    !KU( hkdfExpand(<$cAEAD0, 
                     h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,
                    hkdfExtract('emptyStr', z))
    ) @ #vk.31
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                hkdfExtract(hkdfExtract('emptyStr', z), 'g'^(~ltk*~xx)))) @ #vk.43
1: splitEqs(0)
2: splitEqs(1)
3: splitEqs(6)
4: !KU( hkdfExtract('emptyStr', z) ) @ #vk.33
5: !KU( 'g'^~xx ) @ #vk.15
6: !KU( 'g'^~ltk ) @ #vk.45

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 80 (precomputed):
    !KU( hkdfExpand(<$cAEAD0, 
                     h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,
                    hkdfExtract(hkdfExtract('emptyStr', z), 'g'^(~ltk*~xx)))
    ) @ #vk.43
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( hkdfExtract('emptyStr', 'g'^(~xx*~yy)) ) @ #vk.32
1: !KU( 'g'^(~xx*~yy) ) @ #vk.24
2: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'>,                hkdfExtract(hkdfExtract('emptyStr', 'g'^(~xx*~yy)),                            'g'^(~ltk*~xx)))) @ #vk.40
3: splitEqs(1)
4: splitEqs(6)
5: !KU( 'g'^~xx ) @ #vk.15
6: !KU( 'g'^~ltk ) @ #vk.42
7: !KU( 'g'^~yy ) @ #vk.23

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 59 (precomputed):
    !KU( hkdfExtract('emptyStr', 'g'^(~xx*~yy)) ) @ #vk.32
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( 'g'^(~xx*~yy) ) @ #vk.25
1: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'>,                hkdfExtract(hkdfExtract('emptyStr', 'g'^(~xx*~yy)),                            'g'^(~ltk*~xx)))) @ #vk.40
2: splitEqs(1)
3: splitEqs(6)
4: !KU( 'g'^~xx ) @ #vk.16
5: !KU( 'g'^~ltk ) @ #vk.42
6: !KU( 'g'^~yy ) @ #vk.24

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 111 (precomputed): !KU( 'g'^(~xx*~yy) ) @ #vk.25
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~yy ) @ #vk.44
1: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'>,                hkdfExtract(hkdfExtract('emptyStr', 'g'^(~xx*~yy)),                            'g'^(~ltk*~xx)))) @ #vk.40
2: splitEqs(1)
3: splitEqs(6)
4: !KU( 'g'^~xx ) @ #vk.17
5: !KU( 'g'^~ltk ) @ #vk.42
6: !KU( 'g'^~yy ) @ #vk.25

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 116 (precomputed): !KU( ~yy ) @ #vk.44
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.44
1: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'>,                hkdfExtract(hkdfExtract('emptyStr', 'g'^(~xx*~yy)),                            'g'^(~ltk*~xx)))) @ #vk.40
2: splitEqs(1)
3: splitEqs(6)
4: !KU( 'g'^~xx ) @ #vk.17
5: !KU( 'g'^~ltk ) @ #vk.42
6: !KU( 'g'^~yy ) @ #vk.25

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 123 (precomputed): !KU( ~xx ) @ #vk.44
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.46
1: !KU( ~yy ) @ #vk.47
2: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'>,                hkdfExtract(hkdfExtract('emptyStr', 'g'^(~xx*~yy)),                            'g'^(~ltk*~xx)))) @ #vk.40
3: splitEqs(1)
4: splitEqs(6)
5: !KU( 'g'^~xx ) @ #vk.17
6: !KU( 'g'^~ltk ) @ #vk.42
7: !KU( 'g'^~yy ) @ #vk.25

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 118 (precomputed): !KU( ~xx ) @ #vk.46
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( hkdfExtract(hkdfExtract('emptyStr', z), 'g'^(~ltk*~xx))) @ #vk.49
1: splitEqs(0)
2: splitEqs(1)
3: splitEqs(6)
4: !KU( hkdfExtract('emptyStr', z) ) @ #vk.36
5: !KU( 'g'^~xx ) @ #vk.16
6: !KU( 'g'^~ltk ) @ #vk.47

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 110 (precomputed):
    !KU( hkdfExtract(hkdfExtract('emptyStr', z), 'g'^(~ltk*~xx))
    ) @ #vk.49
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( hkdfExtract('emptyStr', 'g'^(~xx*~yy)) ) @ #vk.35
1: !KU( 'g'^(~xx*~yy) ) @ #vk.27
2: splitEqs(1)
3: splitEqs(6)
4: !KU( 'g'^~xx ) @ #vk.16
5: !KU( 'g'^~ltk ) @ #vk.45
6: !KU( 'g'^~yy ) @ #vk.26

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 59 (precomputed):
    !KU( hkdfExtract('emptyStr', 'g'^(~xx*~yy)) ) @ #vk.35
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( hkdfExtract('emptyStr', 'g'^(~xx*~yy)) ) @ #vk.35
1: !KU( 'g'^(~xx*~yy) ) @ #vk.27
2: splitEqs(1)
3: splitEqs(6)
4: !KU( 'g'^~xx ) @ #vk.16
5: !KU( 'g'^~ltk ) @ #vk.45
6: !KU( 'g'^~yy ) @ #vk.26

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 59 (precomputed):
    !KU( hkdfExtract('emptyStr', 'g'^(~xx*~yy)) ) @ #vk.35
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( 'g'^(~xx*~yy) ) @ #vk.28
1: splitEqs(1)
2: splitEqs(6)
3: !KU( 'g'^~xx ) @ #vk.18
4: !KU( 'g'^~ltk ) @ #vk.45
5: !KU( 'g'^~yy ) @ #vk.27

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 131 (precomputed): !KU( 'g'^(~xx*~yy) ) @ #vk.28
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.49
1: !KU( ~yy ) @ #vk.50
2: splitEqs(1)
3: splitEqs(6)
4: !KU( 'g'^~xx ) @ #vk.19
5: !KU( 'g'^~ltk ) @ #vk.45
6: !KU( 'g'^~yy ) @ #vk.28

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 138 (precomputed): !KU( ~xx ) @ #vk.49
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.47
1: splitEqs(1)
2: splitEqs(6)
3: !KU( 'g'^~xx ) @ #vk.19
4: !KU( 'g'^~ltk ) @ #vk.45
5: !KU( 'g'^~yy ) @ #vk.28

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 143 (precomputed): !KU( ~xx ) @ #vk.47
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~yy ) @ #vk.47
1: splitEqs(1)
2: splitEqs(6)
3: !KU( 'g'^~xx ) @ #vk.19
4: !KU( 'g'^~ltk ) @ #vk.45
5: !KU( 'g'^~yy ) @ #vk.28

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 136 (precomputed): !KU( ~yy ) @ #vk.47
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( 'g'^(~xx*~yy) ) @ #vk.28
1: splitEqs(1)
2: splitEqs(6)
3: !KU( 'g'^~xx ) @ #vk.18
4: !KU( 'g'^~ltk ) @ #vk.45
5: !KU( 'g'^~yy ) @ #vk.27

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 122 (precomputed): !KU( 'g'^(~xx*~yy) ) @ #vk.28
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~yy ) @ #vk.48
1: splitEqs(1)
2: splitEqs(6)
3: !KU( 'g'^~xx ) @ #vk.19
4: !KU( 'g'^~ltk ) @ #vk.45
5: !KU( 'g'^~yy ) @ #vk.28

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 127 (precomputed): !KU( ~yy ) @ #vk.48
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.50
1: !KU( ~yy ) @ #vk.51
2: splitEqs(1)
3: splitEqs(6)
4: !KU( 'g'^~xx ) @ #vk.19
5: !KU( 'g'^~ltk ) @ #vk.45
6: !KU( 'g'^~yy ) @ #vk.28

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 129 (precomputed): !KU( ~xx ) @ #vk.50
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.48
1: splitEqs(1)
2: splitEqs(6)
3: !KU( 'g'^~xx ) @ #vk.19
4: !KU( 'g'^~ltk ) @ #vk.45
5: !KU( 'g'^~yy ) @ #vk.28

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 134 (precomputed): !KU( ~xx ) @ #vk.48
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                hkdfExtract('emptyStr', z))) @ #vk.33
1: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                hkdfExtract(hkdfExtract('emptyStr', z), 'g'^(~ltk*~xx)))) @ #vk.44
2: splitEqs(0)
3: splitEqs(1)
4: !KU( hkdfExtract('emptyStr', z) ) @ #vk.34
5: !KU( hkdfExtract('emptyStr', z.1) ) @ #vk.48
6: !KU( 'g'^~xx ) @ #vk.15
7: !KU( 'g'^~ltk ) @ #vk.46
8: !KU( 'g'^~yy ) @ #vk.53

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 56 (precomputed):
    !KU( hkdfExpand(<$cAEAD0, 
                     h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,
                    hkdfExtract('emptyStr', z))
    ) @ #vk.33
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                hkdfExtract(hkdfExtract('emptyStr', z), 'g'^(~ltk*~xx)))) @ #vk.48
1: splitEqs(0)
2: splitEqs(1)
3: !KU( hkdfExtract('emptyStr', z) ) @ #vk.37
4: !KU( hkdfExtract('emptyStr', z.1) ) @ #vk.51
5: !KU( 'g'^~xx ) @ #vk.16
6: !KU( 'g'^~ltk ) @ #vk.50
7: !KU( 'g'^~yy ) @ #vk.55

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 80 (precomputed):
    !KU( hkdfExpand(<$cAEAD0, 
                     h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,
                    hkdfExtract(hkdfExtract('emptyStr', z), 'g'^(~ltk*~xx)))
    ) @ #vk.48
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( hkdfExtract('emptyStr', 'g'^(~xx*~yy)) ) @ #vk.36
1: !KU( 'g'^(~xx*~yy) ) @ #vk.26
2: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'>,                hkdfExtract(hkdfExtract('emptyStr', 'g'^(~xx*~yy)),                            'g'^(~ltk*~xx)))) @ #vk.46
3: splitEqs(1)
4: !KU( hkdfExtract('emptyStr', z) ) @ #vk.49
5: !KU( 'g'^~xx ) @ #vk.16
6: !KU( 'g'^~ltk ) @ #vk.48
7: !KU( 'g'^~yy.1 ) @ #vk.53
8: !KU( 'g'^~yy ) @ #vk.25

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 59 (precomputed):
    !KU( hkdfExtract('emptyStr', 'g'^(~xx*~yy)) ) @ #vk.36
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( 'g'^(~xx*~yy) ) @ #vk.28
1: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'>,                hkdfExtract(hkdfExtract('emptyStr', 'g'^(~xx*~yy)),                            'g'^(~ltk*~xx)))) @ #vk.46
2: splitEqs(1)
3: !KU( hkdfExtract('emptyStr', z) ) @ #vk.49
4: !KU( 'g'^~xx ) @ #vk.17
5: !KU( 'g'^~ltk ) @ #vk.48
6: !KU( 'g'^~yy.1 ) @ #vk.53
7: !KU( 'g'^~yy ) @ #vk.27

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 120 (precomputed): !KU( 'g'^(~xx*~yy) ) @ #vk.28
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~yy ) @ #vk.55
1: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'>,                hkdfExtract(hkdfExtract('emptyStr', 'g'^(~xx*~yy)),                            'g'^(~ltk*~xx)))) @ #vk.46
2: splitEqs(1)
3: !KU( hkdfExtract('emptyStr', z) ) @ #vk.49
4: !KU( 'g'^~xx ) @ #vk.18
5: !KU( 'g'^~ltk ) @ #vk.48
6: !KU( 'g'^~yy.1 ) @ #vk.53
7: !KU( 'g'^~yy ) @ #vk.28

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 125 (precomputed): !KU( ~yy ) @ #vk.55
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.55
1: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'>,                hkdfExtract(hkdfExtract('emptyStr', 'g'^(~xx*~yy)),                            'g'^(~ltk*~xx)))) @ #vk.46
2: splitEqs(1)
3: !KU( hkdfExtract('emptyStr', z) ) @ #vk.49
4: !KU( 'g'^~xx ) @ #vk.18
5: !KU( 'g'^~ltk ) @ #vk.48
6: !KU( 'g'^~yy.1 ) @ #vk.53
7: !KU( 'g'^~yy ) @ #vk.28

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 132 (precomputed): !KU( ~xx ) @ #vk.55
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.57
1: !KU( ~yy ) @ #vk.58
2: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'>,                hkdfExtract(hkdfExtract('emptyStr', 'g'^(~xx*~yy)),                            'g'^(~ltk*~xx)))) @ #vk.46
3: splitEqs(1)
4: !KU( hkdfExtract('emptyStr', z) ) @ #vk.49
5: !KU( 'g'^~xx ) @ #vk.18
6: !KU( 'g'^~ltk ) @ #vk.48
7: !KU( 'g'^~yy.1 ) @ #vk.53
8: !KU( 'g'^~yy ) @ #vk.28

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 127 (precomputed): !KU( ~xx ) @ #vk.57
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( hkdfExtract(hkdfExtract('emptyStr', z), 'g'^(~ltk*~xx))) @ #vk.58
1: splitEqs(0)
2: splitEqs(1)
3: !KU( hkdfExtract('emptyStr', z) ) @ #vk.41
4: !KU( hkdfExtract('emptyStr', z.1) ) @ #vk.53
5: !KU( 'g'^~xx ) @ #vk.17
6: !KU( 'g'^~ltk ) @ #vk.52
7: !KU( 'g'^~yy ) @ #vk.57

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 119 (precomputed):
    !KU( hkdfExtract(hkdfExtract('emptyStr', z), 'g'^(~ltk*~xx))
    ) @ #vk.58
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( hkdfExtract('emptyStr', 'g'^(~xx*~yy)) ) @ #vk.40
1: !KU( 'g'^(~xx*~yy) ) @ #vk.30
2: splitEqs(1)
3: !KU( hkdfExtract('emptyStr', z) ) @ #vk.51
4: !KU( 'g'^~xx ) @ #vk.17
5: !KU( 'g'^~ltk ) @ #vk.50
6: !KU( 'g'^~yy.1 ) @ #vk.55
7: !KU( 'g'^~yy ) @ #vk.29

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 59 (precomputed):
    !KU( hkdfExtract('emptyStr', 'g'^(~xx*~yy)) ) @ #vk.40
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( hkdfExtract('emptyStr', 'g'^(~xx*~yy)) ) @ #vk.40
1: !KU( 'g'^(~xx*~yy) ) @ #vk.30
2: splitEqs(1)
3: !KU( hkdfExtract('emptyStr', z) ) @ #vk.51
4: !KU( 'g'^~xx ) @ #vk.17
5: !KU( 'g'^~ltk ) @ #vk.50
6: !KU( 'g'^~yy.1 ) @ #vk.55
7: !KU( 'g'^~yy ) @ #vk.29

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 59 (precomputed):
    !KU( hkdfExtract('emptyStr', 'g'^(~xx*~yy)) ) @ #vk.40
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( 'g'^(~xx*~yy) ) @ #vk.31
1: splitEqs(1)
2: !KU( hkdfExtract('emptyStr', z) ) @ #vk.51
3: !KU( 'g'^~xx ) @ #vk.19
4: !KU( 'g'^~ltk ) @ #vk.50
5: !KU( 'g'^~yy.1 ) @ #vk.55
6: !KU( 'g'^~yy ) @ #vk.30

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 140 (precomputed): !KU( 'g'^(~xx*~yy) ) @ #vk.31
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.58
1: !KU( ~yy ) @ #vk.59
2: splitEqs(1)
3: !KU( hkdfExtract('emptyStr', z) ) @ #vk.51
4: !KU( 'g'^~xx ) @ #vk.20
5: !KU( 'g'^~ltk ) @ #vk.50
6: !KU( 'g'^~yy.1 ) @ #vk.55
7: !KU( 'g'^~yy ) @ #vk.31

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 147 (precomputed): !KU( ~xx ) @ #vk.58
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.56
1: splitEqs(1)
2: !KU( hkdfExtract('emptyStr', z) ) @ #vk.51
3: !KU( 'g'^~xx ) @ #vk.20
4: !KU( 'g'^~ltk ) @ #vk.50
5: !KU( 'g'^~yy.1 ) @ #vk.55
6: !KU( 'g'^~yy ) @ #vk.31

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 152 (precomputed): !KU( ~xx ) @ #vk.56
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~yy ) @ #vk.56
1: splitEqs(1)
2: !KU( hkdfExtract('emptyStr', z) ) @ #vk.51
3: !KU( 'g'^~xx ) @ #vk.20
4: !KU( 'g'^~ltk ) @ #vk.50
5: !KU( 'g'^~yy.1 ) @ #vk.55
6: !KU( 'g'^~yy ) @ #vk.31

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 145 (precomputed): !KU( ~yy ) @ #vk.56
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( 'g'^(~xx*~yy) ) @ #vk.31
1: splitEqs(1)
2: !KU( hkdfExtract('emptyStr', z) ) @ #vk.51
3: !KU( 'g'^~xx ) @ #vk.19
4: !KU( 'g'^~ltk ) @ #vk.50
5: !KU( 'g'^~yy.1 ) @ #vk.55
6: !KU( 'g'^~yy ) @ #vk.30

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 131 (precomputed): !KU( 'g'^(~xx*~yy) ) @ #vk.31
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.59
1: !KU( ~yy ) @ #vk.60
2: splitEqs(1)
3: !KU( hkdfExtract('emptyStr', z) ) @ #vk.51
4: !KU( 'g'^~xx ) @ #vk.20
5: !KU( 'g'^~ltk ) @ #vk.50
6: !KU( 'g'^~yy.1 ) @ #vk.55
7: !KU( 'g'^~yy ) @ #vk.31

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 138 (precomputed): !KU( ~xx ) @ #vk.59
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~yy ) @ #vk.57
1: splitEqs(1)
2: !KU( hkdfExtract('emptyStr', z) ) @ #vk.51
3: !KU( 'g'^~xx ) @ #vk.20
4: !KU( 'g'^~ltk ) @ #vk.50
5: !KU( 'g'^~yy.1 ) @ #vk.55
6: !KU( 'g'^~yy ) @ #vk.31

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 136 (precomputed): !KU( ~yy ) @ #vk.57
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.57
1: splitEqs(1)
2: !KU( hkdfExtract('emptyStr', z) ) @ #vk.51
3: !KU( 'g'^~xx ) @ #vk.20
4: !KU( 'g'^~ltk ) @ #vk.50
5: !KU( 'g'^~yy.1 ) @ #vk.55
6: !KU( 'g'^~yy ) @ #vk.31

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 143 (precomputed): !KU( ~xx ) @ #vk.57
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vl.3, 0) ~~> (#vk.4, 0)
1: !LTK_STAT( $V.1, ~ltk.2 ) ▶₀ #vr.12
2: !PK_STAT( $V.1, pkV ) ▶₁ #vr.12
3: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                hkdfExtract('emptyStr', z))) @ #vk.19
4: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0,                              h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                            hkdfExtract(hkdfExtract('emptyStr', z), 'g'^(~ltk*~xx))),                 <$V, h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'g'^~ltk                 >,                 $cAEAD0)) @ #vk.20
5: splitEqs(0)
6: splitEqs(1)
7: splitEqs(6)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: CommitI( tid.2, u, v, t ) ▶₀ #vr.12
1: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                hkdfExtract('emptyStr', z))) @ #vk.17
2: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0,                              h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                            hkdfExtract(hkdfExtract('emptyStr', z), 'g'^(~ltk*~xx))),                 <$V, h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'g'^~ltk                 >,                 $cAEAD0)) @ #vk.18
3: splitEqs(0)
4: splitEqs(1)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 58 (precomputed):
    CommitI( tid.2, u, v, t ) ▶₀ #vr.12
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: CommitR( tid.2, u, v, t ) ▶₀ #vr.12
1: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                hkdfExtract('emptyStr', z))) @ #vk.17
2: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0,                              h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                            hkdfExtract(hkdfExtract('emptyStr', z), 'g'^(~ltk*~xx))),                 <$V, h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'g'^~ltk                 >,                 $cAEAD0)) @ #vk.18
3: splitEqs(0)
4: splitEqs(1)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 58 (precomputed):
    CommitR( tid.2, u, v, t ) ▶₀ #vr.12
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vl.3, 0) ~~> (#vk.4, 0)
1: StI1_SIG_STAT( $U.1, ~ltk.2, $V.1, ~xx.1, m1, ~tid.2 ) ▶₀ #vr.12
2: !PK_STAT( $V.1, pkV ) ▶₁ #vr.12
3: !PK_SIG( $U.1, pkU ) ▶₂ #vr.12
4: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                hkdfExtract('emptyStr', z))) @ #vk.17
5: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0,                              h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                            hkdfExtract(hkdfExtract('emptyStr', z), 'g'^(~ltk*~xx))),                 <$V, h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'g'^~ltk                 >,                 $cAEAD0)) @ #vk.18
6: splitEqs(0)
7: splitEqs(1)
8: splitEqs(6)
9: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.1>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', z.3))     )) @ #vk.22
10: !KU( (      aeadEncrypt('emptyStr',                  hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.1>), 'K_2m'>,                             hkdfExtract(hkdfExtract('emptyStr', z.3), z.4)),                  <$V.1, h(<$cHash0.2, m1, gy.1>), pkV>, $cAEAD0.2)⊕      hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.1>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', z.3))     )) @ #vk.23

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.13, 0) ~~> (#vk.4, 0)
1: StI1_SIG_STAT( $U.1, ~ltk.2, $V.1, ~xx.1, m1, ~tid.2 ) ▶₀ #vr.12
2: !PK_STAT( $V.1, pkV ) ▶₁ #vr.12
3: !PK_SIG( $U.1, pkU ) ▶₂ #vr.12
4: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                hkdfExtract('emptyStr', z))) @ #vk.17
5: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0,                              h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                            hkdfExtract(hkdfExtract('emptyStr', z), 'g'^(~ltk*~xx))),                 <$V, h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'g'^~ltk                 >,                 $cAEAD0)) @ #vk.18
6: splitEqs(0)
7: splitEqs(1)
8: splitEqs(6)
9: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.1>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', z.3))     )) @ #vk.22
10: !KU( (      aeadEncrypt('emptyStr',                  hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.1>), 'K_2m'>,                             hkdfExtract(hkdfExtract('emptyStr', z.3), z.4)),                  <$V.1, h(<$cHash0.2, m1, gy.1>), pkV>, $cAEAD0.2)⊕      hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.1>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', z.3))     )) @ #vk.23

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.14, 0) ~~> (#vk.4, 0)
1: StI1_SIG_STAT( $U.1, ~ltk.2, $V.1, ~xx.1, m1, ~tid.2 ) ▶₀ #vr.12
2: !PK_STAT( $V.1, pkV ) ▶₁ #vr.12
3: !PK_SIG( $U.1, pkU ) ▶₂ #vr.12
4: !KU( sign(<           <$U.1,             h(<$cHash0.2, h(<$cHash0.2, m1, gy.1>),                <                ($V.1⊕                 hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.1>), 'K_2e', '1'>,                            hkdfExtract('emptyStr', z.3))                ),                 (                 aeadEncrypt('emptyStr',                             hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.1>), 'K_2m'>,                                        hkdfExtract(hkdfExtract('emptyStr', z.3), z.4)),                             <$V.1, h(<$cHash0.2, m1, gy.1>), pkV>, $cAEAD0.2)⊕                 hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.1>), 'K_2e', '2'>,                            hkdfExtract('emptyStr', z.3))                )               >,                'emptyStr'>),             pkU>,            aeadEncrypt('emptyStr',                       hkdfExpand(<$cAEAD0.2,                                    h(<$cHash0.2, h(<$cHash0.2, m1, gy.1>),                                       <                                       ($V.1⊕                                        hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.1>), 'K_2e', '1'                                                   >,                                                   hkdfExtract('emptyStr', z.3))                                       ),                                        (                                        aeadEncrypt('emptyStr',                                                    hkdfExpand(<$cAEAD0.2,                                                                 h(<$cHash0.2, m1, gy.1>), 'K_2m'>,                                                               hkdfExtract(hkdfExtract('emptyStr',                                                                                       z.3),                                                                           z.4)),                                                    <$V.1, h(<$cHash0.2, m1, gy.1>), pkV>,                                                    $cAEAD0.2)⊕                                        hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.1>), 'K_2e', '2'                                                   >,                                                   hkdfExtract('emptyStr', z.3))                                       )                                      >,                                       'emptyStr'>),                                    'K_3m'>,                                  hkdfExtract(hkdfExtract('emptyStr', z.3), z.4)),                       <$U.1,                         h(<$cHash0.2, h(<$cHash0.2, m1, gy.1>),                            <                            ($V.1⊕                             hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.1>), 'K_2e', '1'>,                                        hkdfExtract('emptyStr', z.3))                            ),                             (                             aeadEncrypt('emptyStr',                                         hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.1>), 'K_2m'>,                                                    hkdfExtract(hkdfExtract('emptyStr', z.3), z.4)),                                         <$V.1, h(<$cHash0.2, m1, gy.1>), pkV>, $cAEAD0.2)⊕                             hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.1>), 'K_2e', '2'>,                                        hkdfExtract('emptyStr', z.3))                            )                           >,                            'emptyStr'>),                         pkU>,                       $cAEAD0.2)          >,          ~ltk.2)) @ #vk.28
5: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                hkdfExtract('emptyStr', z))) @ #vk.17
6: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0,                              h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                            hkdfExtract(hkdfExtract('emptyStr', z), 'g'^(~ltk*~xx))),                 <$V, h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'g'^~ltk                 >,                 $cAEAD0)) @ #vk.18
7: splitEqs(0)
8: splitEqs(1)
9: splitEqs(6)
10: !KU( h(<$cHash0.2, h(<$cHash0.2, m1, gy.1>),         <         ($V.1⊕          hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.1>), 'K_2e', '1'>,                     hkdfExtract('emptyStr', z.3))         ),          (          aeadEncrypt('emptyStr',                      hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.1>), 'K_2m'>,                                 hkdfExtract(hkdfExtract('emptyStr', z.3), z.4)),                      <$V.1, h(<$cHash0.2, m1, gy.1>), pkV>, $cAEAD0.2)⊕          hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.1>), 'K_2e', '2'>,                     hkdfExtract('emptyStr', z.3))         )        >,         'emptyStr'>)) @ #vk.25
11: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.1>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', z.3))     )) @ #vk.22
12: !KU( (      aeadEncrypt('emptyStr',                  hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.1>), 'K_2m'>,                             hkdfExtract(hkdfExtract('emptyStr', z.3), z.4)),                  <$V.1, h(<$cHash0.2, m1, gy.1>), pkV>, $cAEAD0.2)⊕      hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.1>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', z.3))     )) @ #vk.23

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.14, 0) ~~> (#vk.4, 0)
1: StI1_SIG_STAT( $U.1, ~ltk.2, $V.1, ~xx.1, m1, ~tid.2 ) ▶₀ #vr.12
2: !PK_STAT( $V.1, pkV ) ▶₁ #vr.12
3: !PK_SIG( $U.1, pkU ) ▶₂ #vr.12
4: !KU( sign(<           <$U.1,             h(<$cHash0.2, h(<$cHash0.2, m1, gy.1>),                <                ($V.1⊕                 hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.1>), 'K_2e', '1'>,                            hkdfExtract('emptyStr', z.3))                ),                 (                 aeadEncrypt('emptyStr',                             hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.1>), 'K_2m'>,                                        hkdfExtract(hkdfExtract('emptyStr', z.3), z.4)),                             <$V.1, h(<$cHash0.2, m1, gy.1>), pkV>, $cAEAD0.2)⊕                 hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.1>), 'K_2e', '2'>,                            hkdfExtract('emptyStr', z.3))                )               >,                'emptyStr'>),             pkU>,            aeadEncrypt('emptyStr',                       hkdfExpand(<$cAEAD0.2,                                    h(<$cHash0.2, h(<$cHash0.2, m1, gy.1>),                                       <                                       ($V.1⊕                                        hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.1>), 'K_2e', '1'                                                   >,                                                   hkdfExtract('emptyStr', z.3))                                       ),                                        (                                        aeadEncrypt('emptyStr',                                                    hkdfExpand(<$cAEAD0.2,                                                                 h(<$cHash0.2, m1, gy.1>), 'K_2m'>,                                                               hkdfExtract(hkdfExtract('emptyStr',                                                                                       z.3),                                                                           z.4)),                                                    <$V.1, h(<$cHash0.2, m1, gy.1>), pkV>,                                                    $cAEAD0.2)⊕                                        hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.1>), 'K_2e', '2'                                                   >,                                                   hkdfExtract('emptyStr', z.3))                                       )                                      >,                                       'emptyStr'>),                                    'K_3m'>,                                  hkdfExtract(hkdfExtract('emptyStr', z.3), z.4)),                       <$U.1,                         h(<$cHash0.2, h(<$cHash0.2, m1, gy.1>),                            <                            ($V.1⊕                             hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.1>), 'K_2e', '1'>,                                        hkdfExtract('emptyStr', z.3))                            ),                             (                             aeadEncrypt('emptyStr',                                         hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.1>), 'K_2m'>,                                                    hkdfExtract(hkdfExtract('emptyStr', z.3), z.4)),                                         <$V.1, h(<$cHash0.2, m1, gy.1>), pkV>, $cAEAD0.2)⊕                             hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.1>), 'K_2e', '2'>,                                        hkdfExtract('emptyStr', z.3))                            )                           >,                            'emptyStr'>),                         pkU>,                       $cAEAD0.2)          >,          ~ltk.2)) @ #vk.27
5: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                hkdfExtract('emptyStr', z))) @ #vk.17
6: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0,                              h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                            hkdfExtract(hkdfExtract('emptyStr', z), 'g'^(~ltk*~xx))),                 <$V, h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'g'^~ltk                 >,                 $cAEAD0)) @ #vk.18
7: splitEqs(0)
8: splitEqs(1)
9: splitEqs(6)
10: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.1>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', z.3))     )) @ #vk.22
11: !KU( (      aeadEncrypt('emptyStr',                  hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.1>), 'K_2m'>,                             hkdfExtract(hkdfExtract('emptyStr', z.3), z.4)),                  <$V.1, h(<$cHash0.2, m1, gy.1>), pkV>, $cAEAD0.2)⊕      hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.1>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', z.3))     )) @ #vk.23

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.13, 0) ~~> (#vk.4, 0)
1: !LTK_STAT( $V.1, ~ltk.2 ) ▶₀ #vr.12
2: !PK_STAT( $V.1, pkV ) ▶₁ #vr.12
3: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                hkdfExtract('emptyStr', z))) @ #vk.19
4: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0,                              h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                            hkdfExtract(hkdfExtract('emptyStr', z), 'g'^(~ltk*~xx))),                 <$V, h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'g'^~ltk                 >,                 $cAEAD0)) @ #vk.20
5: splitEqs(0)
6: splitEqs(1)
7: splitEqs(6)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.14, 0) ~~> (#vk.4, 0)
1: !LTK_STAT( $V.1, ~ltk.2 ) ▶₀ #vr.12
2: !PK_STAT( $V.1, pkV ) ▶₁ #vr.12
3: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                hkdfExtract('emptyStr', z))) @ #vk.19
4: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0,                              h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                            hkdfExtract(hkdfExtract('emptyStr', z), 'g'^(~ltk*~xx))),                 <$V, h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'g'^~ltk                 >,                 $cAEAD0)) @ #vk.20
5: splitEqs(0)
6: splitEqs(1)
7: splitEqs(6)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.14, 0) ~~> (#vk.4, 0)
1: !LTK_STAT( $V.1, ~ltk.2 ) ▶₀ #vr.12
2: !PK_STAT( $V.1, pkV ) ▶₁ #vr.12
3: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                hkdfExtract('emptyStr', z))) @ #vk.19
4: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0,                              h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                            hkdfExtract(hkdfExtract('emptyStr', z), 'g'^(~ltk*~xx))),                 <$V, h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'g'^~ltk                 >,                 $cAEAD0)) @ #vk.20
5: splitEqs(0)
6: splitEqs(1)
7: splitEqs(6)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.15, 0) ~~> (#vk.4, 0)
1: !LTK_STAT( $V.1, ~ltk.2 ) ▶₀ #vr.12
2: !PK_STAT( $V.1, pkV ) ▶₁ #vr.12
3: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                hkdfExtract('emptyStr', z))) @ #vk.19
4: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0,                              h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                            hkdfExtract(hkdfExtract('emptyStr', z), 'g'^(~ltk*~xx))),                 <$V, h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'g'^~ltk                 >,                 $cAEAD0)) @ #vk.20
5: !KU( (z.5⊕      hkdfExpand(<$cAEAD0.2,                   h(<$cHash0.2, <'SIG', 'STAT', $cSUITE0.2, gx.1>, 'g'^~yy.1>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', z.3))     )) @ #vk.24
6: splitEqs(0)
7: splitEqs(1)
8: splitEqs(6)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.15, 0) ~~> (#vk.4, 0)
1: !LTK_STAT( $V.1, ~ltk.2 ) ▶₀ #vr.12
2: !PK_STAT( $V.1, pkV ) ▶₁ #vr.12
3: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                hkdfExtract('emptyStr', z))) @ #vk.19
4: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0,                              h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                            hkdfExtract(hkdfExtract('emptyStr', z), 'g'^(~ltk*~xx))),                 <$V, h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'g'^~ltk                 >,                 $cAEAD0)) @ #vk.20
5: splitEqs(0)
6: splitEqs(1)
7: splitEqs(6)
8: !KU( ($V.1⊕z.5) ) @ #vk.24

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.15, 0) ~~> (#vk.4, 0)
1: !LTK_STAT( $V.1, ~ltk.2 ) ▶₀ #vr.12
2: !PK_STAT( $V.1, pkV ) ▶₁ #vr.12
3: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                hkdfExtract('emptyStr', z))) @ #vk.19
4: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0,                              h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                            hkdfExtract(hkdfExtract('emptyStr', z), 'g'^(~ltk*~xx))),                 <$V, h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'g'^~ltk                 >,                 $cAEAD0)) @ #vk.20
5: splitEqs(0)
6: splitEqs(1)
7: splitEqs(6)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !LTK_STAT( $V.1, ~ltk.2 ) ▶₀ #vr.12
1: !PK_STAT( $V.1, pkV ) ▶₁ #vr.12
2: !KU( 'g'^(~xx*~yy) ) @ #vk.13
3: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                  '2'>,                hkdfExtract('emptyStr', 'g'^(~xx*~yy)))) @ #vk.21
4: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0,                              h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'>,                            hkdfExtract(hkdfExtract('emptyStr', 'g'^(~xx*~yy)),                                        'g'^(~ltk*~xx))),                 <$V, h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                   'g'^~ltk>,                 $cAEAD0)) @ #vk.22
5: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'STAT', $cSUITE0.1, gx>, 'g'^~yy.1>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.24
6: splitEqs(1)
7: !KU( 'g'^~yy ) @ #vk.12
8: !KU( 'g'^~xx ) @ #vk.10

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 58 (precomputed):
    !LTK_STAT( $V.1, ~ltk.2 ) ▶₀ #vr.12
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !PK_STAT( $V.1, pkV ) ▶₁ #vr.12
1: !KU( 'g'^(~xx*~yy) ) @ #vk.13
2: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                  '2'>,                hkdfExtract('emptyStr', 'g'^(~xx*~yy)))) @ #vk.21
3: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0,                              h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'>,                            hkdfExtract(hkdfExtract('emptyStr', 'g'^(~xx*~yy)),                                        'g'^(~ltk*~xx))),                 <$V, h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                   'g'^~ltk>,                 $cAEAD0)) @ #vk.22
4: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'STAT', $cSUITE0.1, gx>, 'g'^~yy.1>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.24
5: splitEqs(1)
6: !KU( 'g'^~yy ) @ #vk.12
7: !KU( 'g'^~xx ) @ #vk.10

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 59 (precomputed): !PK_STAT( $V.1, pkV ) ▶₁ #vr.12
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( 'g'^(~xx*~yy) ) @ #vk.13
1: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                  '2'>,                hkdfExtract('emptyStr', 'g'^(~xx*~yy)))) @ #vk.21
2: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0,                              h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'>,                            hkdfExtract(hkdfExtract('emptyStr', 'g'^(~xx*~yy)),                                        'g'^(~ltk*~xx))),                 <$V, h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                   'g'^~ltk>,                 $cAEAD0)) @ #vk.22
3: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'STAT', $cSUITE0.1, gx>, 'g'^~yy.1>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.24
4: splitEqs(1)
5: !KU( 'g'^~yy ) @ #vk.12
6: !KU( 'g'^~xx ) @ #vk.10

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 76 (precomputed): !KU( 'g'^(~xx*~yy) ) @ #vk.13
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.25
1: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                  '2'>,                hkdfExtract('emptyStr', 'g'^(~xx*~yy)))) @ #vk.21
2: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0,                              h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'>,                            hkdfExtract(hkdfExtract('emptyStr', 'g'^(~xx*~yy)),                                        'g'^(~ltk*~xx))),                 <$V, h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                   'g'^~ltk>,                 $cAEAD0)) @ #vk.22
3: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'STAT', $cSUITE0.1, gx>, 'g'^~yy.1>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.24
4: splitEqs(1)
5: !KU( 'g'^~yy ) @ #vk.13
6: !KU( 'g'^~xx ) @ #vk.11

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 89 (precomputed): !KU( ~xx ) @ #vk.25
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~yy ) @ #vk.25
1: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                  '2'>,                hkdfExtract('emptyStr', 'g'^(~xx*~yy)))) @ #vk.21
2: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0,                              h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'>,                            hkdfExtract(hkdfExtract('emptyStr', 'g'^(~xx*~yy)),                                        'g'^(~ltk*~xx))),                 <$V, h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                   'g'^~ltk>,                 $cAEAD0)) @ #vk.22
3: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'STAT', $cSUITE0.1, gx>, 'g'^~yy.1>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.24
4: splitEqs(1)
5: !KU( 'g'^~yy ) @ #vk.13
6: !KU( 'g'^~xx ) @ #vk.11

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 82 (precomputed): !KU( ~yy ) @ #vk.25
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.27
1: !KU( ~yy ) @ #vk.28
2: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                  '2'>,                hkdfExtract('emptyStr', 'g'^(~xx*~yy)))) @ #vk.21
3: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0,                              h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'>,                            hkdfExtract(hkdfExtract('emptyStr', 'g'^(~xx*~yy)),                                        'g'^(~ltk*~xx))),                 <$V, h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                   'g'^~ltk>,                 $cAEAD0)) @ #vk.22
4: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'STAT', $cSUITE0.1, gx>, 'g'^~yy.1>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.24
5: splitEqs(1)
6: !KU( 'g'^~yy ) @ #vk.13
7: !KU( 'g'^~xx ) @ #vk.11

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 84 (precomputed): !KU( ~xx ) @ #vk.27
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.15, 0) ~~> (#vk.4, 0)
1: !LTK_STAT( $V.1, ~ltk.2 ) ▶₀ #vr.12
2: !PK_STAT( $V.1, pkV ) ▶₁ #vr.12
3: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                hkdfExtract('emptyStr', z))) @ #vk.19
4: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0,                              h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                            hkdfExtract(hkdfExtract('emptyStr', z), 'g'^(~ltk*~xx))),                 <$V, h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'g'^~ltk                 >,                 $cAEAD0)) @ #vk.20
5: !KU( (z.5⊕      hkdfExpand(<$cAEAD0.2,                   h(<$cHash0.2, <'SIG', 'STAT', $cSUITE0.2, gx.1>, 'g'^~yy.1>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', z.3))     )) @ #vk.24
6: splitEqs(0)
7: splitEqs(1)
8: splitEqs(6)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.15, 0) ~~> (#vk.4, 0)
1: !LTK_STAT( $V.1, ~ltk.2 ) ▶₀ #vr.12
2: !PK_STAT( $V.1, pkV ) ▶₁ #vr.12
3: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                hkdfExtract('emptyStr', z))) @ #vk.19
4: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0,                              h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                            hkdfExtract(hkdfExtract('emptyStr', z), 'g'^(~ltk*~xx))),                 <$V, h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'g'^~ltk                 >,                 $cAEAD0)) @ #vk.20
5: !KU( (z.5⊕      aeadEncrypt('emptyStr',                  hkdfExpand(<$cAEAD0.2,                               h(<$cHash0.2, <'SIG', 'STAT', $cSUITE0.2, gx.1>, 'g'^~yy.1>),                               'K_2m'>,                             hkdfExtract(hkdfExtract('emptyStr', z.3), z.4)),                  <$V.1,                    h(<$cHash0.2, <'SIG', 'STAT', $cSUITE0.2, gx.1>, 'g'^~yy.1>), pkV>,                  $cAEAD0.2)     )) @ #vk.24
6: splitEqs(0)
7: splitEqs(1)
8: splitEqs(6)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.15, 0) ~~> (#vk.4, 0)
1: !LTK_STAT( $V.1, ~ltk.2 ) ▶₀ #vr.12
2: !PK_STAT( $V.1, pkV ) ▶₁ #vr.12
3: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                hkdfExtract('emptyStr', z))) @ #vk.19
4: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0,                              h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                            hkdfExtract(hkdfExtract('emptyStr', z), 'g'^(~ltk*~xx))),                 <$V, h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'g'^~ltk                 >,                 $cAEAD0)) @ #vk.20
5: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2, <'SIG', 'STAT', $cSUITE0.2, gx.1>, 'g'^~yy.1>),                  'K_2e', '2'>,                hkdfExtract('emptyStr', z.3))) @ #vk.24
6: splitEqs(0)
7: splitEqs(1)
8: splitEqs(6)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.15, 0) ~~> (#vk.4, 0)
1: !LTK_STAT( $V.1, ~ltk.2 ) ▶₀ #vr.12
2: !PK_STAT( $V.1, pkV ) ▶₁ #vr.12
3: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                hkdfExtract('emptyStr', z))) @ #vk.19
4: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0,                              h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                            hkdfExtract(hkdfExtract('emptyStr', z), 'g'^(~ltk*~xx))),                 <$V, h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'g'^~ltk                 >,                 $cAEAD0)) @ #vk.20
5: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.2,                              h(<$cHash0.2, <'SIG', 'STAT', $cSUITE0.2, gx.1>, 'g'^~yy.1>),                              'K_2m'>,                            hkdfExtract(hkdfExtract('emptyStr', z.3), z.4)),                 <$V.1,                   h(<$cHash0.2, <'SIG', 'STAT', $cSUITE0.2, gx.1>, 'g'^~yy.1>), pkV>,                 $cAEAD0.2)) @ #vk.24
6: splitEqs(0)
7: splitEqs(1)
8: splitEqs(6)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.16, 0) ~~> (#vk.4, 0)
1: !LTK_STAT( $V.1, ~ltk.2 ) ▶₀ #vr.12
2: !PK_STAT( $V.1, pkV ) ▶₁ #vr.12
3: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                hkdfExtract('emptyStr', z))) @ #vk.19
4: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0,                              h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                            hkdfExtract(hkdfExtract('emptyStr', z), 'g'^(~ltk*~xx))),                 <$V, h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'g'^~ltk                 >,                 $cAEAD0)) @ #vk.20
5: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2, <'SIG', 'STAT', $cSUITE0.2, gx.1>, 'g'^~yy.1>),                  'K_2e', '2'>,                hkdfExtract('emptyStr', z.3))) @ #vk.24
6: splitEqs(0)
7: splitEqs(1)
8: splitEqs(6)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.16, 0) ~~> (#vk.4, 0)
1: !LTK_STAT( $V.1, ~ltk.2 ) ▶₀ #vr.12
2: !PK_STAT( $V.1, pkV ) ▶₁ #vr.12
3: !KU( h(<$cHash0.2, <'SIG', 'STAT', $cSUITE0.2, gx.1>, 'g'^~yy.1>)) @ #vk.30
4: !KU( hkdfExpand(<$cAEAD0,                  h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,                hkdfExtract('emptyStr', z))) @ #vk.19
5: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0,                              h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2m'>,                            hkdfExtract(hkdfExtract('emptyStr', z), 'g'^(~ltk*~xx))),                 <$V, h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'g'^~ltk                 >,                 $cAEAD0)) @ #vk.20
6: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2, <'SIG', 'STAT', $cSUITE0.2, gx.1>, 'g'^~yy.1>),                  'K_2e', '2'>,                hkdfExtract('emptyStr', z.3))) @ #vk.24
7: splitEqs(0)
8: splitEqs(1)
9: splitEqs(6)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vl.3, 0) ~~> (#vk.3, 0)
1: !LTK_STAT( $V.1, ~ltk.2 ) ▶₀ #vr.12
2: !PK_STAT( $V.1, pkV ) ▶₁ #vr.12
3: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', z))⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'STAT', $cSUITE0.1, gx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z.1))     )) @ #vk.18
4: splitEqs(0)
5: splitEqs(1)
6: splitEqs(6)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vl.3, 0) ~~> (#vk.3, 0)
1: StI1_SIG_STAT( $U.1, ~ltk.2, $V.1, ~xx.1, m1, ~tid.2 ) ▶₀ #vr.12
2: !PK_STAT( $V.1, pkV ) ▶₁ #vr.12
3: !PK_SIG( $U.1, pkU ) ▶₂ #vr.12
4: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', z))⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'STAT', $cSUITE0.1, gx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z.1))     )) @ #vk.16
5: splitEqs(0)
6: splitEqs(1)
7: splitEqs(6)
8: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.1>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', z.3))     )) @ #vk.20
9: !KU( (      aeadEncrypt('emptyStr',                  hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.1>), 'K_2m'>,                             hkdfExtract(hkdfExtract('emptyStr', z.3), z.4)),                  <$V.1, h(<$cHash0.2, m1, gy.1>), pkV>, $cAEAD0.2)⊕      hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.1>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', z.3))     )) @ #vk.21

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: CommitI( tid.2, u, v, t ) ▶₀ #vr.12
1: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', z))⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'STAT', $cSUITE0.1, gx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z.1))     )) @ #vk.16
2: splitEqs(0)
3: splitEqs(1)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 56 (precomputed):
    CommitI( tid.2, u, v, t ) ▶₀ #vr.12
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: CommitR( tid.2, u, v, t ) ▶₀ #vr.12
1: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', z))⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'STAT', $cSUITE0.1, gx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z.1))     )) @ #vk.16
2: splitEqs(0)
3: splitEqs(1)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 56 (precomputed):
    CommitR( tid.2, u, v, t ) ▶₀ #vr.12
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.13, 0) ~~> (#vk.3, 0)
1: StI1_SIG_STAT( $U.1, ~ltk.2, $V.1, ~xx.1, m1, ~tid.2 ) ▶₀ #vr.12
2: !PK_STAT( $V.1, pkV ) ▶₁ #vr.12
3: !PK_SIG( $U.1, pkU ) ▶₂ #vr.12
4: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', z))⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'STAT', $cSUITE0.1, gx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z.1))     )) @ #vk.16
5: splitEqs(0)
6: splitEqs(1)
7: splitEqs(6)
8: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.1>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', z.3))     )) @ #vk.20
9: !KU( (      aeadEncrypt('emptyStr',                  hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.1>), 'K_2m'>,                             hkdfExtract(hkdfExtract('emptyStr', z.3), z.4)),                  <$V.1, h(<$cHash0.2, m1, gy.1>), pkV>, $cAEAD0.2)⊕      hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.1>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', z.3))     )) @ #vk.21

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.14, 0) ~~> (#vk.3, 0)
1: StI1_SIG_STAT( $U.1, ~ltk.2, $V.1, ~xx.1, m1, ~tid.2 ) ▶₀ #vr.12
2: !PK_STAT( $V.1, pkV ) ▶₁ #vr.12
3: !PK_SIG( $U.1, pkU ) ▶₂ #vr.12
4: !KU( sign(<           <$U.1,             h(<$cHash0.2, h(<$cHash0.2, m1, gy.1>),                <                ($V.1⊕                 hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.1>), 'K_2e', '1'>,                            hkdfExtract('emptyStr', z.3))                ),                 (                 aeadEncrypt('emptyStr',                             hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.1>), 'K_2m'>,                                        hkdfExtract(hkdfExtract('emptyStr', z.3), z.4)),                             <$V.1, h(<$cHash0.2, m1, gy.1>), pkV>, $cAEAD0.2)⊕                 hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.1>), 'K_2e', '2'>,                            hkdfExtract('emptyStr', z.3))                )               >,                'emptyStr'>),             pkU>,            aeadEncrypt('emptyStr',                       hkdfExpand(<$cAEAD0.2,                                    h(<$cHash0.2, h(<$cHash0.2, m1, gy.1>),                                       <                                       ($V.1⊕                                        hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.1>), 'K_2e', '1'                                                   >,                                                   hkdfExtract('emptyStr', z.3))                                       ),                                        (                                        aeadEncrypt('emptyStr',                                                    hkdfExpand(<$cAEAD0.2,                                                                 h(<$cHash0.2, m1, gy.1>), 'K_2m'>,                                                               hkdfExtract(hkdfExtract('emptyStr',                                                                                       z.3),                                                                           z.4)),                                                    <$V.1, h(<$cHash0.2, m1, gy.1>), pkV>,                                                    $cAEAD0.2)⊕                                        hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.1>), 'K_2e', '2'                                                   >,                                                   hkdfExtract('emptyStr', z.3))                                       )                                      >,                                       'emptyStr'>),                                    'K_3m'>,                                  hkdfExtract(hkdfExtract('emptyStr', z.3), z.4)),                       <$U.1,                         h(<$cHash0.2, h(<$cHash0.2, m1, gy.1>),                            <                            ($V.1⊕                             hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.1>), 'K_2e', '1'>,                                        hkdfExtract('emptyStr', z.3))                            ),                             (                             aeadEncrypt('emptyStr',                                         hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.1>), 'K_2m'>,                                                    hkdfExtract(hkdfExtract('emptyStr', z.3), z.4)),                                         <$V.1, h(<$cHash0.2, m1, gy.1>), pkV>, $cAEAD0.2)⊕                             hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.1>), 'K_2e', '2'>,                                        hkdfExtract('emptyStr', z.3))                            )                           >,                            'emptyStr'>),                         pkU>,                       $cAEAD0.2)          >,          ~ltk.2)) @ #vk.26
5: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', z))⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'STAT', $cSUITE0.1, gx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z.1))     )) @ #vk.16
6: splitEqs(0)
7: splitEqs(1)
8: splitEqs(6)
9: !KU( h(<$cHash0.2, h(<$cHash0.2, m1, gy.1>),         <         ($V.1⊕          hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.1>), 'K_2e', '1'>,                     hkdfExtract('emptyStr', z.3))         ),          (          aeadEncrypt('emptyStr',                      hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.1>), 'K_2m'>,                                 hkdfExtract(hkdfExtract('emptyStr', z.3), z.4)),                      <$V.1, h(<$cHash0.2, m1, gy.1>), pkV>, $cAEAD0.2)⊕          hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.1>), 'K_2e', '2'>,                     hkdfExtract('emptyStr', z.3))         )        >,         'emptyStr'>)) @ #vk.23
10: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.1>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', z.3))     )) @ #vk.20
11: !KU( (      aeadEncrypt('emptyStr',                  hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.1>), 'K_2m'>,                             hkdfExtract(hkdfExtract('emptyStr', z.3), z.4)),                  <$V.1, h(<$cHash0.2, m1, gy.1>), pkV>, $cAEAD0.2)⊕      hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.1>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', z.3))     )) @ #vk.21

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.14, 0) ~~> (#vk.3, 0)
1: StI1_SIG_STAT( $U.1, ~ltk.2, $V.1, ~xx.1, m1, ~tid.2 ) ▶₀ #vr.12
2: !PK_STAT( $V.1, pkV ) ▶₁ #vr.12
3: !PK_SIG( $U.1, pkU ) ▶₂ #vr.12
4: !KU( sign(<           <$U.1,             h(<$cHash0.2, h(<$cHash0.2, m1, gy.1>),                <                ($V.1⊕                 hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.1>), 'K_2e', '1'>,                            hkdfExtract('emptyStr', z.3))                ),                 (                 aeadEncrypt('emptyStr',                             hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.1>), 'K_2m'>,                                        hkdfExtract(hkdfExtract('emptyStr', z.3), z.4)),                             <$V.1, h(<$cHash0.2, m1, gy.1>), pkV>, $cAEAD0.2)⊕                 hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.1>), 'K_2e', '2'>,                            hkdfExtract('emptyStr', z.3))                )               >,                'emptyStr'>),             pkU>,            aeadEncrypt('emptyStr',                       hkdfExpand(<$cAEAD0.2,                                    h(<$cHash0.2, h(<$cHash0.2, m1, gy.1>),                                       <                                       ($V.1⊕                                        hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.1>), 'K_2e', '1'                                                   >,                                                   hkdfExtract('emptyStr', z.3))                                       ),                                        (                                        aeadEncrypt('emptyStr',                                                    hkdfExpand(<$cAEAD0.2,                                                                 h(<$cHash0.2, m1, gy.1>), 'K_2m'>,                                                               hkdfExtract(hkdfExtract('emptyStr',                                                                                       z.3),                                                                           z.4)),                                                    <$V.1, h(<$cHash0.2, m1, gy.1>), pkV>,                                                    $cAEAD0.2)⊕                                        hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.1>), 'K_2e', '2'                                                   >,                                                   hkdfExtract('emptyStr', z.3))                                       )                                      >,                                       'emptyStr'>),                                    'K_3m'>,                                  hkdfExtract(hkdfExtract('emptyStr', z.3), z.4)),                       <$U.1,                         h(<$cHash0.2, h(<$cHash0.2, m1, gy.1>),                            <                            ($V.1⊕                             hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.1>), 'K_2e', '1'>,                                        hkdfExtract('emptyStr', z.3))                            ),                             (                             aeadEncrypt('emptyStr',                                         hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.1>), 'K_2m'>,                                                    hkdfExtract(hkdfExtract('emptyStr', z.3), z.4)),                                         <$V.1, h(<$cHash0.2, m1, gy.1>), pkV>, $cAEAD0.2)⊕                             hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.1>), 'K_2e', '2'>,                                        hkdfExtract('emptyStr', z.3))                            )                           >,                            'emptyStr'>),                         pkU>,                       $cAEAD0.2)          >,          ~ltk.2)) @ #vk.25
5: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', z))⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'STAT', $cSUITE0.1, gx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z.1))     )) @ #vk.16
6: splitEqs(0)
7: splitEqs(1)
8: splitEqs(6)
9: !KU( ($V.1⊕      hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.1>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', z.3))     )) @ #vk.20
10: !KU( (      aeadEncrypt('emptyStr',                  hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.1>), 'K_2m'>,                             hkdfExtract(hkdfExtract('emptyStr', z.3), z.4)),                  <$V.1, h(<$cHash0.2, m1, gy.1>), pkV>, $cAEAD0.2)⊕      hkdfExpand(<$cAEAD0.2, h(<$cHash0.2, m1, gy.1>), 'K_2e', '2'>,                 hkdfExtract('emptyStr', z.3))     )) @ #vk.21

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.13, 0) ~~> (#vk.3, 0)
1: !LTK_STAT( $V.1, ~ltk.2 ) ▶₀ #vr.12
2: !PK_STAT( $V.1, pkV ) ▶₁ #vr.12
3: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', z))⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'STAT', $cSUITE0.1, gx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z.1))     )) @ #vk.18
4: splitEqs(0)
5: splitEqs(1)
6: splitEqs(6)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.14, 0) ~~> (#vk.3, 0)
1: !LTK_STAT( $V.1, ~ltk.2 ) ▶₀ #vr.12
2: !PK_STAT( $V.1, pkV ) ▶₁ #vr.12
3: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', z))⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'STAT', $cSUITE0.1, gx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z.1))     )) @ #vk.18
4: splitEqs(0)
5: splitEqs(1)
6: splitEqs(6)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.14, 0) ~~> (#vk.3, 0)
1: !LTK_STAT( $V.1, ~ltk.2 ) ▶₀ #vr.12
2: !PK_STAT( $V.1, pkV ) ▶₁ #vr.12
3: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', z))⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'STAT', $cSUITE0.1, gx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z.1))     )) @ #vk.18
4: splitEqs(0)
5: splitEqs(1)
6: splitEqs(6)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.15, 0) ~~> (#vk.3, 0)
1: !LTK_STAT( $V.1, ~ltk.2 ) ▶₀ #vr.12
2: !PK_STAT( $V.1, pkV ) ▶₁ #vr.12
3: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', z))⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'STAT', $cSUITE0.1, gx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z.1))     )) @ #vk.18
4: splitEqs(0)
5: splitEqs(1)
6: splitEqs(6)
7: !KU( ($V.1⊕z.5) ) @ #vk.22

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.15, 0) ~~> (#vk.3, 0)
1: !LTK_STAT( $V.1, ~ltk.2 ) ▶₀ #vr.12
2: !PK_STAT( $V.1, pkV ) ▶₁ #vr.12
3: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', z))⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'STAT', $cSUITE0.1, gx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z.1))     )) @ #vk.18
4: !KU( (z.5⊕      hkdfExpand(<$cAEAD0.2,                   h(<$cHash0.2, <'SIG', 'STAT', $cSUITE0.2, gx.1>, 'g'^~yy.1>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', z.3))     )) @ #vk.22
5: splitEqs(0)
6: splitEqs(1)
7: splitEqs(6)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.15, 0) ~~> (#vk.3, 0)
1: !LTK_STAT( $V.1, ~ltk.2 ) ▶₀ #vr.12
2: !PK_STAT( $V.1, pkV ) ▶₁ #vr.12
3: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', z))⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'STAT', $cSUITE0.1, gx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z.1))     )) @ #vk.18
4: splitEqs(0)
5: splitEqs(1)
6: splitEqs(6)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.15, 0) ~~> (#vk.3, 0)
1: !LTK_STAT( $V.1, ~ltk.2 ) ▶₀ #vr.12
2: !PK_STAT( $V.1, pkV ) ▶₁ #vr.12
3: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', z))⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'STAT', $cSUITE0.1, gx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z.1))     )) @ #vk.18
4: !KU( (z.5⊕      aeadEncrypt('emptyStr',                  hkdfExpand(<$cAEAD0.2,                               h(<$cHash0.2, <'SIG', 'STAT', $cSUITE0.2, gx.1>, 'g'^~yy.1>),                               'K_2m'>,                             hkdfExtract(hkdfExtract('emptyStr', z.3), z.4)),                  <$V.1,                    h(<$cHash0.2, <'SIG', 'STAT', $cSUITE0.2, gx.1>, 'g'^~yy.1>), pkV>,                  $cAEAD0.2)     )) @ #vk.22
5: splitEqs(0)
6: splitEqs(1)
7: splitEqs(6)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.15, 0) ~~> (#vk.3, 0)
1: !LTK_STAT( $V.1, ~ltk.2 ) ▶₀ #vr.12
2: !PK_STAT( $V.1, pkV ) ▶₁ #vr.12
3: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', z))⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'STAT', $cSUITE0.1, gx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z.1))     )) @ #vk.18
4: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2, <'SIG', 'STAT', $cSUITE0.2, gx.1>, 'g'^~yy.1>),                  'K_2e', '2'>,                hkdfExtract('emptyStr', z.3))) @ #vk.22
5: splitEqs(0)
6: splitEqs(1)
7: splitEqs(6)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.15, 0) ~~> (#vk.3, 0)
1: !LTK_STAT( $V.1, ~ltk.2 ) ▶₀ #vr.12
2: !PK_STAT( $V.1, pkV ) ▶₁ #vr.12
3: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', z))⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'STAT', $cSUITE0.1, gx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z.1))     )) @ #vk.18
4: !KU( aeadEncrypt('emptyStr',                 hkdfExpand(<$cAEAD0.2,                              h(<$cHash0.2, <'SIG', 'STAT', $cSUITE0.2, gx.1>, 'g'^~yy.1>),                              'K_2m'>,                            hkdfExtract(hkdfExtract('emptyStr', z.3), z.4)),                 <$V.1,                   h(<$cHash0.2, <'SIG', 'STAT', $cSUITE0.2, gx.1>, 'g'^~yy.1>), pkV>,                 $cAEAD0.2)) @ #vk.22
5: splitEqs(0)
6: splitEqs(1)
7: splitEqs(6)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.15, 0) ~~> (#vk.3, 0)
1: !LTK_STAT( $V.1, ~ltk.2 ) ▶₀ #vr.12
2: !PK_STAT( $V.1, pkV ) ▶₁ #vr.12
3: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', z))⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'STAT', $cSUITE0.1, gx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z.1))     )) @ #vk.18
4: !KU( (z.5⊕      hkdfExpand(<$cAEAD0.2,                   h(<$cHash0.2, <'SIG', 'STAT', $cSUITE0.2, gx.1>, 'g'^~yy.1>),                   'K_2e', '2'>,                 hkdfExtract('emptyStr', z.3))     )) @ #vk.22
5: splitEqs(0)
6: splitEqs(1)
7: splitEqs(6)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !LTK_STAT( $V, ~ltk ) ▶₀ #vr.12
1: !PK_STAT( $V, 'g'^~ltk ) ▶₁ #vr.12
2: !KU( 'g'^(~xx*~yy) ) @ #vk.12
3: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'STAT', $cSUITE0.1, gx>, 'g'^~yy.1>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.20
4: splitEqs(1)
5: !KU( 'g'^~yy ) @ #vk.11
6: !KU( 'g'^~xx ) @ #vk.10

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 56 (precomputed): !LTK_STAT( $V, ~ltk ) ▶₀ #vr.12
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !PK_STAT( $V, 'g'^~ltk ) ▶₁ #vr.12
1: !KU( 'g'^(~xx*~yy) ) @ #vk.12
2: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'STAT', $cSUITE0.1, gx>, 'g'^~yy.1>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.20
3: splitEqs(1)
4: !KU( 'g'^~yy ) @ #vk.11
5: !KU( 'g'^~xx ) @ #vk.10

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 57 (precomputed):
    !PK_STAT( $V, 'g'^~ltk ) ▶₁ #vr.12
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( 'g'^(~xx*~yy) ) @ #vk.12
1: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'STAT', $cSUITE0.1, gx>, 'g'^~yy.1>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.20
2: splitEqs(1)
3: !KU( 'g'^~yy ) @ #vk.11
4: !KU( 'g'^~xx ) @ #vk.10

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 70 (precomputed): !KU( 'g'^(~xx*~yy) ) @ #vk.12
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.24
1: !KU( ~yy ) @ #vk.25
2: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'STAT', $cSUITE0.1, gx>, 'g'^~yy.1>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.20
3: splitEqs(1)
4: !KU( 'g'^~yy ) @ #vk.12
5: !KU( 'g'^~xx ) @ #vk.11

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 77 (precomputed): !KU( ~xx ) @ #vk.24
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.22
1: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'STAT', $cSUITE0.1, gx>, 'g'^~yy.1>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.20
2: splitEqs(1)
3: !KU( 'g'^~yy ) @ #vk.12
4: !KU( 'g'^~xx ) @ #vk.11

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 82 (precomputed): !KU( ~xx ) @ #vk.22
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~yy ) @ #vk.22
1: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'STAT', $cSUITE0.1, gx>, 'g'^~yy.1>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.20
2: splitEqs(1)
3: !KU( 'g'^~yy ) @ #vk.12
4: !KU( 'g'^~xx ) @ #vk.11

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 75 (precomputed): !KU( ~yy ) @ #vk.22
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !LTK_STAT( $V.1, ~ltk.2 ) ▶₀ #vr.12
1: !PK_STAT( $V.1, pkV ) ▶₁ #vr.12
2: !KU( 'g'^(~xx*~yy) ) @ #vk.12
3: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'STAT', $cSUITE0.1, gx>, 'g'^~yy.1>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.20
4: !KU( (      aeadEncrypt('emptyStr',                  hkdfExpand(<$cAEAD0,                               h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'>,                             hkdfExtract(hkdfExtract('emptyStr', 'g'^(~xx*~yy)),                                         'g'^(~ltk*~xx))),                  <$V, h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                    'g'^~ltk>,                  $cAEAD0)⊕      aeadEncrypt('emptyStr',                  hkdfExpand(<$cAEAD0,                               h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'>,                             hkdfExtract(hkdfExtract('emptyStr', 'g'^(~xx*~yy)),                                         'g'^(~xx*~ltk.2))),                  <$V.1, h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                    pkV>,                  $cAEAD0)     )) @ #vk.22
5: splitEqs(1)
6: !KU( 'g'^~yy ) @ #vk.11
7: !KU( 'g'^~xx ) @ #vk.10

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 56 (precomputed):
    !LTK_STAT( $V.1, ~ltk.2 ) ▶₀ #vr.12
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !PK_STAT( $V.1, pkV ) ▶₁ #vr.12
1: !KU( 'g'^(~xx*~yy) ) @ #vk.12
2: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'STAT', $cSUITE0.1, gx>, 'g'^~yy.1>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.20
3: !KU( (      aeadEncrypt('emptyStr',                  hkdfExpand(<$cAEAD0,                               h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'>,                             hkdfExtract(hkdfExtract('emptyStr', 'g'^(~xx*~yy)),                                         'g'^(~ltk*~xx))),                  <$V, h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                    'g'^~ltk>,                  $cAEAD0)⊕      aeadEncrypt('emptyStr',                  hkdfExpand(<$cAEAD0,                               h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'>,                             hkdfExtract(hkdfExtract('emptyStr', 'g'^(~xx*~yy)),                                         'g'^(~xx*~ltk.2))),                  <$V.1, h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                    pkV>,                  $cAEAD0)     )) @ #vk.22
4: splitEqs(1)
5: !KU( 'g'^~yy ) @ #vk.11
6: !KU( 'g'^~xx ) @ #vk.9

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 57 (precomputed): !PK_STAT( $V.1, pkV ) ▶₁ #vr.12
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( 'g'^(~xx*~yy) ) @ #vk.12
1: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'STAT', $cSUITE0.1, gx>, 'g'^~yy.1>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.20
2: !KU( (      aeadEncrypt('emptyStr',                  hkdfExpand(<$cAEAD0,                               h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'>,                             hkdfExtract(hkdfExtract('emptyStr', 'g'^(~xx*~yy)),                                         'g'^(~ltk*~xx))),                  <$V, h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                    'g'^~ltk>,                  $cAEAD0)⊕      aeadEncrypt('emptyStr',                  hkdfExpand(<$cAEAD0,                               h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'>,                             hkdfExtract(hkdfExtract('emptyStr', 'g'^(~xx*~yy)),                                         'g'^(~xx*~ltk.2))),                  <$V.1, h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                    'g'^~ltk.2>,                  $cAEAD0)     )) @ #vk.22
3: splitEqs(1)
4: !KU( 'g'^~yy ) @ #vk.11
5: !KU( 'g'^~xx ) @ #vk.9

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 74 (precomputed): !KU( 'g'^(~xx*~yy) ) @ #vk.12
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.25
1: !KU( ~yy ) @ #vk.26
2: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'STAT', $cSUITE0.1, gx>, 'g'^~yy.1>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.20
3: !KU( (      aeadEncrypt('emptyStr',                  hkdfExpand(<$cAEAD0,                               h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'>,                             hkdfExtract(hkdfExtract('emptyStr', 'g'^(~xx*~yy)),                                         'g'^(~ltk*~xx))),                  <$V, h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                    'g'^~ltk>,                  $cAEAD0)⊕      aeadEncrypt('emptyStr',                  hkdfExpand(<$cAEAD0,                               h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'>,                             hkdfExtract(hkdfExtract('emptyStr', 'g'^(~xx*~yy)),                                         'g'^(~xx*~ltk.2))),                  <$V.1, h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                    'g'^~ltk.2>,                  $cAEAD0)     )) @ #vk.22
4: splitEqs(1)
5: !KU( 'g'^~yy ) @ #vk.12
6: !KU( 'g'^~xx ) @ #vk.10

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 81 (precomputed): !KU( ~xx ) @ #vk.25
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.23
1: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'STAT', $cSUITE0.1, gx>, 'g'^~yy.1>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.20
2: !KU( (      aeadEncrypt('emptyStr',                  hkdfExpand(<$cAEAD0,                               h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'>,                             hkdfExtract(hkdfExtract('emptyStr', 'g'^(~xx*~yy)),                                         'g'^(~ltk*~xx))),                  <$V, h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                    'g'^~ltk>,                  $cAEAD0)⊕      aeadEncrypt('emptyStr',                  hkdfExpand(<$cAEAD0,                               h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'>,                             hkdfExtract(hkdfExtract('emptyStr', 'g'^(~xx*~yy)),                                         'g'^(~xx*~ltk.2))),                  <$V.1, h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                    'g'^~ltk.2>,                  $cAEAD0)     )) @ #vk.22
3: splitEqs(1)
4: !KU( 'g'^~yy ) @ #vk.12
5: !KU( 'g'^~xx ) @ #vk.10

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 86 (precomputed): !KU( ~xx ) @ #vk.23
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~yy ) @ #vk.23
1: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'STAT', $cSUITE0.1, gx>, 'g'^~yy.1>),                   'K_2e', '1'>,                 hkdfExtract('emptyStr', z))     )) @ #vk.20
2: !KU( (      aeadEncrypt('emptyStr',                  hkdfExpand(<$cAEAD0,                               h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'>,                             hkdfExtract(hkdfExtract('emptyStr', 'g'^(~xx*~yy)),                                         'g'^(~ltk*~xx))),                  <$V, h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                    'g'^~ltk>,                  $cAEAD0)⊕      aeadEncrypt('emptyStr',                  hkdfExpand(<$cAEAD0,                               h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'>,                             hkdfExtract(hkdfExtract('emptyStr', 'g'^(~xx*~yy)),                                         'g'^(~xx*~ltk.2))),                  <$V.1, h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                    'g'^~ltk.2>,                  $cAEAD0)     )) @ #vk.22
3: splitEqs(1)
4: !KU( 'g'^~yy ) @ #vk.12
5: !KU( 'g'^~xx ) @ #vk.10

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 79 (precomputed): !KU( ~yy ) @ #vk.23
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.16, 0) ~~> (#vk.3, 0)
1: !LTK_STAT( $V.1, ~ltk.2 ) ▶₀ #vr.12
2: !PK_STAT( $V.1, pkV ) ▶₁ #vr.12
3: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', z))⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'STAT', $cSUITE0.1, gx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z.1))     )) @ #vk.18
4: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2, <'SIG', 'STAT', $cSUITE0.2, gx.1>, 'g'^~yy.1>),                  'K_2e', '2'>,                hkdfExtract('emptyStr', z.3))) @ #vk.22
5: splitEqs(0)
6: splitEqs(1)
7: splitEqs(6)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: (#vr.16, 0) ~~> (#vk.3, 0)
1: !LTK_STAT( $V.1, ~ltk.2 ) ▶₀ #vr.12
2: !PK_STAT( $V.1, pkV ) ▶₁ #vr.12
3: !KU( h(<$cHash0.2, <'SIG', 'STAT', $cSUITE0.2, gx.1>, 'g'^~yy.1>)) @ #vk.28
4: !KU( (      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,                 hkdfExtract('emptyStr', z))⊕      hkdfExpand(<$cAEAD0.1,                   h(<$cHash0.1, <'SIG', 'STAT', $cSUITE0.1, gx>, 'g'^~yy>), 'K_2e',                   '1'>,                 hkdfExtract('emptyStr', z.1))     )) @ #vk.18
5: !KU( hkdfExpand(<$cAEAD0.2,                  h(<$cHash0.2, <'SIG', 'STAT', $cSUITE0.2, gx.1>, 'g'^~yy.1>),                  'K_2e', '2'>,                hkdfExtract('emptyStr', z.3))) @ #vk.22
6: splitEqs(0)
7: splitEqs(1)
8: splitEqs(6)

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !PK_STAT( $V.1, pkV ) ▶₁ #vr.8
1: !KU( 'g'^(~xx*~yy) ) @ #vk.12
2: !KU( (      aeadEncrypt('emptyStr',                  hkdfExpand(<$cAEAD0,                               h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'>,                             hkdfExtract(hkdfExtract('emptyStr', 'g'^(~xx*~yy)),                                         'g'^(~ltk*~xx))),                  <$V, h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                    'g'^~ltk>,                  $cAEAD0)⊕      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                   '2'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))     )) @ #vk.11
3: !KU( ($V⊕$V.1) ) @ #vk.16
4: !KU( 'g'^~yy ) @ #vk.10
5: !KU( 'g'^~xx ) @ #vk.9

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 33 (precomputed): !PK_STAT( $V.1, pkV ) ▶₁ #vr.8
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( 'g'^(~xx*~yy) ) @ #vk.12
1: !KU( (      aeadEncrypt('emptyStr',                  hkdfExpand(<$cAEAD0,                               h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'>,                             hkdfExtract(hkdfExtract('emptyStr', 'g'^(~xx*~yy)),                                         'g'^(~ltk*~xx))),                  <$V, h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                    'g'^~ltk>,                  $cAEAD0)⊕      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                   '2'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))     )) @ #vk.11
2: !KU( ($V⊕$V.1) ) @ #vk.16
3: !KU( 'g'^~yy ) @ #vk.10
4: !KU( 'g'^~xx ) @ #vk.9

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 50 (precomputed): !KU( 'g'^(~xx*~yy) ) @ #vk.12
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.19
1: !KU( ~yy ) @ #vk.20
2: !KU( (      aeadEncrypt('emptyStr',                  hkdfExpand(<$cAEAD0,                               h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'>,                             hkdfExtract(hkdfExtract('emptyStr', 'g'^(~xx*~yy)),                                         'g'^(~ltk*~xx))),                  <$V, h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                    'g'^~ltk>,                  $cAEAD0)⊕      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                   '2'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))     )) @ #vk.12
3: !KU( ($V⊕$V.1) ) @ #vk.16
4: !KU( 'g'^~yy ) @ #vk.11
5: !KU( 'g'^~xx ) @ #vk.10

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 57 (precomputed): !KU( ~xx ) @ #vk.19
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~yy ) @ #vk.17
1: !KU( (      aeadEncrypt('emptyStr',                  hkdfExpand(<$cAEAD0,                               h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'>,                             hkdfExtract(hkdfExtract('emptyStr', 'g'^(~xx*~yy)),                                         'g'^(~ltk*~xx))),                  <$V, h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                    'g'^~ltk>,                  $cAEAD0)⊕      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                   '2'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))     )) @ #vk.12
2: !KU( ($V⊕$V.1) ) @ #vk.16
3: !KU( 'g'^~yy ) @ #vk.11
4: !KU( 'g'^~xx ) @ #vk.10

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~xx ) @ #vk.17
1: !KU( (      aeadEncrypt('emptyStr',                  hkdfExpand(<$cAEAD0,                               h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2m'>,                             hkdfExtract(hkdfExtract('emptyStr', 'g'^(~xx*~yy)),                                         'g'^(~ltk*~xx))),                  <$V, h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>),                    'g'^~ltk>,                  $cAEAD0)⊕      hkdfExpand(<$cAEAD0,                   h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 'g'^~yy>), 'K_2e',                   '2'>,                 hkdfExtract('emptyStr', 'g'^(~xx*~yy)))     )) @ #vk.12
2: !KU( ($V⊕$V.1) ) @ #vk.16
3: !KU( 'g'^~yy ) @ #vk.11
4: !KU( 'g'^~xx ) @ #vk.10

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

  solved goal nr. 55 (precomputed): !KU( ~yy ) @ #vk.17
  solved goal nr. 62 (precomputed): !KU( ~xx ) @ #vk.17
 OK.

theory edhoc_SIG_STAT_ACTIVE begin

// Function signature and definition of the equational theory E

builtins: diffie-hellman, xor
functions: aeadDecrypt/4, aeadEncrypt/4, decrypt/3, fst/1, h/1,
           hkdfExpand/2, hkdfExtract/2, pair/2, pk/1, sign/2, snd/1, true/0,
           verify/3
equations:
    aeadDecrypt(key, aeadEncrypt(key, pt, aad, algoId), aad, algoId) = pt,
    decrypt(key, aeadEncrypt(key, pt, aad, algoID), algoId) = pt,
    fst(<x.1, x.2>) = x.1,
    snd(<x.1, x.2>) = x.2,
    verify(sign(x.1, x.2), x.1, pk(x.2)) = true



restriction Eq:
  "∀ x y #i. (Eq( x, y ) @ #i) ⇒ (x = y)"
  // safety formula

rule (modulo E) I1_SIG_STAT:
   [ !LTK_SIG( $U, ~ltk ), Fr( ~xx ), Fr( ~tid ) ]
  --[ I1( ~tid, $U, $V, <'SIG', 'STAT', $cSUITE0, 'g'^~xx> ) ]->
   [
   StI1_SIG_STAT( $U, ~ltk, $V, ~xx, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>,
                  ~tid
   ),
   Out( <'SIG', 'STAT', $cSUITE0, 'g'^~xx> )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) R2_SIG_STAT:
   [
   !LTK_STAT( $V, ~ltk ), !PK_STAT( $V, pkV ),
   In( <'SIG', 'STAT', $cSUITE0, gx> ), Fr( ~yy ), Fr( ~tid )
   ]
  --[
  ExpRunningR( ~tid, $V, <gx^~yy, gx^~ltk> ),
  R2( ~tid, $V, <'SIG', 'STAT', $cSUITE0, gx>,
      <'g'^~yy, 
       ($V⊕
        hkdfExpand(<$cAEAD0, 
                    h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy>), 'K_2e', '1'>,
                   hkdfExtract('emptyStr', gx^~yy))
       ), 
       (
        aeadEncrypt('emptyStr',
                    hkdfExpand(<$cAEAD0, 
                                h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy>), 'K_2m'>,
                               hkdfExtract(hkdfExtract('emptyStr', gx^~yy), gx^~ltk)),
                    <$V, h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy>), pkV>,
                    $cAEAD0)⊕
        hkdfExpand(<$cAEAD0, 
                    h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy>), 'K_2e', '2'>,
                   hkdfExtract('emptyStr', gx^~yy))
       )
      >
  )
  ]->
   [
   StR2_SIG_STAT( $V, ~ltk, gx^~ltk, ~yy,
                  hkdfExtract(hkdfExtract('emptyStr', gx^~yy), gx^~ltk),
                  h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy>),
                  <
                   ($V⊕
                    hkdfExpand(<$cAEAD0, 
                                h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy>), 'K_2e', '1'>,
                               hkdfExtract('emptyStr', gx^~yy))
                   ), 
                   (
                    aeadEncrypt('emptyStr',
                                hkdfExpand(<$cAEAD0, 
                                            h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy>), 'K_2m'>,
                                           hkdfExtract(hkdfExtract('emptyStr', gx^~yy), gx^~ltk)),
                                <$V, h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy>), pkV>,
                                $cAEAD0)⊕
                    hkdfExpand(<$cAEAD0, 
                                h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy>), 'K_2e', '2'>,
                               hkdfExtract('emptyStr', gx^~yy))
                   )
                  >,
                  gx^~yy, ~tid, <'SIG', 'STAT', $cSUITE0, gx>,
                  <'g'^~yy, 
                   ($V⊕
                    hkdfExpand(<$cAEAD0, 
                                h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy>), 'K_2e', '1'>,
                               hkdfExtract('emptyStr', gx^~yy))
                   ), 
                   (
                    aeadEncrypt('emptyStr',
                                hkdfExpand(<$cAEAD0, 
                                            h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy>), 'K_2m'>,
                                           hkdfExtract(hkdfExtract('emptyStr', gx^~yy), gx^~ltk)),
                                <$V, h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy>), pkV>,
                                $cAEAD0)⊕
                    hkdfExpand(<$cAEAD0, 
                                h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy>), 'K_2e', '2'>,
                               hkdfExtract('emptyStr', gx^~yy))
                   )
                  >
   ),
   Out( <'g'^~yy, 
         ($V⊕
          hkdfExpand(<$cAEAD0, 
                      h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy>), 'K_2e', '1'>,
                     hkdfExtract('emptyStr', gx^~yy))
         ), 
         (
          aeadEncrypt('emptyStr',
                      hkdfExpand(<$cAEAD0, 
                                  h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy>), 'K_2m'>,
                                 hkdfExtract(hkdfExtract('emptyStr', gx^~yy), gx^~ltk)),
                      <$V, h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy>), pkV>,
                      $cAEAD0)⊕
          hkdfExpand(<$cAEAD0, 
                      h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy>), 'K_2e', '2'>,
                     hkdfExtract('emptyStr', gx^~yy))
         )
        >
   )
   ]

  /*
  rule (modulo AC) R2_SIG_STAT:
     [
     !LTK_STAT( $V, ~ltk ), !PK_STAT( $V, pkV ),
     In( <'SIG', 'STAT', $cSUITE0, gx> ), Fr( ~yy ), Fr( ~tid )
     ]
    --[
    ExpRunningR( ~tid, $V, <z.1, z> ),
    R2( ~tid, $V, <'SIG', 'STAT', $cSUITE0, gx>,
        <'g'^~yy, 
         ($V⊕
          hkdfExpand(<$cAEAD0, 
                      h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy>), 'K_2e', '1'>,
                     hkdfExtract('emptyStr', z.1))
         ), 
         (
          aeadEncrypt('emptyStr',
                      hkdfExpand(<$cAEAD0, 
                                  h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy>), 'K_2m'>,
                                 hkdfExtract(hkdfExtract('emptyStr', z.1), z)),
                      <$V, h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy>), pkV>,
                      $cAEAD0)⊕
          hkdfExpand(<$cAEAD0, 
                      h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy>), 'K_2e', '2'>,
                     hkdfExtract('emptyStr', z.1))
         )
        >
    )
    ]->
     [
     StR2_SIG_STAT( $V, ~ltk, z, ~yy,
                    hkdfExtract(hkdfExtract('emptyStr', z.1), z),
                    h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy>),
                    <
                     ($V⊕
                      hkdfExpand(<$cAEAD0, 
                                  h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy>), 'K_2e', '1'>,
                                 hkdfExtract('emptyStr', z.1))
                     ), 
                     (
                      aeadEncrypt('emptyStr',
                                  hkdfExpand(<$cAEAD0, 
                                              h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy>), 'K_2m'>,
                                             hkdfExtract(hkdfExtract('emptyStr', z.1), z)),
                                  <$V, h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy>), pkV>,
                                  $cAEAD0)⊕
                      hkdfExpand(<$cAEAD0, 
                                  h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy>), 'K_2e', '2'>,
                                 hkdfExtract('emptyStr', z.1))
                     )
                    >,
                    z.1, ~tid, <'SIG', 'STAT', $cSUITE0, gx>,
                    <'g'^~yy, 
                     ($V⊕
                      hkdfExpand(<$cAEAD0, 
                                  h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy>), 'K_2e', '1'>,
                                 hkdfExtract('emptyStr', z.1))
                     ), 
                     (
                      aeadEncrypt('emptyStr',
                                  hkdfExpand(<$cAEAD0, 
                                              h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy>), 'K_2m'>,
                                             hkdfExtract(hkdfExtract('emptyStr', z.1), z)),
                                  <$V, h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy>), pkV>,
                                  $cAEAD0)⊕
                      hkdfExpand(<$cAEAD0, 
                                  h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy>), 'K_2e', '2'>,
                                 hkdfExtract('emptyStr', z.1))
                     )
                    >
     ),
     Out( <'g'^~yy, 
           ($V⊕
            hkdfExpand(<$cAEAD0, 
                        h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy>), 'K_2e', '1'>,
                       hkdfExtract('emptyStr', z.1))
           ), 
           (
            aeadEncrypt('emptyStr',
                        hkdfExpand(<$cAEAD0, 
                                    h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy>), 'K_2m'>,
                                   hkdfExtract(hkdfExtract('emptyStr', z.1), z)),
                        <$V, h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy>), pkV>,
                        $cAEAD0)⊕
            hkdfExpand(<$cAEAD0, 
                        h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy>), 'K_2e', '2'>,
                       hkdfExtract('emptyStr', z.1))
           )
          >
     )
     ]
    variants (modulo AC)
     1. ~ltk  = ~ltk.87
        ~yy   = ~yy.89
        gx    = gx.90
        z     = gx.90^~ltk.87
        z.1   = gx.90^~yy.89
    
     2. ~ltk  = ~ltk.91
        ~yy   = ~ltk.91
        gx    = z.98^inv(~ltk.91)
        z     = z.98
        z.1   = z.98
    
     3. ~ltk  = ~ltk.91
        ~yy   = ~yy.93
        gx    = z.98^inv(~ltk.91)
        z     = z.98
        z.1   = z.98^(~yy.93*inv(~ltk.91))
    
     4. ~ltk  = ~ltk.93
        ~yy   = ~yy.95
        gx    = z.102^inv(~yy.95)
        z     = z.102^(~ltk.93*inv(~yy.95))
        z.1   = z.102
    
     5. ~ltk  = ~ltk.3660
        ~yy   = ~yy.3662
        gx    = x.7313^x.7314
        z     = x.7313^(~ltk.3660*x.7314)
        z.1   = x.7313^(~yy.3662*x.7314)
    
     6. ~ltk  = ~ltk.3661
        ~yy   = ~yy.3663
        gx    = x.7315^inv((~yy.3663*x.7316))
        z     = x.7315^(~ltk.3661*inv((~yy.3663*x.7316)))
        z.1   = x.7315^inv(x.7316)
    
     7. ~ltk  = ~ltk.3661
        ~yy   = ~yy.3663
        gx    = x.7315^(x.7316*inv(~yy.3663))
        z     = x.7315^(~ltk.3661*x.7316*inv(~yy.3663))
        z.1   = x.7315^x.7316
    
     8. ~ltk  = ~ltk.3662
        ~yy   = ~ltk.3662
        gx    = x.7317^inv((~ltk.3662*x.7318))
        z     = x.7317^inv(x.7318)
        z.1   = x.7317^inv(x.7318)
    
     9. ~ltk  = ~ltk.3662
        ~yy   = ~ltk.3662
        gx    = x.7317^(x.7318*inv(~ltk.3662))
        z     = x.7317^x.7318
        z.1   = x.7317^x.7318
    
    10. ~ltk  = ~ltk.3662
        ~yy   = ~yy.3664
        gx    = x.7316^(x.7317*inv((~yy.3664*x.7318)))
        z     = x.7316^(~ltk.3662*x.7317*inv((~yy.3664*x.7318)))
        z.1   = x.7316^(x.7317*inv(x.7318))
    
    11. ~ltk  = ~ltk.3662
        ~yy   = ~yy.3664
        gx    = x.7318^inv((~ltk.3662*~yy.3664))
        z     = x.7318^inv(~yy.3664)
        z.1   = x.7318^inv(~ltk.3662)
    
    12. ~ltk  = ~ltk.3663
        ~yy   = ~ltk.3663
        gx    = x.7318^(x.7319*inv((~ltk.3663*x.7320)))
        z     = x.7318^(x.7319*inv(x.7320))
        z.1   = x.7318^(x.7319*inv(x.7320))
    
    13. ~ltk  = ~ltk.3663
        ~yy   = ~yy.3665
        gx    = x.7319^inv((~ltk.3663*~yy.3665*x.7320))
        z     = x.7319^inv((~yy.3665*x.7320))
        z.1   = x.7319^inv((~ltk.3663*x.7320))
    
    14. ~ltk  = ~ltk.3663
        ~yy   = ~yy.3665
        gx    = x.7319^inv((~ltk.3663*x.7320))
        z     = x.7319^inv(x.7320)
        z.1   = x.7319^(~yy.3665*inv((~ltk.3663*x.7320)))
    
    15. ~ltk  = ~ltk.3663
        ~yy   = ~yy.3665
        gx    = x.7319^(x.7320*inv(~ltk.3663))
        z     = x.7319^x.7320
        z.1   = x.7319^(~yy.3665*x.7320*inv(~ltk.3663))
    
    16. ~ltk  = ~ltk.3663
        ~yy   = ~yy.3665
        gx    = x.7319^(x.7320*inv((~ltk.3663*~yy.3665)))
        z     = x.7319^(x.7320*inv(~yy.3665))
        z.1   = x.7319^(x.7320*inv(~ltk.3663))
    
    17. ~ltk  = ~ltk.3664
        ~yy   = ~yy.3666
        gx    = x.7320^(x.7321*inv((~ltk.3664*~yy.3666*x.7322)))
        z     = x.7320^(x.7321*inv((~yy.3666*x.7322)))
        z.1   = x.7320^(x.7321*inv((~ltk.3664*x.7322)))
    
    18. ~ltk  = ~ltk.3664
        ~yy   = ~yy.3666
        gx    = x.7320^(x.7321*inv((~ltk.3664*x.7322)))
        z     = x.7320^(x.7321*inv(x.7322))
        z.1   = x.7320^(~yy.3666*x.7321*inv((~ltk.3664*x.7322)))
  */

rule (modulo E) I3_SIG_STAT:
   [
   StI1_SIG_STAT( $U, ~ltk, $V, ~xx, m1, ~tid ), !PK_STAT( $V, pkV ),
   !PK_SIG( $U, pkU ),
   In( <gy, 
        ($V⊕
         hkdfExpand(<$cAEAD0, h(<$cHash0, m1, gy>), 'K_2e', '1'>,
                    hkdfExtract('emptyStr', gy^~xx))
        ), 
        (authR⊕
         hkdfExpand(<$cAEAD0, h(<$cHash0, m1, gy>), 'K_2e', '2'>,
                    hkdfExtract('emptyStr', gy^~xx))
        )
       >
   )
   ]
  --[
  ExpCommitI( ~tid, $U, $V, <gy^~xx, pkV^~xx> ),
  CommitI( ~tid, $U, $V, <gy^~xx, pkV^~xx> ),
  ExpRunningI( ~tid, $U, $V, <gy^~xx, pkV^~xx> ),
  RunningI( ~tid, $U, $V, <gy^~xx, pkV^~xx> ),
  I3( ~tid, $U, $V, m1,
      <gy, 
       ($V⊕
        hkdfExpand(<$cAEAD0, h(<$cHash0, m1, gy>), 'K_2e', '1'>,
                   hkdfExtract('emptyStr', gy^~xx))
       ), 
       (authR⊕
        hkdfExpand(<$cAEAD0, h(<$cHash0, m1, gy>), 'K_2e', '2'>,
                   hkdfExtract('emptyStr', gy^~xx))
       )
      >,
      <'emptyStr', 
       aeadEncrypt(<$U, 
                    sign(<
                          <$U, 
                           h(<$cHash0, h(<$cHash0, m1, gy>), 
                              <
                               ($V⊕
                                hkdfExpand(<$cAEAD0, h(<$cHash0, m1, gy>), 'K_2e', '1'>,
                                           hkdfExtract('emptyStr', gy^~xx))
                               ), 
                               (authR⊕
                                hkdfExpand(<$cAEAD0, h(<$cHash0, m1, gy>), 'K_2e', '2'>,
                                           hkdfExtract('emptyStr', gy^~xx))
                               )
                              >, 
                              'emptyStr'>), 
                           pkU>, 
                          aeadEncrypt('emptyStr',
                                      hkdfExpand(<$cAEAD0, 
                                                  h(<$cHash0, h(<$cHash0, m1, gy>), 
                                                     <
                                                      ($V⊕
                                                       hkdfExpand(<$cAEAD0, h(<$cHash0, m1, gy>), 'K_2e', '1'
                                                                  >,
                                                                  hkdfExtract('emptyStr', gy^~xx))
                                                      ), 
                                                      (authR⊕
                                                       hkdfExpand(<$cAEAD0, h(<$cHash0, m1, gy>), 'K_2e', '2'
                                                                  >,
                                                                  hkdfExtract('emptyStr', gy^~xx))
                                                      )
                                                     >, 
                                                     'emptyStr'>), 
                                                  'K_3m'>,
                                                 hkdfExtract(hkdfExtract('emptyStr', gy^~xx), pkV^~xx)),
                                      <$U, 
                                       h(<$cHash0, h(<$cHash0, m1, gy>), 
                                          <
                                           ($V⊕
                                            hkdfExpand(<$cAEAD0, h(<$cHash0, m1, gy>), 'K_2e', '1'>,
                                                       hkdfExtract('emptyStr', gy^~xx))
                                           ), 
                                           (authR⊕
                                            hkdfExpand(<$cAEAD0, h(<$cHash0, m1, gy>), 'K_2e', '2'>,
                                                       hkdfExtract('emptyStr', gy^~xx))
                                           )
                                          >, 
                                          'emptyStr'>), 
                                       pkU>,
                                      $cAEAD0)
                         >,
                         ~ltk)
                   >,
                   hkdfExpand(<$cAEAD0, 
                               h(<$cHash0, h(<$cHash0, m1, gy>), 
                                  <
                                   ($V⊕
                                    hkdfExpand(<$cAEAD0, h(<$cHash0, m1, gy>), 'K_2e', '1'>,
                                               hkdfExtract('emptyStr', gy^~xx))
                                   ), 
                                   (authR⊕
                                    hkdfExpand(<$cAEAD0, h(<$cHash0, m1, gy>), 'K_2e', '2'>,
                                               hkdfExtract('emptyStr', gy^~xx))
                                   )
                                  >, 
                                  'emptyStr'>), 
                               'K_3ae'>,
                              hkdfExtract(hkdfExtract('emptyStr', gy^~xx), pkV^~xx)),
                   h(<$cHash0, h(<$cHash0, m1, gy>), 
                      <
                       ($V⊕
                        hkdfExpand(<$cAEAD0, h(<$cHash0, m1, gy>), 'K_2e', '1'>,
                                   hkdfExtract('emptyStr', gy^~xx))
                       ), 
                       (authR⊕
                        hkdfExpand(<$cAEAD0, h(<$cHash0, m1, gy>), 'K_2e', '2'>,
                                   hkdfExtract('emptyStr', gy^~xx))
                       )
                      >, 
                      'emptyStr'>),
                   $cAEAD0)
      >
  ),
  Eq( authR,
      aeadEncrypt('emptyStr',
                  hkdfExpand(<$cAEAD0, h(<$cHash0, m1, gy>), 'K_2m'>,
                             hkdfExtract(hkdfExtract('emptyStr', gy^~xx), pkV^~xx)),
                  <$V, h(<$cHash0, m1, gy>), pkV>, $cAEAD0)
  )
  ]->
   [
   Out( <'emptyStr', 
         aeadEncrypt(<$U, 
                      sign(<
                            <$U, 
                             h(<$cHash0, h(<$cHash0, m1, gy>), 
                                <
                                 ($V⊕
                                  hkdfExpand(<$cAEAD0, h(<$cHash0, m1, gy>), 'K_2e', '1'>,
                                             hkdfExtract('emptyStr', gy^~xx))
                                 ), 
                                 (authR⊕
                                  hkdfExpand(<$cAEAD0, h(<$cHash0, m1, gy>), 'K_2e', '2'>,
                                             hkdfExtract('emptyStr', gy^~xx))
                                 )
                                >, 
                                'emptyStr'>), 
                             pkU>, 
                            aeadEncrypt('emptyStr',
                                        hkdfExpand(<$cAEAD0, 
                                                    h(<$cHash0, h(<$cHash0, m1, gy>), 
                                                       <
                                                        ($V⊕
                                                         hkdfExpand(<$cAEAD0, h(<$cHash0, m1, gy>), 'K_2e', 
                                                                     '1'>,
                                                                    hkdfExtract('emptyStr', gy^~xx))
                                                        ), 
                                                        (authR⊕
                                                         hkdfExpand(<$cAEAD0, h(<$cHash0, m1, gy>), 'K_2e', 
                                                                     '2'>,
                                                                    hkdfExtract('emptyStr', gy^~xx))
                                                        )
                                                       >, 
                                                       'emptyStr'>), 
                                                    'K_3m'>,
                                                   hkdfExtract(hkdfExtract('emptyStr', gy^~xx), pkV^~xx)),
                                        <$U, 
                                         h(<$cHash0, h(<$cHash0, m1, gy>), 
                                            <
                                             ($V⊕
                                              hkdfExpand(<$cAEAD0, h(<$cHash0, m1, gy>), 'K_2e', '1'>,
                                                         hkdfExtract('emptyStr', gy^~xx))
                                             ), 
                                             (authR⊕
                                              hkdfExpand(<$cAEAD0, h(<$cHash0, m1, gy>), 'K_2e', '2'>,
                                                         hkdfExtract('emptyStr', gy^~xx))
                                             )
                                            >, 
                                            'emptyStr'>), 
                                         pkU>,
                                        $cAEAD0)
                           >,
                           ~ltk)
                     >,
                     hkdfExpand(<$cAEAD0, 
                                 h(<$cHash0, h(<$cHash0, m1, gy>), 
                                    <
                                     ($V⊕
                                      hkdfExpand(<$cAEAD0, h(<$cHash0, m1, gy>), 'K_2e', '1'>,
                                                 hkdfExtract('emptyStr', gy^~xx))
                                     ), 
                                     (authR⊕
                                      hkdfExpand(<$cAEAD0, h(<$cHash0, m1, gy>), 'K_2e', '2'>,
                                                 hkdfExtract('emptyStr', gy^~xx))
                                     )
                                    >, 
                                    'emptyStr'>), 
                                 'K_3ae'>,
                                hkdfExtract(hkdfExtract('emptyStr', gy^~xx), pkV^~xx)),
                     h(<$cHash0, h(<$cHash0, m1, gy>), 
                        <
                         ($V⊕
                          hkdfExpand(<$cAEAD0, h(<$cHash0, m1, gy>), 'K_2e', '1'>,
                                     hkdfExtract('emptyStr', gy^~xx))
                         ), 
                         (authR⊕
                          hkdfExpand(<$cAEAD0, h(<$cHash0, m1, gy>), 'K_2e', '2'>,
                                     hkdfExtract('emptyStr', gy^~xx))
                         )
                        >, 
                        'emptyStr'>),
                     $cAEAD0)
        >
   )
   ]

  /*
  rule (modulo AC) I3_SIG_STAT:
     [
     StI1_SIG_STAT( $U, ~ltk, $V, ~xx, m1, ~tid ), !PK_STAT( $V, pkV ),
     !PK_SIG( $U, pkU ),
     In( <gy, 
          ($V⊕
           hkdfExpand(<$cAEAD0, h(<$cHash0, m1, gy>), 'K_2e', '1'>,
                      hkdfExtract('emptyStr', z.1))
          ), 
          z>
     )
     ]
    --[
    ExpCommitI( ~tid, $U, $V, <z.1, z.2> ),
    CommitI( ~tid, $U, $V, <z.1, z.2> ),
    ExpRunningI( ~tid, $U, $V, <z.1, z.2> ),
    RunningI( ~tid, $U, $V, <z.1, z.2> ),
    I3( ~tid, $U, $V, m1,
        <gy, 
         ($V⊕
          hkdfExpand(<$cAEAD0, h(<$cHash0, m1, gy>), 'K_2e', '1'>,
                     hkdfExtract('emptyStr', z.1))
         ), 
         z>,
        <'emptyStr', 
         aeadEncrypt(<$U, 
                      sign(<
                            <$U, 
                             h(<$cHash0, h(<$cHash0, m1, gy>), 
                                <
                                 ($V⊕
                                  hkdfExpand(<$cAEAD0, h(<$cHash0, m1, gy>), 'K_2e', '1'>,
                                             hkdfExtract('emptyStr', z.1))
                                 ), 
                                 z>, 
                                'emptyStr'>), 
                             pkU>, 
                            aeadEncrypt('emptyStr',
                                        hkdfExpand(<$cAEAD0, 
                                                    h(<$cHash0, h(<$cHash0, m1, gy>), 
                                                       <
                                                        ($V⊕
                                                         hkdfExpand(<$cAEAD0, h(<$cHash0, m1, gy>), 'K_2e', 
                                                                     '1'>,
                                                                    hkdfExtract('emptyStr', z.1))
                                                        ), 
                                                        z>, 
                                                       'emptyStr'>), 
                                                    'K_3m'>,
                                                   hkdfExtract(hkdfExtract('emptyStr', z.1), z.2)),
                                        <$U, 
                                         h(<$cHash0, h(<$cHash0, m1, gy>), 
                                            <
                                             ($V⊕
                                              hkdfExpand(<$cAEAD0, h(<$cHash0, m1, gy>), 'K_2e', '1'>,
                                                         hkdfExtract('emptyStr', z.1))
                                             ), 
                                             z>, 
                                            'emptyStr'>), 
                                         pkU>,
                                        $cAEAD0)
                           >,
                           ~ltk)
                     >,
                     hkdfExpand(<$cAEAD0, 
                                 h(<$cHash0, h(<$cHash0, m1, gy>), 
                                    <
                                     ($V⊕
                                      hkdfExpand(<$cAEAD0, h(<$cHash0, m1, gy>), 'K_2e', '1'>,
                                                 hkdfExtract('emptyStr', z.1))
                                     ), 
                                     z>, 
                                    'emptyStr'>), 
                                 'K_3ae'>,
                                hkdfExtract(hkdfExtract('emptyStr', z.1), z.2)),
                     h(<$cHash0, h(<$cHash0, m1, gy>), 
                        <
                         ($V⊕
                          hkdfExpand(<$cAEAD0, h(<$cHash0, m1, gy>), 'K_2e', '1'>,
                                     hkdfExtract('emptyStr', z.1))
                         ), 
                         z>, 
                        'emptyStr'>),
                     $cAEAD0)
        >
    ),
    Eq( authR,
        aeadEncrypt('emptyStr',
                    hkdfExpand(<$cAEAD0, h(<$cHash0, m1, gy>), 'K_2m'>,
                               hkdfExtract(hkdfExtract('emptyStr', z.1), z.2)),
                    <$V, h(<$cHash0, m1, gy>), pkV>, $cAEAD0)
    )
    ]->
     [
     Out( <'emptyStr', 
           aeadEncrypt(<$U, 
                        sign(<
                              <$U, 
                               h(<$cHash0, h(<$cHash0, m1, gy>), 
                                  <
                                   ($V⊕
                                    hkdfExpand(<$cAEAD0, h(<$cHash0, m1, gy>), 'K_2e', '1'>,
                                               hkdfExtract('emptyStr', z.1))
                                   ), 
                                   z>, 
                                  'emptyStr'>), 
                               pkU>, 
                              aeadEncrypt('emptyStr',
                                          hkdfExpand(<$cAEAD0, 
                                                      h(<$cHash0, h(<$cHash0, m1, gy>), 
                                                         <
                                                          ($V⊕
                                                           hkdfExpand(<$cAEAD0, h(<$cHash0, m1, gy>), 'K_2e', 
                                                                       '1'>,
                                                                      hkdfExtract('emptyStr', z.1))
                                                          ), 
                                                          z>, 
                                                         'emptyStr'>), 
                                                      'K_3m'>,
                                                     hkdfExtract(hkdfExtract('emptyStr', z.1), z.2)),
                                          <$U, 
                                           h(<$cHash0, h(<$cHash0, m1, gy>), 
                                              <
                                               ($V⊕
                                                hkdfExpand(<$cAEAD0, h(<$cHash0, m1, gy>), 'K_2e', '1'>,
                                                           hkdfExtract('emptyStr', z.1))
                                               ), 
                                               z>, 
                                              'emptyStr'>), 
                                           pkU>,
                                          $cAEAD0)
                             >,
                             ~ltk)
                       >,
                       hkdfExpand(<$cAEAD0, 
                                   h(<$cHash0, h(<$cHash0, m1, gy>), 
                                      <
                                       ($V⊕
                                        hkdfExpand(<$cAEAD0, h(<$cHash0, m1, gy>), 'K_2e', '1'>,
                                                   hkdfExtract('emptyStr', z.1))
                                       ), 
                                       z>, 
                                      'emptyStr'>), 
                                   'K_3ae'>,
                                  hkdfExtract(hkdfExtract('emptyStr', z.1), z.2)),
                       h(<$cHash0, h(<$cHash0, m1, gy>), 
                          <
                           ($V⊕
                            hkdfExpand(<$cAEAD0, h(<$cHash0, m1, gy>), 'K_2e', '1'>,
                                       hkdfExtract('emptyStr', z.1))
                           ), 
                           z>, 
                          'emptyStr'>),
                       $cAEAD0)
          >
     )
     ]
    variants (modulo AC)
      1. $cAEAD0
               = $cAEAD0.50
         $cHash0
               = $cHash0.51
         ~xx   = ~xx.54
         authR = authR.55
         gy    = gy.56
         m1    = m1.57
         pkV   = pkV.59
         z     = (authR.55⊕
                  hkdfExpand(<$cAEAD0.50, h(<$cHash0.51, m1.57, gy.56>), 'K_2e', '2'>,
                             hkdfExtract('emptyStr', gy.56^~xx.54))
                 )
         z.1   = gy.56^~xx.54
         z.2   = pkV.59^~xx.54
    
      2. $cAEAD0
               = $cAEAD0.50
         $cHash0
               = $cHash0.51
         ~xx   = ~xx.54
         authR = hkdfExpand(<$cAEAD0.50, h(<$cHash0.51, m1.57, gy.56>), 'K_2e', 
                             '2'>,
                            hkdfExtract('emptyStr', gy.56^~xx.54))
         gy    = gy.56
         m1    = m1.57
         pkV   = pkV.59
         z     = zero
         z.1   = gy.56^~xx.54
         z.2   = pkV.59^~xx.54
    
      3. $cAEAD0
               = $cAEAD0.50
         $cHash0
               = $cHash0.51
         ~xx   = ~xx.54
         authR = zero
         gy    = gy.56
         m1    = m1.57
         pkV   = pkV.59
         z     = hkdfExpand(<$cAEAD0.50, h(<$cHash0.51, m1.57, gy.56>), 'K_2e', 
                             '2'>,
                            hkdfExtract('emptyStr', gy.56^~xx.54))
         z.1   = gy.56^~xx.54
         z.2   = pkV.59^~xx.54
    
      4. $cAEAD0
               = $cAEAD0.52
         $cHash0
               = $cHash0.53
         ~xx   = ~xx.56
         authR = (z.63⊕
                  hkdfExpand(<$cAEAD0.52, h(<$cHash0.53, m1.59, gy.58>), 'K_2e', '2'>,
                             hkdfExtract('emptyStr', gy.58^~xx.56))
                 )
         gy    = gy.58
         m1    = m1.59
         pkV   = pkV.61
         z     = z.63
         z.1   = gy.58^~xx.56
         z.2   = pkV.61^~xx.56
    
      5. $cAEAD0
               = $cAEAD0.55
         $cHash0
               = $cHash0.56
         ~xx   = ~xx.59
         authR = authR.60
         gy    = z.69^inv(~xx.59)
         m1    = m1.62
         pkV   = pkV.64
         z     = (authR.60⊕
                  hkdfExpand(<$cAEAD0.55, h(<$cHash0.56, m1.62, z.69^inv(~xx.59)>), 
                              'K_2e', '2'>,
                             hkdfExtract('emptyStr', z.69))
                 )
         z.1   = z.69
         z.2   = pkV.64^~xx.59
    
      6. $cAEAD0
               = $cAEAD0.55
         $cHash0
               = $cHash0.56
         ~xx   = ~xx.59
         authR = hkdfExpand(<$cAEAD0.55, 
                             h(<$cHash0.56, m1.62, z.69^inv(~xx.59)>), 'K_2e', '2'>,
                            hkdfExtract('emptyStr', z.69))
         gy    = z.69^inv(~xx.59)
         m1    = m1.62
         pkV   = pkV.64
         z     = zero
         z.1   = z.69
         z.2   = pkV.64^~xx.59
    
      7. $cAEAD0
               = $cAEAD0.55
         $cHash0
               = $cHash0.56
         ~xx   = ~xx.59
         authR = zero
         gy    = z.69^inv(~xx.59)
         m1    = m1.62
         pkV   = pkV.64
         z     = hkdfExpand(<$cAEAD0.55, 
                             h(<$cHash0.56, m1.62, z.69^inv(~xx.59)>), 'K_2e', '2'>,
                            hkdfExtract('emptyStr', z.69))
         z.1   = z.69
         z.2   = pkV.64^~xx.59
    
      8. $cAEAD0
               = $cAEAD0.55
         $cHash0
               = $cHash0.56
         ~xx   = ~xx.59
         authR = (z.66⊕
                  hkdfExpand(<$cAEAD0.55, h(<$cHash0.56, m1.62, z.69^inv(~xx.59)>), 
                              'K_2e', '2'>,
                             hkdfExtract('emptyStr', z.69))
                 )
         gy    = z.69^inv(~xx.59)
         m1    = m1.62
         pkV   = pkV.64
         z     = z.66
         z.1   = z.69
         z.2   = pkV.64^~xx.59
    
      9. $cAEAD0
               = $cAEAD0.56
         $cHash0
               = $cHash0.57
         ~xx   = ~xx.60
         authR = authR.61
         gy    = gy.62
         m1    = m1.63
         pkV   = z.71^inv(~xx.60)
         z     = (authR.61⊕
                  hkdfExpand(<$cAEAD0.56, h(<$cHash0.57, m1.63, gy.62>), 'K_2e', '2'>,
                             hkdfExtract('emptyStr', gy.62^~xx.60))
                 )
         z.1   = gy.62^~xx.60
         z.2   = z.71
    
     10. $cAEAD0
               = $cAEAD0.56
         $cHash0
               = $cHash0.57
         ~xx   = ~xx.60
         authR = authR.61
         gy    = z.70^inv(~xx.60)
         m1    = m1.63
         pkV   = z.71^inv(~xx.60)
         z     = (authR.61⊕
                  hkdfExpand(<$cAEAD0.56, h(<$cHash0.57, m1.63, z.70^inv(~xx.60)>), 
                              'K_2e', '2'>,
                             hkdfExtract('emptyStr', z.70))
                 )
         z.1   = z.70
         z.2   = z.71
    
     11. $cAEAD0
               = $cAEAD0.56
         $cHash0
               = $cHash0.57
         ~xx   = ~xx.60
         authR = hkdfExpand(<$cAEAD0.56, h(<$cHash0.57, m1.63, gy.62>), 'K_2e', 
                             '2'>,
                            hkdfExtract('emptyStr', gy.62^~xx.60))
         gy    = gy.62
         m1    = m1.63
         pkV   = z.71^inv(~xx.60)
         z     = zero
         z.1   = gy.62^~xx.60
         z.2   = z.71
    
     12. $cAEAD0
               = $cAEAD0.56
         $cHash0
               = $cHash0.57
         ~xx   = ~xx.60
         authR = hkdfExpand(<$cAEAD0.56, 
                             h(<$cHash0.57, m1.63, z.70^inv(~xx.60)>), 'K_2e', '2'>,
                            hkdfExtract('emptyStr', z.70))
         gy    = z.70^inv(~xx.60)
         m1    = m1.63
         pkV   = z.71^inv(~xx.60)
         z     = zero
         z.1   = z.70
         z.2   = z.71
    
     13. $cAEAD0
               = $cAEAD0.56
         $cHash0
               = $cHash0.57
         ~xx   = ~xx.60
         authR = zero
         gy    = gy.62
         m1    = m1.63
         pkV   = z.71^inv(~xx.60)
         z     = hkdfExpand(<$cAEAD0.56, h(<$cHash0.57, m1.63, gy.62>), 'K_2e', 
                             '2'>,
                            hkdfExtract('emptyStr', gy.62^~xx.60))
         z.1   = gy.62^~xx.60
         z.2   = z.71
    
     14. $cAEAD0
               = $cAEAD0.56
         $cHash0
               = $cHash0.57
         ~xx   = ~xx.60
         authR = zero
         gy    = z.70^inv(~xx.60)
         m1    = m1.63
         pkV   = z.71^inv(~xx.60)
         z     = hkdfExpand(<$cAEAD0.56, 
                             h(<$cHash0.57, m1.63, z.70^inv(~xx.60)>), 'K_2e', '2'>,
                            hkdfExtract('emptyStr', z.70))
         z.1   = z.70
         z.2   = z.71
    
     15. $cAEAD0
               = $cAEAD0.56
         $cHash0
               = $cHash0.57
         ~xx   = ~xx.60
         authR = (z.67⊕
                  hkdfExpand(<$cAEAD0.56, h(<$cHash0.57, m1.63, gy.62>), 'K_2e', '2'>,
                             hkdfExtract('emptyStr', gy.62^~xx.60))
                 )
         gy    = gy.62
         m1    = m1.63
         pkV   = z.71^inv(~xx.60)
         z     = z.67
         z.1   = gy.62^~xx.60
         z.2   = z.71
    
     16. $cAEAD0
               = $cAEAD0.56
         $cHash0
               = $cHash0.57
         ~xx   = ~xx.60
         authR = (z.67⊕
                  hkdfExpand(<$cAEAD0.56, h(<$cHash0.57, m1.63, z.70^inv(~xx.60)>), 
                              'K_2e', '2'>,
                             hkdfExtract('emptyStr', z.70))
                 )
         gy    = z.70^inv(~xx.60)
         m1    = m1.63
         pkV   = z.71^inv(~xx.60)
         z     = z.67
         z.1   = z.70
         z.2   = z.71
    
     17. $cAEAD0
               = $cAEAD0.736
         $cHash0
               = $cHash0.737
         ~xx   = ~xx.740
         authR = authR.741
         gy    = gy.742
         m1    = m1.743
         pkV   = x.1467^x.1468
         z     = (authR.741⊕
                  hkdfExpand(<$cAEAD0.736, h(<$cHash0.737, m1.743, gy.742>), 'K_2e', '2'>,
                             hkdfExtract('emptyStr', gy.742^~xx.740))
                 )
         z.1   = gy.742^~xx.740
         z.2   = x.1467^(~xx.740*x.1468)
    
     18. $cAEAD0
               = $cAEAD0.736
         $cHash0
               = $cHash0.737
         ~xx   = ~xx.740
         authR = authR.741
         gy    = x.1467^x.1468
         m1    = m1.743
         pkV   = pkV.745
         z     = (authR.741⊕
                  hkdfExpand(<$cAEAD0.736, h(<$cHash0.737, m1.743, x.1467^x.1468>), 
                              'K_2e', '2'>,
                             hkdfExtract('emptyStr', x.1467^(~xx.740*x.1468)))
                 )
         z.1   = x.1467^(~xx.740*x.1468)
         z.2   = pkV.745^~xx.740
    
     19. $cAEAD0
               = $cAEAD0.736
         $cHash0
               = $cHash0.737
         ~xx   = ~xx.740
         authR = zero
         gy    = gy.742
         m1    = m1.743
         pkV   = x.1467^x.1468
         z     = hkdfExpand(<$cAEAD0.736, h(<$cHash0.737, m1.743, gy.742>), 
                             'K_2e', '2'>,
                            hkdfExtract('emptyStr', gy.742^~xx.740))
         z.1   = gy.742^~xx.740
         z.2   = x.1467^(~xx.740*x.1468)
    
     20. $cAEAD0
               = $cAEAD0.736
         $cHash0
               = $cHash0.737
         ~xx   = ~xx.740
         authR = zero
         gy    = x.1467^x.1468
         m1    = m1.743
         pkV   = pkV.745
         z     = hkdfExpand(<$cAEAD0.736, 
                             h(<$cHash0.737, m1.743, x.1467^x.1468>), 'K_2e', '2'>,
                            hkdfExtract('emptyStr', x.1467^(~xx.740*x.1468)))
         z.1   = x.1467^(~xx.740*x.1468)
         z.2   = pkV.745^~xx.740
    
     21. $cAEAD0
               = $cAEAD0.737
         $cHash0
               = $cHash0.738
         ~xx   = ~xx.741
         authR = zero
         gy    = x.1469^x.1470
         m1    = m1.744
         pkV   = z.752^inv(~xx.741)
         z     = hkdfExpand(<$cAEAD0.737, 
                             h(<$cHash0.738, m1.744, x.1469^x.1470>), 'K_2e', '2'>,
                            hkdfExtract('emptyStr', x.1469^(~xx.741*x.1470)))
         z.1   = x.1469^(~xx.741*x.1470)
         z.2   = z.752
    
     22. $cAEAD0
               = $cAEAD0.737
         $cHash0
               = $cHash0.738
         ~xx   = ~xx.741
         authR = zero
         gy    = x.1469^inv((~xx.741*x.1470))
         m1    = m1.744
         pkV   = pkV.746
         z     = hkdfExpand(<$cAEAD0.737, 
                             h(<$cHash0.738, m1.744, x.1469^inv((~xx.741*x.1470))>), 'K_2e', '2'>,
                            hkdfExtract('emptyStr', x.1469^inv(x.1470)))
         z.1   = x.1469^inv(x.1470)
         z.2   = pkV.746^~xx.741
    
     23. $cAEAD0
               = $cAEAD0.737
         $cHash0
               = $cHash0.738
         ~xx   = ~xx.741
         authR = zero
         gy    = x.1469^inv((~xx.741*x.1470))
         m1    = m1.744
         pkV   = z.752^inv(~xx.741)
         z     = hkdfExpand(<$cAEAD0.737, 
                             h(<$cHash0.738, m1.744, x.1469^inv((~xx.741*x.1470))>), 'K_2e', '2'>,
                            hkdfExtract('emptyStr', x.1469^inv(x.1470)))
         z.1   = x.1469^inv(x.1470)
         z.2   = z.752
    
     24. $cAEAD0
               = $cAEAD0.737
         $cHash0
               = $cHash0.738
         ~xx   = ~xx.741
         authR = zero
         gy    = x.1469^(x.1470*inv(~xx.741))
         m1    = m1.744
         pkV   = pkV.746
         z     = hkdfExpand(<$cAEAD0.737, 
                             h(<$cHash0.738, m1.744, x.1469^(x.1470*inv(~xx.741))>), 'K_2e', '2'>,
                            hkdfExtract('emptyStr', x.1469^x.1470))
         z.1   = x.1469^x.1470
         z.2   = pkV.746^~xx.741
    
     25. $cAEAD0
               = $cAEAD0.737
         $cHash0
               = $cHash0.738
         ~xx   = ~xx.741
         authR = zero
         gy    = x.1469^(x.1470*inv(~xx.741))
         m1    = m1.744
         pkV   = z.752^inv(~xx.741)
         z     = hkdfExpand(<$cAEAD0.737, 
                             h(<$cHash0.738, m1.744, x.1469^(x.1470*inv(~xx.741))>), 'K_2e', '2'>,
                            hkdfExtract('emptyStr', x.1469^x.1470))
         z.1   = x.1469^x.1470
         z.2   = z.752
    
     26. $cAEAD0
               = $cAEAD0.738
         $cHash0
               = $cHash0.739
         ~xx   = ~xx.742
         authR = authR.743
         gy    = x.1471^x.1472
         m1    = m1.745
         pkV   = z.753^inv(~xx.742)
         z     = (authR.743⊕
                  hkdfExpand(<$cAEAD0.738, h(<$cHash0.739, m1.745, x.1471^x.1472>), 
                              'K_2e', '2'>,
                             hkdfExtract('emptyStr', x.1471^(~xx.742*x.1472)))
                 )
         z.1   = x.1471^(~xx.742*x.1472)
         z.2   = z.753
    
     27. $cAEAD0
               = $cAEAD0.738
         $cHash0
               = $cHash0.739
         ~xx   = ~xx.742
         authR = authR.743
         gy    = x.1471^inv((~xx.742*x.1472))
         m1    = m1.745
         pkV   = pkV.747
         z     = (authR.743⊕
                  hkdfExpand(<$cAEAD0.738, 
                              h(<$cHash0.739, m1.745, x.1471^inv((~xx.742*x.1472))>), 'K_2e', '2'>,
                             hkdfExtract('emptyStr', x.1471^inv(x.1472)))
                 )
         z.1   = x.1471^inv(x.1472)
         z.2   = pkV.747^~xx.742
    
     28. $cAEAD0
               = $cAEAD0.738
         $cHash0
               = $cHash0.739
         ~xx   = ~xx.742
         authR = authR.743
         gy    = x.1471^inv((~xx.742*x.1472))
         m1    = m1.745
         pkV   = z.753^inv(~xx.742)
         z     = (authR.743⊕
                  hkdfExpand(<$cAEAD0.738, 
                              h(<$cHash0.739, m1.745, x.1471^inv((~xx.742*x.1472))>), 'K_2e', '2'>,
                             hkdfExtract('emptyStr', x.1471^inv(x.1472)))
                 )
         z.1   = x.1471^inv(x.1472)
         z.2   = z.753
    
     29. $cAEAD0
               = $cAEAD0.738
         $cHash0
               = $cHash0.739
         ~xx   = ~xx.742
         authR = authR.743
         gy    = x.1471^(x.1472*inv(~xx.742))
         m1    = m1.745
         pkV   = pkV.747
         z     = (authR.743⊕
                  hkdfExpand(<$cAEAD0.738, 
                              h(<$cHash0.739, m1.745, x.1471^(x.1472*inv(~xx.742))>), 'K_2e', '2'>,
                             hkdfExtract('emptyStr', x.1471^x.1472))
                 )
         z.1   = x.1471^x.1472
         z.2   = pkV.747^~xx.742
    
     30. $cAEAD0
               = $cAEAD0.738
         $cHash0
               = $cHash0.739
         ~xx   = ~xx.742
         authR = authR.743
         gy    = x.1471^(x.1472*inv(~xx.742))
         m1    = m1.745
         pkV   = z.753^inv(~xx.742)
         z     = (authR.743⊕
                  hkdfExpand(<$cAEAD0.738, 
                              h(<$cHash0.739, m1.745, x.1471^(x.1472*inv(~xx.742))>), 'K_2e', '2'>,
                             hkdfExtract('emptyStr', x.1471^x.1472))
                 )
         z.1   = x.1471^x.1472
         z.2   = z.753
    
     31. $cAEAD0
               = $cAEAD0.738
         $cHash0
               = $cHash0.739
         ~xx   = ~xx.742
         authR = zero
         gy    = x.1470^(x.1471*inv((~xx.742*x.1472)))
         m1    = m1.745
         pkV   = pkV.747
         z     = hkdfExpand(<$cAEAD0.738, 
                             h(<$cHash0.739, m1.745, x.1470^(x.1471*inv((~xx.742*x.1472)))>), 'K_2e', 
                             '2'>,
                            hkdfExtract('emptyStr', x.1470^(x.1471*inv(x.1472))))
         z.1   = x.1470^(x.1471*inv(x.1472))
         z.2   = pkV.747^~xx.742
    
     32. $cAEAD0
               = $cAEAD0.738
         $cHash0
               = $cHash0.739
         ~xx   = ~xx.742
         authR = zero
         gy    = x.1470^(x.1471*inv((~xx.742*x.1472)))
         m1    = m1.745
         pkV   = z.753^inv(~xx.742)
         z     = hkdfExpand(<$cAEAD0.738, 
                             h(<$cHash0.739, m1.745, x.1470^(x.1471*inv((~xx.742*x.1472)))>), 'K_2e', 
                             '2'>,
                            hkdfExtract('emptyStr', x.1470^(x.1471*inv(x.1472))))
         z.1   = x.1470^(x.1471*inv(x.1472))
         z.2   = z.753
    
     33. $cAEAD0
               = $cAEAD0.739
         $cHash0
               = $cHash0.740
         ~xx   = ~xx.743
         authR = authR.744
         gy    = x.1472^(x.1473*inv((~xx.743*x.1474)))
         m1    = m1.746
         pkV   = pkV.748
         z     = (authR.744⊕
                  hkdfExpand(<$cAEAD0.739, 
                              h(<$cHash0.740, m1.746, x.1472^(x.1473*inv((~xx.743*x.1474)))>), 'K_2e', 
                              '2'>,
                             hkdfExtract('emptyStr', x.1472^(x.1473*inv(x.1474))))
                 )
         z.1   = x.1472^(x.1473*inv(x.1474))
         z.2   = pkV.748^~xx.743
    
     34. $cAEAD0
               = $cAEAD0.739
         $cHash0
               = $cHash0.740
         ~xx   = ~xx.743
         authR = authR.744
         gy    = x.1472^(x.1473*inv((~xx.743*x.1474)))
         m1    = m1.746
         pkV   = z.754^inv(~xx.743)
         z     = (authR.744⊕
                  hkdfExpand(<$cAEAD0.739, 
                              h(<$cHash0.740, m1.746, x.1472^(x.1473*inv((~xx.743*x.1474)))>), 'K_2e', 
                              '2'>,
                             hkdfExtract('emptyStr', x.1472^(x.1473*inv(x.1474))))
                 )
         z.1   = x.1472^(x.1473*inv(x.1474))
         z.2   = z.754
    
     35. $cAEAD0
               = $cAEAD0.740
         $cHash0
               = $cHash0.741
         ~xx   = ~xx.744
         authR = authR.745
         gy    = x.1471^x.1472
         m1    = m1.747
         pkV   = x.1475^x.1476
         z     = (authR.745⊕
                  hkdfExpand(<$cAEAD0.740, h(<$cHash0.741, m1.747, x.1471^x.1472>), 
                              'K_2e', '2'>,
                             hkdfExtract('emptyStr', x.1471^(~xx.744*x.1472)))
                 )
         z.1   = x.1471^(~xx.744*x.1472)
         z.2   = x.1475^(~xx.744*x.1476)
    
     36. $cAEAD0
               = $cAEAD0.740
         $cHash0
               = $cHash0.741
         ~xx   = ~xx.744
         authR = zero
         gy    = gy.746
         m1    = m1.747
         pkV   = x.1475^inv((~xx.744*x.1476))
         z     = hkdfExpand(<$cAEAD0.740, h(<$cHash0.741, m1.747, gy.746>), 
                             'K_2e', '2'>,
                            hkdfExtract('emptyStr', gy.746^~xx.744))
         z.1   = gy.746^~xx.744
         z.2   = x.1475^inv(x.1476)
    
     37. $cAEAD0
               = $cAEAD0.740
         $cHash0
               = $cHash0.741
         ~xx   = ~xx.744
         authR = zero
         gy    = gy.746
         m1    = m1.747
         pkV   = x.1475^(x.1476*inv(~xx.744))
         z     = hkdfExpand(<$cAEAD0.740, h(<$cHash0.741, m1.747, gy.746>), 
                             'K_2e', '2'>,
                            hkdfExtract('emptyStr', gy.746^~xx.744))
         z.1   = gy.746^~xx.744
         z.2   = x.1475^x.1476
    
     38. $cAEAD0
               = $cAEAD0.740
         $cHash0
               = $cHash0.741
         ~xx   = ~xx.744
         authR = zero
         gy    = z.754^inv(~xx.744)
         m1    = m1.747
         pkV   = x.1475^x.1476
         z     = hkdfExpand(<$cAEAD0.740, 
                             h(<$cHash0.741, m1.747, z.754^inv(~xx.744)>), 'K_2e', '2'>,
                            hkdfExtract('emptyStr', z.754))
         z.1   = z.754
         z.2   = x.1475^(~xx.744*x.1476)
    
     39. $cAEAD0
               = $cAEAD0.740
         $cHash0
               = $cHash0.741
         ~xx   = ~xx.744
         authR = zero
         gy    = z.754^inv(~xx.744)
         m1    = m1.747
         pkV   = x.1475^inv((~xx.744*x.1476))
         z     = hkdfExpand(<$cAEAD0.740, 
                             h(<$cHash0.741, m1.747, z.754^inv(~xx.744)>), 'K_2e', '2'>,
                            hkdfExtract('emptyStr', z.754))
         z.1   = z.754
         z.2   = x.1475^inv(x.1476)
    
     40. $cAEAD0
               = $cAEAD0.740
         $cHash0
               = $cHash0.741
         ~xx   = ~xx.744
         authR = zero
         gy    = z.754^inv(~xx.744)
         m1    = m1.747
         pkV   = x.1475^(x.1476*inv(~xx.744))
         z     = hkdfExpand(<$cAEAD0.740, 
                             h(<$cHash0.741, m1.747, z.754^inv(~xx.744)>), 'K_2e', '2'>,
                            hkdfExtract('emptyStr', z.754))
         z.1   = z.754
         z.2   = x.1475^x.1476
    
     41. $cAEAD0
               = $cAEAD0.740
         $cHash0
               = $cHash0.741
         ~xx   = ~xx.744
         authR = zero
         gy    = x.1471^x.1472
         m1    = m1.747
         pkV   = x.1475^x.1476
         z     = hkdfExpand(<$cAEAD0.740, 
                             h(<$cHash0.741, m1.747, x.1471^x.1472>), 'K_2e', '2'>,
                            hkdfExtract('emptyStr', x.1471^(~xx.744*x.1472)))
         z.1   = x.1471^(~xx.744*x.1472)
         z.2   = x.1475^(~xx.744*x.1476)
    
     42. $cAEAD0
               = $cAEAD0.741
         $cHash0
               = $cHash0.742
         ~xx   = ~xx.745
         authR = authR.746
         gy    = gy.747
         m1    = m1.748
         pkV   = x.1477^inv((~xx.745*x.1478))
         z     = (authR.746⊕
                  hkdfExpand(<$cAEAD0.741, h(<$cHash0.742, m1.748, gy.747>), 'K_2e', '2'>,
                             hkdfExtract('emptyStr', gy.747^~xx.745))
                 )
         z.1   = gy.747^~xx.745
         z.2   = x.1477^inv(x.1478)
    
     43. $cAEAD0
               = $cAEAD0.741
         $cHash0
               = $cHash0.742
         ~xx   = ~xx.745
         authR = authR.746
         gy    = gy.747
         m1    = m1.748
         pkV   = x.1477^(x.1478*inv(~xx.745))
         z     = (authR.746⊕
                  hkdfExpand(<$cAEAD0.741, h(<$cHash0.742, m1.748, gy.747>), 'K_2e', '2'>,
                             hkdfExtract('emptyStr', gy.747^~xx.745))
                 )
         z.1   = gy.747^~xx.745
         z.2   = x.1477^x.1478
    
     44. $cAEAD0
               = $cAEAD0.741
         $cHash0
               = $cHash0.742
         ~xx   = ~xx.745
         authR = authR.746
         gy    = z.755^inv(~xx.745)
         m1    = m1.748
         pkV   = x.1477^x.1478
         z     = (authR.746⊕
                  hkdfExpand(<$cAEAD0.741, h(<$cHash0.742, m1.748, z.755^inv(~xx.745)>), 
                              'K_2e', '2'>,
                             hkdfExtract('emptyStr', z.755))
                 )
         z.1   = z.755
         z.2   = x.1477^(~xx.745*x.1478)
    
     45. $cAEAD0
               = $cAEAD0.741
         $cHash0
               = $cHash0.742
         ~xx   = ~xx.745
         authR = authR.746
         gy    = z.755^inv(~xx.745)
         m1    = m1.748
         pkV   = x.1477^inv((~xx.745*x.1478))
         z     = (authR.746⊕
                  hkdfExpand(<$cAEAD0.741, h(<$cHash0.742, m1.748, z.755^inv(~xx.745)>), 
                              'K_2e', '2'>,
                             hkdfExtract('emptyStr', z.755))
                 )
         z.1   = z.755
         z.2   = x.1477^inv(x.1478)
    
     46. $cAEAD0
               = $cAEAD0.741
         $cHash0
               = $cHash0.742
         ~xx   = ~xx.745
         authR = authR.746
         gy    = z.755^inv(~xx.745)
         m1    = m1.748
         pkV   = x.1477^(x.1478*inv(~xx.745))
         z     = (authR.746⊕
                  hkdfExpand(<$cAEAD0.741, h(<$cHash0.742, m1.748, z.755^inv(~xx.745)>), 
                              'K_2e', '2'>,
                             hkdfExtract('emptyStr', z.755))
                 )
         z.1   = z.755
         z.2   = x.1477^x.1478
    
     47. $cAEAD0
               = $cAEAD0.741
         $cHash0
               = $cHash0.742
         ~xx   = ~xx.745
         authR = zero
         gy    = gy.747
         m1    = m1.748
         pkV   = x.1476^(x.1477*inv((~xx.745*x.1478)))
         z     = hkdfExpand(<$cAEAD0.741, h(<$cHash0.742, m1.748, gy.747>), 
                             'K_2e', '2'>,
                            hkdfExtract('emptyStr', gy.747^~xx.745))
         z.1   = gy.747^~xx.745
         z.2   = x.1476^(x.1477*inv(x.1478))
    
     48. $cAEAD0
               = $cAEAD0.741
         $cHash0
               = $cHash0.742
         ~xx   = ~xx.745
         authR = zero
         gy    = z.755^inv(~xx.745)
         m1    = m1.748
         pkV   = x.1476^(x.1477*inv((~xx.745*x.1478)))
         z     = hkdfExpand(<$cAEAD0.741, 
                             h(<$cHash0.742, m1.748, z.755^inv(~xx.745)>), 'K_2e', '2'>,
                            hkdfExtract('emptyStr', z.755))
         z.1   = z.755
         z.2   = x.1476^(x.1477*inv(x.1478))
    
     49. $cAEAD0
               = $cAEAD0.741
         $cHash0
               = $cHash0.742
         ~xx   = ~xx.745
         authR = zero
         gy    = x.1473^x.1474
         m1    = m1.748
         pkV   = x.1477^inv((~xx.745*x.1478))
         z     = hkdfExpand(<$cAEAD0.741, 
                             h(<$cHash0.742, m1.748, x.1473^x.1474>), 'K_2e', '2'>,
                            hkdfExtract('emptyStr', x.1473^(~xx.745*x.1474)))
         z.1   = x.1473^(~xx.745*x.1474)
         z.2   = x.1477^inv(x.1478)
    
     50. $cAEAD0
               = $cAEAD0.741
         $cHash0
               = $cHash0.742
         ~xx   = ~xx.745
         authR = zero
         gy    = x.1473^x.1474
         m1    = m1.748
         pkV   = x.1477^(x.1478*inv(~xx.745))
         z     = hkdfExpand(<$cAEAD0.741, 
                             h(<$cHash0.742, m1.748, x.1473^x.1474>), 'K_2e', '2'>,
                            hkdfExtract('emptyStr', x.1473^(~xx.745*x.1474)))
         z.1   = x.1473^(~xx.745*x.1474)
         z.2   = x.1477^x.1478
    
     51. $cAEAD0
               = $cAEAD0.741
         $cHash0
               = $cHash0.742
         ~xx   = ~xx.745
         authR = zero
         gy    = x.1473^inv((~xx.745*x.1474))
         m1    = m1.748
         pkV   = x.1477^x.1478
         z     = hkdfExpand(<$cAEAD0.741, 
                             h(<$cHash0.742, m1.748, x.1473^inv((~xx.745*x.1474))>), 'K_2e', '2'>,
                            hkdfExtract('emptyStr', x.1473^inv(x.1474)))
         z.1   = x.1473^inv(x.1474)
         z.2   = x.1477^(~xx.745*x.1478)
    
     52. $cAEAD0
               = $cAEAD0.741
         $cHash0
               = $cHash0.742
         ~xx   = ~xx.745
         authR = zero
         gy    = x.1473^inv((~xx.745*x.1474))
         m1    = m1.748
         pkV   = x.1477^inv((~xx.745*x.1478))
         z     = hkdfExpand(<$cAEAD0.741, 
                             h(<$cHash0.742, m1.748, x.1473^inv((~xx.745*x.1474))>), 'K_2e', '2'>,
                            hkdfExtract('emptyStr', x.1473^inv(x.1474)))
         z.1   = x.1473^inv(x.1474)
         z.2   = x.1477^inv(x.1478)
    
     53. $cAEAD0
               = $cAEAD0.741
         $cHash0
               = $cHash0.742
         ~xx   = ~xx.745
         authR = zero
         gy    = x.1473^inv((~xx.745*x.1474))
         m1    = m1.748
         pkV   = x.1477^(x.1478*inv(~xx.745))
         z     = hkdfExpand(<$cAEAD0.741, 
                             h(<$cHash0.742, m1.748, x.1473^inv((~xx.745*x.1474))>), 'K_2e', '2'>,
                            hkdfExtract('emptyStr', x.1473^inv(x.1474)))
         z.1   = x.1473^inv(x.1474)
         z.2   = x.1477^x.1478
    
     54. $cAEAD0
               = $cAEAD0.741
         $cHash0
               = $cHash0.742
         ~xx   = ~xx.745
         authR = zero
         gy    = x.1473^(x.1474*inv(~xx.745))
         m1    = m1.748
         pkV   = x.1477^x.1478
         z     = hkdfExpand(<$cAEAD0.741, 
                             h(<$cHash0.742, m1.748, x.1473^(x.1474*inv(~xx.745))>), 'K_2e', '2'>,
                            hkdfExtract('emptyStr', x.1473^x.1474))
         z.1   = x.1473^x.1474
         z.2   = x.1477^(~xx.745*x.1478)
    
     55. $cAEAD0
               = $cAEAD0.741
         $cHash0
               = $cHash0.742
         ~xx   = ~xx.745
         authR = zero
         gy    = x.1473^(x.1474*inv(~xx.745))
         m1    = m1.748
         pkV   = x.1477^inv((~xx.745*x.1478))
         z     = hkdfExpand(<$cAEAD0.741, 
                             h(<$cHash0.742, m1.748, x.1473^(x.1474*inv(~xx.745))>), 'K_2e', '2'>,
                            hkdfExtract('emptyStr', x.1473^x.1474))
         z.1   = x.1473^x.1474
         z.2   = x.1477^inv(x.1478)
    
     56. $cAEAD0
               = $cAEAD0.741
         $cHash0
               = $cHash0.742
         ~xx   = ~xx.745
         authR = zero
         gy    = x.1473^(x.1474*inv(~xx.745))
         m1    = m1.748
         pkV   = x.1477^(x.1478*inv(~xx.745))
         z     = hkdfExpand(<$cAEAD0.741, 
                             h(<$cHash0.742, m1.748, x.1473^(x.1474*inv(~xx.745))>), 'K_2e', '2'>,
                            hkdfExtract('emptyStr', x.1473^x.1474))
         z.1   = x.1473^x.1474
         z.2   = x.1477^x.1478
    
     57. $cAEAD0
               = $cAEAD0.742
         $cHash0
               = $cHash0.743
         ~xx   = ~xx.746
         authR = authR.747
         gy    = gy.748
         m1    = m1.749
         pkV   = x.1478^(x.1479*inv((~xx.746*x.1480)))
         z     = (authR.747⊕
                  hkdfExpand(<$cAEAD0.742, h(<$cHash0.743, m1.749, gy.748>), 'K_2e', '2'>,
                             hkdfExtract('emptyStr', gy.748^~xx.746))
                 )
         z.1   = gy.748^~xx.746
         z.2   = x.1478^(x.1479*inv(x.1480))
    
     58. $cAEAD0
               = $cAEAD0.742
         $cHash0
               = $cHash0.743
         ~xx   = ~xx.746
         authR = authR.747
         gy    = z.756^inv(~xx.746)
         m1    = m1.749
         pkV   = x.1478^(x.1479*inv((~xx.746*x.1480)))
         z     = (authR.747⊕
                  hkdfExpand(<$cAEAD0.742, h(<$cHash0.743, m1.749, z.756^inv(~xx.746)>), 
                              'K_2e', '2'>,
                             hkdfExtract('emptyStr', z.756))
                 )
         z.1   = z.756
         z.2   = x.1478^(x.1479*inv(x.1480))
    
     59. $cAEAD0
               = $cAEAD0.742
         $cHash0
               = $cHash0.743
         ~xx   = ~xx.746
         authR = authR.747
         gy    = x.1475^x.1476
         m1    = m1.749
         pkV   = x.1479^inv((~xx.746*x.1480))
         z     = (authR.747⊕
                  hkdfExpand(<$cAEAD0.742, h(<$cHash0.743, m1.749, x.1475^x.1476>), 
                              'K_2e', '2'>,
                             hkdfExtract('emptyStr', x.1475^(~xx.746*x.1476)))
                 )
         z.1   = x.1475^(~xx.746*x.1476)
         z.2   = x.1479^inv(x.1480)
    
     60. $cAEAD0
               = $cAEAD0.742
         $cHash0
               = $cHash0.743
         ~xx   = ~xx.746
         authR = authR.747
         gy    = x.1475^x.1476
         m1    = m1.749
         pkV   = x.1479^(x.1480*inv(~xx.746))
         z     = (authR.747⊕
                  hkdfExpand(<$cAEAD0.742, h(<$cHash0.743, m1.749, x.1475^x.1476>), 
                              'K_2e', '2'>,
                             hkdfExtract('emptyStr', x.1475^(~xx.746*x.1476)))
                 )
         z.1   = x.1475^(~xx.746*x.1476)
         z.2   = x.1479^x.1480
    
     61. $cAEAD0
               = $cAEAD0.742
         $cHash0
               = $cHash0.743
         ~xx   = ~xx.746
         authR = authR.747
         gy    = x.1475^inv((~xx.746*x.1476))
         m1    = m1.749
         pkV   = x.1479^x.1480
         z     = (authR.747⊕
                  hkdfExpand(<$cAEAD0.742, 
                              h(<$cHash0.743, m1.749, x.1475^inv((~xx.746*x.1476))>), 'K_2e', '2'>,
                             hkdfExtract('emptyStr', x.1475^inv(x.1476)))
                 )
         z.1   = x.1475^inv(x.1476)
         z.2   = x.1479^(~xx.746*x.1480)
    
     62. $cAEAD0
               = $cAEAD0.742
         $cHash0
               = $cHash0.743
         ~xx   = ~xx.746
         authR = authR.747
         gy    = x.1475^inv((~xx.746*x.1476))
         m1    = m1.749
         pkV   = x.1479^inv((~xx.746*x.1480))
         z     = (authR.747⊕
                  hkdfExpand(<$cAEAD0.742, 
                              h(<$cHash0.743, m1.749, x.1475^inv((~xx.746*x.1476))>), 'K_2e', '2'>,
                             hkdfExtract('emptyStr', x.1475^inv(x.1476)))
                 )
         z.1   = x.1475^inv(x.1476)
         z.2   = x.1479^inv(x.1480)
    
     63. $cAEAD0
               = $cAEAD0.742
         $cHash0
               = $cHash0.743
         ~xx   = ~xx.746
         authR = authR.747
         gy    = x.1475^inv((~xx.746*x.1476))
         m1    = m1.749
         pkV   = x.1479^(x.1480*inv(~xx.746))
         z     = (authR.747⊕
                  hkdfExpand(<$cAEAD0.742, 
                              h(<$cHash0.743, m1.749, x.1475^inv((~xx.746*x.1476))>), 'K_2e', '2'>,
                             hkdfExtract('emptyStr', x.1475^inv(x.1476)))
                 )
         z.1   = x.1475^inv(x.1476)
         z.2   = x.1479^x.1480
    
     64. $cAEAD0
               = $cAEAD0.742
         $cHash0
               = $cHash0.743
         ~xx   = ~xx.746
         authR = authR.747
         gy    = x.1475^(x.1476*inv(~xx.746))
         m1    = m1.749
         pkV   = x.1479^x.1480
         z     = (authR.747⊕
                  hkdfExpand(<$cAEAD0.742, 
                              h(<$cHash0.743, m1.749, x.1475^(x.1476*inv(~xx.746))>), 'K_2e', '2'>,
                             hkdfExtract('emptyStr', x.1475^x.1476))
                 )
         z.1   = x.1475^x.1476
         z.2   = x.1479^(~xx.746*x.1480)
    
     65. $cAEAD0
               = $cAEAD0.742
         $cHash0
               = $cHash0.743
         ~xx   = ~xx.746
         authR = authR.747
         gy    = x.1475^(x.1476*inv(~xx.746))
         m1    = m1.749
         pkV   = x.1479^inv((~xx.746*x.1480))
         z     = (authR.747⊕
                  hkdfExpand(<$cAEAD0.742, 
                              h(<$cHash0.743, m1.749, x.1475^(x.1476*inv(~xx.746))>), 'K_2e', '2'>,
                             hkdfExtract('emptyStr', x.1475^x.1476))
                 )
         z.1   = x.1475^x.1476
         z.2   = x.1479^inv(x.1480)
    
     66. $cAEAD0
               = $cAEAD0.742
         $cHash0
               = $cHash0.743
         ~xx   = ~xx.746
         authR = authR.747
         gy    = x.1475^(x.1476*inv(~xx.746))
         m1    = m1.749
         pkV   = x.1479^(x.1480*inv(~xx.746))
         z     = (authR.747⊕
                  hkdfExpand(<$cAEAD0.742, 
                              h(<$cHash0.743, m1.749, x.1475^(x.1476*inv(~xx.746))>), 'K_2e', '2'>,
                             hkdfExtract('emptyStr', x.1475^x.1476))
                 )
         z.1   = x.1475^x.1476
         z.2   = x.1479^x.1480
    
     67. $cAEAD0
               = $cAEAD0.742
         $cHash0
               = $cHash0.743
         ~xx   = ~xx.746
         authR = hkdfExpand(<$cAEAD0.742, 
                             h(<$cHash0.743, m1.749, x.1479^x.1480>), 'K_2e', '2'>,
                            hkdfExtract('emptyStr', x.1479^(~xx.746*x.1480)))
         gy    = x.1479^x.1480
         m1    = m1.749
         pkV   = pkV.751
         z     = zero
         z.1   = x.1479^(~xx.746*x.1480)
         z.2   = pkV.751^~xx.746
    
     68. $cAEAD0
               = $cAEAD0.742
         $cHash0
               = $cHash0.743
         ~xx   = ~xx.746
         authR = hkdfExpand(<$cAEAD0.742, 
                             h(<$cHash0.743, m1.749, x.1479^x.1480>), 'K_2e', '2'>,
                            hkdfExtract('emptyStr', x.1479^(~xx.746*x.1480)))
         gy    = x.1479^x.1480
         m1    = m1.749
         pkV   = z.757^inv(~xx.746)
         z     = zero
         z.1   = x.1479^(~xx.746*x.1480)
         z.2   = z.757
    
     69. $cAEAD0
               = $cAEAD0.742
         $cHash0
               = $cHash0.743
         ~xx   = ~xx.746
         authR = hkdfExpand(<$cAEAD0.742, 
                             h(<$cHash0.743, m1.749, x.1479^inv((~xx.746*x.1480))>), 'K_2e', '2'>,
                            hkdfExtract('emptyStr', x.1479^inv(x.1480)))
         gy    = x.1479^inv((~xx.746*x.1480))
         m1    = m1.749
         pkV   = pkV.751
         z     = zero
         z.1   = x.1479^inv(x.1480)
         z.2   = pkV.751^~xx.746
    
     70. $cAEAD0
               = $cAEAD0.742
         $cHash0
               = $cHash0.743
         ~xx   = ~xx.746
         authR = hkdfExpand(<$cAEAD0.742, 
                             h(<$cHash0.743, m1.749, x.1479^inv((~xx.746*x.1480))>), 'K_2e', '2'>,
                            hkdfExtract('emptyStr', x.1479^inv(x.1480)))
         gy    = x.1479^inv((~xx.746*x.1480))
         m1    = m1.749
         pkV   = z.757^inv(~xx.746)
         z     = zero
         z.1   = x.1479^inv(x.1480)
         z.2   = z.757
    
     71. $cAEAD0
               = $cAEAD0.742
         $cHash0
               = $cHash0.743
         ~xx   = ~xx.746
         authR = hkdfExpand(<$cAEAD0.742, 
                             h(<$cHash0.743, m1.749, x.1479^(x.1480*inv(~xx.746))>), 'K_2e', '2'>,
                            hkdfExtract('emptyStr', x.1479^x.1480))
         gy    = x.1479^(x.1480*inv(~xx.746))
         m1    = m1.749
         pkV   = pkV.751
         z     = zero
         z.1   = x.1479^x.1480
         z.2   = pkV.751^~xx.746
    
     72. $cAEAD0
               = $cAEAD0.742
         $cHash0
               = $cHash0.743
         ~xx   = ~xx.746
         authR = hkdfExpand(<$cAEAD0.742, 
                             h(<$cHash0.743, m1.749, x.1479^(x.1480*inv(~xx.746))>), 'K_2e', '2'>,
                            hkdfExtract('emptyStr', x.1479^x.1480))
         gy    = x.1479^(x.1480*inv(~xx.746))
         m1    = m1.749
         pkV   = z.757^inv(~xx.746)
         z     = zero
         z.1   = x.1479^x.1480
         z.2   = z.757
    
     73. $cAEAD0
               = $cAEAD0.742
         $cHash0
               = $cHash0.743
         ~xx   = ~xx.746
         authR = zero
         gy    = x.1474^x.1475
         m1    = m1.749
         pkV   = x.1478^(x.1479*inv((~xx.746*x.1480)))
         z     = hkdfExpand(<$cAEAD0.742, 
                             h(<$cHash0.743, m1.749, x.1474^x.1475>), 'K_2e', '2'>,
                            hkdfExtract('emptyStr', x.1474^(~xx.746*x.1475)))
         z.1   = x.1474^(~xx.746*x.1475)
         z.2   = x.1478^(x.1479*inv(x.1480))
    
     74. $cAEAD0
               = $cAEAD0.742
         $cHash0
               = $cHash0.743
         ~xx   = ~xx.746
         authR = zero
         gy    = x.1474^inv((~xx.746*x.1475))
         m1    = m1.749
         pkV   = x.1478^(x.1479*inv((~xx.746*x.1480)))
         z     = hkdfExpand(<$cAEAD0.742, 
                             h(<$cHash0.743, m1.749, x.1474^inv((~xx.746*x.1475))>), 'K_2e', '2'>,
                            hkdfExtract('emptyStr', x.1474^inv(x.1475)))
         z.1   = x.1474^inv(x.1475)
         z.2   = x.1478^(x.1479*inv(x.1480))
    
     75. $cAEAD0
               = $cAEAD0.742
         $cHash0
               = $cHash0.743
         ~xx   = ~xx.746
         authR = zero
         gy    = x.1474^(x.1475*inv(~xx.746))
         m1    = m1.749
         pkV   = x.1478^(x.1479*inv((~xx.746*x.1480)))
         z     = hkdfExpand(<$cAEAD0.742, 
                             h(<$cHash0.743, m1.749, x.1474^(x.1475*inv(~xx.746))>), 'K_2e', '2'>,
                            hkdfExtract('emptyStr', x.1474^x.1475))
         z.1   = x.1474^x.1475
         z.2   = x.1478^(x.1479*inv(x.1480))
    
     76. $cAEAD0
               = $cAEAD0.742
         $cHash0
               = $cHash0.743
         ~xx   = ~xx.746
         authR = zero
         gy    = x.1474^(x.1475*inv((~xx.746*x.1476)))
         m1    = m1.749
         pkV   = x.1479^x.1480
         z     = hkdfExpand(<$cAEAD0.742, 
                             h(<$cHash0.743, m1.749, x.1474^(x.1475*inv((~xx.746*x.1476)))>), 'K_2e', 
                             '2'>,
                            hkdfExtract('emptyStr', x.1474^(x.1475*inv(x.1476))))
         z.1   = x.1474^(x.1475*inv(x.1476))
         z.2   = x.1479^(~xx.746*x.1480)
    
     77. $cAEAD0
               = $cAEAD0.742
         $cHash0
               = $cHash0.743
         ~xx   = ~xx.746
         authR = zero
         gy    = x.1474^(x.1475*inv((~xx.746*x.1476)))
         m1    = m1.749
         pkV   = x.1479^inv((~xx.746*x.1480))
         z     = hkdfExpand(<$cAEAD0.742, 
                             h(<$cHash0.743, m1.749, x.1474^(x.1475*inv((~xx.746*x.1476)))>), 'K_2e', 
                             '2'>,
                            hkdfExtract('emptyStr', x.1474^(x.1475*inv(x.1476))))
         z.1   = x.1474^(x.1475*inv(x.1476))
         z.2   = x.1479^inv(x.1480)
    
     78. $cAEAD0
               = $cAEAD0.742
         $cHash0
               = $cHash0.743
         ~xx   = ~xx.746
         authR = zero
         gy    = x.1474^(x.1475*inv((~xx.746*x.1476)))
         m1    = m1.749
         pkV   = x.1479^(x.1480*inv(~xx.746))
         z     = hkdfExpand(<$cAEAD0.742, 
                             h(<$cHash0.743, m1.749, x.1474^(x.1475*inv((~xx.746*x.1476)))>), 'K_2e', 
                             '2'>,
                            hkdfExtract('emptyStr', x.1474^(x.1475*inv(x.1476))))
         z.1   = x.1474^(x.1475*inv(x.1476))
         z.2   = x.1479^x.1480
    
     79. $cAEAD0
               = $cAEAD0.743
         $cHash0
               = $cHash0.744
         ~xx   = ~xx.747
         authR = authR.748
         gy    = x.1476^x.1477
         m1    = m1.750
         pkV   = x.1480^(x.1481*inv((~xx.747*x.1482)))
         z     = (authR.748⊕
                  hkdfExpand(<$cAEAD0.743, h(<$cHash0.744, m1.750, x.1476^x.1477>), 
                              'K_2e', '2'>,
                             hkdfExtract('emptyStr', x.1476^(~xx.747*x.1477)))
                 )
         z.1   = x.1476^(~xx.747*x.1477)
         z.2   = x.1480^(x.1481*inv(x.1482))
    
     80. $cAEAD0
               = $cAEAD0.743
         $cHash0
               = $cHash0.744
         ~xx   = ~xx.747
         authR = authR.748
         gy    = x.1476^inv((~xx.747*x.1477))
         m1    = m1.750
         pkV   = x.1480^(x.1481*inv((~xx.747*x.1482)))
         z     = (authR.748⊕
                  hkdfExpand(<$cAEAD0.743, 
                              h(<$cHash0.744, m1.750, x.1476^inv((~xx.747*x.1477))>), 'K_2e', '2'>,
                             hkdfExtract('emptyStr', x.1476^inv(x.1477)))
                 )
         z.1   = x.1476^inv(x.1477)
         z.2   = x.1480^(x.1481*inv(x.1482))
    
     81. $cAEAD0
               = $cAEAD0.743
         $cHash0
               = $cHash0.744
         ~xx   = ~xx.747
         authR = authR.748
         gy    = x.1476^(x.1477*inv(~xx.747))
         m1    = m1.750
         pkV   = x.1480^(x.1481*inv((~xx.747*x.1482)))
         z     = (authR.748⊕
                  hkdfExpand(<$cAEAD0.743, 
                              h(<$cHash0.744, m1.750, x.1476^(x.1477*inv(~xx.747))>), 'K_2e', '2'>,
                             hkdfExtract('emptyStr', x.1476^x.1477))
                 )
         z.1   = x.1476^x.1477
         z.2   = x.1480^(x.1481*inv(x.1482))
    
     82. $cAEAD0
               = $cAEAD0.743
         $cHash0
               = $cHash0.744
         ~xx   = ~xx.747
         authR = authR.748
         gy    = x.1476^(x.1477*inv((~xx.747*x.1478)))
         m1    = m1.750
         pkV   = x.1481^x.1482
         z     = (authR.748⊕
                  hkdfExpand(<$cAEAD0.743, 
                              h(<$cHash0.744, m1.750, x.1476^(x.1477*inv((~xx.747*x.1478)))>), 'K_2e', 
                              '2'>,
                             hkdfExtract('emptyStr', x.1476^(x.1477*inv(x.1478))))
                 )
         z.1   = x.1476^(x.1477*inv(x.1478))
         z.2   = x.1481^(~xx.747*x.1482)
    
     83. $cAEAD0
               = $cAEAD0.743
         $cHash0
               = $cHash0.744
         ~xx   = ~xx.747
         authR = authR.748
         gy    = x.1476^(x.1477*inv((~xx.747*x.1478)))
         m1    = m1.750
         pkV   = x.1481^inv((~xx.747*x.1482))
         z     = (authR.748⊕
                  hkdfExpand(<$cAEAD0.743, 
                              h(<$cHash0.744, m1.750, x.1476^(x.1477*inv((~xx.747*x.1478)))>), 'K_2e', 
                              '2'>,
                             hkdfExtract('emptyStr', x.1476^(x.1477*inv(x.1478))))
                 )
         z.1   = x.1476^(x.1477*inv(x.1478))
         z.2   = x.1481^inv(x.1482)
    
     84. $cAEAD0
               = $cAEAD0.743
         $cHash0
               = $cHash0.744
         ~xx   = ~xx.747
         authR = authR.748
         gy    = x.1476^(x.1477*inv((~xx.747*x.1478)))
         m1    = m1.750
         pkV   = x.1481^(x.1482*inv(~xx.747))
         z     = (authR.748⊕
                  hkdfExpand(<$cAEAD0.743, 
                              h(<$cHash0.744, m1.750, x.1476^(x.1477*inv((~xx.747*x.1478)))>), 'K_2e', 
                              '2'>,
                             hkdfExtract('emptyStr', x.1476^(x.1477*inv(x.1478))))
                 )
         z.1   = x.1476^(x.1477*inv(x.1478))
         z.2   = x.1481^x.1482
    
     85. $cAEAD0
               = $cAEAD0.743
         $cHash0
               = $cHash0.744
         ~xx   = ~xx.747
         authR = hkdfExpand(<$cAEAD0.743, 
                             h(<$cHash0.744, m1.750, x.1480^(x.1481*inv((~xx.747*x.1482)))>), 'K_2e', 
                             '2'>,
                            hkdfExtract('emptyStr', x.1480^(x.1481*inv(x.1482))))
         gy    = x.1480^(x.1481*inv((~xx.747*x.1482)))
         m1    = m1.750
         pkV   = pkV.752
         z     = zero
         z.1   = x.1480^(x.1481*inv(x.1482))
         z.2   = pkV.752^~xx.747
    
     86. $cAEAD0
               = $cAEAD0.743
         $cHash0
               = $cHash0.744
         ~xx   = ~xx.747
         authR = hkdfExpand(<$cAEAD0.743, 
                             h(<$cHash0.744, m1.750, x.1480^(x.1481*inv((~xx.747*x.1482)))>), 'K_2e', 
                             '2'>,
                            hkdfExtract('emptyStr', x.1480^(x.1481*inv(x.1482))))
         gy    = x.1480^(x.1481*inv((~xx.747*x.1482)))
         m1    = m1.750
         pkV   = z.758^inv(~xx.747)
         z     = zero
         z.1   = x.1480^(x.1481*inv(x.1482))
         z.2   = z.758
    
     87. $cAEAD0
               = $cAEAD0.743
         $cHash0
               = $cHash0.744
         ~xx   = ~xx.747
         authR = zero
         gy    = x.1475^(x.1476*inv((~xx.747*x.1477)))
         m1    = m1.750
         pkV   = x.1480^(x.1481*inv((~xx.747*x.1482)))
         z     = hkdfExpand(<$cAEAD0.743, 
                             h(<$cHash0.744, m1.750, x.1475^(x.1476*inv((~xx.747*x.1477)))>), 'K_2e', 
                             '2'>,
                            hkdfExtract('emptyStr', x.1475^(x.1476*inv(x.1477))))
         z.1   = x.1475^(x.1476*inv(x.1477))
         z.2   = x.1480^(x.1481*inv(x.1482))
    
     88. $cAEAD0
               = $cAEAD0.743
         $cHash0
               = $cHash0.744
         ~xx   = ~xx.747
         authR = (z.754⊕
                  hkdfExpand(<$cAEAD0.743, h(<$cHash0.744, m1.750, x.1481^x.1482>), 
                              'K_2e', '2'>,
                             hkdfExtract('emptyStr', x.1481^(~xx.747*x.1482)))
                 )
         gy    = x.1481^x.1482
         m1    = m1.750
         pkV   = pkV.752
         z     = z.754
         z.1   = x.1481^(~xx.747*x.1482)
         z.2   = pkV.752^~xx.747
    
     89. $cAEAD0
               = $cAEAD0.743
         $cHash0
               = $cHash0.744
         ~xx   = ~xx.747
         authR = (z.754⊕
                  hkdfExpand(<$cAEAD0.743, h(<$cHash0.744, m1.750, x.1481^x.1482>), 
                              'K_2e', '2'>,
                             hkdfExtract('emptyStr', x.1481^(~xx.747*x.1482)))
                 )
         gy    = x.1481^x.1482
         m1    = m1.750
         pkV   = z.758^inv(~xx.747)
         z     = z.754
         z.1   = x.1481^(~xx.747*x.1482)
         z.2   = z.758
    
     90. $cAEAD0
               = $cAEAD0.743
         $cHash0
               = $cHash0.744
         ~xx   = ~xx.747
         authR = (z.754⊕
                  hkdfExpand(<$cAEAD0.743, 
                              h(<$cHash0.744, m1.750, x.1481^inv((~xx.747*x.1482))>), 'K_2e', '2'>,
                             hkdfExtract('emptyStr', x.1481^inv(x.1482)))
                 )
         gy    = x.1481^inv((~xx.747*x.1482))
         m1    = m1.750
         pkV   = pkV.752
         z     = z.754
         z.1   = x.1481^inv(x.1482)
         z.2   = pkV.752^~xx.747
    
     91. $cAEAD0
               = $cAEAD0.743
         $cHash0
               = $cHash0.744
         ~xx   = ~xx.747
         authR = (z.754⊕
                  hkdfExpand(<$cAEAD0.743, 
                              h(<$cHash0.744, m1.750, x.1481^inv((~xx.747*x.1482))>), 'K_2e', '2'>,
                             hkdfExtract('emptyStr', x.1481^inv(x.1482)))
                 )
         gy    = x.1481^inv((~xx.747*x.1482))
         m1    = m1.750
         pkV   = z.758^inv(~xx.747)
         z     = z.754
         z.1   = x.1481^inv(x.1482)
         z.2   = z.758
    
     92. $cAEAD0
               = $cAEAD0.743
         $cHash0
               = $cHash0.744
         ~xx   = ~xx.747
         authR = (z.754⊕
                  hkdfExpand(<$cAEAD0.743, 
                              h(<$cHash0.744, m1.750, x.1481^(x.1482*inv(~xx.747))>), 'K_2e', '2'>,
                             hkdfExtract('emptyStr', x.1481^x.1482))
                 )
         gy    = x.1481^(x.1482*inv(~xx.747))
         m1    = m1.750
         pkV   = pkV.752
         z     = z.754
         z.1   = x.1481^x.1482
         z.2   = pkV.752^~xx.747
    
     93. $cAEAD0
               = $cAEAD0.743
         $cHash0
               = $cHash0.744
         ~xx   = ~xx.747
         authR = (z.754⊕
                  hkdfExpand(<$cAEAD0.743, 
                              h(<$cHash0.744, m1.750, x.1481^(x.1482*inv(~xx.747))>), 'K_2e', '2'>,
                             hkdfExtract('emptyStr', x.1481^x.1482))
                 )
         gy    = x.1481^(x.1482*inv(~xx.747))
         m1    = m1.750
         pkV   = z.758^inv(~xx.747)
         z     = z.754
         z.1   = x.1481^x.1482
         z.2   = z.758
    
     94. $cAEAD0
               = $cAEAD0.744
         $cHash0
               = $cHash0.745
         ~xx   = ~xx.748
         authR = authR.749
         gy    = x.1477^(x.1478*inv((~xx.748*x.1479)))
         m1    = m1.751
         pkV   = x.1482^(x.1483*inv((~xx.748*x.1484)))
         z     = (authR.749⊕
                  hkdfExpand(<$cAEAD0.744, 
                              h(<$cHash0.745, m1.751, x.1477^(x.1478*inv((~xx.748*x.1479)))>), 'K_2e', 
                              '2'>,
                             hkdfExtract('emptyStr', x.1477^(x.1478*inv(x.1479))))
                 )
         z.1   = x.1477^(x.1478*inv(x.1479))
         z.2   = x.1482^(x.1483*inv(x.1484))
    
     95. $cAEAD0
               = $cAEAD0.744
         $cHash0
               = $cHash0.745
         ~xx   = ~xx.748
         authR = hkdfExpand(<$cAEAD0.744, h(<$cHash0.745, m1.751, gy.750>), 
                             'K_2e', '2'>,
                            hkdfExtract('emptyStr', gy.750^~xx.748))
         gy    = gy.750
         m1    = m1.751
         pkV   = x.1483^x.1484
         z     = zero
         z.1   = gy.750^~xx.748
         z.2   = x.1483^(~xx.748*x.1484)
    
     96. $cAEAD0
               = $cAEAD0.744
         $cHash0
               = $cHash0.745
         ~xx   = ~xx.748
         authR = hkdfExpand(<$cAEAD0.744, h(<$cHash0.745, m1.751, gy.750>), 
                             'K_2e', '2'>,
                            hkdfExtract('emptyStr', gy.750^~xx.748))
         gy    = gy.750
         m1    = m1.751
         pkV   = x.1483^inv((~xx.748*x.1484))
         z     = zero
         z.1   = gy.750^~xx.748
         z.2   = x.1483^inv(x.1484)
    
     97. $cAEAD0
               = $cAEAD0.744
         $cHash0
               = $cHash0.745
         ~xx   = ~xx.748
         authR = hkdfExpand(<$cAEAD0.744, h(<$cHash0.745, m1.751, gy.750>), 
                             'K_2e', '2'>,
                            hkdfExtract('emptyStr', gy.750^~xx.748))
         gy    = gy.750
         m1    = m1.751
         pkV   = x.1483^(x.1484*inv(~xx.748))
         z     = zero
         z.1   = gy.750^~xx.748
         z.2   = x.1483^x.1484
    
     98. $cAEAD0
               = $cAEAD0.744
         $cHash0
               = $cHash0.745
         ~xx   = ~xx.748
         authR = hkdfExpand(<$cAEAD0.744, 
                             h(<$cHash0.745, m1.751, z.758^inv(~xx.748)>), 'K_2e', '2'>,
                            hkdfExtract('emptyStr', z.758))
         gy    = z.758^inv(~xx.748)
         m1    = m1.751
         pkV   = x.1483^x.1484
         z     = zero
         z.1   = z.758
         z.2   = x.1483^(~xx.748*x.1484)
    
     99. $cAEAD0
               = $cAEAD0.744
         $cHash0
               = $cHash0.745
         ~xx   = ~xx.748
         authR = hkdfExpand(<$cAEAD0.744, 
                             h(<$cHash0.745, m1.751, z.758^inv(~xx.748)>), 'K_2e', '2'>,
                            hkdfExtract('emptyStr', z.758))
         gy    = z.758^inv(~xx.748)
         m1    = m1.751
         pkV   = x.1483^inv((~xx.748*x.1484))
         z     = zero
         z.1   = z.758
         z.2   = x.1483^inv(x.1484)
    
    100. $cAEAD0
               = $cAEAD0.744
         $cHash0
               = $cHash0.745
         ~xx   = ~xx.748
         authR = hkdfExpand(<$cAEAD0.744, 
                             h(<$cHash0.745, m1.751, z.758^inv(~xx.748)>), 'K_2e', '2'>,
                            hkdfExtract('emptyStr', z.758))
         gy    = z.758^inv(~xx.748)
         m1    = m1.751
         pkV   = x.1483^(x.1484*inv(~xx.748))
         z     = zero
         z.1   = z.758
         z.2   = x.1483^x.1484
    
    101. $cAEAD0
               = $cAEAD0.744
         $cHash0
               = $cHash0.745
         ~xx   = ~xx.748
         authR = (z.755⊕
                  hkdfExpand(<$cAEAD0.744, 
                              h(<$cHash0.745, m1.751, x.1482^(x.1483*inv((~xx.748*x.1484)))>), 'K_2e', 
                              '2'>,
                             hkdfExtract('emptyStr', x.1482^(x.1483*inv(x.1484))))
                 )
         gy    = x.1482^(x.1483*inv((~xx.748*x.1484)))
         m1    = m1.751
         pkV   = pkV.753
         z     = z.755
         z.1   = x.1482^(x.1483*inv(x.1484))
         z.2   = pkV.753^~xx.748
    
    102. $cAEAD0
               = $cAEAD0.744
         $cHash0
               = $cHash0.745
         ~xx   = ~xx.748
         authR = (z.755⊕
                  hkdfExpand(<$cAEAD0.744, 
                              h(<$cHash0.745, m1.751, x.1482^(x.1483*inv((~xx.748*x.1484)))>), 'K_2e', 
                              '2'>,
                             hkdfExtract('emptyStr', x.1482^(x.1483*inv(x.1484))))
                 )
         gy    = x.1482^(x.1483*inv((~xx.748*x.1484)))
         m1    = m1.751
         pkV   = z.759^inv(~xx.748)
         z     = z.755
         z.1   = x.1482^(x.1483*inv(x.1484))
         z.2   = z.759
    
    103. $cAEAD0
               = $cAEAD0.745
         $cHash0
               = $cHash0.746
         ~xx   = ~xx.749
         authR = hkdfExpand(<$cAEAD0.745, h(<$cHash0.746, m1.752, gy.751>), 
                             'K_2e', '2'>,
                            hkdfExtract('emptyStr', gy.751^~xx.749))
         gy    = gy.751
         m1    = m1.752
         pkV   = x.1484^(x.1485*inv((~xx.749*x.1486)))
         z     = zero
         z.1   = gy.751^~xx.749
         z.2   = x.1484^(x.1485*inv(x.1486))
    
    104. $cAEAD0
               = $cAEAD0.745
         $cHash0
               = $cHash0.746
         ~xx   = ~xx.749
         authR = hkdfExpand(<$cAEAD0.745, 
                             h(<$cHash0.746, m1.752, z.759^inv(~xx.749)>), 'K_2e', '2'>,
                            hkdfExtract('emptyStr', z.759))
         gy    = z.759^inv(~xx.749)
         m1    = m1.752
         pkV   = x.1484^(x.1485*inv((~xx.749*x.1486)))
         z     = zero
         z.1   = z.759
         z.2   = x.1484^(x.1485*inv(x.1486))
    
    105. $cAEAD0
               = $cAEAD0.745
         $cHash0
               = $cHash0.746
         ~xx   = ~xx.749
         authR = hkdfExpand(<$cAEAD0.745, 
                             h(<$cHash0.746, m1.752, x.1482^x.1483>), 'K_2e', '2'>,
                            hkdfExtract('emptyStr', x.1482^(~xx.749*x.1483)))
         gy    = x.1482^x.1483
         m1    = m1.752
         pkV   = x.1485^x.1486
         z     = zero
         z.1   = x.1482^(~xx.749*x.1483)
         z.2   = x.1485^(~xx.749*x.1486)
    
    106. $cAEAD0
               = $cAEAD0.745
         $cHash0
               = $cHash0.746
         ~xx   = ~xx.749
         authR = hkdfExpand(<$cAEAD0.745, 
                             h(<$cHash0.746, m1.752, x.1482^x.1483>), 'K_2e', '2'>,
                            hkdfExtract('emptyStr', x.1482^(~xx.749*x.1483)))
         gy    = x.1482^x.1483
         m1    = m1.752
         pkV   = x.1485^inv((~xx.749*x.1486))
         z     = zero
         z.1   = x.1482^(~xx.749*x.1483)
         z.2   = x.1485^inv(x.1486)
    
    107. $cAEAD0
               = $cAEAD0.745
         $cHash0
               = $cHash0.746
         ~xx   = ~xx.749
         authR = hkdfExpand(<$cAEAD0.745, 
                             h(<$cHash0.746, m1.752, x.1482^x.1483>), 'K_2e', '2'>,
                            hkdfExtract('emptyStr', x.1482^(~xx.749*x.1483)))
         gy    = x.1482^x.1483
         m1    = m1.752
         pkV   = x.1485^(x.1486*inv(~xx.749))
         z     = zero
         z.1   = x.1482^(~xx.749*x.1483)
         z.2   = x.1485^x.1486
    
    108. $cAEAD0
               = $cAEAD0.745
         $cHash0
               = $cHash0.746
         ~xx   = ~xx.749
         authR = hkdfExpand(<$cAEAD0.745, 
                             h(<$cHash0.746, m1.752, x.1482^inv((~xx.749*x.1483))>), 'K_2e', '2'>,
                            hkdfExtract('emptyStr', x.1482^inv(x.1483)))
         gy    = x.1482^inv((~xx.749*x.1483))
         m1    = m1.752
         pkV   = x.1485^x.1486
         z     = zero
         z.1   = x.1482^inv(x.1483)
         z.2   = x.1485^(~xx.749*x.1486)
    
    109. $cAEAD0
               = $cAEAD0.745
         $cHash0
               = $cHash0.746
         ~xx   = ~xx.749
         authR = hkdfExpand(<$cAEAD0.745, 
                             h(<$cHash0.746, m1.752, x.1482^inv((~xx.749*x.1483))>), 'K_2e', '2'>,
                            hkdfExtract('emptyStr', x.1482^inv(x.1483)))
         gy    = x.1482^inv((~xx.749*x.1483))
         m1    = m1.752
         pkV   = x.1485^inv((~xx.749*x.1486))
         z     = zero
         z.1   = x.1482^inv(x.1483)
         z.2   = x.1485^inv(x.1486)
    
    110. $cAEAD0
               = $cAEAD0.745
         $cHash0
               = $cHash0.746
         ~xx   = ~xx.749
         authR = hkdfExpand(<$cAEAD0.745, 
                             h(<$cHash0.746, m1.752, x.1482^inv((~xx.749*x.1483))>), 'K_2e', '2'>,
                            hkdfExtract('emptyStr', x.1482^inv(x.1483)))
         gy    = x.1482^inv((~xx.749*x.1483))
         m1    = m1.752
         pkV   = x.1485^(x.1486*inv(~xx.749))
         z     = zero
         z.1   = x.1482^inv(x.1483)
         z.2   = x.1485^x.1486
    
    111. $cAEAD0
               = $cAEAD0.745
         $cHash0
               = $cHash0.746
         ~xx   = ~xx.749
         authR = hkdfExpand(<$cAEAD0.745, 
                             h(<$cHash0.746, m1.752, x.1482^(x.1483*inv(~xx.749))>), 'K_2e', '2'>,
                            hkdfExtract('emptyStr', x.1482^x.1483))
         gy    = x.1482^(x.1483*inv(~xx.749))
         m1    = m1.752
         pkV   = x.1485^x.1486
         z     = zero
         z.1   = x.1482^x.1483
         z.2   = x.1485^(~xx.749*x.1486)
    
    112. $cAEAD0
               = $cAEAD0.745
         $cHash0
               = $cHash0.746
         ~xx   = ~xx.749
         authR = hkdfExpand(<$cAEAD0.745, 
                             h(<$cHash0.746, m1.752, x.1482^(x.1483*inv(~xx.749))>), 'K_2e', '2'>,
                            hkdfExtract('emptyStr', x.1482^x.1483))
         gy    = x.1482^(x.1483*inv(~xx.749))
         m1    = m1.752
         pkV   = x.1485^inv((~xx.749*x.1486))
         z     = zero
         z.1   = x.1482^x.1483
         z.2   = x.1485^inv(x.1486)
    
    113. $cAEAD0
               = $cAEAD0.745
         $cHash0
               = $cHash0.746
         ~xx   = ~xx.749
         authR = hkdfExpand(<$cAEAD0.745, 
                             h(<$cHash0.746, m1.752, x.1482^(x.1483*inv(~xx.749))>), 'K_2e', '2'>,
                            hkdfExtract('emptyStr', x.1482^x.1483))
         gy    = x.1482^(x.1483*inv(~xx.749))
         m1    = m1.752
         pkV   = x.1485^(x.1486*inv(~xx.749))
         z     = zero
         z.1   = x.1482^x.1483
         z.2   = x.1485^x.1486
    
    114. $cAEAD0
               = $cAEAD0.745
         $cHash0
               = $cHash0.746
         ~xx   = ~xx.749
         authR = (z.756⊕
                  hkdfExpand(<$cAEAD0.745, h(<$cHash0.746, m1.752, gy.751>), 'K_2e', '2'>,
                             hkdfExtract('emptyStr', gy.751^~xx.749))
                 )
         gy    = gy.751
         m1    = m1.752
         pkV   = x.1485^x.1486
         z     = z.756
         z.1   = gy.751^~xx.749
         z.2   = x.1485^(~xx.749*x.1486)
    
    115. $cAEAD0
               = $cAEAD0.745
         $cHash0
               = $cHash0.746
         ~xx   = ~xx.749
         authR = (z.756⊕
                  hkdfExpand(<$cAEAD0.745, h(<$cHash0.746, m1.752, gy.751>), 'K_2e', '2'>,
                             hkdfExtract('emptyStr', gy.751^~xx.749))
                 )
         gy    = gy.751
         m1    = m1.752
         pkV   = x.1485^inv((~xx.749*x.1486))
         z     = z.756
         z.1   = gy.751^~xx.749
         z.2   = x.1485^inv(x.1486)
    
    116. $cAEAD0
               = $cAEAD0.745
         $cHash0
               = $cHash0.746
         ~xx   = ~xx.749
         authR = (z.756⊕
                  hkdfExpand(<$cAEAD0.745, h(<$cHash0.746, m1.752, gy.751>), 'K_2e', '2'>,
                             hkdfExtract('emptyStr', gy.751^~xx.749))
                 )
         gy    = gy.751
         m1    = m1.752
         pkV   = x.1485^(x.1486*inv(~xx.749))
         z     = z.756
         z.1   = gy.751^~xx.749
         z.2   = x.1485^x.1486
    
    117. $cAEAD0
               = $cAEAD0.745
         $cHash0
               = $cHash0.746
         ~xx   = ~xx.749
         authR = (z.756⊕
                  hkdfExpand(<$cAEAD0.745, h(<$cHash0.746, m1.752, z.759^inv(~xx.749)>), 
                              'K_2e', '2'>,
                             hkdfExtract('emptyStr', z.759))
                 )
         gy    = z.759^inv(~xx.749)
         m1    = m1.752
         pkV   = x.1485^x.1486
         z     = z.756
         z.1   = z.759
         z.2   = x.1485^(~xx.749*x.1486)
    
    118. $cAEAD0
               = $cAEAD0.745
         $cHash0
               = $cHash0.746
         ~xx   = ~xx.749
         authR = (z.756⊕
                  hkdfExpand(<$cAEAD0.745, h(<$cHash0.746, m1.752, z.759^inv(~xx.749)>), 
                              'K_2e', '2'>,
                             hkdfExtract('emptyStr', z.759))
                 )
         gy    = z.759^inv(~xx.749)
         m1    = m1.752
         pkV   = x.1485^inv((~xx.749*x.1486))
         z     = z.756
         z.1   = z.759
         z.2   = x.1485^inv(x.1486)
    
    119. $cAEAD0
               = $cAEAD0.745
         $cHash0
               = $cHash0.746
         ~xx   = ~xx.749
         authR = (z.756⊕
                  hkdfExpand(<$cAEAD0.745, h(<$cHash0.746, m1.752, z.759^inv(~xx.749)>), 
                              'K_2e', '2'>,
                             hkdfExtract('emptyStr', z.759))
                 )
         gy    = z.759^inv(~xx.749)
         m1    = m1.752
         pkV   = x.1485^(x.1486*inv(~xx.749))
         z     = z.756
         z.1   = z.759
         z.2   = x.1485^x.1486
    
    120. $cAEAD0
               = $cAEAD0.746
         $cHash0
               = $cHash0.747
         ~xx   = ~xx.750
         authR = hkdfExpand(<$cAEAD0.746, 
                             h(<$cHash0.747, m1.753, x.1483^x.1484>), 'K_2e', '2'>,
                            hkdfExtract('emptyStr', x.1483^(~xx.750*x.1484)))
         gy    = x.1483^x.1484
         m1    = m1.753
         pkV   = x.1486^(x.1487*inv((~xx.750*x.1488)))
         z     = zero
         z.1   = x.1483^(~xx.750*x.1484)
         z.2   = x.1486^(x.1487*inv(x.1488))
    
    121. $cAEAD0
               = $cAEAD0.746
         $cHash0
               = $cHash0.747
         ~xx   = ~xx.750
         authR = hkdfExpand(<$cAEAD0.746, 
                             h(<$cHash0.747, m1.753, x.1483^inv((~xx.750*x.1484))>), 'K_2e', '2'>,
                            hkdfExtract('emptyStr', x.1483^inv(x.1484)))
         gy    = x.1483^inv((~xx.750*x.1484))
         m1    = m1.753
         pkV   = x.1486^(x.1487*inv((~xx.750*x.1488)))
         z     = zero
         z.1   = x.1483^inv(x.1484)
         z.2   = x.1486^(x.1487*inv(x.1488))
    
    122. $cAEAD0
               = $cAEAD0.746
         $cHash0
               = $cHash0.747
         ~xx   = ~xx.750
         authR = hkdfExpand(<$cAEAD0.746, 
                             h(<$cHash0.747, m1.753, x.1483^(x.1484*inv(~xx.750))>), 'K_2e', '2'>,
                            hkdfExtract('emptyStr', x.1483^x.1484))
         gy    = x.1483^(x.1484*inv(~xx.750))
         m1    = m1.753
         pkV   = x.1486^(x.1487*inv((~xx.750*x.1488)))
         z     = zero
         z.1   = x.1483^x.1484
         z.2   = x.1486^(x.1487*inv(x.1488))
    
    123. $cAEAD0
               = $cAEAD0.746
         $cHash0
               = $cHash0.747
         ~xx   = ~xx.750
         authR = hkdfExpand(<$cAEAD0.746, 
                             h(<$cHash0.747, m1.753, x.1483^(x.1484*inv((~xx.750*x.1485)))>), 'K_2e', 
                             '2'>,
                            hkdfExtract('emptyStr', x.1483^(x.1484*inv(x.1485))))
         gy    = x.1483^(x.1484*inv((~xx.750*x.1485)))
         m1    = m1.753
         pkV   = x.1487^x.1488
         z     = zero
         z.1   = x.1483^(x.1484*inv(x.1485))
         z.2   = x.1487^(~xx.750*x.1488)
    
    124. $cAEAD0
               = $cAEAD0.746
         $cHash0
               = $cHash0.747
         ~xx   = ~xx.750
         authR = hkdfExpand(<$cAEAD0.746, 
                             h(<$cHash0.747, m1.753, x.1483^(x.1484*inv((~xx.750*x.1485)))>), 'K_2e', 
                             '2'>,
                            hkdfExtract('emptyStr', x.1483^(x.1484*inv(x.1485))))
         gy    = x.1483^(x.1484*inv((~xx.750*x.1485)))
         m1    = m1.753
         pkV   = x.1487^inv((~xx.750*x.1488))
         z     = zero
         z.1   = x.1483^(x.1484*inv(x.1485))
         z.2   = x.1487^inv(x.1488)
    
    125. $cAEAD0
               = $cAEAD0.746
         $cHash0
               = $cHash0.747
         ~xx   = ~xx.750
         authR = hkdfExpand(<$cAEAD0.746, 
                             h(<$cHash0.747, m1.753, x.1483^(x.1484*inv((~xx.750*x.1485)))>), 'K_2e', 
                             '2'>,
                            hkdfExtract('emptyStr', x.1483^(x.1484*inv(x.1485))))
         gy    = x.1483^(x.1484*inv((~xx.750*x.1485)))
         m1    = m1.753
         pkV   = x.1487^(x.1488*inv(~xx.750))
         z     = zero
         z.1   = x.1483^(x.1484*inv(x.1485))
         z.2   = x.1487^x.1488
    
    126. $cAEAD0
               = $cAEAD0.746
         $cHash0
               = $cHash0.747
         ~xx   = ~xx.750
         authR = (z.757⊕
                  hkdfExpand(<$cAEAD0.746, h(<$cHash0.747, m1.753, gy.752>), 'K_2e', '2'>,
                             hkdfExtract('emptyStr', gy.752^~xx.750))
                 )
         gy    = gy.752
         m1    = m1.753
         pkV   = x.1486^(x.1487*inv((~xx.750*x.1488)))
         z     = z.757
         z.1   = gy.752^~xx.750
         z.2   = x.1486^(x.1487*inv(x.1488))
    
    127. $cAEAD0
               = $cAEAD0.746
         $cHash0
               = $cHash0.747
         ~xx   = ~xx.750
         authR = (z.757⊕
                  hkdfExpand(<$cAEAD0.746, h(<$cHash0.747, m1.753, z.760^inv(~xx.750)>), 
                              'K_2e', '2'>,
                             hkdfExtract('emptyStr', z.760))
                 )
         gy    = z.760^inv(~xx.750)
         m1    = m1.753
         pkV   = x.1486^(x.1487*inv((~xx.750*x.1488)))
         z     = z.757
         z.1   = z.760
         z.2   = x.1486^(x.1487*inv(x.1488))
    
    128. $cAEAD0
               = $cAEAD0.746
         $cHash0
               = $cHash0.747
         ~xx   = ~xx.750
         authR = (z.757⊕
                  hkdfExpand(<$cAEAD0.746, h(<$cHash0.747, m1.753, x.1484^x.1485>), 
                              'K_2e', '2'>,
                             hkdfExtract('emptyStr', x.1484^(~xx.750*x.1485)))
                 )
         gy    = x.1484^x.1485
         m1    = m1.753
         pkV   = x.1487^x.1488
         z     = z.757
         z.1   = x.1484^(~xx.750*x.1485)
         z.2   = x.1487^(~xx.750*x.1488)
    
    129. $cAEAD0
               = $cAEAD0.746
         $cHash0
               = $cHash0.747
         ~xx   = ~xx.750
         authR = (z.757⊕
                  hkdfExpand(<$cAEAD0.746, h(<$cHash0.747, m1.753, x.1484^x.1485>), 
                              'K_2e', '2'>,
                             hkdfExtract('emptyStr', x.1484^(~xx.750*x.1485)))
                 )
         gy    = x.1484^x.1485
         m1    = m1.753
         pkV   = x.1487^inv((~xx.750*x.1488))
         z     = z.757
         z.1   = x.1484^(~xx.750*x.1485)
         z.2   = x.1487^inv(x.1488)
    
    130. $cAEAD0
               = $cAEAD0.746
         $cHash0
               = $cHash0.747
         ~xx   = ~xx.750
         authR = (z.757⊕
                  hkdfExpand(<$cAEAD0.746, h(<$cHash0.747, m1.753, x.1484^x.1485>), 
                              'K_2e', '2'>,
                             hkdfExtract('emptyStr', x.1484^(~xx.750*x.1485)))
                 )
         gy    = x.1484^x.1485
         m1    = m1.753
         pkV   = x.1487^(x.1488*inv(~xx.750))
         z     = z.757
         z.1   = x.1484^(~xx.750*x.1485)
         z.2   = x.1487^x.1488
    
    131. $cAEAD0
               = $cAEAD0.746
         $cHash0
               = $cHash0.747
         ~xx   = ~xx.750
         authR = (z.757⊕
                  hkdfExpand(<$cAEAD0.746, 
                              h(<$cHash0.747, m1.753, x.1484^inv((~xx.750*x.1485))>), 'K_2e', '2'>,
                             hkdfExtract('emptyStr', x.1484^inv(x.1485)))
                 )
         gy    = x.1484^inv((~xx.750*x.1485))
         m1    = m1.753
         pkV   = x.1487^x.1488
         z     = z.757
         z.1   = x.1484^inv(x.1485)
         z.2   = x.1487^(~xx.750*x.1488)
    
    132. $cAEAD0
               = $cAEAD0.746
         $cHash0
               = $cHash0.747
         ~xx   = ~xx.750
         authR = (z.757⊕
                  hkdfExpand(<$cAEAD0.746, 
                              h(<$cHash0.747, m1.753, x.1484^inv((~xx.750*x.1485))>), 'K_2e', '2'>,
                             hkdfExtract('emptyStr', x.1484^inv(x.1485)))
                 )
         gy    = x.1484^inv((~xx.750*x.1485))
         m1    = m1.753
         pkV   = x.1487^inv((~xx.750*x.1488))
         z     = z.757
         z.1   = x.1484^inv(x.1485)
         z.2   = x.1487^inv(x.1488)
    
    133. $cAEAD0
               = $cAEAD0.746
         $cHash0
               = $cHash0.747
         ~xx   = ~xx.750
         authR = (z.757⊕
                  hkdfExpand(<$cAEAD0.746, 
                              h(<$cHash0.747, m1.753, x.1484^inv((~xx.750*x.1485))>), 'K_2e', '2'>,
                             hkdfExtract('emptyStr', x.1484^inv(x.1485)))
                 )
         gy    = x.1484^inv((~xx.750*x.1485))
         m1    = m1.753
         pkV   = x.1487^(x.1488*inv(~xx.750))
         z     = z.757
         z.1   = x.1484^inv(x.1485)
         z.2   = x.1487^x.1488
    
    134. $cAEAD0
               = $cAEAD0.746
         $cHash0
               = $cHash0.747
         ~xx   = ~xx.750
         authR = (z.757⊕
                  hkdfExpand(<$cAEAD0.746, 
                              h(<$cHash0.747, m1.753, x.1484^(x.1485*inv(~xx.750))>), 'K_2e', '2'>,
                             hkdfExtract('emptyStr', x.1484^x.1485))
                 )
         gy    = x.1484^(x.1485*inv(~xx.750))
         m1    = m1.753
         pkV   = x.1487^x.1488
         z     = z.757
         z.1   = x.1484^x.1485
         z.2   = x.1487^(~xx.750*x.1488)
    
    135. $cAEAD0
               = $cAEAD0.746
         $cHash0
               = $cHash0.747
         ~xx   = ~xx.750
         authR = (z.757⊕
                  hkdfExpand(<$cAEAD0.746, 
                              h(<$cHash0.747, m1.753, x.1484^(x.1485*inv(~xx.750))>), 'K_2e', '2'>,
                             hkdfExtract('emptyStr', x.1484^x.1485))
                 )
         gy    = x.1484^(x.1485*inv(~xx.750))
         m1    = m1.753
         pkV   = x.1487^inv((~xx.750*x.1488))
         z     = z.757
         z.1   = x.1484^x.1485
         z.2   = x.1487^inv(x.1488)
    
    136. $cAEAD0
               = $cAEAD0.746
         $cHash0
               = $cHash0.747
         ~xx   = ~xx.750
         authR = (z.757⊕
                  hkdfExpand(<$cAEAD0.746, 
                              h(<$cHash0.747, m1.753, x.1484^(x.1485*inv(~xx.750))>), 'K_2e', '2'>,
                             hkdfExtract('emptyStr', x.1484^x.1485))
                 )
         gy    = x.1484^(x.1485*inv(~xx.750))
         m1    = m1.753
         pkV   = x.1487^(x.1488*inv(~xx.750))
         z     = z.757
         z.1   = x.1484^x.1485
         z.2   = x.1487^x.1488
    
    137. $cAEAD0
               = $cAEAD0.747
         $cHash0
               = $cHash0.748
         ~xx   = ~xx.751
         authR = hkdfExpand(<$cAEAD0.747, 
                             h(<$cHash0.748, m1.754, x.1484^(x.1485*inv((~xx.751*x.1486)))>), 'K_2e', 
                             '2'>,
                            hkdfExtract('emptyStr', x.1484^(x.1485*inv(x.1486))))
         gy    = x.1484^(x.1485*inv((~xx.751*x.1486)))
         m1    = m1.754
         pkV   = x.1488^(x.1489*inv((~xx.751*x.1490)))
         z     = zero
         z.1   = x.1484^(x.1485*inv(x.1486))
         z.2   = x.1488^(x.1489*inv(x.1490))
    
    138. $cAEAD0
               = $cAEAD0.747
         $cHash0
               = $cHash0.748
         ~xx   = ~xx.751
         authR = (z.758⊕
                  hkdfExpand(<$cAEAD0.747, h(<$cHash0.748, m1.754, x.1485^x.1486>), 
                              'K_2e', '2'>,
                             hkdfExtract('emptyStr', x.1485^(~xx.751*x.1486)))
                 )
         gy    = x.1485^x.1486
         m1    = m1.754
         pkV   = x.1488^(x.1489*inv((~xx.751*x.1490)))
         z     = z.758
         z.1   = x.1485^(~xx.751*x.1486)
         z.2   = x.1488^(x.1489*inv(x.1490))
    
    139. $cAEAD0
               = $cAEAD0.747
         $cHash0
               = $cHash0.748
         ~xx   = ~xx.751
         authR = (z.758⊕
                  hkdfExpand(<$cAEAD0.747, 
                              h(<$cHash0.748, m1.754, x.1485^inv((~xx.751*x.1486))>), 'K_2e', '2'>,
                             hkdfExtract('emptyStr', x.1485^inv(x.1486)))
                 )
         gy    = x.1485^inv((~xx.751*x.1486))
         m1    = m1.754
         pkV   = x.1488^(x.1489*inv((~xx.751*x.1490)))
         z     = z.758
         z.1   = x.1485^inv(x.1486)
         z.2   = x.1488^(x.1489*inv(x.1490))
    
    140. $cAEAD0
               = $cAEAD0.747
         $cHash0
               = $cHash0.748
         ~xx   = ~xx.751
         authR = (z.758⊕
                  hkdfExpand(<$cAEAD0.747, 
                              h(<$cHash0.748, m1.754, x.1485^(x.1486*inv(~xx.751))>), 'K_2e', '2'>,
                             hkdfExtract('emptyStr', x.1485^x.1486))
                 )
         gy    = x.1485^(x.1486*inv(~xx.751))
         m1    = m1.754
         pkV   = x.1488^(x.1489*inv((~xx.751*x.1490)))
         z     = z.758
         z.1   = x.1485^x.1486
         z.2   = x.1488^(x.1489*inv(x.1490))
    
    141. $cAEAD0
               = $cAEAD0.747
         $cHash0
               = $cHash0.748
         ~xx   = ~xx.751
         authR = (z.758⊕
                  hkdfExpand(<$cAEAD0.747, 
                              h(<$cHash0.748, m1.754, x.1485^(x.1486*inv((~xx.751*x.1487)))>), 'K_2e', 
                              '2'>,
                             hkdfExtract('emptyStr', x.1485^(x.1486*inv(x.1487))))
                 )
         gy    = x.1485^(x.1486*inv((~xx.751*x.1487)))
         m1    = m1.754
         pkV   = x.1489^x.1490
         z     = z.758
         z.1   = x.1485^(x.1486*inv(x.1487))
         z.2   = x.1489^(~xx.751*x.1490)
    
    142. $cAEAD0
               = $cAEAD0.747
         $cHash0
               = $cHash0.748
         ~xx   = ~xx.751
         authR = (z.758⊕
                  hkdfExpand(<$cAEAD0.747, 
                              h(<$cHash0.748, m1.754, x.1485^(x.1486*inv((~xx.751*x.1487)))>), 'K_2e', 
                              '2'>,
                             hkdfExtract('emptyStr', x.1485^(x.1486*inv(x.1487))))
                 )
         gy    = x.1485^(x.1486*inv((~xx.751*x.1487)))
         m1    = m1.754
         pkV   = x.1489^inv((~xx.751*x.1490))
         z     = z.758
         z.1   = x.1485^(x.1486*inv(x.1487))
         z.2   = x.1489^inv(x.1490)
    
    143. $cAEAD0
               = $cAEAD0.747
         $cHash0
               = $cHash0.748
         ~xx   = ~xx.751
         authR = (z.758⊕
                  hkdfExpand(<$cAEAD0.747, 
                              h(<$cHash0.748, m1.754, x.1485^(x.1486*inv((~xx.751*x.1487)))>), 'K_2e', 
                              '2'>,
                             hkdfExtract('emptyStr', x.1485^(x.1486*inv(x.1487))))
                 )
         gy    = x.1485^(x.1486*inv((~xx.751*x.1487)))
         m1    = m1.754
         pkV   = x.1489^(x.1490*inv(~xx.751))
         z     = z.758
         z.1   = x.1485^(x.1486*inv(x.1487))
         z.2   = x.1489^x.1490
    
    144. $cAEAD0
               = $cAEAD0.748
         $cHash0
               = $cHash0.749
         ~xx   = ~xx.752
         authR = (z.759⊕
                  hkdfExpand(<$cAEAD0.748, 
                              h(<$cHash0.749, m1.755, x.1486^(x.1487*inv((~xx.752*x.1488)))>), 'K_2e', 
                              '2'>,
                             hkdfExtract('emptyStr', x.1486^(x.1487*inv(x.1488))))
                 )
         gy    = x.1486^(x.1487*inv((~xx.752*x.1488)))
         m1    = m1.755
         pkV   = x.1490^(x.1491*inv((~xx.752*x.1492)))
         z     = z.759
         z.1   = x.1486^(x.1487*inv(x.1488))
         z.2   = x.1490^(x.1491*inv(x.1492))
  */

rule (modulo E) R4_SIG_STAT:
   [
   StR2_SIG_STAT( $V, ~ltk, grx, ~yy, prk_3e2m, TH_2, CIPHERTEXT_2, gxy,
                  ~tid, m1, m2
   ),
   !PK_SIG( $U, pkU ), !PK_STAT( $V, pkV ),
   In( <'emptyStr', 
        aeadEncrypt(<$U, authI>,
                    hkdfExpand(<$cAEAD0, h(<$cHash0, TH_2, CIPHERTEXT_2, 'emptyStr'>), 
                                'K_3ae'>,
                               prk_3e2m),
                    extAad3Outer, $cAEAD0)
       >
   )
   ]
  --[
  ExpCommitR( ~tid, $U, $V, <gxy, grx> ),
  CommitR( ~tid, $U, $V, <gxy, grx> ),
  R4( ~tid, $U, $V, m1, m2,
      <'emptyStr', 
       aeadEncrypt(<$U, authI>,
                   hkdfExpand(<$cAEAD0, h(<$cHash0, TH_2, CIPHERTEXT_2, 'emptyStr'>), 
                               'K_3ae'>,
                              prk_3e2m),
                   extAad3Outer, $cAEAD0)
      >
  ),
  Eq( verify(authI,
             <<$U, h(<$cHash0, TH_2, CIPHERTEXT_2, 'emptyStr'>), pkU>, 
              aeadEncrypt('emptyStr',
                          hkdfExpand(<$cAEAD0, h(<$cHash0, TH_2, CIPHERTEXT_2, 'emptyStr'>), 'K_3m'
                                     >,
                                     prk_3e2m),
                          <$U, h(<$cHash0, TH_2, CIPHERTEXT_2, 'emptyStr'>), pkU>, $cAEAD0)
             >,
             pkU),
      true
  )
  ]->
   [ ]

  /*
  rule (modulo AC) R4_SIG_STAT:
     [
     StR2_SIG_STAT( $V, ~ltk, grx, ~yy, prk_3e2m, TH_2, CIPHERTEXT_2, gxy,
                    ~tid, m1, m2
     ),
     !PK_SIG( $U, pkU ), !PK_STAT( $V, pkV ),
     In( <'emptyStr', 
          aeadEncrypt(<$U, authI>,
                      hkdfExpand(<$cAEAD0, h(<$cHash0, TH_2, CIPHERTEXT_2, 'emptyStr'>), 
                                  'K_3ae'>,
                                 prk_3e2m),
                      extAad3Outer, $cAEAD0)
         >
     )
     ]
    --[
    ExpCommitR( ~tid, $U, $V, <gxy, grx> ),
    CommitR( ~tid, $U, $V, <gxy, grx> ),
    R4( ~tid, $U, $V, m1, m2,
        <'emptyStr', 
         aeadEncrypt(<$U, authI>,
                     hkdfExpand(<$cAEAD0, h(<$cHash0, TH_2, CIPHERTEXT_2, 'emptyStr'>), 
                                 'K_3ae'>,
                                prk_3e2m),
                     extAad3Outer, $cAEAD0)
        >
    ),
    Eq( z, true )
    ]->
     [ ]
    variants (modulo AC)
    1. $U    = $U.40
       $cAEAD0
             = $cAEAD0.42
       $cHash0
             = $cHash0.43
       CIPHERTEXT_2
             = CIPHERTEXT_2.47
       TH_2  = TH_2.48
       authI = authI.49
       pkU   = pkU.55
       prk_3e2m
             = prk_3e2m.57
       z     = verify(authI.49,
                      <<$U.40, h(<$cHash0.43, TH_2.48, CIPHERTEXT_2.47, 'emptyStr'>), pkU.55>, 
                       aeadEncrypt('emptyStr',
                                   hkdfExpand(<$cAEAD0.42, 
                                               h(<$cHash0.43, TH_2.48, CIPHERTEXT_2.47, 'emptyStr'>), 'K_3m'>,
                                              prk_3e2m.57),
                                   <$U.40, h(<$cHash0.43, TH_2.48, CIPHERTEXT_2.47, 'emptyStr'>), pkU.55>,
                                   $cAEAD0.42)
                      >,
                      pkU.55)
    
    2. $U    = $U.53
       $cAEAD0
             = $cAEAD0.55
       $cHash0
             = $cHash0.56
       CIPHERTEXT_2
             = CIPHERTEXT_2.60
       TH_2  = TH_2.61
       authI = sign(<
                     <$U.53, h(<$cHash0.56, TH_2.61, CIPHERTEXT_2.60, 'emptyStr'>), pk(x.104)
                     >, 
                     aeadEncrypt('emptyStr',
                                 hkdfExpand(<$cAEAD0.55, 
                                             h(<$cHash0.56, TH_2.61, CIPHERTEXT_2.60, 'emptyStr'>), 'K_3m'>,
                                            prk_3e2m.70),
                                 <$U.53, h(<$cHash0.56, TH_2.61, CIPHERTEXT_2.60, 'emptyStr'>), pk(x.104)
                                 >,
                                 $cAEAD0.55)
                    >,
                    x.104)
       pkU   = pk(x.104)
       prk_3e2m
             = prk_3e2m.70
       z     = true
  */

rule (modulo E) registerLTK_SIG:
   [ Fr( ~ltk ) ]
  --[ UniqLTK( $A, ~ltk ) ]->
   [ !LTK_SIG( $A, ~ltk ), !PK_SIG( $A, pk(~ltk) ), Out( <$A, pk(~ltk)> ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) registerLTK_STAT:
   [ Fr( ~ltk ) ]
  --[ UniqLTK( $A, 'g'^~ltk ) ]->
   [ !LTK_STAT( $A, ~ltk ), !PK_STAT( $A, 'g'^~ltk ), Out( <$A, 'g'^~ltk> )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) registerLTK_PSK:
   [ Fr( ~ltk ) ]
  --[ UniqLTK( <$A, $B>, ~ltk ) ]->
   [ !LTK_PSK( <$A, $B>, ~ltk ) ]

  /* has exactly the trivial AC variant */

restriction uniqLTKs:
  "∀ id k1 k2 #i #j.
    ((UniqLTK( id, k1 ) @ #i) ∧ (UniqLTK( id, k2 ) @ #j)) ⇒ (k1 = k2)"
  // safety formula

rule (modulo E) revealLTK_SIG:
   [ !LTK_SIG( $A, ~ltk ) ] --[ LTKRev( $A ) ]-> [ Out( ~ltk ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) revealLTK_STAT:
   [ !LTK_STAT( $A, ~ltk ) ] --[ LTKRev( $A ) ]-> [ Out( ~ltk ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) revealLTK_PSK:
   [ !LTK_PSK( <$A, $B>, ~ltk ) ] --[ LTKRev( <$A, $B> ) ]-> [ Out( ~ltk ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) revealSessionKeyI:
   [ CommitI( tid, u, v, sk ) ] --[ SKRev( sk ) ]-> [ Out( sk ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) revealSessionKeyR:
   [ CommitR( tid, u, v, sk ) ] --[ SKRev( sk ) ]-> [ Out( sk ) ]

  /* has exactly the trivial AC variant */

lemma sanityExecutableToTheEnd:
  exists-trace
  "∃ tidI tidR u v m1 m2 m3 sk sk2 #i #j #k #l.
    ((((((((((((I1( tidI, u, v, m1 ) @ #i) ∧ (R2( tidR, v, m1, m2 ) @ #j)) ∧
              (#i < #j)) ∧
             (I3( tidI, u, v, m1, m2, m3 ) @ #k)) ∧
            (#j < #k)) ∧
           (CommitI( tidI, u, v, sk ) @ #k)) ∧
          (ExpCommitI( tidI, u, v, sk2 ) @ #k)) ∧
         (RunningI( tidI, u, v, sk ) @ #k)) ∧
        (ExpRunningI( tidI, u, v, sk2 ) @ #k)) ∧
       (R4( tidR, u, v, m1, m2, m3 ) @ #l)) ∧
      (#k < #l)) ∧
     (CommitR( tidR, u, v, sk ) @ #l)) ∧
    (ExpCommitR( tidR, u, v, sk2 ) @ #l)"
/*
guarded formula characterizing all satisfying traces:
"∃ tidI tidR u v m1 m2 m3 sk sk2 #i #j #k #l.
  (I1( tidI, u, v, m1 ) @ #i) ∧
  (R2( tidR, v, m1, m2 ) @ #j) ∧
  (I3( tidI, u, v, m1, m2, m3 ) @ #k) ∧
  (CommitI( tidI, u, v, sk ) @ #k) ∧
  (ExpCommitI( tidI, u, v, sk2 ) @ #k) ∧
  (RunningI( tidI, u, v, sk ) @ #k) ∧
  (ExpRunningI( tidI, u, v, sk2 ) @ #k) ∧
  (R4( tidR, u, v, m1, m2, m3 ) @ #l) ∧
  (CommitR( tidR, u, v, sk ) @ #l) ∧
  (ExpCommitR( tidR, u, v, sk2 ) @ #l)
 ∧
  (#i < #j) ∧ (#j < #k) ∧ (#k < #l)"
*/
by sorry

lemma authInjAgreeGuaranteeForI:
  all-traces
  "∀ tidI u v expSk #i.
    (ExpCommitI( tidI, u, v, expSk ) @ #i) ⇒
    (((((∃ tidR #j. (ExpRunningR( tidR, v, expSk ) @ #j) ∧ (#j < #i)) ∧
        (¬(∃ tidI2 u2 v2 #i2.
            (ExpCommitI( tidI2, u2, v2, expSk ) @ #i2) ∧ (¬(#i = #i2))))) ∨
       (∃ #j. (LTKRev( <u, v> ) @ #j) ∧ (#j < #i))) ∨
      (∃ #j. (LTKRev( u ) @ #j) ∧ (#j < #i))) ∨
     (∃ #j. (LTKRev( v ) @ #j) ∧ (#j < #i)))"
/*
guarded formula characterizing all counter-examples:
"∃ tidI u v expSk #i.
  (ExpCommitI( tidI, u, v, expSk ) @ #i)
 ∧
  (((∀ tidR #j. (ExpRunningR( tidR, v, expSk ) @ #j) ⇒ ¬(#j < #i)) ∨
    (∃ tidI2 u2 v2 #i2.
      (ExpCommitI( tidI2, u2, v2, expSk ) @ #i2) ∧ ¬(#i = #i2)))) ∧
  (∀ #j. (LTKRev( <u, v> ) @ #j) ⇒ ¬(#j < #i)) ∧
  (∀ #j. (LTKRev( u ) @ #j) ⇒ ¬(#j < #i)) ∧
  (∀ #j. (LTKRev( v ) @ #j) ⇒ ¬(#j < #i))"
*/
by sorry

lemma authInjAgreeGuaranteeForR:
  all-traces
  "∀ tidR u v sk #i.
    (CommitR( tidR, u, v, sk ) @ #i) ⇒
    (((((∃ tidI #j. (RunningI( tidI, u, v, sk ) @ #j) ∧ (#j < #i)) ∧
        (¬(∃ tidR2 u2 v2 #i2.
            (CommitR( tidR2, u2, v2, sk ) @ #i2) ∧ (¬(#i = #i2))))) ∨
       (∃ #j. (LTKRev( <u, v> ) @ #j) ∧ (#j < #i))) ∨
      (∃ #j. (LTKRev( u ) @ #j) ∧ (#j < #i))) ∨
     (∃ #j. (LTKRev( v ) @ #j) ∧ (#j < #i)))"
/*
guarded formula characterizing all counter-examples:
"∃ tidR u v sk #i.
  (CommitR( tidR, u, v, sk ) @ #i)
 ∧
  (((∀ tidI #j. (RunningI( tidI, u, v, sk ) @ #j) ⇒ ¬(#j < #i)) ∨
    (∃ tidR2 u2 v2 #i2.
      (CommitR( tidR2, u2, v2, sk ) @ #i2) ∧ ¬(#i = #i2)))) ∧
  (∀ #j. (LTKRev( <u, v> ) @ #j) ⇒ ¬(#j < #i)) ∧
  (∀ #j. (LTKRev( u ) @ #j) ⇒ ¬(#j < #i)) ∧
  (∀ #j. (LTKRev( v ) @ #j) ⇒ ¬(#j < #i))"
*/
by sorry

lemma authGIYImplicitAuthGuaranteeForI:
  all-traces
  "∀ tidI u v impSk #i.
    (CommitI( tidI, u, v, impSk ) @ #i) ⇒
    ((((((∀ tidR u2 v2 #j.
           (CommitR( tidR, u2, v2, impSk ) @ #j) ⇒ ((u = u2) ∧ (v = v2))) ∧
         (¬(∃ #k. K( impSk ) @ #k))) ∧
        (¬(∃ tidR u.1 v.1 #j tidR2 u2 v2 #j2.
            ((CommitR( tidR, u.1, v.1, impSk ) @ #j) ∧
             (CommitR( tidR2, u2, v2, impSk ) @ #j2)) ∧
            (¬(#j = #j2))))) ∨
       (∃ #k. LTKRev( u ) @ #k)) ∨
      (∃ #k. LTKRev( v ) @ #k)) ∨
     (∃ #k. LTKRev( <u, v> ) @ #k))"
/*
guarded formula characterizing all counter-examples:
"∃ tidI u v impSk #i.
  (CommitI( tidI, u, v, impSk ) @ #i)
 ∧
  (((∃ tidR u2 v2 #j.
      (CommitR( tidR, u2, v2, impSk ) @ #j) ∧ ((¬(u = u2)) ∨ (¬(v = v2)))) ∨
    (∃ #k. (K( impSk ) @ #k)) ∨
    (∃ tidR u.1 v.1 #j tidR2 u2 v2 #j2.
      (CommitR( tidR, u.1, v.1, impSk ) @ #j) ∧
      (CommitR( tidR2, u2, v2, impSk ) @ #j2)
     ∧
      ¬(#j = #j2)))) ∧
  (∀ #k. (LTKRev( u ) @ #k) ⇒ ⊥) ∧
  (∀ #k. (LTKRev( v ) @ #k) ⇒ ⊥) ∧
  (∀ #k. (LTKRev( <u, v> ) @ #k) ⇒ ⊥)"
*/
by sorry

lemma authGIYImplicitAuthGuaranteeForI2:
  all-traces
  "∀ tidI u v impSk #i.
    (CommitI( tidI, u, v, impSk ) @ #i) ⇒
    ((((∀ tidR u2 v2 #j.
         (CommitR( tidR, u2, v2, impSk ) @ #j) ⇒
         ((((u = u2) ∧ (v = v2)) ∧
           (∀ tidR2 u3 v3 #j2.
             (CommitR( tidR2, u3, v3, impSk ) @ #j2) ⇒ (#j = #j2))) ∧
          (¬(∃ #k. K( impSk ) @ #k)))) ∨
       (∃ #k. LTKRev( u ) @ #k)) ∨
      (∃ #k. LTKRev( v ) @ #k)) ∨
     (∃ #k. LTKRev( <u, v> ) @ #k))"
/*
guarded formula characterizing all counter-examples:
"∃ tidI u v impSk #i.
  (CommitI( tidI, u, v, impSk ) @ #i)
 ∧
  (∃ tidR u2 v2 #j.
    (CommitR( tidR, u2, v2, impSk ) @ #j)
   ∧
    ((¬(u = u2)) ∨
     (¬(v = v2)) ∨
     (∃ tidR2 u3 v3 #j2.
       (CommitR( tidR2, u3, v3, impSk ) @ #j2) ∧ ¬(#j = #j2)) ∨
     (∃ #k. (K( impSk ) @ #k)))) ∧
  (∀ #k. (LTKRev( u ) @ #k) ⇒ ⊥) ∧
  (∀ #k. (LTKRev( v ) @ #k) ⇒ ⊥) ∧
  (∀ #k. (LTKRev( <u, v> ) @ #k) ⇒ ⊥)"
*/
by sorry

lemma secrecyPFSGIYSessionKey:
  all-traces
  "(∀ tid u v sk #i #j.
     ((K( sk ) @ #i) ∧ (CommitI( tid, u, v, sk ) @ #j)) ⇒
     (((∃ #l. (LTKRev( u ) @ #l) ∧ (#l < #j)) ∨
       (∃ #l. (LTKRev( v ) @ #l) ∧ (#l < #j))) ∨
      (∃ #l. SKRev( sk ) @ #l))) ∧
   (∀ tid u v sk #i #j.
     ((K( sk ) @ #i) ∧ (CommitR( tid, u, v, sk ) @ #j)) ⇒
     (((∃ #l. (LTKRev( u ) @ #l) ∧ (#l < #j)) ∨
       (∃ #l. (LTKRev( v ) @ #l) ∧ (#l < #j))) ∨
      (∃ #l. SKRev( sk ) @ #l)))"
/*
guarded formula characterizing all counter-examples:
"((∃ tid u v sk #i #j.
    (K( sk ) @ #i) ∧ (CommitI( tid, u, v, sk ) @ #j)
   ∧
    (∀ #l. (LTKRev( u ) @ #l) ⇒ ¬(#l < #j)) ∧
    (∀ #l. (LTKRev( v ) @ #l) ⇒ ¬(#l < #j)) ∧
    (∀ #l. (SKRev( sk ) @ #l) ⇒ ⊥)) ∨
  (∃ tid u v sk #i #j.
    (K( sk ) @ #i) ∧ (CommitR( tid, u, v, sk ) @ #j)
   ∧
    (∀ #l. (LTKRev( u ) @ #l) ⇒ ¬(#l < #j)) ∧
    (∀ #l. (LTKRev( v ) @ #l) ⇒ ¬(#l < #j)) ∧
    (∀ #l. (SKRev( sk ) @ #l) ⇒ ⊥)))"
*/
induction
  case empty_trace
  by contradiction /* from formulas */
next
  case non_empty_trace
  simplify
  solve( (∃ tid u v sk #i #j.
           (K( sk ) @ #i) ∧ (CommitI( tid, u, v, sk ) @ #j)
          ∧
           (∀ #l. (LTKRev( u ) @ #l) ⇒ ¬(#l < #j)) ∧
           (∀ #l. (LTKRev( v ) @ #l) ⇒ ¬(#l < #j)) ∧
           (∀ #l. (SKRev( sk ) @ #l) ⇒ ⊥))  ∥
         (∃ tid u v sk #i #j.
           (K( sk ) @ #i) ∧ (CommitR( tid, u, v, sk ) @ #j)
          ∧
           (∀ #l. (LTKRev( u ) @ #l) ⇒ ¬(#l < #j)) ∧
           (∀ #l. (LTKRev( v ) @ #l) ⇒ ¬(#l < #j)) ∧
           (∀ #l. (SKRev( sk ) @ #l) ⇒ ⊥)) )
    case case_1
    solve( (last(#j))  ∥ (last(#i))  ∥
           (∃ #l. (LTKRev( $U ) @ #l) ∧ (¬(last(#l))) ∧ (#l < #j))  ∥
           (∃ #l. (LTKRev( $V ) @ #l) ∧ (¬(last(#l))) ∧ (#l < #j))  ∥
           (∃ #l. (SKRev( <z, z.1> ) @ #l) ∧ ¬(last(#l))) )
      case case_1
      solve( StI1_SIG_STAT( $U, ~ltk, $V, ~xx, m1, ~tid ) ▶₀ #j )
        case I1_SIG_STAT
        solve( !PK_STAT( $V, pkV ) ▶₁ #j )
          case registerLTK_STAT
          solve( !PK_SIG( $U, pkU ) ▶₂ #j )
            case registerLTK_SIG
            solve( !KU( 'g'^(~ltk*~xx) ) @ #vk.7 )
              case I1_SIG_STAT
              solve( !KU( ~ltk ) @ #vk.8 )
                case revealLTK_STAT
                by contradiction /* from formulas */
              qed
            next
              case c_exp
              solve( !KU( ~ltk ) @ #vk.10 )
                case revealLTK_STAT
                by contradiction /* from formulas */
              qed
            next
              case registerLTK_STAT
              by solve( !KU( ~xx ) @ #vk.8 )
            qed
          qed
        qed
      qed
    next
      case case_2
      solve( StI1_SIG_STAT( $U, ~ltk, $V, ~xx, m1, ~tid ) ▶₀ #j )
        case I1_SIG_STAT
        solve( !PK_STAT( $V, pkV ) ▶₁ #j )
          case registerLTK_STAT
          solve( !PK_SIG( $U, pkU ) ▶₂ #j )
            case registerLTK_SIG
            solve( !KU( 'g'^(~ltk*~xx) ) @ #vk.7 )
              case I1_SIG_STAT
              solve( !KU( ~ltk ) @ #vk.8 )
                case revealLTK_STAT
                solve( !KU( ($V⊕
                             hkdfExpand(<$cAEAD0, 
                                         h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,
                                        hkdfExtract('emptyStr', z))
                            )
                       ) @ #vk.6 )
                  case c_xor
                  solve( !KU( (
                               aeadEncrypt('emptyStr',
                                           hkdfExpand(<$cAEAD0, 
                                                       h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 
                                                       'K_2m'>,
                                                      hkdfExtract(hkdfExtract('emptyStr', z),
                                                                  'g'^(~ltk*~xx))),
                                           <$V, h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'g'^~ltk
                                           >,
                                           $cAEAD0)⊕
                               hkdfExpand(<$cAEAD0, 
                                           h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'>,
                                          hkdfExtract('emptyStr', z))
                              )
                         ) @ #vk.7 )
                    case c_xor
                    solve( !KU( hkdfExpand(<$cAEAD0, 
                                            h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'
                                           >,
                                           hkdfExtract('emptyStr', z))
                           ) @ #vk.9 )
                      case R2_SIG_STAT
                      solve( !KU( 'g'^(~xx*~yy) ) @ #vk.13 )
                        case I1_SIG_STAT
                        by solve( !KU( ~yy ) @ #vk.21 )
                      next
                        case R2_SIG_STAT
                        by solve( !KU( ~xx ) @ #vk.21 )
                      next
                        case c_exp
                        by solve( !KU( ~xx ) @ #vk.23 )
                      qed
                    next
                      case c_hkdfExpand
                      solve( !KU( h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>)
                             ) @ #vk.17 )
                        case c_h
                        solve( !KU( hkdfExpand(<$cAEAD0, 
                                                h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', 
                                                '2'>,
                                               hkdfExtract('emptyStr', z))
                               ) @ #vk.17 )
                          case R2_SIG_STAT
                          solve( !KU( hkdfExtract('emptyStr', 'g'^(~xx*~yy)) ) @ #vk.22 )
                            case c_hkdfExtract
                            solve( !KU( 'g'^(~xx*~yy) ) @ #vk.20 )
                              case I1_SIG_STAT
                              by solve( !KU( ~yy ) @ #vk.33 )
                            next
                              case R2_SIG_STAT
                              by solve( !KU( ~xx ) @ #vk.33 )
                            next
                              case c_exp
                              by solve( !KU( ~xx ) @ #vk.35 )
                            qed
                          qed
                        next
                          case c_hkdfExpand
                          solve( !KU( aeadEncrypt('emptyStr',
                                                  hkdfExpand(<$cAEAD0, 
                                                              h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 
                                                                 gy>), 
                                                              'K_2m'>,
                                                             hkdfExtract(hkdfExtract('emptyStr', z),
                                                                         'g'^(~ltk*~xx))),
                                                  <$V, h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 
                                                   'g'^~ltk>,
                                                  $cAEAD0)
                                 ) @ #vk.21 )
                            case R2_SIG_STAT
                            solve( !KU( hkdfExtract('emptyStr', 'g'^(~xx*~yy)) ) @ #vk.24 )
                              case c_hkdfExtract
                              solve( !KU( 'g'^(~xx*~yy) ) @ #vk.23 )
                                case I1_SIG_STAT
                                by solve( !KU( ~yy ) @ #vk.36 )
                              next
                                case R2_SIG_STAT
                                by solve( !KU( ~xx ) @ #vk.36 )
                              next
                                case c_exp
                                by solve( !KU( ~xx ) @ #vk.38 )
                              qed
                            qed
                          next
                            case c_aeadEncrypt
                            solve( !KU( hkdfExpand(<$cAEAD0, 
                                                    h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 
                                                    'K_2m'>,
                                                   hkdfExtract(hkdfExtract('emptyStr', z), 'g'^(~ltk*~xx)))
                                   ) @ #vk.38 )
                              case R2_SIG_STAT_case_1
                              solve( !KU( hkdfExtract('emptyStr', 'g'^(~xx*~yy)) ) @ #vk.27 )
                                case c_hkdfExtract
                                solve( !KU( 'g'^(~xx*~yy) ) @ #vk.26 )
                                  case I1_SIG_STAT
                                  by solve( !KU( ~yy ) @ #vk.40 )
                                next
                                  case R2_SIG_STAT
                                  by solve( !KU( ~xx ) @ #vk.40 )
                                next
                                  case c_exp
                                  by solve( !KU( ~xx ) @ #vk.42 )
                                qed
                              qed
                            next
                              case R2_SIG_STAT_case_2
                              solve( !KU( hkdfExtract('emptyStr', 'g'^(~xx*~yy)) ) @ #vk.27 )
                                case c_hkdfExtract
                                solve( !KU( 'g'^(~xx*~yy) ) @ #vk.26 )
                                  case I1_SIG_STAT
                                  by solve( !KU( ~yy ) @ #vk.41 )
                                next
                                  case R2_SIG_STAT
                                  by solve( !KU( ~xx ) @ #vk.41 )
                                next
                                  case c_exp
                                  by solve( !KU( ~xx ) @ #vk.43 )
                                qed
                              qed
                            next
                              case c_hkdfExpand
                              solve( !KU( hkdfExtract(hkdfExtract('emptyStr', z), 'g'^(~ltk*~xx))
                                     ) @ #vk.42 )
                                case c_hkdfExtract
                                by contradiction /* cyclic */
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  next
                    case coerce
                    solve( !KD( (
                                 aeadEncrypt('emptyStr',
                                             hkdfExpand(<$cAEAD0, 
                                                         h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy
                                                           >), 
                                                         'K_2m'>,
                                                        hkdfExtract(hkdfExtract('emptyStr', z),
                                                                    'g'^(~ltk*~xx))),
                                             <$V, h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 
                                              'g'^~ltk>,
                                             $cAEAD0)⊕
                                 hkdfExpand(<$cAEAD0, 
                                             h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '2'
                                            >,
                                            hkdfExtract('emptyStr', z))
                                )
                           ) ▶₀ #vk.3 )
                      case I1_SIG_STAT
                      by contradiction /* impossible chain */
                    next
                      case I3_SIG_STAT
                      solve( (#vl.2, 0) ~~> (#vk.3, 0) )
                        case d_0_fst
                        by contradiction /* forbidden KD-fact */
                      next
                        case d_0_snd
                        solve( (#vr.9, 0) ~~> (#vk.3, 0) )
                          case d_1_aeadDecrypt
                          by solve( (#vr.10, 0) ~~> (#vk.3, 0) )
                        next
                          case d_1_decrypt
                          by solve( (#vr.10, 0) ~~> (#vk.3, 0) )
                        qed
                      qed
                    next
                      case R2_SIG_STAT
                      solve( (#vl.2, 0) ~~> (#vk.3, 0) )
                        case d_0_fst
                        by contradiction /* impossible chain */
                      next
                        case d_0_snd
                        solve( (#vr.9, 0) ~~> (#vk.3, 0) )
                          case d_0_fst
                          solve( (#vr.10, 0) ~~> (#vk.3, 0) )
                            case d_xor_case_1
                            by solve( (#vr.11, 0) ~~> (#vk.3, 0) )
                          next
                            case d_xor_case_2
                            by solve( (#vr.11, 0) ~~> (#vk.3, 0) )
                          next
                            case d_xor_case_3
                            by contradiction /* forbidden KD-fact */
                          next
                            case d_xor_case_4
                            by solve( (#vr.11, 0) ~~> (#vk.3, 0) )
                          qed
                        next
                          case d_0_snd
                          solve( (#vr.10, 0) ~~> (#vk.3, 0) )
                            case Xor
                            solve( !LTK_STAT( $V, ~ltk ) ▶₀ #vr.8 )
                              case registerLTK_STAT
                              solve( !PK_STAT( $V, 'g'^~ltk ) ▶₁ #vr.8 )
                                case registerLTK_STAT
                                solve( !KU( 'g'^(~xx*~yy) ) @ #vk.12 )
                                  case I1_SIG_STAT
                                  by solve( !KU( ~yy ) @ #vk.18 )
                                next
                                  case R2_SIG_STAT
                                  by solve( !KU( ~xx ) @ #vk.18 )
                                next
                                  case c_exp
                                  by solve( !KU( ~xx ) @ #vk.20 )
                                qed
                              qed
                            qed
                          next
                            case d_xor_case_1
                            by solve( (#vr.11, 0) ~~> (#vk.3, 0) )
                          next
                            case d_xor_case_2
                            solve( (#vr.11, 0) ~~> (#vk.3, 0) )
                              case Xor
                              solve( !LTK_STAT( $V.1, ~ltk.2 ) ▶₀ #vr.8 )
                                case registerLTK_STAT
                                solve( !PK_STAT( $V.1, pkV ) ▶₁ #vr.8 )
                                  case registerLTK_STAT
                                  solve( !KU( 'g'^(~xx*~yy) ) @ #vk.12 )
                                    case I1_SIG_STAT
                                    by solve( !KU( ~yy ) @ #vk.19 )
                                  next
                                    case R2_SIG_STAT
                                    by solve( !KU( ~xx ) @ #vk.19 )
                                  next
                                    case c_exp
                                    by solve( !KU( ~xx ) @ #vk.21 )
                                  qed
                                qed
                              qed
                            qed
                          next
                            case d_xor_case_3
                            solve( (#vr.11, 0) ~~> (#vk.3, 0) )
                              case d_1_aeadDecrypt
                              by solve( (#vr.12, 0) ~~> (#vk.3, 0) )
                            next
                              case d_1_decrypt
                              by solve( (#vr.12, 0) ~~> (#vk.3, 0) )
                            qed
                          next
                            case d_xor_case_4
                            by solve( (#vr.11, 0) ~~> (#vk.3, 0) )
                          qed
                        qed
                      qed
                    next
                      case registerLTK_SIG
                      by contradiction /* impossible chain */
                    next
                      case registerLTK_STAT
                      by contradiction /* impossible chain */
                    next
                      case revealLTK_PSK
                      by contradiction /* impossible chain */
                    next
                      case revealLTK_SIG
                      by contradiction /* impossible chain */
                    next
                      case revealLTK_STAT
                      by contradiction /* impossible chain */
                    next
                      case revealSessionKeyI
                      by solve( CommitI( tid.1, u, v, t ) ▶₀ #vr.8 )
                    next
                      case revealSessionKeyR
                      by solve( CommitR( tid.1, u, v, t ) ▶₀ #vr.8 )
                    qed
                  qed
                next
                  case coerce
                  solve( !KD( ($V⊕
                               hkdfExpand(<$cAEAD0, 
                                           h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 'K_2e', '1'>,
                                          hkdfExtract('emptyStr', z))
                              )
                         ) ▶₀ #vk.2 )
                    case I1_SIG_STAT
                    by contradiction /* impossible chain */
                  next
                    case I3_SIG_STAT
                    solve( (#vl.2, 0) ~~> (#vk.2, 0) )
                      case d_0_fst
                      by contradiction /* forbidden KD-fact */
                    next
                      case d_0_snd
                      solve( (#vr.9, 0) ~~> (#vk.2, 0) )
                        case d_1_aeadDecrypt
                        by solve( (#vr.10, 0) ~~> (#vk.2, 0) )
                      next
                        case d_1_decrypt
                        by solve( (#vr.10, 0) ~~> (#vk.2, 0) )
                      qed
                    qed
                  next
                    case R2_SIG_STAT
                    solve( (#vl.2, 0) ~~> (#vk.2, 0) )
                      case d_0_fst
                      by contradiction /* impossible chain */
                    next
                      case d_0_snd
                      solve( (#vr.9, 0) ~~> (#vk.2, 0) )
                        case d_0_fst
                        solve( (#vr.10, 0) ~~> (#vk.2, 0) )
                          case Xor
                          solve( !LTK_STAT( $V, ~ltk.2 ) ▶₀ #vr.8 )
                            case registerLTK_STAT
                            solve( !PK_STAT( $V, pkV ) ▶₁ #vr.8 )
                              case registerLTK_STAT
                              solve( !KU( 'g'^(~xx*~yy) ) @ #vk.12 )
                                case I1_SIG_STAT
                                by solve( !KU( ~yy ) @ #vk.16 )
                              next
                                case R2_SIG_STAT
                                by solve( !KU( ~xx ) @ #vk.16 )
                              next
                                case c_exp
                                by solve( !KU( ~xx ) @ #vk.18 )
                              qed
                            qed
                          qed
                        next
                          case d_xor_case_1
                          solve( (#vr.11, 0) ~~> (#vk.2, 0) )
                            case Xor
                            solve( !LTK_STAT( $V, ~ltk.2 ) ▶₀ #vr.8 )
                              case registerLTK_STAT
                              solve( !PK_STAT( $V, pkV ) ▶₁ #vr.8 )
                                case registerLTK_STAT
                                solve( !KU( (
                                             aeadEncrypt('emptyStr',
                                                         hkdfExpand(<$cAEAD0, 
                                                                     h(<$cHash0, 
                                                                        <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy
                                                                       >), 
                                                                     'K_2m'>,
                                                                    hkdfExtract(hkdfExtract('emptyStr', z),
                                                                                'g'^(~ltk*~xx))),
                                                         <$V, 
                                                          h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy
                                                            >), 
                                                          'g'^~ltk>,
                                                         $cAEAD0)⊕
                                             hkdfExpand(<$cAEAD0, 
                                                         h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy
                                                           >), 
                                                         'K_2e', '2'>,
                                                        hkdfExtract('emptyStr', z))
                                            )
                                       ) @ #vk.7 )
                                  case c_xor
                                  solve( !KU( (
                                               hkdfExpand(<$cAEAD0, 
                                                           h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy
                                                             >), 
                                                           'K_2e', '1'>,
                                                          hkdfExtract('emptyStr', z))⊕
                                               hkdfExpand(<$cAEAD0.1, 
                                                           h(<$cHash0.1, <'SIG', 'STAT', $cSUITE0.1, gx>, 
                                                              'g'^~yy>), 
                                                           'K_2e', '1'>,
                                                          hkdfExtract('emptyStr', z.1))
                                              )
                                         ) @ #vk.16 )
                                    case c_xor
                                    solve( !KU( hkdfExpand(<$cAEAD0, 
                                                            h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy
                                                              >), 
                                                            'K_2e', '2'>,
                                                           hkdfExtract('emptyStr', z))
                                           ) @ #vk.17 )
                                      case R2_SIG_STAT
                                      solve( !KU( 'g'^(~xx*~yy) ) @ #vk.14 )
                                        case I1_SIG_STAT
                                        by solve( !KU( ~yy ) @ #vk.27 )
                                      next
                                        case R2_SIG_STAT
                                        by solve( !KU( ~xx ) @ #vk.27 )
                                      next
                                        case c_exp
                                        by solve( !KU( ~xx ) @ #vk.29 )
                                      qed
                                    next
                                      case c_hkdfExpand
                                      solve( !KU( h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>)
                                             ) @ #vk.25 )
                                        case c_h
                                        solve( !KU( aeadEncrypt('emptyStr',
                                                                hkdfExpand(<$cAEAD0, 
                                                                            h(<$cHash0, 
                                                                               <'SIG', 'STAT', $cSUITE0, 
                                                                                'g'^~xx>, 
                                                                               gy>), 
                                                                            'K_2m'>,
                                                                           hkdfExtract(hkdfExtract('emptyStr',
                                                                                                   z),
                                                                                       'g'^(~ltk*~xx))),
                                                                <$V, 
                                                                 h(<$cHash0, 
                                                                    <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy>), 
                                                                 'g'^~ltk>,
                                                                $cAEAD0)
                                               ) @ #vk.24 )
                                          case R2_SIG_STAT
                                          solve( !KU( hkdfExtract('emptyStr', 'g'^(~xx*~yy)) ) @ #vk.30 )
                                            case c_hkdfExtract
                                            solve( !KU( 'g'^(~xx*~yy) ) @ #vk.21 )
                                              case I1_SIG_STAT
                                              by solve( !KU( ~yy ) @ #vk.38 )
                                            next
                                              case R2_SIG_STAT
                                              by solve( !KU( ~xx ) @ #vk.38 )
                                            next
                                              case c_exp
                                              by solve( !KU( ~xx ) @ #vk.40 )
                                            qed
                                          qed
                                        next
                                          case c_aeadEncrypt
                                          solve( !KU( hkdfExpand(<$cAEAD0.1, 
                                                                  h(<$cHash0.1, 
                                                                     <'SIG', 'STAT', $cSUITE0.1, gx>, 'g'^~yy
                                                                    >), 
                                                                  'K_2e', '1'>,
                                                                 hkdfExtract('emptyStr', z.1))
                                                 ) @ #vk.28 )
                                            case R2_SIG_STAT
                                            solve( !KU( hkdfExpand(<$cAEAD0, 
                                                                    h(<$cHash0, 
                                                                       <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy
                                                                      >), 
                                                                    'K_2e', '1'>,
                                                                   hkdfExtract('emptyStr', z))
                                                   ) @ #vk.31 )
                                              case R2_SIG_STAT
                                              solve( !KU( hkdfExtract('emptyStr', 'g'^(~xx*~yy)) ) @ #vk.32 )
                                                case c_hkdfExtract
                                                solve( !KU( 'g'^(~xx*~yy) ) @ #vk.25 )
                                                  case I1_SIG_STAT
                                                  by solve( !KU( ~yy ) @ #vk.44 )
                                                next
                                                  case R2_SIG_STAT
                                                  by solve( !KU( ~xx ) @ #vk.44 )
                                                next
                                                  case c_exp
                                                  by solve( !KU( ~xx ) @ #vk.46 )
                                                qed
                                              qed
                                            next
                                              case c_hkdfExpand
                                              solve( !KU( hkdfExpand(<$cAEAD0, 
                                                                      h(<$cHash0, 
                                                                         <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 
                                                                         gy>), 
                                                                      'K_2m'>,
                                                                     hkdfExtract(hkdfExtract('emptyStr', z),
                                                                                 'g'^(~ltk*~xx)))
                                                     ) @ #vk.43 )
                                                case R2_SIG_STAT_case_1
                                                solve( !KU( hkdfExtract('emptyStr', 'g'^(~xx*~yy))
                                                       ) @ #vk.35 )
                                                  case c_hkdfExtract
                                                  solve( !KU( 'g'^(~xx*~yy) ) @ #vk.28 )
                                                    case I1_SIG_STAT
                                                    by solve( !KU( ~yy ) @ #vk.47 )
                                                  next
                                                    case R2_SIG_STAT
                                                    by solve( !KU( ~xx ) @ #vk.47 )
                                                  next
                                                    case c_exp
                                                    by solve( !KU( ~xx ) @ #vk.49 )
                                                  qed
                                                qed
                                              next
                                                case R2_SIG_STAT_case_2
                                                solve( !KU( hkdfExtract('emptyStr', 'g'^(~xx*~yy))
                                                       ) @ #vk.35 )
                                                  case c_hkdfExtract
                                                  solve( !KU( 'g'^(~xx*~yy) ) @ #vk.28 )
                                                    case I1_SIG_STAT
                                                    by solve( !KU( ~yy ) @ #vk.48 )
                                                  next
                                                    case R2_SIG_STAT
                                                    by solve( !KU( ~xx ) @ #vk.48 )
                                                  next
                                                    case c_exp
                                                    by solve( !KU( ~xx ) @ #vk.50 )
                                                  qed
                                                qed
                                              next
                                                case c_hkdfExpand
                                                solve( !KU( hkdfExtract(hkdfExtract('emptyStr', z),
                                                                        'g'^(~ltk*~xx))
                                                       ) @ #vk.49 )
                                                  case c_hkdfExtract
                                                  by contradiction /* cyclic */
                                                qed
                                              qed
                                            qed
                                          next
                                            case c_hkdfExpand
                                            solve( !KU( h(<$cHash0.1, <'SIG', 'STAT', $cSUITE0.1, gx>, 'g'^~yy
                                                          >)
                                                   ) @ #vk.48 )
                                              case c_h
                                              solve( !KU( hkdfExpand(<$cAEAD0, 
                                                                      h(<$cHash0, 
                                                                         <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 
                                                                         gy>), 
                                                                      'K_2e', '1'>,
                                                                     hkdfExtract('emptyStr', z))
                                                     ) @ #vk.33 )
                                                case R2_SIG_STAT
                                                solve( !KU( hkdfExtract('emptyStr', 'g'^(~xx*~yy))
                                                       ) @ #vk.36 )
                                                  case c_hkdfExtract
                                                  solve( !KU( 'g'^(~xx*~yy) ) @ #vk.28 )
                                                    case I1_SIG_STAT
                                                    by solve( !KU( ~yy ) @ #vk.55 )
                                                  next
                                                    case R2_SIG_STAT
                                                    by solve( !KU( ~xx ) @ #vk.55 )
                                                  next
                                                    case c_exp
                                                    by solve( !KU( ~xx ) @ #vk.57 )
                                                  qed
                                                qed
                                              next
                                                case c_hkdfExpand
                                                solve( !KU( hkdfExpand(<$cAEAD0, 
                                                                        h(<$cHash0, 
                                                                           <'SIG', 'STAT', $cSUITE0, 'g'^~xx
                                                                           >, 
                                                                           gy>), 
                                                                        'K_2m'>,
                                                                       hkdfExtract(hkdfExtract('emptyStr', z),
                                                                                   'g'^(~ltk*~xx)))
                                                       ) @ #vk.48 )
                                                  case R2_SIG_STAT_case_1
                                                  solve( !KU( hkdfExtract('emptyStr', 'g'^(~xx*~yy))
                                                         ) @ #vk.40 )
                                                    case c_hkdfExtract
                                                    solve( !KU( 'g'^(~xx*~yy) ) @ #vk.31 )
                                                      case I1_SIG_STAT
                                                      by solve( !KU( ~yy ) @ #vk.56 )
                                                    next
                                                      case R2_SIG_STAT
                                                      by solve( !KU( ~xx ) @ #vk.56 )
                                                    next
                                                      case c_exp
                                                      by solve( !KU( ~xx ) @ #vk.58 )
                                                    qed
                                                  qed
                                                next
                                                  case R2_SIG_STAT_case_2
                                                  solve( !KU( hkdfExtract('emptyStr', 'g'^(~xx*~yy))
                                                         ) @ #vk.40 )
                                                    case c_hkdfExtract
                                                    solve( !KU( 'g'^(~xx*~yy) ) @ #vk.31 )
                                                      case I1_SIG_STAT
                                                      by solve( !KU( ~yy ) @ #vk.57 )
                                                    next
                                                      case R2_SIG_STAT
                                                      by solve( !KU( ~xx ) @ #vk.57 )
                                                    next
                                                      case c_exp
                                                      by solve( !KU( ~xx ) @ #vk.59 )
                                                    qed
                                                  qed
                                                next
                                                  case c_hkdfExpand
                                                  solve( !KU( hkdfExtract(hkdfExtract('emptyStr', z),
                                                                          'g'^(~ltk*~xx))
                                                         ) @ #vk.58 )
                                                    case c_hkdfExtract
                                                    by contradiction /* cyclic */
                                                  qed
                                                qed
                                              qed
                                            qed
                                          qed
                                        qed
                                      qed
                                    qed
                                  next
                                    case coerce
                                    solve( !KD( (
                                                 hkdfExpand(<$cAEAD0, 
                                                             h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 
                                                                gy>), 
                                                             'K_2e', '1'>,
                                                            hkdfExtract('emptyStr', z))⊕
                                                 hkdfExpand(<$cAEAD0.1, 
                                                             h(<$cHash0.1, <'SIG', 'STAT', $cSUITE0.1, gx>, 
                                                                'g'^~yy>), 
                                                             'K_2e', '1'>,
                                                            hkdfExtract('emptyStr', z.1))
                                                )
                                           ) ▶₀ #vk.4 )
                                      case I1_SIG_STAT
                                      by contradiction /* impossible chain */
                                    next
                                      case I3_SIG_STAT
                                      solve( (#vl.3, 0) ~~> (#vk.4, 0) )
                                        case d_0_fst
                                        by contradiction /* forbidden KD-fact */
                                      next
                                        case d_0_snd
                                        solve( (#vr.13, 0) ~~> (#vk.4, 0) )
                                          case d_1_aeadDecrypt
                                          by solve( (#vr.14, 0) ~~> (#vk.4, 0) )
                                        next
                                          case d_1_decrypt
                                          by solve( (#vr.14, 0) ~~> (#vk.4, 0) )
                                        qed
                                      qed
                                    next
                                      case R2_SIG_STAT
                                      solve( (#vl.3, 0) ~~> (#vk.4, 0) )
                                        case d_0_fst
                                        by contradiction /* impossible chain */
                                      next
                                        case d_0_snd
                                        solve( (#vr.13, 0) ~~> (#vk.4, 0) )
                                          case d_0_fst
                                          solve( (#vr.14, 0) ~~> (#vk.4, 0) )
                                            case d_xor_case_1
                                            by solve( (#vr.15, 0) ~~> (#vk.4, 0) )
                                          next
                                            case d_xor_case_2
                                            solve( (#vr.15, 0) ~~> (#vk.4, 0) )
                                              case Xor_case_1
                                              by contradiction /* cyclic */
                                            next
                                              case Xor_case_2
                                              solve( !LTK_STAT( $V.1, ~ltk.2 ) ▶₀ #vr.12 )
                                                case registerLTK_STAT
                                                solve( !PK_STAT( $V.1, pkV ) ▶₁ #vr.12 )
                                                  case registerLTK_STAT
                                                  solve( !KU( 'g'^(~xx*~yy) ) @ #vk.13 )
                                                    case I1_SIG_STAT
                                                    by solve( !KU( ~yy ) @ #vk.25 )
                                                  next
                                                    case R2_SIG_STAT
                                                    by solve( !KU( ~xx ) @ #vk.25 )
                                                  next
                                                    case c_exp
                                                    by solve( !KU( ~xx ) @ #vk.27 )
                                                  qed
                                                qed
                                              qed
                                            qed
                                          next
                                            case d_xor_case_3
                                            by contradiction /* forbidden KD-fact */
                                          next
                                            case d_xor_case_4
                                            by solve( (#vr.15, 0) ~~> (#vk.4, 0) )
                                          qed
                                        next
                                          case d_0_snd
                                          solve( (#vr.14, 0) ~~> (#vk.4, 0) )
                                            case d_xor_case_1
                                            by solve( (#vr.15, 0) ~~> (#vk.4, 0) )
                                          next
                                            case d_xor_case_2
                                            by solve( (#vr.15, 0) ~~> (#vk.4, 0) )
                                          next
                                            case d_xor_case_3
                                            solve( (#vr.15, 0) ~~> (#vk.4, 0) )
                                              case d_1_aeadDecrypt
                                              by solve( (#vr.16, 0) ~~> (#vk.4, 0) )
                                            next
                                              case d_1_decrypt
                                              by solve( (#vr.16, 0) ~~> (#vk.4, 0) )
                                            qed
                                          next
                                            case d_xor_case_4
                                            by solve( (#vr.15, 0) ~~> (#vk.4, 0) )
                                          qed
                                        qed
                                      qed
                                    next
                                      case registerLTK_SIG
                                      by contradiction /* impossible chain */
                                    next
                                      case registerLTK_STAT
                                      by contradiction /* impossible chain */
                                    next
                                      case revealLTK_PSK
                                      by contradiction /* impossible chain */
                                    next
                                      case revealLTK_SIG
                                      by contradiction /* impossible chain */
                                    next
                                      case revealLTK_STAT
                                      by contradiction /* impossible chain */
                                    next
                                      case revealSessionKeyI
                                      by solve( CommitI( tid.2, u, v, t ) ▶₀ #vr.12 )
                                    next
                                      case revealSessionKeyR
                                      by solve( CommitR( tid.2, u, v, t ) ▶₀ #vr.12 )
                                    qed
                                  qed
                                next
                                  case coerce
                                  solve( !KD( (
                                               aeadEncrypt('emptyStr',
                                                           hkdfExpand(<$cAEAD0, 
                                                                       h(<$cHash0, 
                                                                          <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, 
                                                                          gy>), 
                                                                       'K_2m'>,
                                                                      hkdfExtract(hkdfExtract('emptyStr', z),
                                                                                  'g'^(~ltk*~xx))),
                                                           <$V, 
                                                            h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy
                                                              >), 
                                                            'g'^~ltk>,
                                                           $cAEAD0)⊕
                                               hkdfExpand(<$cAEAD0, 
                                                           h(<$cHash0, <'SIG', 'STAT', $cSUITE0, 'g'^~xx>, gy
                                                             >), 
                                                           'K_2e', '2'>,
                                                          hkdfExtract('emptyStr', z))
                                              )
                                         ) ▶₀ #vk.3 )
                                    case I1_SIG_STAT
                                    by contradiction /* impossible chain */
                                  next
                                    case I3_SIG_STAT
                                    solve( (#vl.3, 0) ~~> (#vk.3, 0) )
                                      case d_0_fst
                                      by contradiction /* forbidden KD-fact */
                                    next
                                      case d_0_snd
                                      solve( (#vr.13, 0) ~~> (#vk.3, 0) )
                                        case d_1_aeadDecrypt
                                        by solve( (#vr.14, 0) ~~> (#vk.3, 0) )
                                      next
                                        case d_1_decrypt
                                        by solve( (#vr.14, 0) ~~> (#vk.3, 0) )
                                      qed
                                    qed
                                  next
                                    case R2_SIG_STAT
                                    solve( (#vl.3, 0) ~~> (#vk.3, 0) )
                                      case d_0_fst
                                      by contradiction /* impossible chain */
                                    next
                                      case d_0_snd
                                      solve( (#vr.13, 0) ~~> (#vk.3, 0) )
                                        case d_0_fst
                                        solve( (#vr.14, 0) ~~> (#vk.3, 0) )
                                          case d_xor_case_1
                                          by solve( (#vr.15, 0) ~~> (#vk.3, 0) )
                                        next
                                          case d_xor_case_2
                                          by solve( (#vr.15, 0) ~~> (#vk.3, 0) )
                                        next
                                          case d_xor_case_3
                                          by contradiction /* forbidden KD-fact */
                                        next
                                          case d_xor_case_4
                                          by solve( (#vr.15, 0) ~~> (#vk.3, 0) )
                                        qed
                                      next
                                        case d_0_snd
                                        solve( (#vr.14, 0) ~~> (#vk.3, 0) )
                                          case Xor
                                          solve( !LTK_STAT( $V, ~ltk ) ▶₀ #vr.12 )
                                            case registerLTK_STAT
                                            solve( !PK_STAT( $V, 'g'^~ltk ) ▶₁ #vr.12 )
                                              case registerLTK_STAT
                                              solve( !KU( 'g'^(~xx*~yy) ) @ #vk.12 )
                                                case I1_SIG_STAT
                                                by solve( !KU( ~yy ) @ #vk.22 )
                                              next
                                                case R2_SIG_STAT
                                                by solve( !KU( ~xx ) @ #vk.22 )
                                              next
                                                case c_exp
                                                by solve( !KU( ~xx ) @ #vk.24 )
                                              qed
                                            qed
                                          qed
                                        next
                                          case d_xor_case_1
                                          by solve( (#vr.15, 0) ~~> (#vk.3, 0) )
                                        next
                                          case d_xor_case_2
                                          solve( (#vr.15, 0) ~~> (#vk.3, 0) )
                                            case Xor
                                            solve( !LTK_STAT( $V.1, ~ltk.2 ) ▶₀ #vr.12 )
                                              case registerLTK_STAT
                                              solve( !PK_STAT( $V.1, pkV ) ▶₁ #vr.12 )
                                                case registerLTK_STAT
                                                solve( !KU( 'g'^(~xx*~yy) ) @ #vk.12 )
                                                  case I1_SIG_STAT
                                                  by solve( !KU( ~yy ) @ #vk.23 )
                                                next
                                                  case R2_SIG_STAT
                                                  by solve( !KU( ~xx ) @ #vk.23 )
                                                next
                                                  case c_exp
                                                  by solve( !KU( ~xx ) @ #vk.25 )
                                                qed
                                              qed
                                            qed
                                          qed
                                        next
                                          case d_xor_case_3
                                          solve( (#vr.15, 0) ~~> (#vk.3, 0) )
                                            case d_1_aeadDecrypt
                                            by solve( (#vr.16, 0) ~~> (#vk.3, 0) )
                                          next
                                            case d_1_decrypt
                                            by solve( (#vr.16, 0) ~~> (#vk.3, 0) )
                                          qed
                                        next
                                          case d_xor_case_4
                                          by solve( (#vr.15, 0) ~~> (#vk.3, 0) )
                                        qed
                                      qed
                                    qed
                                  next
                                    case registerLTK_SIG
                                    by contradiction /* impossible chain */
                                  next
                                    case registerLTK_STAT
                                    by contradiction /* impossible chain */
                                  next
                                    case revealLTK_PSK
                                    by contradiction /* impossible chain */
                                  next
                                    case revealLTK_SIG
                                    by contradiction /* impossible chain */
                                  next
                                    case revealLTK_STAT
                                    by contradiction /* impossible chain */
                                  next
                                    case revealSessionKeyI
                                    by solve( CommitI( tid.2, u, v, t ) ▶₀ #vr.12 )
                                  next
                                    case revealSessionKeyR
                                    by solve( CommitR( tid.2, u, v, t ) ▶₀ #vr.12 )
                                  qed
                                qed
                              qed
                            qed
                          qed
                        next
                          case d_xor_case_2
                          solve( (#vr.11, 0) ~~> (#vk.2, 0) )
                            case Xor
                            solve( !LTK_STAT( $V.1, ~ltk.2 ) ▶₀ #vr.8 )
                              case registerLTK_STAT
                              solve( !PK_STAT( $V.1, pkV ) ▶₁ #vr.8 )
                                case registerLTK_STAT
                                solve( !KU( 'g'^(~xx*~yy) ) @ #vk.12 )
                                  case I1_SIG_STAT
                                  by solve( !KU( ~yy ) @ #vk.17 )
                                next
                                  case R2_SIG_STAT
                                  by solve( !KU( ~xx ) @ #vk.17 )
                                next
                                  case c_exp
                                  by solve( !KU( ~xx ) @ #vk.19 )
                                qed
                              qed
                            qed
                          qed
                        next
                          case d_xor_case_3
                          by contradiction /* forbidden KD-fact */
                        next
                          case d_xor_case_4
                          by solve( (#vr.11, 0) ~~> (#vk.2, 0) )
                        qed
                      next
                        case d_0_snd
                        solve( (#vr.10, 0) ~~> (#vk.2, 0) )
                          case d_xor_case_1
                          by solve( (#vr.11, 0) ~~> (#vk.2, 0) )
                        next
                          case d_xor_case_2
                          by solve( (#vr.11, 0) ~~> (#vk.2, 0) )
                        next
                          case d_xor_case_3
                          solve( (#vr.11, 0) ~~> (#vk.2, 0) )
                            case d_1_aeadDecrypt
                            by solve( (#vr.12, 0) ~~> (#vk.2, 0) )
                          next
                            case d_1_decrypt
                            by solve( (#vr.12, 0) ~~> (#vk.2, 0) )
                          qed
                        next
                          case d_xor_case_4
                          by solve( (#vr.11, 0) ~~> (#vk.2, 0) )
                        qed
                      qed
                    qed
                  next
                    case registerLTK_SIG
                    by contradiction /* impossible chain */
                  next
                    case registerLTK_STAT
                    by contradiction /* impossible chain */
                  next
                    case revealLTK_PSK
                    by contradiction /* impossible chain */
                  next
                    case revealLTK_SIG
                    by contradiction /* impossible chain */
                  next
                    case revealLTK_STAT
                    by contradiction /* impossible chain */
                  next
                    case revealSessionKeyI
                    by solve( CommitI( tid.1, u, v, t ) ▶₀ #vr.8 )
                  next
                    case revealSessionKeyR
                    by solve( CommitR( tid.1, u, v, t ) ▶₀ #vr.8 )
                  qed
                qed
              qed
            next
              case c_exp
              solve( !KU( ~ltk ) @ #vk.10 )
                case revealLTK_STAT
                by solve( !KU( ~xx ) @ #vk.11 )
              qed
            next
              case registerLTK_STAT
              by solve( !KU( ~xx ) @ #vk.8 )
            qed
          qed
        qed
      qed
    next
      case case_3
      by contradiction /* from formulas */
    next
      case case_4
      by contradiction /* from formulas */
    next
      case case_5
      by contradiction /* from formulas */
    qed
  next
    case case_2
    solve( (last(#j))  ∥ (last(#i))  ∥
           (∃ #l. (LTKRev( $U ) @ #l) ∧ (¬(last(#l))) ∧ (#l < #j))  ∥
           (∃ #l. (LTKRev( $V ) @ #l) ∧ (¬(last(#l))) ∧ (#l < #j))  ∥
           (∃ #l. (SKRev( <gxy, grx> ) @ #l) ∧ ¬(last(#l))) )
      case case_1
      solve( StR2_SIG_STAT( $V, ~ltk, grx, ~yy, prk_3e2m, TH_2, CIPHERTEXT_2,
                            gxy, ~tid, m1, m2
             ) ▶₀ #j )
        case R2_SIG_STAT
        solve( !PK_SIG( $U, pk(x) ) ▶₁ #j )
          case registerLTK_SIG
          solve( !PK_STAT( $V, pkV ) ▶₂ #j )
            case registerLTK_STAT
            solve( !KU( aeadEncrypt(<$U, 
                                     sign(<
                                           <$U, 
                                            h(<$cHash0.1, 
                                               h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy>), 
                                               <
                                                ($V⊕
                                                 hkdfExpand(<$cAEAD0, 
                                                             h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 
                                                                'g'^~yy>), 
                                                             'K_2e', '1'>,
                                                            hkdfExtract('emptyStr', gxy))
                                                ), 
                                                (
                                                 aeadEncrypt('emptyStr',
                                                             hkdfExpand(<$cAEAD0, 
                                                                         h(<$cHash0, 
                                                                            <'SIG', 'STAT', $cSUITE0, gx>, 
                                                                            'g'^~yy>), 
                                                                         'K_2m'>,
                                                                        hkdfExtract(hkdfExtract('emptyStr',
                                                                                                gxy),
                                                                                    grx)),
                                                             <$V, 
                                                              h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 
                                                                 'g'^~yy>), 
                                                              'g'^~ltk>,
                                                             $cAEAD0)⊕
                                                 hkdfExpand(<$cAEAD0, 
                                                             h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 
                                                                'g'^~yy>), 
                                                             'K_2e', '2'>,
                                                            hkdfExtract('emptyStr', gxy))
                                                )
                                               >, 
                                               'emptyStr'>), 
                                            pk(~ltk.1)>, 
                                           aeadEncrypt('emptyStr',
                                                       hkdfExpand(<$cAEAD0.1, 
                                                                   h(<$cHash0.1, 
                                                                      h(<$cHash0, 
                                                                         <'SIG', 'STAT', $cSUITE0, gx>, 
                                                                         'g'^~yy>), 
                                                                      <
                                                                       ($V⊕
                                                                        hkdfExpand(<$cAEAD0, 
                                                                                    h(<$cHash0, 
                                                                                       <'SIG', 'STAT', 
                                                                                        $cSUITE0, gx>, 
                                                                                       'g'^~yy>), 
                                                                                    'K_2e', '1'>,
                                                                                   hkdfExtract('emptyStr',
                                                                                               gxy))
                                                                       ), 
                                                                       (
                                                                        aeadEncrypt('emptyStr',
                                                                                    hkdfExpand(<$cAEAD0, 
                                                                                                h(<$cHash0, 
                                                                                                   <'SIG', 
                                                                                                    'STAT', 
                                                                                                    $cSUITE0, 
                                                                                                    gx>, 
                                                                                                   'g'^~yy>), 
                                                                                                'K_2m'>,
                                                                                               hkdfExtract(hkdfExtract('emptyStr',
                                                                                                                       gxy),
                                                                                                           grx)),
                                                                                    <$V, 
                                                                                     h(<$cHash0, 
                                                                                        <'SIG', 'STAT', 
                                                                                         $cSUITE0, gx>, 
                                                                                        'g'^~yy>), 
                                                                                     'g'^~ltk>,
                                                                                    $cAEAD0)⊕
                                                                        hkdfExpand(<$cAEAD0, 
                                                                                    h(<$cHash0, 
                                                                                       <'SIG', 'STAT', 
                                                                                        $cSUITE0, gx>, 
                                                                                       'g'^~yy>), 
                                                                                    'K_2e', '2'>,
                                                                                   hkdfExtract('emptyStr',
                                                                                               gxy))
                                                                       )
                                                                      >, 
                                                                      'emptyStr'>), 
                                                                   'K_3m'>,
                                                                  hkdfExtract(hkdfExtract('emptyStr', gxy),
                                                                              grx)),
                                                       <$U, 
                                                        h(<$cHash0.1, 
                                                           h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy
                                                             >), 
                                                           <
                                                            ($V⊕
                                                             hkdfExpand(<$cAEAD0, 
                                                                         h(<$cHash0, 
                                                                            <'SIG', 'STAT', $cSUITE0, gx>, 
                                                                            'g'^~yy>), 
                                                                         'K_2e', '1'>,
                                                                        hkdfExtract('emptyStr', gxy))
                                                            ), 
                                                            (
                                                             aeadEncrypt('emptyStr',
                                                                         hkdfExpand(<$cAEAD0, 
                                                                                     h(<$cHash0, 
                                                                                        <'SIG', 'STAT', 
                                                                                         $cSUITE0, gx>, 
                                                                                        'g'^~yy>), 
                                                                                     'K_2m'>,
                                                                                    hkdfExtract(hkdfExtract('emptyStr',
                                                                                                            gxy),
                                                                                                grx)),
                                                                         <$V, 
                                                                          h(<$cHash0, 
                                                                             <'SIG', 'STAT', $cSUITE0, gx>, 
                                                                             'g'^~yy>), 
                                                                          'g'^~ltk>,
                                                                         $cAEAD0)⊕
                                                             hkdfExpand(<$cAEAD0, 
                                                                         h(<$cHash0, 
                                                                            <'SIG', 'STAT', $cSUITE0, gx>, 
                                                                            'g'^~yy>), 
                                                                         'K_2e', '2'>,
                                                                        hkdfExtract('emptyStr', gxy))
                                                            )
                                                           >, 
                                                           'emptyStr'>), 
                                                        pk(~ltk.1)>,
                                                       $cAEAD0.1)
                                          >,
                                          ~ltk.1)
                                    >,
                                    hkdfExpand(<$cAEAD0.1, 
                                                h(<$cHash0.1, 
                                                   h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy>), 
                                                   <
                                                    ($V⊕
                                                     hkdfExpand(<$cAEAD0, 
                                                                 h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 
                                                                    'g'^~yy>), 
                                                                 'K_2e', '1'>,
                                                                hkdfExtract('emptyStr', gxy))
                                                    ), 
                                                    (
                                                     aeadEncrypt('emptyStr',
                                                                 hkdfExpand(<$cAEAD0, 
                                                                             h(<$cHash0, 
                                                                                <'SIG', 'STAT', $cSUITE0, gx
                                                                                >, 
                                                                                'g'^~yy>), 
                                                                             'K_2m'>,
                                                                            hkdfExtract(hkdfExtract('emptyStr',
                                                                                                    gxy),
                                                                                        grx)),
                                                                 <$V, 
                                                                  h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 
                                                                     'g'^~yy>), 
                                                                  'g'^~ltk>,
                                                                 $cAEAD0)⊕
                                                     hkdfExpand(<$cAEAD0, 
                                                                 h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 
                                                                    'g'^~yy>), 
                                                                 'K_2e', '2'>,
                                                                hkdfExtract('emptyStr', gxy))
                                                    )
                                                   >, 
                                                   'emptyStr'>), 
                                                'K_3ae'>,
                                               hkdfExtract(hkdfExtract('emptyStr', gxy), grx)),
                                    extAad3Outer, $cAEAD0.1)
                   ) @ #vk.3 )
              case I3_SIG_STAT
              solve( (∃ #l. (LTKRev( $U ) @ #l) ∧ (¬(last(#l))) ∧ (#l < #vr.3))  ∥
                     (∃ #l. (LTKRev( $V ) @ #l) ∧ (¬(last(#l))) ∧ (#l < #vr.3))  ∥
                     (∃ #l. (SKRev( <'g'^(~xx*~yy), 'g'^(~ltk*~xx)> ) @ #l) ∧ ¬(last(#l))) )
                case case_1
                by contradiction /* from formulas */
              next
                case case_2
                by contradiction /* from formulas */
              next
                case case_3
                by contradiction /* from formulas */
              qed
            next
              case c_aeadEncrypt
              solve( !KU( sign(<
                                <$U, 
                                 h(<$cHash0.1, h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy>), 
                                    <
                                     ($V⊕
                                      hkdfExpand(<$cAEAD0, 
                                                  h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy>), 
                                                  'K_2e', '1'>,
                                                 hkdfExtract('emptyStr', gxy))
                                     ), 
                                     (
                                      aeadEncrypt('emptyStr',
                                                  hkdfExpand(<$cAEAD0, 
                                                              h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 
                                                                 'g'^~yy>), 
                                                              'K_2m'>,
                                                             hkdfExtract(hkdfExtract('emptyStr', gxy), grx)),
                                                  <$V, h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy>), 
                                                   'g'^~ltk>,
                                                  $cAEAD0)⊕
                                      hkdfExpand(<$cAEAD0, 
                                                  h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy>), 
                                                  'K_2e', '2'>,
                                                 hkdfExtract('emptyStr', gxy))
                                     )
                                    >, 
                                    'emptyStr'>), 
                                 pk(~ltk.1)>, 
                                aeadEncrypt('emptyStr',
                                            hkdfExpand(<$cAEAD0.1, 
                                                        h(<$cHash0.1, 
                                                           h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy
                                                             >), 
                                                           <
                                                            ($V⊕
                                                             hkdfExpand(<$cAEAD0, 
                                                                         h(<$cHash0, 
                                                                            <'SIG', 'STAT', $cSUITE0, gx>, 
                                                                            'g'^~yy>), 
                                                                         'K_2e', '1'>,
                                                                        hkdfExtract('emptyStr', gxy))
                                                            ), 
                                                            (
                                                             aeadEncrypt('emptyStr',
                                                                         hkdfExpand(<$cAEAD0, 
                                                                                     h(<$cHash0, 
                                                                                        <'SIG', 'STAT', 
                                                                                         $cSUITE0, gx>, 
                                                                                        'g'^~yy>), 
                                                                                     'K_2m'>,
                                                                                    hkdfExtract(hkdfExtract('emptyStr',
                                                                                                            gxy),
                                                                                                grx)),
                                                                         <$V, 
                                                                          h(<$cHash0, 
                                                                             <'SIG', 'STAT', $cSUITE0, gx>, 
                                                                             'g'^~yy>), 
                                                                          'g'^~ltk>,
                                                                         $cAEAD0)⊕
                                                             hkdfExpand(<$cAEAD0, 
                                                                         h(<$cHash0, 
                                                                            <'SIG', 'STAT', $cSUITE0, gx>, 
                                                                            'g'^~yy>), 
                                                                         'K_2e', '2'>,
                                                                        hkdfExtract('emptyStr', gxy))
                                                            )
                                                           >, 
                                                           'emptyStr'>), 
                                                        'K_3m'>,
                                                       hkdfExtract(hkdfExtract('emptyStr', gxy), grx)),
                                            <$U, 
                                             h(<$cHash0.1, 
                                                h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy>), 
                                                <
                                                 ($V⊕
                                                  hkdfExpand(<$cAEAD0, 
                                                              h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 
                                                                 'g'^~yy>), 
                                                              'K_2e', '1'>,
                                                             hkdfExtract('emptyStr', gxy))
                                                 ), 
                                                 (
                                                  aeadEncrypt('emptyStr',
                                                              hkdfExpand(<$cAEAD0, 
                                                                          h(<$cHash0, 
                                                                             <'SIG', 'STAT', $cSUITE0, gx>, 
                                                                             'g'^~yy>), 
                                                                          'K_2m'>,
                                                                         hkdfExtract(hkdfExtract('emptyStr',
                                                                                                 gxy),
                                                                                     grx)),
                                                              <$V, 
                                                               h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 
                                                                  'g'^~yy>), 
                                                               'g'^~ltk>,
                                                              $cAEAD0)⊕
                                                  hkdfExpand(<$cAEAD0, 
                                                              h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 
                                                                 'g'^~yy>), 
                                                              'K_2e', '2'>,
                                                             hkdfExtract('emptyStr', gxy))
                                                 )
                                                >, 
                                                'emptyStr'>), 
                                             pk(~ltk.1)>,
                                            $cAEAD0.1)
                               >,
                               ~ltk.1)
                     ) @ #vk.18 )
                case c_sign
                solve( !KU( ~ltk.1 ) @ #vk.21 )
                  case revealLTK_SIG
                  by contradiction /* from formulas */
                qed
              qed
            qed
          qed
        qed
      qed
    next
      case case_2
      solve( StR2_SIG_STAT( $V, ~ltk, grx, ~yy, prk_3e2m, TH_2, CIPHERTEXT_2,
                            gxy, ~tid, m1, m2
             ) ▶₀ #j )
        case R2_SIG_STAT
        solve( !PK_SIG( $U, pk(x) ) ▶₁ #j )
          case registerLTK_SIG
          solve( !PK_STAT( $V, pkV ) ▶₂ #j )
            case registerLTK_STAT
            solve( !KU( aeadEncrypt(<$U, 
                                     sign(<
                                           <$U, 
                                            h(<$cHash0.1, 
                                               h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy>), 
                                               <
                                                ($V⊕
                                                 hkdfExpand(<$cAEAD0, 
                                                             h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 
                                                                'g'^~yy>), 
                                                             'K_2e', '1'>,
                                                            hkdfExtract('emptyStr', gxy))
                                                ), 
                                                (
                                                 aeadEncrypt('emptyStr',
                                                             hkdfExpand(<$cAEAD0, 
                                                                         h(<$cHash0, 
                                                                            <'SIG', 'STAT', $cSUITE0, gx>, 
                                                                            'g'^~yy>), 
                                                                         'K_2m'>,
                                                                        hkdfExtract(hkdfExtract('emptyStr',
                                                                                                gxy),
                                                                                    grx)),
                                                             <$V, 
                                                              h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 
                                                                 'g'^~yy>), 
                                                              'g'^~ltk>,
                                                             $cAEAD0)⊕
                                                 hkdfExpand(<$cAEAD0, 
                                                             h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 
                                                                'g'^~yy>), 
                                                             'K_2e', '2'>,
                                                            hkdfExtract('emptyStr', gxy))
                                                )
                                               >, 
                                               'emptyStr'>), 
                                            pk(~ltk.1)>, 
                                           aeadEncrypt('emptyStr',
                                                       hkdfExpand(<$cAEAD0.1, 
                                                                   h(<$cHash0.1, 
                                                                      h(<$cHash0, 
                                                                         <'SIG', 'STAT', $cSUITE0, gx>, 
                                                                         'g'^~yy>), 
                                                                      <
                                                                       ($V⊕
                                                                        hkdfExpand(<$cAEAD0, 
                                                                                    h(<$cHash0, 
                                                                                       <'SIG', 'STAT', 
                                                                                        $cSUITE0, gx>, 
                                                                                       'g'^~yy>), 
                                                                                    'K_2e', '1'>,
                                                                                   hkdfExtract('emptyStr',
                                                                                               gxy))
                                                                       ), 
                                                                       (
                                                                        aeadEncrypt('emptyStr',
                                                                                    hkdfExpand(<$cAEAD0, 
                                                                                                h(<$cHash0, 
                                                                                                   <'SIG', 
                                                                                                    'STAT', 
                                                                                                    $cSUITE0, 
                                                                                                    gx>, 
                                                                                                   'g'^~yy>), 
                                                                                                'K_2m'>,
                                                                                               hkdfExtract(hkdfExtract('emptyStr',
                                                                                                                       gxy),
                                                                                                           grx)),
                                                                                    <$V, 
                                                                                     h(<$cHash0, 
                                                                                        <'SIG', 'STAT', 
                                                                                         $cSUITE0, gx>, 
                                                                                        'g'^~yy>), 
                                                                                     'g'^~ltk>,
                                                                                    $cAEAD0)⊕
                                                                        hkdfExpand(<$cAEAD0, 
                                                                                    h(<$cHash0, 
                                                                                       <'SIG', 'STAT', 
                                                                                        $cSUITE0, gx>, 
                                                                                       'g'^~yy>), 
                                                                                    'K_2e', '2'>,
                                                                                   hkdfExtract('emptyStr',
                                                                                               gxy))
                                                                       )
                                                                      >, 
                                                                      'emptyStr'>), 
                                                                   'K_3m'>,
                                                                  hkdfExtract(hkdfExtract('emptyStr', gxy),
                                                                              grx)),
                                                       <$U, 
                                                        h(<$cHash0.1, 
                                                           h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy
                                                             >), 
                                                           <
                                                            ($V⊕
                                                             hkdfExpand(<$cAEAD0, 
                                                                         h(<$cHash0, 
                                                                            <'SIG', 'STAT', $cSUITE0, gx>, 
                                                                            'g'^~yy>), 
                                                                         'K_2e', '1'>,
                                                                        hkdfExtract('emptyStr', gxy))
                                                            ), 
                                                            (
                                                             aeadEncrypt('emptyStr',
                                                                         hkdfExpand(<$cAEAD0, 
                                                                                     h(<$cHash0, 
                                                                                        <'SIG', 'STAT', 
                                                                                         $cSUITE0, gx>, 
                                                                                        'g'^~yy>), 
                                                                                     'K_2m'>,
                                                                                    hkdfExtract(hkdfExtract('emptyStr',
                                                                                                            gxy),
                                                                                                grx)),
                                                                         <$V, 
                                                                          h(<$cHash0, 
                                                                             <'SIG', 'STAT', $cSUITE0, gx>, 
                                                                             'g'^~yy>), 
                                                                          'g'^~ltk>,
                                                                         $cAEAD0)⊕
                                                             hkdfExpand(<$cAEAD0, 
                                                                         h(<$cHash0, 
                                                                            <'SIG', 'STAT', $cSUITE0, gx>, 
                                                                            'g'^~yy>), 
                                                                         'K_2e', '2'>,
                                                                        hkdfExtract('emptyStr', gxy))
                                                            )
                                                           >, 
                                                           'emptyStr'>), 
                                                        pk(~ltk.1)>,
                                                       $cAEAD0.1)
                                          >,
                                          ~ltk.1)
                                    >,
                                    hkdfExpand(<$cAEAD0.1, 
                                                h(<$cHash0.1, 
                                                   h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy>), 
                                                   <
                                                    ($V⊕
                                                     hkdfExpand(<$cAEAD0, 
                                                                 h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 
                                                                    'g'^~yy>), 
                                                                 'K_2e', '1'>,
                                                                hkdfExtract('emptyStr', gxy))
                                                    ), 
                                                    (
                                                     aeadEncrypt('emptyStr',
                                                                 hkdfExpand(<$cAEAD0, 
                                                                             h(<$cHash0, 
                                                                                <'SIG', 'STAT', $cSUITE0, gx
                                                                                >, 
                                                                                'g'^~yy>), 
                                                                             'K_2m'>,
                                                                            hkdfExtract(hkdfExtract('emptyStr',
                                                                                                    gxy),
                                                                                        grx)),
                                                                 <$V, 
                                                                  h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 
                                                                     'g'^~yy>), 
                                                                  'g'^~ltk>,
                                                                 $cAEAD0)⊕
                                                     hkdfExpand(<$cAEAD0, 
                                                                 h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 
                                                                    'g'^~yy>), 
                                                                 'K_2e', '2'>,
                                                                hkdfExtract('emptyStr', gxy))
                                                    )
                                                   >, 
                                                   'emptyStr'>), 
                                                'K_3ae'>,
                                               hkdfExtract(hkdfExtract('emptyStr', gxy), grx)),
                                    extAad3Outer, $cAEAD0.1)
                   ) @ #vk.3 )
              case I3_SIG_STAT
              solve( !KU( 'g'^(~xx*~yy) ) @ #vk.4 )
                case I1_SIG_STAT
                by solve( !KU( ~yy ) @ #vk.18 )
              next
                case R2_SIG_STAT
                by solve( !KU( ~xx ) @ #vk.18 )
              next
                case c_exp
                by solve( !KU( ~xx ) @ #vk.20 )
              qed
            next
              case c_aeadEncrypt
              solve( !KU( sign(<
                                <$U, 
                                 h(<$cHash0.1, h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy>), 
                                    <
                                     ($V⊕
                                      hkdfExpand(<$cAEAD0, 
                                                  h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy>), 
                                                  'K_2e', '1'>,
                                                 hkdfExtract('emptyStr', gxy))
                                     ), 
                                     (
                                      aeadEncrypt('emptyStr',
                                                  hkdfExpand(<$cAEAD0, 
                                                              h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 
                                                                 'g'^~yy>), 
                                                              'K_2m'>,
                                                             hkdfExtract(hkdfExtract('emptyStr', gxy), grx)),
                                                  <$V, h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy>), 
                                                   'g'^~ltk>,
                                                  $cAEAD0)⊕
                                      hkdfExpand(<$cAEAD0, 
                                                  h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy>), 
                                                  'K_2e', '2'>,
                                                 hkdfExtract('emptyStr', gxy))
                                     )
                                    >, 
                                    'emptyStr'>), 
                                 pk(~ltk.1)>, 
                                aeadEncrypt('emptyStr',
                                            hkdfExpand(<$cAEAD0.1, 
                                                        h(<$cHash0.1, 
                                                           h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy
                                                             >), 
                                                           <
                                                            ($V⊕
                                                             hkdfExpand(<$cAEAD0, 
                                                                         h(<$cHash0, 
                                                                            <'SIG', 'STAT', $cSUITE0, gx>, 
                                                                            'g'^~yy>), 
                                                                         'K_2e', '1'>,
                                                                        hkdfExtract('emptyStr', gxy))
                                                            ), 
                                                            (
                                                             aeadEncrypt('emptyStr',
                                                                         hkdfExpand(<$cAEAD0, 
                                                                                     h(<$cHash0, 
                                                                                        <'SIG', 'STAT', 
                                                                                         $cSUITE0, gx>, 
                                                                                        'g'^~yy>), 
                                                                                     'K_2m'>,
                                                                                    hkdfExtract(hkdfExtract('emptyStr',
                                                                                                            gxy),
                                                                                                grx)),
                                                                         <$V, 
                                                                          h(<$cHash0, 
                                                                             <'SIG', 'STAT', $cSUITE0, gx>, 
                                                                             'g'^~yy>), 
                                                                          'g'^~ltk>,
                                                                         $cAEAD0)⊕
                                                             hkdfExpand(<$cAEAD0, 
                                                                         h(<$cHash0, 
                                                                            <'SIG', 'STAT', $cSUITE0, gx>, 
                                                                            'g'^~yy>), 
                                                                         'K_2e', '2'>,
                                                                        hkdfExtract('emptyStr', gxy))
                                                            )
                                                           >, 
                                                           'emptyStr'>), 
                                                        'K_3m'>,
                                                       hkdfExtract(hkdfExtract('emptyStr', gxy), grx)),
                                            <$U, 
                                             h(<$cHash0.1, 
                                                h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 'g'^~yy>), 
                                                <
                                                 ($V⊕
                                                  hkdfExpand(<$cAEAD0, 
                                                              h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 
                                                                 'g'^~yy>), 
                                                              'K_2e', '1'>,
                                                             hkdfExtract('emptyStr', gxy))
                                                 ), 
                                                 (
                                                  aeadEncrypt('emptyStr',
                                                              hkdfExpand(<$cAEAD0, 
                                                                          h(<$cHash0, 
                                                                             <'SIG', 'STAT', $cSUITE0, gx>, 
                                                                             'g'^~yy>), 
                                                                          'K_2m'>,
                                                                         hkdfExtract(hkdfExtract('emptyStr',
                                                                                                 gxy),
                                                                                     grx)),
                                                              <$V, 
                                                               h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 
                                                                  'g'^~yy>), 
                                                               'g'^~ltk>,
                                                              $cAEAD0)⊕
                                                  hkdfExpand(<$cAEAD0, 
                                                              h(<$cHash0, <'SIG', 'STAT', $cSUITE0, gx>, 
                                                                 'g'^~yy>), 
                                                              'K_2e', '2'>,
                                                             hkdfExtract('emptyStr', gxy))
                                                 )
                                                >, 
                                                'emptyStr'>), 
                                             pk(~ltk.1)>,
                                            $cAEAD0.1)
                               >,
                               ~ltk.1)
                     ) @ #vk.18 )
                case c_sign
                solve( !KU( ~ltk.1 ) @ #vk.21 )
                  case revealLTK_SIG
                  by contradiction /* from formulas */
                qed
              qed
            qed
          qed
        qed
      qed
    next
      case case_3
      by contradiction /* from formulas */
    next
      case case_4
      by contradiction /* from formulas */
    next
      case case_5
      by contradiction /* from formulas */
    qed
  qed
qed

/* All well-formedness checks were successful. */

end

==============================================================================
summary of summaries:

analyzed: TMP_edhoc_SIG_STAT.spthy

  sanityExecutableToTheEnd (exists-trace): analysis incomplete (1 steps)
  authInjAgreeGuaranteeForI (all-traces): analysis incomplete (1 steps)
  authInjAgreeGuaranteeForR (all-traces): analysis incomplete (1 steps)
  authGIYImplicitAuthGuaranteeForI (all-traces): analysis incomplete (1 steps)
  authGIYImplicitAuthGuaranteeForI2 (all-traces): analysis incomplete (1 steps)
  secrecyPFSGIYSessionKey (all-traces): verified (299 steps)

==============================================================================

real	1m14,056s
user	2m13,488s
sys	0m22,492s
